{"version":3,"file":"build-number.js","mappings":"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","sources":["webpack://cruglobal-dot-github/./node_modules/@actions/core/lib/command.js","webpack://cruglobal-dot-github/./node_modules/@actions/core/lib/core.js","webpack://cruglobal-dot-github/./node_modules/@actions/core/lib/file-command.js","webpack://cruglobal-dot-github/./node_modules/@actions/core/lib/oidc-utils.js","webpack://cruglobal-dot-github/./node_modules/@actions/core/lib/path-utils.js","webpack://cruglobal-dot-github/./node_modules/@actions/core/lib/summary.js","webpack://cruglobal-dot-github/./node_modules/@actions/core/lib/utils.js","webpack://cruglobal-dot-github/./node_modules/@actions/http-client/lib/auth.js","webpack://cruglobal-dot-github/./node_modules/@actions/http-client/lib/index.js","webpack://cruglobal-dot-github/./node_modules/@actions/http-client/lib/proxy.js","webpack://cruglobal-dot-github/./node_modules/fast-xml-parser/src/fxp.js","webpack://cruglobal-dot-github/./node_modules/fast-xml-parser/src/util.js","webpack://cruglobal-dot-github/./node_modules/fast-xml-parser/src/validator.js","webpack://cruglobal-dot-github/./node_modules/fast-xml-parser/src/xmlbuilder/json2xml.js","webpack://cruglobal-dot-github/./node_modules/fast-xml-parser/src/xmlbuilder/orderedJs2Xml.js","webpack://cruglobal-dot-github/./node_modules/fast-xml-parser/src/xmlparser/DocTypeReader.js","webpack://cruglobal-dot-github/./node_modules/fast-xml-parser/src/xmlparser/OptionsBuilder.js","webpack://cruglobal-dot-github/./node_modules/fast-xml-parser/src/xmlparser/OrderedObjParser.js","webpack://cruglobal-dot-github/./node_modules/fast-xml-parser/src/xmlparser/XMLParser.js","webpack://cruglobal-dot-github/./node_modules/fast-xml-parser/src/xmlparser/node2json.js","webpack://cruglobal-dot-github/./node_modules/fast-xml-parser/src/xmlparser/xmlNode.js","webpack://cruglobal-dot-github/./node_modules/mnemonist/lru-cache.js","webpack://cruglobal-dot-github/./node_modules/mnemonist/utils/iterables.js","webpack://cruglobal-dot-github/./node_modules/mnemonist/utils/typed-arrays.js","webpack://cruglobal-dot-github/./node_modules/obliterator/foreach.js","webpack://cruglobal-dot-github/./node_modules/obliterator/iterator.js","webpack://cruglobal-dot-github/./node_modules/strnum/strnum.js","webpack://cruglobal-dot-github/./node_modules/tunnel/index.js","webpack://cruglobal-dot-github/./node_modules/tunnel/lib/tunnel.js","webpack://cruglobal-dot-github/./node_modules/uuid/dist/esm-node/v1.js","webpack://cruglobal-dot-github/./node_modules/uuid/dist/esm-node/parse.js","webpack://cruglobal-dot-github/./node_modules/uuid/dist/esm-node/v35.js","webpack://cruglobal-dot-github/./node_modules/uuid/dist/esm-node/md5.js","webpack://cruglobal-dot-github/./node_modules/uuid/dist/esm-node/v3.js","webpack://cruglobal-dot-github/./node_modules/uuid/dist/esm-node/sha1.js","webpack://cruglobal-dot-github/./node_modules/uuid/dist/esm-node/v5.js","webpack://cruglobal-dot-github/./node_modules/uuid/dist/esm-node/nil.js","webpack://cruglobal-dot-github/./node_modules/uuid/dist/esm-node/version.js","webpack://cruglobal-dot-github/./node_modules/uuid/dist/esm-node/rng.js","webpack://cruglobal-dot-github/./node_modules/uuid/dist/esm-node/stringify.js","webpack://cruglobal-dot-github/./node_modules/uuid/dist/esm-node/v4.js","webpack://cruglobal-dot-github/./node_modules/uuid/dist/esm-node/regex.js","webpack://cruglobal-dot-github/./node_modules/uuid/dist/esm-node/validate.js","webpack://cruglobal-dot-github/external node-commonjs \"assert\"","webpack://cruglobal-dot-github/external node-commonjs \"crypto\"","webpack://cruglobal-dot-github/external node-commonjs \"events\"","webpack://cruglobal-dot-github/external node-commonjs \"fs\"","webpack://cruglobal-dot-github/external node-commonjs \"http\"","webpack://cruglobal-dot-github/external node-commonjs \"https\"","webpack://cruglobal-dot-github/external node-commonjs \"net\"","webpack://cruglobal-dot-github/external node-commonjs \"os\"","webpack://cruglobal-dot-github/external node-commonjs \"path\"","webpack://cruglobal-dot-github/external node-commonjs \"tls\"","webpack://cruglobal-dot-github/external node-commonjs \"util\"","webpack://cruglobal-dot-github/webpack/bootstrap","webpack://cruglobal-dot-github/webpack/runtime/compat get default export","webpack://cruglobal-dot-github/webpack/runtime/define property getters","webpack://cruglobal-dot-github/webpack/runtime/hasOwnProperty shorthand","webpack://cruglobal-dot-github/webpack/runtime/make namespace object","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/util-config-provider/dist-es/booleanSelector.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/config-resolver/dist-es/endpointsConfig/NodeUseDualstackEndpointConfigOptions.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/config-resolver/dist-es/endpointsConfig/NodeUseFipsEndpointConfigOptions.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/config-resolver/dist-es/regionConfig/config.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/config-resolver/dist-es/regionConfig/isFipsRegion.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/config-resolver/dist-es/regionConfig/getRealRegion.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/config-resolver/dist-es/regionConfig/resolveRegionConfig.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/protocol-http/dist-es/FieldPosition.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/protocol-http/dist-es/httpRequest.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/protocol-http/dist-es/httpResponse.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/middleware-content-length/dist-es/index.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/middleware-serde/dist-es/serdePlugin.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/middleware-serde/dist-es/deserializerMiddleware.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/middleware-serde/dist-es/serializerMiddleware.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/middleware-endpoint/dist-es/service-customizations/s3.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/middleware-endpoint/dist-es/adaptors/createConfigValueProvider.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/middleware-endpoint/dist-es/adaptors/getEndpointFromInstructions.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/middleware-endpoint/dist-es/endpointMiddleware.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/middleware-endpoint/dist-es/getEndpointPlugin.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/util-middleware/dist-es/normalizeProvider.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/url-parser/dist-es/index.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/querystring-parser/dist-es/index.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/middleware-endpoint/dist-es/resolveEndpointConfig.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/middleware-endpoint/dist-es/adaptors/toEndpointV1.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/middleware-endpoint-discovery/dist-es/configurations.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/endpoint-cache/dist-es/EndpointCache.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/middleware-host-header/dist-es/index.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/middleware-logger/dist-es/loggerMiddleware.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/middleware-recursion-detection/dist-es/index.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/util-retry/dist-es/config.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/service-error-classification/dist-es/constants.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/service-error-classification/dist-es/index.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/util-retry/dist-es/DefaultRateLimiter.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/util-retry/dist-es/constants.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/util-retry/dist-es/defaultRetryToken.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/util-retry/dist-es/defaultRetryBackoffStrategy.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/util-retry/dist-es/StandardRetryStrategy.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/util-retry/dist-es/AdaptiveRetryStrategy.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/middleware-retry/dist-es/configurations.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/middleware-retry/dist-es/util.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/middleware-retry/dist-es/retryMiddleware.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/property-provider/dist-es/ProviderError.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/property-provider/dist-es/CredentialsProviderError.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/property-provider/dist-es/TokenProviderError.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/property-provider/dist-es/chain.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/property-provider/dist-es/fromStatic.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/property-provider/dist-es/memoize.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/util-hex-encoding/dist-es/index.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/is-array-buffer/dist-es/index.js","webpack://cruglobal-dot-github/external node-commonjs \"buffer\"","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/util-buffer-from/dist-es/index.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/util-utf8/dist-es/fromUtf8.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/util-utf8/dist-es/toUint8Array.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/util-utf8/dist-es/toUtf8.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/signature-v4/dist-es/constants.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/signature-v4/dist-es/credentialDerivation.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/signature-v4/dist-es/getCanonicalHeaders.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/util-uri-escape/dist-es/escape-uri.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/signature-v4/dist-es/getPayloadHash.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/signature-v4/dist-es/cloneRequest.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/signature-v4/dist-es/prepareRequest.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/signature-v4/dist-es/utilDate.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/signature-v4/dist-es/SignatureV4.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/signature-v4/dist-es/moveHeadersToQuery.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/signature-v4/dist-es/headerUtil.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/signature-v4/dist-es/getCanonicalQuery.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/middleware-signing/dist-es/configurations.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/middleware-signing/dist-es/utils/getSkewCorrectedDate.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/middleware-signing/dist-es/utils/getUpdatedSystemClockOffset.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/middleware-signing/dist-es/utils/isClockSkewed.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/middleware-signing/dist-es/middleware.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/middleware-user-agent/dist-es/configurations.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/util-endpoints/dist-es/lib/aws/partition.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/util-endpoints/dist-es/debug/debugId.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/util-endpoints/dist-es/debug/toDebugString.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/util-endpoints/dist-es/types/EndpointError.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/util-endpoints/dist-es/lib/isIpAddress.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/util-endpoints/dist-es/lib/isValidHostLabel.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/util-endpoints/dist-es/lib/aws/isVirtualHostableS3Bucket.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/util-endpoints/dist-es/lib/aws/parseArn.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/util-endpoints/dist-es/lib/booleanEquals.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/util-endpoints/dist-es/lib/getAttr.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/util-endpoints/dist-es/lib/getAttrPathList.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/util-endpoints/dist-es/lib/isSet.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/util-endpoints/dist-es/lib/not.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/types/dist-es/auth.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/types/dist-es/dns.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/types/dist-es/endpoint.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/types/dist-es/transfer.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/util-endpoints/dist-es/lib/parseURL.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/util-endpoints/dist-es/lib/stringEquals.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/util-endpoints/dist-es/lib/substring.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/util-endpoints/dist-es/lib/uriEncode.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/util-endpoints/dist-es/utils/evaluateTemplate.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/util-endpoints/dist-es/utils/evaluateExpression.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/util-endpoints/dist-es/utils/getReferenceValue.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/util-endpoints/dist-es/utils/callFunction.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/util-endpoints/dist-es/utils/evaluateCondition.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/util-endpoints/dist-es/utils/evaluateConditions.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/util-endpoints/dist-es/utils/getEndpointHeaders.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/util-endpoints/dist-es/utils/getEndpointProperty.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/util-endpoints/dist-es/utils/getEndpointProperties.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/util-endpoints/dist-es/utils/getEndpointUrl.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/util-endpoints/dist-es/utils/evaluateEndpointRule.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/util-endpoints/dist-es/utils/evaluateErrorRule.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/util-endpoints/dist-es/utils/evaluateTreeRule.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/util-endpoints/dist-es/utils/evaluateRules.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/util-endpoints/dist-es/resolveEndpoint.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/middleware-user-agent/dist-es/constants.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/middleware-user-agent/dist-es/user-agent-middleware.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/smithy-client/dist-es/NoOpLogger.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/middleware-stack/dist-es/MiddlewareStack.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/smithy-client/dist-es/client.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/smithy-client/dist-es/command.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/smithy-client/dist-es/constants.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/smithy-client/dist-es/parse-utils.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/smithy-client/dist-es/date-utils.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/smithy-client/dist-es/exceptions.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/smithy-client/dist-es/default-error-handler.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/smithy-client/dist-es/defaults-mode.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/smithy-client/dist-es/emitWarningIfUnsupportedVersion.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/smithy-client/dist-es/extended-encode-uri-component.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/smithy-client/dist-es/get-value-from-text-node.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/smithy-client/dist-es/lazy-json.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/smithy-client/dist-es/object-mapping.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/smithy-client/dist-es/serde-json.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/client-dynamodb/dist-es/models/DynamoDBServiceException.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/client-dynamodb/dist-es/models/models_0.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/client-dynamodb/dist-es/protocols/Aws_json1_0.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/client-dynamodb/dist-es/commands/DescribeEndpointsCommand.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/client-dynamodb/dist-es/endpoint/EndpointParameters.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/client-sts/dist-es/models/STSServiceException.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/client-sts/dist-es/models/models_0.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/client-sts/dist-es/protocols/Aws_query.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/client-sts/dist-es/commands/AssumeRoleCommand.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/client-sts/dist-es/commands/AssumeRoleWithWebIdentityCommand.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/client-sts/dist-es/defaultStsRoleAssumers.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/credential-provider-env/dist-es/fromEnv.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/shared-ini-file-loader/dist-es/getHomeDir.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/shared-ini-file-loader/dist-es/getProfileName.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/shared-ini-file-loader/dist-es/getSSOTokenFilepath.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/shared-ini-file-loader/dist-es/getSSOTokenFromFile.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/shared-ini-file-loader/dist-es/getConfigFilepath.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/shared-ini-file-loader/dist-es/getCredentialsFilepath.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/shared-ini-file-loader/dist-es/getProfileData.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/shared-ini-file-loader/dist-es/parseIni.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/shared-ini-file-loader/dist-es/slurpFile.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/shared-ini-file-loader/dist-es/loadSharedConfigFiles.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/shared-ini-file-loader/dist-es/getSsoSessionData.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/shared-ini-file-loader/dist-es/loadSsoSessionData.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/shared-ini-file-loader/dist-es/parseKnownFiles.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/shared-ini-file-loader/dist-es/mergeConfigFiles.js","webpack://cruglobal-dot-github/external node-commonjs \"url\"","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/credential-provider-imds/dist-es/remoteProvider/httpRequest.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/credential-provider-imds/dist-es/remoteProvider/ImdsCredentials.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/credential-provider-imds/dist-es/remoteProvider/RemoteProviderInit.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/credential-provider-imds/dist-es/remoteProvider/retry.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/credential-provider-imds/dist-es/fromContainerMetadata.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/node-config-provider/dist-es/fromStatic.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/node-config-provider/dist-es/configLoader.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/node-config-provider/dist-es/fromEnv.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/node-config-provider/dist-es/fromSharedConfigFiles.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/credential-provider-imds/dist-es/config/Endpoint.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/credential-provider-imds/dist-es/config/EndpointConfigOptions.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/credential-provider-imds/dist-es/config/EndpointMode.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/credential-provider-imds/dist-es/config/EndpointModeConfigOptions.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/credential-provider-imds/dist-es/utils/getInstanceMetadataEndpoint.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/credential-provider-imds/dist-es/utils/getExtendedInstanceMetadataCredentials.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/credential-provider-imds/dist-es/fromInstanceMetadata.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/credential-provider-imds/dist-es/utils/staticStabilityProvider.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/credential-provider-ini/dist-es/resolveAssumeRoleCredentials.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/credential-provider-ini/dist-es/resolveCredentialSource.js","webpack://cruglobal-dot-github/external node-commonjs \"child_process\"","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/credential-provider-process/dist-es/getValidatedProcessCredentials.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/credential-provider-process/dist-es/resolveProcessCredentials.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/credential-provider-process/dist-es/fromProcess.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/credential-provider-sso/dist-es/isSsoProfile.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/hash-node/dist-es/index.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/node-http-handler/dist-es/constants.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/node-http-handler/dist-es/get-transformed-headers.js","webpack://cruglobal-dot-github/external node-commonjs \"stream\"","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/node-http-handler/dist-es/write-request-body.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/node-http-handler/dist-es/node-http-handler.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/querystring-builder/dist-es/index.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/node-http-handler/dist-es/set-connection-timeout.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/node-http-handler/dist-es/set-socket-timeout.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/node-http-handler/dist-es/set-socket-keep-alive.js","webpack://cruglobal-dot-github/external node-commonjs \"http2\"","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/node-http-handler/dist-es/node-http2-connection-pool.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/node-http-handler/dist-es/stream-collector/collector.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/node-http-handler/dist-es/stream-collector/index.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/util-body-length-node/dist-es/calculateBodyLength.js","webpack://cruglobal-dot-github/external node-commonjs \"process\"","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/util-user-agent-node/dist-es/index.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/util-user-agent-node/dist-es/is-crt-available.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/util-base64/dist-es/fromBase64.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/util-base64/dist-es/toBase64.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/client-sso/dist-es/endpoint/ruleset.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/client-sso/dist-es/endpoint/endpointResolver.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/util-defaults-mode-node/dist-es/constants.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/util-defaults-mode-node/dist-es/defaultsModeConfig.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/util-defaults-mode-node/dist-es/resolveDefaultsModeConfig.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/client-sso/dist-es/runtimeConfig.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/client-sso/dist-es/runtimeConfig.shared.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/client-sso/dist-es/SSOClient.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/client-sso/dist-es/endpoint/EndpointParameters.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/client-sso/dist-es/models/SSOServiceException.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/client-sso/dist-es/models/models_0.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/client-sso/dist-es/protocols/Aws_restJson1.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/client-sso/dist-es/commands/GetRoleCredentialsCommand.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/token-providers/dist-es/constants.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/client-sso-oidc/dist-es/models/SSOOIDCServiceException.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/client-sso-oidc/dist-es/models/models_0.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/client-sso-oidc/dist-es/protocols/Aws_restJson1.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/client-sso-oidc/dist-es/commands/CreateTokenCommand.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/client-sso-oidc/dist-es/endpoint/EndpointParameters.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/client-sso-oidc/dist-es/endpoint/ruleset.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/client-sso-oidc/dist-es/endpoint/endpointResolver.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/client-sso-oidc/dist-es/runtimeConfig.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/client-sso-oidc/dist-es/runtimeConfig.shared.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/client-sso-oidc/dist-es/SSOOIDCClient.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/token-providers/dist-es/getSsoOidcClient.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/token-providers/dist-es/getNewSsoOidcToken.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/token-providers/dist-es/validateTokenExpiry.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/token-providers/dist-es/validateTokenKey.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/token-providers/dist-es/writeSSOTokenToFile.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/token-providers/dist-es/fromSso.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/credential-provider-sso/dist-es/resolveSSOCredentials.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/credential-provider-sso/dist-es/validateSsoProfile.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/credential-provider-sso/dist-es/fromSSO.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/credential-provider-ini/dist-es/resolveStaticCredentials.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/credential-provider-web-identity/dist-es/fromTokenFile.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/credential-provider-web-identity/dist-es/fromWebToken.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/credential-provider-ini/dist-es/resolveProfileData.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/credential-provider-ini/dist-es/resolveWebIdentityCredentials.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/credential-provider-ini/dist-es/resolveProcessCredentials.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/credential-provider-ini/dist-es/resolveSsoCredentials.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/credential-provider-node/dist-es/defaultProvider.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/credential-provider-ini/dist-es/fromIni.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/credential-provider-node/dist-es/remoteProvider.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/client-sts/dist-es/endpoint/ruleset.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/client-sts/dist-es/endpoint/endpointResolver.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/client-sts/dist-es/runtimeConfig.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/client-sts/dist-es/runtimeConfig.shared.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/client-sts/dist-es/STSClient.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/client-sts/dist-es/endpoint/EndpointParameters.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/middleware-sdk-sts/dist-es/index.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/client-sts/dist-es/defaultRoleAssumers.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/client-dynamodb/dist-es/endpoint/ruleset.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/client-dynamodb/dist-es/endpoint/endpointResolver.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/client-dynamodb/dist-es/runtimeConfig.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/client-dynamodb/dist-es/runtimeConfig.shared.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/client-dynamodb/dist-es/DynamoDBClient.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/middleware-endpoint-discovery/dist-es/resolveEndpointDiscoveryConfig.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/client-dynamodb/dist-es/commands/UpdateItemCommand.js","webpack://cruglobal-dot-github/./src/aws.js","webpack://cruglobal-dot-github/./src/build-number.js"],"sourcesContent":["\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.issue = exports.issueCommand = void 0;\nconst os = __importStar(require(\"os\"));\nconst utils_1 = require(\"./utils\");\n/**\n * Commands\n *\n * Command Format:\n *   ::name key=value,key=value::message\n *\n * Examples:\n *   ::warning::This is the message\n *   ::set-env name=MY_VAR::some value\n */\nfunction issueCommand(command, properties, message) {\n    const cmd = new Command(command, properties, message);\n    process.stdout.write(cmd.toString() + os.EOL);\n}\nexports.issueCommand = issueCommand;\nfunction issue(name, message = '') {\n    issueCommand(name, {}, message);\n}\nexports.issue = issue;\nconst CMD_STRING = '::';\nclass Command {\n    constructor(command, properties, message) {\n        if (!command) {\n            command = 'missing.command';\n        }\n        this.command = command;\n        this.properties = properties;\n        this.message = message;\n    }\n    toString() {\n        let cmdStr = CMD_STRING + this.command;\n        if (this.properties && Object.keys(this.properties).length > 0) {\n            cmdStr += ' ';\n            let first = true;\n            for (const key in this.properties) {\n                if (this.properties.hasOwnProperty(key)) {\n                    const val = this.properties[key];\n                    if (val) {\n                        if (first) {\n                            first = false;\n                        }\n                        else {\n                            cmdStr += ',';\n                        }\n                        cmdStr += `${key}=${escapeProperty(val)}`;\n                    }\n                }\n            }\n        }\n        cmdStr += `${CMD_STRING}${escapeData(this.message)}`;\n        return cmdStr;\n    }\n}\nfunction escapeData(s) {\n    return utils_1.toCommandValue(s)\n        .replace(/%/g, '%25')\n        .replace(/\\r/g, '%0D')\n        .replace(/\\n/g, '%0A');\n}\nfunction escapeProperty(s) {\n    return utils_1.toCommandValue(s)\n        .replace(/%/g, '%25')\n        .replace(/\\r/g, '%0D')\n        .replace(/\\n/g, '%0A')\n        .replace(/:/g, '%3A')\n        .replace(/,/g, '%2C');\n}\n//# sourceMappingURL=command.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getIDToken = exports.getState = exports.saveState = exports.group = exports.endGroup = exports.startGroup = exports.info = exports.notice = exports.warning = exports.error = exports.debug = exports.isDebug = exports.setFailed = exports.setCommandEcho = exports.setOutput = exports.getBooleanInput = exports.getMultilineInput = exports.getInput = exports.addPath = exports.setSecret = exports.exportVariable = exports.ExitCode = void 0;\nconst command_1 = require(\"./command\");\nconst file_command_1 = require(\"./file-command\");\nconst utils_1 = require(\"./utils\");\nconst os = __importStar(require(\"os\"));\nconst path = __importStar(require(\"path\"));\nconst oidc_utils_1 = require(\"./oidc-utils\");\n/**\n * The code to exit an action\n */\nvar ExitCode;\n(function (ExitCode) {\n    /**\n     * A code indicating that the action was successful\n     */\n    ExitCode[ExitCode[\"Success\"] = 0] = \"Success\";\n    /**\n     * A code indicating that the action was a failure\n     */\n    ExitCode[ExitCode[\"Failure\"] = 1] = \"Failure\";\n})(ExitCode = exports.ExitCode || (exports.ExitCode = {}));\n//-----------------------------------------------------------------------\n// Variables\n//-----------------------------------------------------------------------\n/**\n * Sets env variable for this action and future actions in the job\n * @param name the name of the variable to set\n * @param val the value of the variable. Non-string values will be converted to a string via JSON.stringify\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction exportVariable(name, val) {\n    const convertedVal = utils_1.toCommandValue(val);\n    process.env[name] = convertedVal;\n    const filePath = process.env['GITHUB_ENV'] || '';\n    if (filePath) {\n        return file_command_1.issueFileCommand('ENV', file_command_1.prepareKeyValueMessage(name, val));\n    }\n    command_1.issueCommand('set-env', { name }, convertedVal);\n}\nexports.exportVariable = exportVariable;\n/**\n * Registers a secret which will get masked from logs\n * @param secret value of the secret\n */\nfunction setSecret(secret) {\n    command_1.issueCommand('add-mask', {}, secret);\n}\nexports.setSecret = setSecret;\n/**\n * Prepends inputPath to the PATH (for this action and future actions)\n * @param inputPath\n */\nfunction addPath(inputPath) {\n    const filePath = process.env['GITHUB_PATH'] || '';\n    if (filePath) {\n        file_command_1.issueFileCommand('PATH', inputPath);\n    }\n    else {\n        command_1.issueCommand('add-path', {}, inputPath);\n    }\n    process.env['PATH'] = `${inputPath}${path.delimiter}${process.env['PATH']}`;\n}\nexports.addPath = addPath;\n/**\n * Gets the value of an input.\n * Unless trimWhitespace is set to false in InputOptions, the value is also trimmed.\n * Returns an empty string if the value is not defined.\n *\n * @param     name     name of the input to get\n * @param     options  optional. See InputOptions.\n * @returns   string\n */\nfunction getInput(name, options) {\n    const val = process.env[`INPUT_${name.replace(/ /g, '_').toUpperCase()}`] || '';\n    if (options && options.required && !val) {\n        throw new Error(`Input required and not supplied: ${name}`);\n    }\n    if (options && options.trimWhitespace === false) {\n        return val;\n    }\n    return val.trim();\n}\nexports.getInput = getInput;\n/**\n * Gets the values of an multiline input.  Each value is also trimmed.\n *\n * @param     name     name of the input to get\n * @param     options  optional. See InputOptions.\n * @returns   string[]\n *\n */\nfunction getMultilineInput(name, options) {\n    const inputs = getInput(name, options)\n        .split('\\n')\n        .filter(x => x !== '');\n    if (options && options.trimWhitespace === false) {\n        return inputs;\n    }\n    return inputs.map(input => input.trim());\n}\nexports.getMultilineInput = getMultilineInput;\n/**\n * Gets the input value of the boolean type in the YAML 1.2 \"core schema\" specification.\n * Support boolean input list: `true | True | TRUE | false | False | FALSE` .\n * The return value is also in boolean type.\n * ref: https://yaml.org/spec/1.2/spec.html#id2804923\n *\n * @param     name     name of the input to get\n * @param     options  optional. See InputOptions.\n * @returns   boolean\n */\nfunction getBooleanInput(name, options) {\n    const trueValue = ['true', 'True', 'TRUE'];\n    const falseValue = ['false', 'False', 'FALSE'];\n    const val = getInput(name, options);\n    if (trueValue.includes(val))\n        return true;\n    if (falseValue.includes(val))\n        return false;\n    throw new TypeError(`Input does not meet YAML 1.2 \"Core Schema\" specification: ${name}\\n` +\n        `Support boolean input list: \\`true | True | TRUE | false | False | FALSE\\``);\n}\nexports.getBooleanInput = getBooleanInput;\n/**\n * Sets the value of an output.\n *\n * @param     name     name of the output to set\n * @param     value    value to store. Non-string values will be converted to a string via JSON.stringify\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction setOutput(name, value) {\n    const filePath = process.env['GITHUB_OUTPUT'] || '';\n    if (filePath) {\n        return file_command_1.issueFileCommand('OUTPUT', file_command_1.prepareKeyValueMessage(name, value));\n    }\n    process.stdout.write(os.EOL);\n    command_1.issueCommand('set-output', { name }, utils_1.toCommandValue(value));\n}\nexports.setOutput = setOutput;\n/**\n * Enables or disables the echoing of commands into stdout for the rest of the step.\n * Echoing is disabled by default if ACTIONS_STEP_DEBUG is not set.\n *\n */\nfunction setCommandEcho(enabled) {\n    command_1.issue('echo', enabled ? 'on' : 'off');\n}\nexports.setCommandEcho = setCommandEcho;\n//-----------------------------------------------------------------------\n// Results\n//-----------------------------------------------------------------------\n/**\n * Sets the action status to failed.\n * When the action exits it will be with an exit code of 1\n * @param message add error issue message\n */\nfunction setFailed(message) {\n    process.exitCode = ExitCode.Failure;\n    error(message);\n}\nexports.setFailed = setFailed;\n//-----------------------------------------------------------------------\n// Logging Commands\n//-----------------------------------------------------------------------\n/**\n * Gets whether Actions Step Debug is on or not\n */\nfunction isDebug() {\n    return process.env['RUNNER_DEBUG'] === '1';\n}\nexports.isDebug = isDebug;\n/**\n * Writes debug message to user log\n * @param message debug message\n */\nfunction debug(message) {\n    command_1.issueCommand('debug', {}, message);\n}\nexports.debug = debug;\n/**\n * Adds an error issue\n * @param message error issue message. Errors will be converted to string via toString()\n * @param properties optional properties to add to the annotation.\n */\nfunction error(message, properties = {}) {\n    command_1.issueCommand('error', utils_1.toCommandProperties(properties), message instanceof Error ? message.toString() : message);\n}\nexports.error = error;\n/**\n * Adds a warning issue\n * @param message warning issue message. Errors will be converted to string via toString()\n * @param properties optional properties to add to the annotation.\n */\nfunction warning(message, properties = {}) {\n    command_1.issueCommand('warning', utils_1.toCommandProperties(properties), message instanceof Error ? message.toString() : message);\n}\nexports.warning = warning;\n/**\n * Adds a notice issue\n * @param message notice issue message. Errors will be converted to string via toString()\n * @param properties optional properties to add to the annotation.\n */\nfunction notice(message, properties = {}) {\n    command_1.issueCommand('notice', utils_1.toCommandProperties(properties), message instanceof Error ? message.toString() : message);\n}\nexports.notice = notice;\n/**\n * Writes info to log with console.log.\n * @param message info message\n */\nfunction info(message) {\n    process.stdout.write(message + os.EOL);\n}\nexports.info = info;\n/**\n * Begin an output group.\n *\n * Output until the next `groupEnd` will be foldable in this group\n *\n * @param name The name of the output group\n */\nfunction startGroup(name) {\n    command_1.issue('group', name);\n}\nexports.startGroup = startGroup;\n/**\n * End an output group.\n */\nfunction endGroup() {\n    command_1.issue('endgroup');\n}\nexports.endGroup = endGroup;\n/**\n * Wrap an asynchronous function call in a group.\n *\n * Returns the same type as the function itself.\n *\n * @param name The name of the group\n * @param fn The function to wrap in the group\n */\nfunction group(name, fn) {\n    return __awaiter(this, void 0, void 0, function* () {\n        startGroup(name);\n        let result;\n        try {\n            result = yield fn();\n        }\n        finally {\n            endGroup();\n        }\n        return result;\n    });\n}\nexports.group = group;\n//-----------------------------------------------------------------------\n// Wrapper action state\n//-----------------------------------------------------------------------\n/**\n * Saves state for current action, the state can only be retrieved by this action's post job execution.\n *\n * @param     name     name of the state to store\n * @param     value    value to store. Non-string values will be converted to a string via JSON.stringify\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction saveState(name, value) {\n    const filePath = process.env['GITHUB_STATE'] || '';\n    if (filePath) {\n        return file_command_1.issueFileCommand('STATE', file_command_1.prepareKeyValueMessage(name, value));\n    }\n    command_1.issueCommand('save-state', { name }, utils_1.toCommandValue(value));\n}\nexports.saveState = saveState;\n/**\n * Gets the value of an state set by this action's main execution.\n *\n * @param     name     name of the state to get\n * @returns   string\n */\nfunction getState(name) {\n    return process.env[`STATE_${name}`] || '';\n}\nexports.getState = getState;\nfunction getIDToken(aud) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return yield oidc_utils_1.OidcClient.getIDToken(aud);\n    });\n}\nexports.getIDToken = getIDToken;\n/**\n * Summary exports\n */\nvar summary_1 = require(\"./summary\");\nObject.defineProperty(exports, \"summary\", { enumerable: true, get: function () { return summary_1.summary; } });\n/**\n * @deprecated use core.summary\n */\nvar summary_2 = require(\"./summary\");\nObject.defineProperty(exports, \"markdownSummary\", { enumerable: true, get: function () { return summary_2.markdownSummary; } });\n/**\n * Path exports\n */\nvar path_utils_1 = require(\"./path-utils\");\nObject.defineProperty(exports, \"toPosixPath\", { enumerable: true, get: function () { return path_utils_1.toPosixPath; } });\nObject.defineProperty(exports, \"toWin32Path\", { enumerable: true, get: function () { return path_utils_1.toWin32Path; } });\nObject.defineProperty(exports, \"toPlatformPath\", { enumerable: true, get: function () { return path_utils_1.toPlatformPath; } });\n//# sourceMappingURL=core.js.map","\"use strict\";\n// For internal use, subject to change.\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.prepareKeyValueMessage = exports.issueFileCommand = void 0;\n// We use any as a valid input type\n/* eslint-disable @typescript-eslint/no-explicit-any */\nconst fs = __importStar(require(\"fs\"));\nconst os = __importStar(require(\"os\"));\nconst uuid_1 = require(\"uuid\");\nconst utils_1 = require(\"./utils\");\nfunction issueFileCommand(command, message) {\n    const filePath = process.env[`GITHUB_${command}`];\n    if (!filePath) {\n        throw new Error(`Unable to find environment variable for file command ${command}`);\n    }\n    if (!fs.existsSync(filePath)) {\n        throw new Error(`Missing file at path: ${filePath}`);\n    }\n    fs.appendFileSync(filePath, `${utils_1.toCommandValue(message)}${os.EOL}`, {\n        encoding: 'utf8'\n    });\n}\nexports.issueFileCommand = issueFileCommand;\nfunction prepareKeyValueMessage(key, value) {\n    const delimiter = `ghadelimiter_${uuid_1.v4()}`;\n    const convertedValue = utils_1.toCommandValue(value);\n    // These should realistically never happen, but just in case someone finds a\n    // way to exploit uuid generation let's not allow keys or values that contain\n    // the delimiter.\n    if (key.includes(delimiter)) {\n        throw new Error(`Unexpected input: name should not contain the delimiter \"${delimiter}\"`);\n    }\n    if (convertedValue.includes(delimiter)) {\n        throw new Error(`Unexpected input: value should not contain the delimiter \"${delimiter}\"`);\n    }\n    return `${key}<<${delimiter}${os.EOL}${convertedValue}${os.EOL}${delimiter}`;\n}\nexports.prepareKeyValueMessage = prepareKeyValueMessage;\n//# sourceMappingURL=file-command.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OidcClient = void 0;\nconst http_client_1 = require(\"@actions/http-client\");\nconst auth_1 = require(\"@actions/http-client/lib/auth\");\nconst core_1 = require(\"./core\");\nclass OidcClient {\n    static createHttpClient(allowRetry = true, maxRetry = 10) {\n        const requestOptions = {\n            allowRetries: allowRetry,\n            maxRetries: maxRetry\n        };\n        return new http_client_1.HttpClient('actions/oidc-client', [new auth_1.BearerCredentialHandler(OidcClient.getRequestToken())], requestOptions);\n    }\n    static getRequestToken() {\n        const token = process.env['ACTIONS_ID_TOKEN_REQUEST_TOKEN'];\n        if (!token) {\n            throw new Error('Unable to get ACTIONS_ID_TOKEN_REQUEST_TOKEN env variable');\n        }\n        return token;\n    }\n    static getIDTokenUrl() {\n        const runtimeUrl = process.env['ACTIONS_ID_TOKEN_REQUEST_URL'];\n        if (!runtimeUrl) {\n            throw new Error('Unable to get ACTIONS_ID_TOKEN_REQUEST_URL env variable');\n        }\n        return runtimeUrl;\n    }\n    static getCall(id_token_url) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            const httpclient = OidcClient.createHttpClient();\n            const res = yield httpclient\n                .getJson(id_token_url)\n                .catch(error => {\n                throw new Error(`Failed to get ID Token. \\n \n        Error Code : ${error.statusCode}\\n \n        Error Message: ${error.result.message}`);\n            });\n            const id_token = (_a = res.result) === null || _a === void 0 ? void 0 : _a.value;\n            if (!id_token) {\n                throw new Error('Response json body do not have ID Token field');\n            }\n            return id_token;\n        });\n    }\n    static getIDToken(audience) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                // New ID Token is requested from action service\n                let id_token_url = OidcClient.getIDTokenUrl();\n                if (audience) {\n                    const encodedAudience = encodeURIComponent(audience);\n                    id_token_url = `${id_token_url}&audience=${encodedAudience}`;\n                }\n                core_1.debug(`ID token url is ${id_token_url}`);\n                const id_token = yield OidcClient.getCall(id_token_url);\n                core_1.setSecret(id_token);\n                return id_token;\n            }\n            catch (error) {\n                throw new Error(`Error message: ${error.message}`);\n            }\n        });\n    }\n}\nexports.OidcClient = OidcClient;\n//# sourceMappingURL=oidc-utils.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.toPlatformPath = exports.toWin32Path = exports.toPosixPath = void 0;\nconst path = __importStar(require(\"path\"));\n/**\n * toPosixPath converts the given path to the posix form. On Windows, \\\\ will be\n * replaced with /.\n *\n * @param pth. Path to transform.\n * @return string Posix path.\n */\nfunction toPosixPath(pth) {\n    return pth.replace(/[\\\\]/g, '/');\n}\nexports.toPosixPath = toPosixPath;\n/**\n * toWin32Path converts the given path to the win32 form. On Linux, / will be\n * replaced with \\\\.\n *\n * @param pth. Path to transform.\n * @return string Win32 path.\n */\nfunction toWin32Path(pth) {\n    return pth.replace(/[/]/g, '\\\\');\n}\nexports.toWin32Path = toWin32Path;\n/**\n * toPlatformPath converts the given path to a platform-specific path. It does\n * this by replacing instances of / and \\ with the platform-specific path\n * separator.\n *\n * @param pth The path to platformize.\n * @return string The platform-specific path.\n */\nfunction toPlatformPath(pth) {\n    return pth.replace(/[/\\\\]/g, path.sep);\n}\nexports.toPlatformPath = toPlatformPath;\n//# sourceMappingURL=path-utils.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.summary = exports.markdownSummary = exports.SUMMARY_DOCS_URL = exports.SUMMARY_ENV_VAR = void 0;\nconst os_1 = require(\"os\");\nconst fs_1 = require(\"fs\");\nconst { access, appendFile, writeFile } = fs_1.promises;\nexports.SUMMARY_ENV_VAR = 'GITHUB_STEP_SUMMARY';\nexports.SUMMARY_DOCS_URL = 'https://docs.github.com/actions/using-workflows/workflow-commands-for-github-actions#adding-a-job-summary';\nclass Summary {\n    constructor() {\n        this._buffer = '';\n    }\n    /**\n     * Finds the summary file path from the environment, rejects if env var is not found or file does not exist\n     * Also checks r/w permissions.\n     *\n     * @returns step summary file path\n     */\n    filePath() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this._filePath) {\n                return this._filePath;\n            }\n            const pathFromEnv = process.env[exports.SUMMARY_ENV_VAR];\n            if (!pathFromEnv) {\n                throw new Error(`Unable to find environment variable for $${exports.SUMMARY_ENV_VAR}. Check if your runtime environment supports job summaries.`);\n            }\n            try {\n                yield access(pathFromEnv, fs_1.constants.R_OK | fs_1.constants.W_OK);\n            }\n            catch (_a) {\n                throw new Error(`Unable to access summary file: '${pathFromEnv}'. Check if the file has correct read/write permissions.`);\n            }\n            this._filePath = pathFromEnv;\n            return this._filePath;\n        });\n    }\n    /**\n     * Wraps content in an HTML tag, adding any HTML attributes\n     *\n     * @param {string} tag HTML tag to wrap\n     * @param {string | null} content content within the tag\n     * @param {[attribute: string]: string} attrs key-value list of HTML attributes to add\n     *\n     * @returns {string} content wrapped in HTML element\n     */\n    wrap(tag, content, attrs = {}) {\n        const htmlAttrs = Object.entries(attrs)\n            .map(([key, value]) => ` ${key}=\"${value}\"`)\n            .join('');\n        if (!content) {\n            return `<${tag}${htmlAttrs}>`;\n        }\n        return `<${tag}${htmlAttrs}>${content}</${tag}>`;\n    }\n    /**\n     * Writes text in the buffer to the summary buffer file and empties buffer. Will append by default.\n     *\n     * @param {SummaryWriteOptions} [options] (optional) options for write operation\n     *\n     * @returns {Promise<Summary>} summary instance\n     */\n    write(options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const overwrite = !!(options === null || options === void 0 ? void 0 : options.overwrite);\n            const filePath = yield this.filePath();\n            const writeFunc = overwrite ? writeFile : appendFile;\n            yield writeFunc(filePath, this._buffer, { encoding: 'utf8' });\n            return this.emptyBuffer();\n        });\n    }\n    /**\n     * Clears the summary buffer and wipes the summary file\n     *\n     * @returns {Summary} summary instance\n     */\n    clear() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.emptyBuffer().write({ overwrite: true });\n        });\n    }\n    /**\n     * Returns the current summary buffer as a string\n     *\n     * @returns {string} string of summary buffer\n     */\n    stringify() {\n        return this._buffer;\n    }\n    /**\n     * If the summary buffer is empty\n     *\n     * @returns {boolen} true if the buffer is empty\n     */\n    isEmptyBuffer() {\n        return this._buffer.length === 0;\n    }\n    /**\n     * Resets the summary buffer without writing to summary file\n     *\n     * @returns {Summary} summary instance\n     */\n    emptyBuffer() {\n        this._buffer = '';\n        return this;\n    }\n    /**\n     * Adds raw text to the summary buffer\n     *\n     * @param {string} text content to add\n     * @param {boolean} [addEOL=false] (optional) append an EOL to the raw text (default: false)\n     *\n     * @returns {Summary} summary instance\n     */\n    addRaw(text, addEOL = false) {\n        this._buffer += text;\n        return addEOL ? this.addEOL() : this;\n    }\n    /**\n     * Adds the operating system-specific end-of-line marker to the buffer\n     *\n     * @returns {Summary} summary instance\n     */\n    addEOL() {\n        return this.addRaw(os_1.EOL);\n    }\n    /**\n     * Adds an HTML codeblock to the summary buffer\n     *\n     * @param {string} code content to render within fenced code block\n     * @param {string} lang (optional) language to syntax highlight code\n     *\n     * @returns {Summary} summary instance\n     */\n    addCodeBlock(code, lang) {\n        const attrs = Object.assign({}, (lang && { lang }));\n        const element = this.wrap('pre', this.wrap('code', code), attrs);\n        return this.addRaw(element).addEOL();\n    }\n    /**\n     * Adds an HTML list to the summary buffer\n     *\n     * @param {string[]} items list of items to render\n     * @param {boolean} [ordered=false] (optional) if the rendered list should be ordered or not (default: false)\n     *\n     * @returns {Summary} summary instance\n     */\n    addList(items, ordered = false) {\n        const tag = ordered ? 'ol' : 'ul';\n        const listItems = items.map(item => this.wrap('li', item)).join('');\n        const element = this.wrap(tag, listItems);\n        return this.addRaw(element).addEOL();\n    }\n    /**\n     * Adds an HTML table to the summary buffer\n     *\n     * @param {SummaryTableCell[]} rows table rows\n     *\n     * @returns {Summary} summary instance\n     */\n    addTable(rows) {\n        const tableBody = rows\n            .map(row => {\n            const cells = row\n                .map(cell => {\n                if (typeof cell === 'string') {\n                    return this.wrap('td', cell);\n                }\n                const { header, data, colspan, rowspan } = cell;\n                const tag = header ? 'th' : 'td';\n                const attrs = Object.assign(Object.assign({}, (colspan && { colspan })), (rowspan && { rowspan }));\n                return this.wrap(tag, data, attrs);\n            })\n                .join('');\n            return this.wrap('tr', cells);\n        })\n            .join('');\n        const element = this.wrap('table', tableBody);\n        return this.addRaw(element).addEOL();\n    }\n    /**\n     * Adds a collapsable HTML details element to the summary buffer\n     *\n     * @param {string} label text for the closed state\n     * @param {string} content collapsable content\n     *\n     * @returns {Summary} summary instance\n     */\n    addDetails(label, content) {\n        const element = this.wrap('details', this.wrap('summary', label) + content);\n        return this.addRaw(element).addEOL();\n    }\n    /**\n     * Adds an HTML image tag to the summary buffer\n     *\n     * @param {string} src path to the image you to embed\n     * @param {string} alt text description of the image\n     * @param {SummaryImageOptions} options (optional) addition image attributes\n     *\n     * @returns {Summary} summary instance\n     */\n    addImage(src, alt, options) {\n        const { width, height } = options || {};\n        const attrs = Object.assign(Object.assign({}, (width && { width })), (height && { height }));\n        const element = this.wrap('img', null, Object.assign({ src, alt }, attrs));\n        return this.addRaw(element).addEOL();\n    }\n    /**\n     * Adds an HTML section heading element\n     *\n     * @param {string} text heading text\n     * @param {number | string} [level=1] (optional) the heading level, default: 1\n     *\n     * @returns {Summary} summary instance\n     */\n    addHeading(text, level) {\n        const tag = `h${level}`;\n        const allowedTag = ['h1', 'h2', 'h3', 'h4', 'h5', 'h6'].includes(tag)\n            ? tag\n            : 'h1';\n        const element = this.wrap(allowedTag, text);\n        return this.addRaw(element).addEOL();\n    }\n    /**\n     * Adds an HTML thematic break (<hr>) to the summary buffer\n     *\n     * @returns {Summary} summary instance\n     */\n    addSeparator() {\n        const element = this.wrap('hr', null);\n        return this.addRaw(element).addEOL();\n    }\n    /**\n     * Adds an HTML line break (<br>) to the summary buffer\n     *\n     * @returns {Summary} summary instance\n     */\n    addBreak() {\n        const element = this.wrap('br', null);\n        return this.addRaw(element).addEOL();\n    }\n    /**\n     * Adds an HTML blockquote to the summary buffer\n     *\n     * @param {string} text quote text\n     * @param {string} cite (optional) citation url\n     *\n     * @returns {Summary} summary instance\n     */\n    addQuote(text, cite) {\n        const attrs = Object.assign({}, (cite && { cite }));\n        const element = this.wrap('blockquote', text, attrs);\n        return this.addRaw(element).addEOL();\n    }\n    /**\n     * Adds an HTML anchor tag to the summary buffer\n     *\n     * @param {string} text link text/content\n     * @param {string} href hyperlink\n     *\n     * @returns {Summary} summary instance\n     */\n    addLink(text, href) {\n        const element = this.wrap('a', text, { href });\n        return this.addRaw(element).addEOL();\n    }\n}\nconst _summary = new Summary();\n/**\n * @deprecated use `core.summary`\n */\nexports.markdownSummary = _summary;\nexports.summary = _summary;\n//# sourceMappingURL=summary.js.map","\"use strict\";\n// We use any as a valid input type\n/* eslint-disable @typescript-eslint/no-explicit-any */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.toCommandProperties = exports.toCommandValue = void 0;\n/**\n * Sanitizes an input into a string so it can be passed into issueCommand safely\n * @param input input to sanitize into a string\n */\nfunction toCommandValue(input) {\n    if (input === null || input === undefined) {\n        return '';\n    }\n    else if (typeof input === 'string' || input instanceof String) {\n        return input;\n    }\n    return JSON.stringify(input);\n}\nexports.toCommandValue = toCommandValue;\n/**\n *\n * @param annotationProperties\n * @returns The command properties to send with the actual annotation command\n * See IssueCommandProperties: https://github.com/actions/runner/blob/main/src/Runner.Worker/ActionCommandManager.cs#L646\n */\nfunction toCommandProperties(annotationProperties) {\n    if (!Object.keys(annotationProperties).length) {\n        return {};\n    }\n    return {\n        title: annotationProperties.title,\n        file: annotationProperties.file,\n        line: annotationProperties.startLine,\n        endLine: annotationProperties.endLine,\n        col: annotationProperties.startColumn,\n        endColumn: annotationProperties.endColumn\n    };\n}\nexports.toCommandProperties = toCommandProperties;\n//# sourceMappingURL=utils.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PersonalAccessTokenCredentialHandler = exports.BearerCredentialHandler = exports.BasicCredentialHandler = void 0;\nclass BasicCredentialHandler {\n    constructor(username, password) {\n        this.username = username;\n        this.password = password;\n    }\n    prepareRequest(options) {\n        if (!options.headers) {\n            throw Error('The request has no headers');\n        }\n        options.headers['Authorization'] = `Basic ${Buffer.from(`${this.username}:${this.password}`).toString('base64')}`;\n    }\n    // This handler cannot handle 401\n    canHandleAuthentication() {\n        return false;\n    }\n    handleAuthentication() {\n        return __awaiter(this, void 0, void 0, function* () {\n            throw new Error('not implemented');\n        });\n    }\n}\nexports.BasicCredentialHandler = BasicCredentialHandler;\nclass BearerCredentialHandler {\n    constructor(token) {\n        this.token = token;\n    }\n    // currently implements pre-authorization\n    // TODO: support preAuth = false where it hooks on 401\n    prepareRequest(options) {\n        if (!options.headers) {\n            throw Error('The request has no headers');\n        }\n        options.headers['Authorization'] = `Bearer ${this.token}`;\n    }\n    // This handler cannot handle 401\n    canHandleAuthentication() {\n        return false;\n    }\n    handleAuthentication() {\n        return __awaiter(this, void 0, void 0, function* () {\n            throw new Error('not implemented');\n        });\n    }\n}\nexports.BearerCredentialHandler = BearerCredentialHandler;\nclass PersonalAccessTokenCredentialHandler {\n    constructor(token) {\n        this.token = token;\n    }\n    // currently implements pre-authorization\n    // TODO: support preAuth = false where it hooks on 401\n    prepareRequest(options) {\n        if (!options.headers) {\n            throw Error('The request has no headers');\n        }\n        options.headers['Authorization'] = `Basic ${Buffer.from(`PAT:${this.token}`).toString('base64')}`;\n    }\n    // This handler cannot handle 401\n    canHandleAuthentication() {\n        return false;\n    }\n    handleAuthentication() {\n        return __awaiter(this, void 0, void 0, function* () {\n            throw new Error('not implemented');\n        });\n    }\n}\nexports.PersonalAccessTokenCredentialHandler = PersonalAccessTokenCredentialHandler;\n//# sourceMappingURL=auth.js.map","\"use strict\";\n/* eslint-disable @typescript-eslint/no-explicit-any */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.HttpClient = exports.isHttps = exports.HttpClientResponse = exports.HttpClientError = exports.getProxyUrl = exports.MediaTypes = exports.Headers = exports.HttpCodes = void 0;\nconst http = __importStar(require(\"http\"));\nconst https = __importStar(require(\"https\"));\nconst pm = __importStar(require(\"./proxy\"));\nconst tunnel = __importStar(require(\"tunnel\"));\nvar HttpCodes;\n(function (HttpCodes) {\n    HttpCodes[HttpCodes[\"OK\"] = 200] = \"OK\";\n    HttpCodes[HttpCodes[\"MultipleChoices\"] = 300] = \"MultipleChoices\";\n    HttpCodes[HttpCodes[\"MovedPermanently\"] = 301] = \"MovedPermanently\";\n    HttpCodes[HttpCodes[\"ResourceMoved\"] = 302] = \"ResourceMoved\";\n    HttpCodes[HttpCodes[\"SeeOther\"] = 303] = \"SeeOther\";\n    HttpCodes[HttpCodes[\"NotModified\"] = 304] = \"NotModified\";\n    HttpCodes[HttpCodes[\"UseProxy\"] = 305] = \"UseProxy\";\n    HttpCodes[HttpCodes[\"SwitchProxy\"] = 306] = \"SwitchProxy\";\n    HttpCodes[HttpCodes[\"TemporaryRedirect\"] = 307] = \"TemporaryRedirect\";\n    HttpCodes[HttpCodes[\"PermanentRedirect\"] = 308] = \"PermanentRedirect\";\n    HttpCodes[HttpCodes[\"BadRequest\"] = 400] = \"BadRequest\";\n    HttpCodes[HttpCodes[\"Unauthorized\"] = 401] = \"Unauthorized\";\n    HttpCodes[HttpCodes[\"PaymentRequired\"] = 402] = \"PaymentRequired\";\n    HttpCodes[HttpCodes[\"Forbidden\"] = 403] = \"Forbidden\";\n    HttpCodes[HttpCodes[\"NotFound\"] = 404] = \"NotFound\";\n    HttpCodes[HttpCodes[\"MethodNotAllowed\"] = 405] = \"MethodNotAllowed\";\n    HttpCodes[HttpCodes[\"NotAcceptable\"] = 406] = \"NotAcceptable\";\n    HttpCodes[HttpCodes[\"ProxyAuthenticationRequired\"] = 407] = \"ProxyAuthenticationRequired\";\n    HttpCodes[HttpCodes[\"RequestTimeout\"] = 408] = \"RequestTimeout\";\n    HttpCodes[HttpCodes[\"Conflict\"] = 409] = \"Conflict\";\n    HttpCodes[HttpCodes[\"Gone\"] = 410] = \"Gone\";\n    HttpCodes[HttpCodes[\"TooManyRequests\"] = 429] = \"TooManyRequests\";\n    HttpCodes[HttpCodes[\"InternalServerError\"] = 500] = \"InternalServerError\";\n    HttpCodes[HttpCodes[\"NotImplemented\"] = 501] = \"NotImplemented\";\n    HttpCodes[HttpCodes[\"BadGateway\"] = 502] = \"BadGateway\";\n    HttpCodes[HttpCodes[\"ServiceUnavailable\"] = 503] = \"ServiceUnavailable\";\n    HttpCodes[HttpCodes[\"GatewayTimeout\"] = 504] = \"GatewayTimeout\";\n})(HttpCodes = exports.HttpCodes || (exports.HttpCodes = {}));\nvar Headers;\n(function (Headers) {\n    Headers[\"Accept\"] = \"accept\";\n    Headers[\"ContentType\"] = \"content-type\";\n})(Headers = exports.Headers || (exports.Headers = {}));\nvar MediaTypes;\n(function (MediaTypes) {\n    MediaTypes[\"ApplicationJson\"] = \"application/json\";\n})(MediaTypes = exports.MediaTypes || (exports.MediaTypes = {}));\n/**\n * Returns the proxy URL, depending upon the supplied url and proxy environment variables.\n * @param serverUrl  The server URL where the request will be sent. For example, https://api.github.com\n */\nfunction getProxyUrl(serverUrl) {\n    const proxyUrl = pm.getProxyUrl(new URL(serverUrl));\n    return proxyUrl ? proxyUrl.href : '';\n}\nexports.getProxyUrl = getProxyUrl;\nconst HttpRedirectCodes = [\n    HttpCodes.MovedPermanently,\n    HttpCodes.ResourceMoved,\n    HttpCodes.SeeOther,\n    HttpCodes.TemporaryRedirect,\n    HttpCodes.PermanentRedirect\n];\nconst HttpResponseRetryCodes = [\n    HttpCodes.BadGateway,\n    HttpCodes.ServiceUnavailable,\n    HttpCodes.GatewayTimeout\n];\nconst RetryableHttpVerbs = ['OPTIONS', 'GET', 'DELETE', 'HEAD'];\nconst ExponentialBackoffCeiling = 10;\nconst ExponentialBackoffTimeSlice = 5;\nclass HttpClientError extends Error {\n    constructor(message, statusCode) {\n        super(message);\n        this.name = 'HttpClientError';\n        this.statusCode = statusCode;\n        Object.setPrototypeOf(this, HttpClientError.prototype);\n    }\n}\nexports.HttpClientError = HttpClientError;\nclass HttpClientResponse {\n    constructor(message) {\n        this.message = message;\n    }\n    readBody() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve) => __awaiter(this, void 0, void 0, function* () {\n                let output = Buffer.alloc(0);\n                this.message.on('data', (chunk) => {\n                    output = Buffer.concat([output, chunk]);\n                });\n                this.message.on('end', () => {\n                    resolve(output.toString());\n                });\n            }));\n        });\n    }\n}\nexports.HttpClientResponse = HttpClientResponse;\nfunction isHttps(requestUrl) {\n    const parsedUrl = new URL(requestUrl);\n    return parsedUrl.protocol === 'https:';\n}\nexports.isHttps = isHttps;\nclass HttpClient {\n    constructor(userAgent, handlers, requestOptions) {\n        this._ignoreSslError = false;\n        this._allowRedirects = true;\n        this._allowRedirectDowngrade = false;\n        this._maxRedirects = 50;\n        this._allowRetries = false;\n        this._maxRetries = 1;\n        this._keepAlive = false;\n        this._disposed = false;\n        this.userAgent = userAgent;\n        this.handlers = handlers || [];\n        this.requestOptions = requestOptions;\n        if (requestOptions) {\n            if (requestOptions.ignoreSslError != null) {\n                this._ignoreSslError = requestOptions.ignoreSslError;\n            }\n            this._socketTimeout = requestOptions.socketTimeout;\n            if (requestOptions.allowRedirects != null) {\n                this._allowRedirects = requestOptions.allowRedirects;\n            }\n            if (requestOptions.allowRedirectDowngrade != null) {\n                this._allowRedirectDowngrade = requestOptions.allowRedirectDowngrade;\n            }\n            if (requestOptions.maxRedirects != null) {\n                this._maxRedirects = Math.max(requestOptions.maxRedirects, 0);\n            }\n            if (requestOptions.keepAlive != null) {\n                this._keepAlive = requestOptions.keepAlive;\n            }\n            if (requestOptions.allowRetries != null) {\n                this._allowRetries = requestOptions.allowRetries;\n            }\n            if (requestOptions.maxRetries != null) {\n                this._maxRetries = requestOptions.maxRetries;\n            }\n        }\n    }\n    options(requestUrl, additionalHeaders) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.request('OPTIONS', requestUrl, null, additionalHeaders || {});\n        });\n    }\n    get(requestUrl, additionalHeaders) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.request('GET', requestUrl, null, additionalHeaders || {});\n        });\n    }\n    del(requestUrl, additionalHeaders) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.request('DELETE', requestUrl, null, additionalHeaders || {});\n        });\n    }\n    post(requestUrl, data, additionalHeaders) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.request('POST', requestUrl, data, additionalHeaders || {});\n        });\n    }\n    patch(requestUrl, data, additionalHeaders) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.request('PATCH', requestUrl, data, additionalHeaders || {});\n        });\n    }\n    put(requestUrl, data, additionalHeaders) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.request('PUT', requestUrl, data, additionalHeaders || {});\n        });\n    }\n    head(requestUrl, additionalHeaders) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.request('HEAD', requestUrl, null, additionalHeaders || {});\n        });\n    }\n    sendStream(verb, requestUrl, stream, additionalHeaders) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.request(verb, requestUrl, stream, additionalHeaders);\n        });\n    }\n    /**\n     * Gets a typed object from an endpoint\n     * Be aware that not found returns a null.  Other errors (4xx, 5xx) reject the promise\n     */\n    getJson(requestUrl, additionalHeaders = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            additionalHeaders[Headers.Accept] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.Accept, MediaTypes.ApplicationJson);\n            const res = yield this.get(requestUrl, additionalHeaders);\n            return this._processResponse(res, this.requestOptions);\n        });\n    }\n    postJson(requestUrl, obj, additionalHeaders = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const data = JSON.stringify(obj, null, 2);\n            additionalHeaders[Headers.Accept] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.Accept, MediaTypes.ApplicationJson);\n            additionalHeaders[Headers.ContentType] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.ContentType, MediaTypes.ApplicationJson);\n            const res = yield this.post(requestUrl, data, additionalHeaders);\n            return this._processResponse(res, this.requestOptions);\n        });\n    }\n    putJson(requestUrl, obj, additionalHeaders = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const data = JSON.stringify(obj, null, 2);\n            additionalHeaders[Headers.Accept] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.Accept, MediaTypes.ApplicationJson);\n            additionalHeaders[Headers.ContentType] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.ContentType, MediaTypes.ApplicationJson);\n            const res = yield this.put(requestUrl, data, additionalHeaders);\n            return this._processResponse(res, this.requestOptions);\n        });\n    }\n    patchJson(requestUrl, obj, additionalHeaders = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const data = JSON.stringify(obj, null, 2);\n            additionalHeaders[Headers.Accept] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.Accept, MediaTypes.ApplicationJson);\n            additionalHeaders[Headers.ContentType] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.ContentType, MediaTypes.ApplicationJson);\n            const res = yield this.patch(requestUrl, data, additionalHeaders);\n            return this._processResponse(res, this.requestOptions);\n        });\n    }\n    /**\n     * Makes a raw http request.\n     * All other methods such as get, post, patch, and request ultimately call this.\n     * Prefer get, del, post and patch\n     */\n    request(verb, requestUrl, data, headers) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this._disposed) {\n                throw new Error('Client has already been disposed.');\n            }\n            const parsedUrl = new URL(requestUrl);\n            let info = this._prepareRequest(verb, parsedUrl, headers);\n            // Only perform retries on reads since writes may not be idempotent.\n            const maxTries = this._allowRetries && RetryableHttpVerbs.includes(verb)\n                ? this._maxRetries + 1\n                : 1;\n            let numTries = 0;\n            let response;\n            do {\n                response = yield this.requestRaw(info, data);\n                // Check if it's an authentication challenge\n                if (response &&\n                    response.message &&\n                    response.message.statusCode === HttpCodes.Unauthorized) {\n                    let authenticationHandler;\n                    for (const handler of this.handlers) {\n                        if (handler.canHandleAuthentication(response)) {\n                            authenticationHandler = handler;\n                            break;\n                        }\n                    }\n                    if (authenticationHandler) {\n                        return authenticationHandler.handleAuthentication(this, info, data);\n                    }\n                    else {\n                        // We have received an unauthorized response but have no handlers to handle it.\n                        // Let the response return to the caller.\n                        return response;\n                    }\n                }\n                let redirectsRemaining = this._maxRedirects;\n                while (response.message.statusCode &&\n                    HttpRedirectCodes.includes(response.message.statusCode) &&\n                    this._allowRedirects &&\n                    redirectsRemaining > 0) {\n                    const redirectUrl = response.message.headers['location'];\n                    if (!redirectUrl) {\n                        // if there's no location to redirect to, we won't\n                        break;\n                    }\n                    const parsedRedirectUrl = new URL(redirectUrl);\n                    if (parsedUrl.protocol === 'https:' &&\n                        parsedUrl.protocol !== parsedRedirectUrl.protocol &&\n                        !this._allowRedirectDowngrade) {\n                        throw new Error('Redirect from HTTPS to HTTP protocol. This downgrade is not allowed for security reasons. If you want to allow this behavior, set the allowRedirectDowngrade option to true.');\n                    }\n                    // we need to finish reading the response before reassigning response\n                    // which will leak the open socket.\n                    yield response.readBody();\n                    // strip authorization header if redirected to a different hostname\n                    if (parsedRedirectUrl.hostname !== parsedUrl.hostname) {\n                        for (const header in headers) {\n                            // header names are case insensitive\n                            if (header.toLowerCase() === 'authorization') {\n                                delete headers[header];\n                            }\n                        }\n                    }\n                    // let's make the request with the new redirectUrl\n                    info = this._prepareRequest(verb, parsedRedirectUrl, headers);\n                    response = yield this.requestRaw(info, data);\n                    redirectsRemaining--;\n                }\n                if (!response.message.statusCode ||\n                    !HttpResponseRetryCodes.includes(response.message.statusCode)) {\n                    // If not a retry code, return immediately instead of retrying\n                    return response;\n                }\n                numTries += 1;\n                if (numTries < maxTries) {\n                    yield response.readBody();\n                    yield this._performExponentialBackoff(numTries);\n                }\n            } while (numTries < maxTries);\n            return response;\n        });\n    }\n    /**\n     * Needs to be called if keepAlive is set to true in request options.\n     */\n    dispose() {\n        if (this._agent) {\n            this._agent.destroy();\n        }\n        this._disposed = true;\n    }\n    /**\n     * Raw request.\n     * @param info\n     * @param data\n     */\n    requestRaw(info, data) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                function callbackForResult(err, res) {\n                    if (err) {\n                        reject(err);\n                    }\n                    else if (!res) {\n                        // If `err` is not passed, then `res` must be passed.\n                        reject(new Error('Unknown error'));\n                    }\n                    else {\n                        resolve(res);\n                    }\n                }\n                this.requestRawWithCallback(info, data, callbackForResult);\n            });\n        });\n    }\n    /**\n     * Raw request with callback.\n     * @param info\n     * @param data\n     * @param onResult\n     */\n    requestRawWithCallback(info, data, onResult) {\n        if (typeof data === 'string') {\n            if (!info.options.headers) {\n                info.options.headers = {};\n            }\n            info.options.headers['Content-Length'] = Buffer.byteLength(data, 'utf8');\n        }\n        let callbackCalled = false;\n        function handleResult(err, res) {\n            if (!callbackCalled) {\n                callbackCalled = true;\n                onResult(err, res);\n            }\n        }\n        const req = info.httpModule.request(info.options, (msg) => {\n            const res = new HttpClientResponse(msg);\n            handleResult(undefined, res);\n        });\n        let socket;\n        req.on('socket', sock => {\n            socket = sock;\n        });\n        // If we ever get disconnected, we want the socket to timeout eventually\n        req.setTimeout(this._socketTimeout || 3 * 60000, () => {\n            if (socket) {\n                socket.end();\n            }\n            handleResult(new Error(`Request timeout: ${info.options.path}`));\n        });\n        req.on('error', function (err) {\n            // err has statusCode property\n            // res should have headers\n            handleResult(err);\n        });\n        if (data && typeof data === 'string') {\n            req.write(data, 'utf8');\n        }\n        if (data && typeof data !== 'string') {\n            data.on('close', function () {\n                req.end();\n            });\n            data.pipe(req);\n        }\n        else {\n            req.end();\n        }\n    }\n    /**\n     * Gets an http agent. This function is useful when you need an http agent that handles\n     * routing through a proxy server - depending upon the url and proxy environment variables.\n     * @param serverUrl  The server URL where the request will be sent. For example, https://api.github.com\n     */\n    getAgent(serverUrl) {\n        const parsedUrl = new URL(serverUrl);\n        return this._getAgent(parsedUrl);\n    }\n    _prepareRequest(method, requestUrl, headers) {\n        const info = {};\n        info.parsedUrl = requestUrl;\n        const usingSsl = info.parsedUrl.protocol === 'https:';\n        info.httpModule = usingSsl ? https : http;\n        const defaultPort = usingSsl ? 443 : 80;\n        info.options = {};\n        info.options.host = info.parsedUrl.hostname;\n        info.options.port = info.parsedUrl.port\n            ? parseInt(info.parsedUrl.port)\n            : defaultPort;\n        info.options.path =\n            (info.parsedUrl.pathname || '') + (info.parsedUrl.search || '');\n        info.options.method = method;\n        info.options.headers = this._mergeHeaders(headers);\n        if (this.userAgent != null) {\n            info.options.headers['user-agent'] = this.userAgent;\n        }\n        info.options.agent = this._getAgent(info.parsedUrl);\n        // gives handlers an opportunity to participate\n        if (this.handlers) {\n            for (const handler of this.handlers) {\n                handler.prepareRequest(info.options);\n            }\n        }\n        return info;\n    }\n    _mergeHeaders(headers) {\n        if (this.requestOptions && this.requestOptions.headers) {\n            return Object.assign({}, lowercaseKeys(this.requestOptions.headers), lowercaseKeys(headers || {}));\n        }\n        return lowercaseKeys(headers || {});\n    }\n    _getExistingOrDefaultHeader(additionalHeaders, header, _default) {\n        let clientHeader;\n        if (this.requestOptions && this.requestOptions.headers) {\n            clientHeader = lowercaseKeys(this.requestOptions.headers)[header];\n        }\n        return additionalHeaders[header] || clientHeader || _default;\n    }\n    _getAgent(parsedUrl) {\n        let agent;\n        const proxyUrl = pm.getProxyUrl(parsedUrl);\n        const useProxy = proxyUrl && proxyUrl.hostname;\n        if (this._keepAlive && useProxy) {\n            agent = this._proxyAgent;\n        }\n        if (this._keepAlive && !useProxy) {\n            agent = this._agent;\n        }\n        // if agent is already assigned use that agent.\n        if (agent) {\n            return agent;\n        }\n        const usingSsl = parsedUrl.protocol === 'https:';\n        let maxSockets = 100;\n        if (this.requestOptions) {\n            maxSockets = this.requestOptions.maxSockets || http.globalAgent.maxSockets;\n        }\n        // This is `useProxy` again, but we need to check `proxyURl` directly for TypeScripts's flow analysis.\n        if (proxyUrl && proxyUrl.hostname) {\n            const agentOptions = {\n                maxSockets,\n                keepAlive: this._keepAlive,\n                proxy: Object.assign(Object.assign({}, ((proxyUrl.username || proxyUrl.password) && {\n                    proxyAuth: `${proxyUrl.username}:${proxyUrl.password}`\n                })), { host: proxyUrl.hostname, port: proxyUrl.port })\n            };\n            let tunnelAgent;\n            const overHttps = proxyUrl.protocol === 'https:';\n            if (usingSsl) {\n                tunnelAgent = overHttps ? tunnel.httpsOverHttps : tunnel.httpsOverHttp;\n            }\n            else {\n                tunnelAgent = overHttps ? tunnel.httpOverHttps : tunnel.httpOverHttp;\n            }\n            agent = tunnelAgent(agentOptions);\n            this._proxyAgent = agent;\n        }\n        // if reusing agent across request and tunneling agent isn't assigned create a new agent\n        if (this._keepAlive && !agent) {\n            const options = { keepAlive: this._keepAlive, maxSockets };\n            agent = usingSsl ? new https.Agent(options) : new http.Agent(options);\n            this._agent = agent;\n        }\n        // if not using private agent and tunnel agent isn't setup then use global agent\n        if (!agent) {\n            agent = usingSsl ? https.globalAgent : http.globalAgent;\n        }\n        if (usingSsl && this._ignoreSslError) {\n            // we don't want to set NODE_TLS_REJECT_UNAUTHORIZED=0 since that will affect request for entire process\n            // http.RequestOptions doesn't expose a way to modify RequestOptions.agent.options\n            // we have to cast it to any and change it directly\n            agent.options = Object.assign(agent.options || {}, {\n                rejectUnauthorized: false\n            });\n        }\n        return agent;\n    }\n    _performExponentialBackoff(retryNumber) {\n        return __awaiter(this, void 0, void 0, function* () {\n            retryNumber = Math.min(ExponentialBackoffCeiling, retryNumber);\n            const ms = ExponentialBackoffTimeSlice * Math.pow(2, retryNumber);\n            return new Promise(resolve => setTimeout(() => resolve(), ms));\n        });\n    }\n    _processResponse(res, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                const statusCode = res.message.statusCode || 0;\n                const response = {\n                    statusCode,\n                    result: null,\n                    headers: {}\n                };\n                // not found leads to null obj returned\n                if (statusCode === HttpCodes.NotFound) {\n                    resolve(response);\n                }\n                // get the result from the body\n                function dateTimeDeserializer(key, value) {\n                    if (typeof value === 'string') {\n                        const a = new Date(value);\n                        if (!isNaN(a.valueOf())) {\n                            return a;\n                        }\n                    }\n                    return value;\n                }\n                let obj;\n                let contents;\n                try {\n                    contents = yield res.readBody();\n                    if (contents && contents.length > 0) {\n                        if (options && options.deserializeDates) {\n                            obj = JSON.parse(contents, dateTimeDeserializer);\n                        }\n                        else {\n                            obj = JSON.parse(contents);\n                        }\n                        response.result = obj;\n                    }\n                    response.headers = res.message.headers;\n                }\n                catch (err) {\n                    // Invalid resource (contents not json);  leaving result obj null\n                }\n                // note that 3xx redirects are handled by the http layer.\n                if (statusCode > 299) {\n                    let msg;\n                    // if exception/error in body, attempt to get better error\n                    if (obj && obj.message) {\n                        msg = obj.message;\n                    }\n                    else if (contents && contents.length > 0) {\n                        // it may be the case that the exception is in the body message as string\n                        msg = contents;\n                    }\n                    else {\n                        msg = `Failed request: (${statusCode})`;\n                    }\n                    const err = new HttpClientError(msg, statusCode);\n                    err.result = response.result;\n                    reject(err);\n                }\n                else {\n                    resolve(response);\n                }\n            }));\n        });\n    }\n}\nexports.HttpClient = HttpClient;\nconst lowercaseKeys = (obj) => Object.keys(obj).reduce((c, k) => ((c[k.toLowerCase()] = obj[k]), c), {});\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.checkBypass = exports.getProxyUrl = void 0;\nfunction getProxyUrl(reqUrl) {\n    const usingSsl = reqUrl.protocol === 'https:';\n    if (checkBypass(reqUrl)) {\n        return undefined;\n    }\n    const proxyVar = (() => {\n        if (usingSsl) {\n            return process.env['https_proxy'] || process.env['HTTPS_PROXY'];\n        }\n        else {\n            return process.env['http_proxy'] || process.env['HTTP_PROXY'];\n        }\n    })();\n    if (proxyVar) {\n        return new URL(proxyVar);\n    }\n    else {\n        return undefined;\n    }\n}\nexports.getProxyUrl = getProxyUrl;\nfunction checkBypass(reqUrl) {\n    if (!reqUrl.hostname) {\n        return false;\n    }\n    const noProxy = process.env['no_proxy'] || process.env['NO_PROXY'] || '';\n    if (!noProxy) {\n        return false;\n    }\n    // Determine the request port\n    let reqPort;\n    if (reqUrl.port) {\n        reqPort = Number(reqUrl.port);\n    }\n    else if (reqUrl.protocol === 'http:') {\n        reqPort = 80;\n    }\n    else if (reqUrl.protocol === 'https:') {\n        reqPort = 443;\n    }\n    // Format the request hostname and hostname with port\n    const upperReqHosts = [reqUrl.hostname.toUpperCase()];\n    if (typeof reqPort === 'number') {\n        upperReqHosts.push(`${upperReqHosts[0]}:${reqPort}`);\n    }\n    // Compare request host against noproxy\n    for (const upperNoProxyItem of noProxy\n        .split(',')\n        .map(x => x.trim().toUpperCase())\n        .filter(x => x)) {\n        if (upperReqHosts.some(x => x === upperNoProxyItem)) {\n            return true;\n        }\n    }\n    return false;\n}\nexports.checkBypass = checkBypass;\n//# sourceMappingURL=proxy.js.map","'use strict';\n\nconst validator = require('./validator');\nconst XMLParser = require('./xmlparser/XMLParser');\nconst XMLBuilder = require('./xmlbuilder/json2xml');\n\nmodule.exports = {\n  XMLParser: XMLParser,\n  XMLValidator: validator,\n  XMLBuilder: XMLBuilder\n}","'use strict';\n\nconst nameStartChar = ':A-Za-z_\\\\u00C0-\\\\u00D6\\\\u00D8-\\\\u00F6\\\\u00F8-\\\\u02FF\\\\u0370-\\\\u037D\\\\u037F-\\\\u1FFF\\\\u200C-\\\\u200D\\\\u2070-\\\\u218F\\\\u2C00-\\\\u2FEF\\\\u3001-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFFD';\nconst nameChar = nameStartChar + '\\\\-.\\\\d\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040';\nconst nameRegexp = '[' + nameStartChar + '][' + nameChar + ']*'\nconst regexName = new RegExp('^' + nameRegexp + '$');\n\nconst getAllMatches = function(string, regex) {\n  const matches = [];\n  let match = regex.exec(string);\n  while (match) {\n    const allmatches = [];\n    allmatches.startIndex = regex.lastIndex - match[0].length;\n    const len = match.length;\n    for (let index = 0; index < len; index++) {\n      allmatches.push(match[index]);\n    }\n    matches.push(allmatches);\n    match = regex.exec(string);\n  }\n  return matches;\n};\n\nconst isName = function(string) {\n  const match = regexName.exec(string);\n  return !(match === null || typeof match === 'undefined');\n};\n\nexports.isExist = function(v) {\n  return typeof v !== 'undefined';\n};\n\nexports.isEmptyObject = function(obj) {\n  return Object.keys(obj).length === 0;\n};\n\n/**\n * Copy all the properties of a into b.\n * @param {*} target\n * @param {*} a\n */\nexports.merge = function(target, a, arrayMode) {\n  if (a) {\n    const keys = Object.keys(a); // will return an array of own properties\n    const len = keys.length; //don't make it inline\n    for (let i = 0; i < len; i++) {\n      if (arrayMode === 'strict') {\n        target[keys[i]] = [ a[keys[i]] ];\n      } else {\n        target[keys[i]] = a[keys[i]];\n      }\n    }\n  }\n};\n/* exports.merge =function (b,a){\n  return Object.assign(b,a);\n} */\n\nexports.getValue = function(v) {\n  if (exports.isExist(v)) {\n    return v;\n  } else {\n    return '';\n  }\n};\n\n// const fakeCall = function(a) {return a;};\n// const fakeCallNoReturn = function() {};\n\nexports.isName = isName;\nexports.getAllMatches = getAllMatches;\nexports.nameRegexp = nameRegexp;\n","'use strict';\n\nconst util = require('./util');\n\nconst defaultOptions = {\n  allowBooleanAttributes: false, //A tag can have attributes without any value\n  unpairedTags: []\n};\n\n//const tagsPattern = new RegExp(\"<\\\\/?([\\\\w:\\\\-_\\.]+)\\\\s*\\/?>\",\"g\");\nexports.validate = function (xmlData, options) {\n  options = Object.assign({}, defaultOptions, options);\n\n  //xmlData = xmlData.replace(/(\\r\\n|\\n|\\r)/gm,\"\");//make it single line\n  //xmlData = xmlData.replace(/(^\\s*<\\?xml.*?\\?>)/g,\"\");//Remove XML starting tag\n  //xmlData = xmlData.replace(/(<!DOCTYPE[\\s\\w\\\"\\.\\/\\-\\:]+(\\[.*\\])*\\s*>)/g,\"\");//Remove DOCTYPE\n  const tags = [];\n  let tagFound = false;\n\n  //indicates that the root tag has been closed (aka. depth 0 has been reached)\n  let reachedRoot = false;\n\n  if (xmlData[0] === '\\ufeff') {\n    // check for byte order mark (BOM)\n    xmlData = xmlData.substr(1);\n  }\n  \n  for (let i = 0; i < xmlData.length; i++) {\n\n    if (xmlData[i] === '<' && xmlData[i+1] === '?') {\n      i+=2;\n      i = readPI(xmlData,i);\n      if (i.err) return i;\n    }else if (xmlData[i] === '<') {\n      //starting of tag\n      //read until you reach to '>' avoiding any '>' in attribute value\n      let tagStartPos = i;\n      i++;\n      \n      if (xmlData[i] === '!') {\n        i = readCommentAndCDATA(xmlData, i);\n        continue;\n      } else {\n        let closingTag = false;\n        if (xmlData[i] === '/') {\n          //closing tag\n          closingTag = true;\n          i++;\n        }\n        //read tagname\n        let tagName = '';\n        for (; i < xmlData.length &&\n          xmlData[i] !== '>' &&\n          xmlData[i] !== ' ' &&\n          xmlData[i] !== '\\t' &&\n          xmlData[i] !== '\\n' &&\n          xmlData[i] !== '\\r'; i++\n        ) {\n          tagName += xmlData[i];\n        }\n        tagName = tagName.trim();\n        //console.log(tagName);\n\n        if (tagName[tagName.length - 1] === '/') {\n          //self closing tag without attributes\n          tagName = tagName.substring(0, tagName.length - 1);\n          //continue;\n          i--;\n        }\n        if (!validateTagName(tagName)) {\n          let msg;\n          if (tagName.trim().length === 0) {\n            msg = \"Invalid space after '<'.\";\n          } else {\n            msg = \"Tag '\"+tagName+\"' is an invalid name.\";\n          }\n          return getErrorObject('InvalidTag', msg, getLineNumberForPosition(xmlData, i));\n        }\n\n        const result = readAttributeStr(xmlData, i);\n        if (result === false) {\n          return getErrorObject('InvalidAttr', \"Attributes for '\"+tagName+\"' have open quote.\", getLineNumberForPosition(xmlData, i));\n        }\n        let attrStr = result.value;\n        i = result.index;\n\n        if (attrStr[attrStr.length - 1] === '/') {\n          //self closing tag\n          const attrStrStart = i - attrStr.length;\n          attrStr = attrStr.substring(0, attrStr.length - 1);\n          const isValid = validateAttributeString(attrStr, options);\n          if (isValid === true) {\n            tagFound = true;\n            //continue; //text may presents after self closing tag\n          } else {\n            //the result from the nested function returns the position of the error within the attribute\n            //in order to get the 'true' error line, we need to calculate the position where the attribute begins (i - attrStr.length) and then add the position within the attribute\n            //this gives us the absolute index in the entire xml, which we can use to find the line at last\n            return getErrorObject(isValid.err.code, isValid.err.msg, getLineNumberForPosition(xmlData, attrStrStart + isValid.err.line));\n          }\n        } else if (closingTag) {\n          if (!result.tagClosed) {\n            return getErrorObject('InvalidTag', \"Closing tag '\"+tagName+\"' doesn't have proper closing.\", getLineNumberForPosition(xmlData, i));\n          } else if (attrStr.trim().length > 0) {\n            return getErrorObject('InvalidTag', \"Closing tag '\"+tagName+\"' can't have attributes or invalid starting.\", getLineNumberForPosition(xmlData, tagStartPos));\n          } else {\n            const otg = tags.pop();\n            if (tagName !== otg.tagName) {\n              let openPos = getLineNumberForPosition(xmlData, otg.tagStartPos);\n              return getErrorObject('InvalidTag',\n                \"Expected closing tag '\"+otg.tagName+\"' (opened in line \"+openPos.line+\", col \"+openPos.col+\") instead of closing tag '\"+tagName+\"'.\",\n                getLineNumberForPosition(xmlData, tagStartPos));\n            }\n\n            //when there are no more tags, we reached the root level.\n            if (tags.length == 0) {\n              reachedRoot = true;\n            }\n          }\n        } else {\n          const isValid = validateAttributeString(attrStr, options);\n          if (isValid !== true) {\n            //the result from the nested function returns the position of the error within the attribute\n            //in order to get the 'true' error line, we need to calculate the position where the attribute begins (i - attrStr.length) and then add the position within the attribute\n            //this gives us the absolute index in the entire xml, which we can use to find the line at last\n            return getErrorObject(isValid.err.code, isValid.err.msg, getLineNumberForPosition(xmlData, i - attrStr.length + isValid.err.line));\n          }\n\n          //if the root level has been reached before ...\n          if (reachedRoot === true) {\n            return getErrorObject('InvalidXml', 'Multiple possible root nodes found.', getLineNumberForPosition(xmlData, i));\n          } else if(options.unpairedTags.indexOf(tagName) !== -1){\n            //don't push into stack\n          } else {\n            tags.push({tagName, tagStartPos});\n          }\n          tagFound = true;\n        }\n\n        //skip tag text value\n        //It may include comments and CDATA value\n        for (i++; i < xmlData.length; i++) {\n          if (xmlData[i] === '<') {\n            if (xmlData[i + 1] === '!') {\n              //comment or CADATA\n              i++;\n              i = readCommentAndCDATA(xmlData, i);\n              continue;\n            } else if (xmlData[i+1] === '?') {\n              i = readPI(xmlData, ++i);\n              if (i.err) return i;\n            } else{\n              break;\n            }\n          } else if (xmlData[i] === '&') {\n            const afterAmp = validateAmpersand(xmlData, i);\n            if (afterAmp == -1)\n              return getErrorObject('InvalidChar', \"char '&' is not expected.\", getLineNumberForPosition(xmlData, i));\n            i = afterAmp;\n          }else{\n            if (reachedRoot === true && !isWhiteSpace(xmlData[i])) {\n              return getErrorObject('InvalidXml', \"Extra text at the end\", getLineNumberForPosition(xmlData, i));\n            }\n          }\n        } //end of reading tag text value\n        if (xmlData[i] === '<') {\n          i--;\n        }\n      }\n    } else {\n      if ( isWhiteSpace(xmlData[i])) {\n        continue;\n      }\n      return getErrorObject('InvalidChar', \"char '\"+xmlData[i]+\"' is not expected.\", getLineNumberForPosition(xmlData, i));\n    }\n  }\n\n  if (!tagFound) {\n    return getErrorObject('InvalidXml', 'Start tag expected.', 1);\n  }else if (tags.length == 1) {\n      return getErrorObject('InvalidTag', \"Unclosed tag '\"+tags[0].tagName+\"'.\", getLineNumberForPosition(xmlData, tags[0].tagStartPos));\n  }else if (tags.length > 0) {\n      return getErrorObject('InvalidXml', \"Invalid '\"+\n          JSON.stringify(tags.map(t => t.tagName), null, 4).replace(/\\r?\\n/g, '')+\n          \"' found.\", {line: 1, col: 1});\n  }\n\n  return true;\n};\n\nfunction isWhiteSpace(char){\n  return char === ' ' || char === '\\t' || char === '\\n'  || char === '\\r';\n}\n/**\n * Read Processing insstructions and skip\n * @param {*} xmlData\n * @param {*} i\n */\nfunction readPI(xmlData, i) {\n  const start = i;\n  for (; i < xmlData.length; i++) {\n    if (xmlData[i] == '?' || xmlData[i] == ' ') {\n      //tagname\n      const tagname = xmlData.substr(start, i - start);\n      if (i > 5 && tagname === 'xml') {\n        return getErrorObject('InvalidXml', 'XML declaration allowed only at the start of the document.', getLineNumberForPosition(xmlData, i));\n      } else if (xmlData[i] == '?' && xmlData[i + 1] == '>') {\n        //check if valid attribut string\n        i++;\n        break;\n      } else {\n        continue;\n      }\n    }\n  }\n  return i;\n}\n\nfunction readCommentAndCDATA(xmlData, i) {\n  if (xmlData.length > i + 5 && xmlData[i + 1] === '-' && xmlData[i + 2] === '-') {\n    //comment\n    for (i += 3; i < xmlData.length; i++) {\n      if (xmlData[i] === '-' && xmlData[i + 1] === '-' && xmlData[i + 2] === '>') {\n        i += 2;\n        break;\n      }\n    }\n  } else if (\n    xmlData.length > i + 8 &&\n    xmlData[i + 1] === 'D' &&\n    xmlData[i + 2] === 'O' &&\n    xmlData[i + 3] === 'C' &&\n    xmlData[i + 4] === 'T' &&\n    xmlData[i + 5] === 'Y' &&\n    xmlData[i + 6] === 'P' &&\n    xmlData[i + 7] === 'E'\n  ) {\n    let angleBracketsCount = 1;\n    for (i += 8; i < xmlData.length; i++) {\n      if (xmlData[i] === '<') {\n        angleBracketsCount++;\n      } else if (xmlData[i] === '>') {\n        angleBracketsCount--;\n        if (angleBracketsCount === 0) {\n          break;\n        }\n      }\n    }\n  } else if (\n    xmlData.length > i + 9 &&\n    xmlData[i + 1] === '[' &&\n    xmlData[i + 2] === 'C' &&\n    xmlData[i + 3] === 'D' &&\n    xmlData[i + 4] === 'A' &&\n    xmlData[i + 5] === 'T' &&\n    xmlData[i + 6] === 'A' &&\n    xmlData[i + 7] === '['\n  ) {\n    for (i += 8; i < xmlData.length; i++) {\n      if (xmlData[i] === ']' && xmlData[i + 1] === ']' && xmlData[i + 2] === '>') {\n        i += 2;\n        break;\n      }\n    }\n  }\n\n  return i;\n}\n\nconst doubleQuote = '\"';\nconst singleQuote = \"'\";\n\n/**\n * Keep reading xmlData until '<' is found outside the attribute value.\n * @param {string} xmlData\n * @param {number} i\n */\nfunction readAttributeStr(xmlData, i) {\n  let attrStr = '';\n  let startChar = '';\n  let tagClosed = false;\n  for (; i < xmlData.length; i++) {\n    if (xmlData[i] === doubleQuote || xmlData[i] === singleQuote) {\n      if (startChar === '') {\n        startChar = xmlData[i];\n      } else if (startChar !== xmlData[i]) {\n        //if vaue is enclosed with double quote then single quotes are allowed inside the value and vice versa\n      } else {\n        startChar = '';\n      }\n    } else if (xmlData[i] === '>') {\n      if (startChar === '') {\n        tagClosed = true;\n        break;\n      }\n    }\n    attrStr += xmlData[i];\n  }\n  if (startChar !== '') {\n    return false;\n  }\n\n  return {\n    value: attrStr,\n    index: i,\n    tagClosed: tagClosed\n  };\n}\n\n/**\n * Select all the attributes whether valid or invalid.\n */\nconst validAttrStrRegxp = new RegExp('(\\\\s*)([^\\\\s=]+)(\\\\s*=)?(\\\\s*([\\'\"])(([\\\\s\\\\S])*?)\\\\5)?', 'g');\n\n//attr, =\"sd\", a=\"amit's\", a=\"sd\"b=\"saf\", ab  cd=\"\"\n\nfunction validateAttributeString(attrStr, options) {\n  //console.log(\"start:\"+attrStr+\":end\");\n\n  //if(attrStr.trim().length === 0) return true; //empty string\n\n  const matches = util.getAllMatches(attrStr, validAttrStrRegxp);\n  const attrNames = {};\n\n  for (let i = 0; i < matches.length; i++) {\n    if (matches[i][1].length === 0) {\n      //nospace before attribute name: a=\"sd\"b=\"saf\"\n      return getErrorObject('InvalidAttr', \"Attribute '\"+matches[i][2]+\"' has no space in starting.\", getPositionFromMatch(matches[i]))\n    } else if (matches[i][3] !== undefined && matches[i][4] === undefined) {\n      return getErrorObject('InvalidAttr', \"Attribute '\"+matches[i][2]+\"' is without value.\", getPositionFromMatch(matches[i]));\n    } else if (matches[i][3] === undefined && !options.allowBooleanAttributes) {\n      //independent attribute: ab\n      return getErrorObject('InvalidAttr', \"boolean attribute '\"+matches[i][2]+\"' is not allowed.\", getPositionFromMatch(matches[i]));\n    }\n    /* else if(matches[i][6] === undefined){//attribute without value: ab=\n                    return { err: { code:\"InvalidAttr\",msg:\"attribute \" + matches[i][2] + \" has no value assigned.\"}};\n                } */\n    const attrName = matches[i][2];\n    if (!validateAttrName(attrName)) {\n      return getErrorObject('InvalidAttr', \"Attribute '\"+attrName+\"' is an invalid name.\", getPositionFromMatch(matches[i]));\n    }\n    if (!attrNames.hasOwnProperty(attrName)) {\n      //check for duplicate attribute.\n      attrNames[attrName] = 1;\n    } else {\n      return getErrorObject('InvalidAttr', \"Attribute '\"+attrName+\"' is repeated.\", getPositionFromMatch(matches[i]));\n    }\n  }\n\n  return true;\n}\n\nfunction validateNumberAmpersand(xmlData, i) {\n  let re = /\\d/;\n  if (xmlData[i] === 'x') {\n    i++;\n    re = /[\\da-fA-F]/;\n  }\n  for (; i < xmlData.length; i++) {\n    if (xmlData[i] === ';')\n      return i;\n    if (!xmlData[i].match(re))\n      break;\n  }\n  return -1;\n}\n\nfunction validateAmpersand(xmlData, i) {\n  // https://www.w3.org/TR/xml/#dt-charref\n  i++;\n  if (xmlData[i] === ';')\n    return -1;\n  if (xmlData[i] === '#') {\n    i++;\n    return validateNumberAmpersand(xmlData, i);\n  }\n  let count = 0;\n  for (; i < xmlData.length; i++, count++) {\n    if (xmlData[i].match(/\\w/) && count < 20)\n      continue;\n    if (xmlData[i] === ';')\n      break;\n    return -1;\n  }\n  return i;\n}\n\nfunction getErrorObject(code, message, lineNumber) {\n  return {\n    err: {\n      code: code,\n      msg: message,\n      line: lineNumber.line || lineNumber,\n      col: lineNumber.col,\n    },\n  };\n}\n\nfunction validateAttrName(attrName) {\n  return util.isName(attrName);\n}\n\n// const startsWithXML = /^xml/i;\n\nfunction validateTagName(tagname) {\n  return util.isName(tagname) /* && !tagname.match(startsWithXML) */;\n}\n\n//this function returns the line number for the character at the given index\nfunction getLineNumberForPosition(xmlData, index) {\n  const lines = xmlData.substring(0, index).split(/\\r?\\n/);\n  return {\n    line: lines.length,\n\n    // column number is last line's length + 1, because column numbering starts at 1:\n    col: lines[lines.length - 1].length + 1\n  };\n}\n\n//this function returns the position of the first character of match within attrStr\nfunction getPositionFromMatch(match) {\n  return match.startIndex + match[1].length;\n}\n","'use strict';\n//parse Empty Node as self closing node\nconst buildFromOrderedJs = require('./orderedJs2Xml');\n\nconst defaultOptions = {\n  attributeNamePrefix: '@_',\n  attributesGroupName: false,\n  textNodeName: '#text',\n  ignoreAttributes: true,\n  cdataPropName: false,\n  format: false,\n  indentBy: '  ',\n  suppressEmptyNode: false,\n  suppressUnpairedNode: true,\n  suppressBooleanAttributes: true,\n  tagValueProcessor: function(key, a) {\n    return a;\n  },\n  attributeValueProcessor: function(attrName, a) {\n    return a;\n  },\n  preserveOrder: false,\n  commentPropName: false,\n  unpairedTags: [],\n  entities: [\n    { regex: new RegExp(\"&\", \"g\"), val: \"&amp;\" },//it must be on top\n    { regex: new RegExp(\">\", \"g\"), val: \"&gt;\" },\n    { regex: new RegExp(\"<\", \"g\"), val: \"&lt;\" },\n    { regex: new RegExp(\"\\'\", \"g\"), val: \"&apos;\" },\n    { regex: new RegExp(\"\\\"\", \"g\"), val: \"&quot;\" }\n  ],\n  processEntities: true,\n  stopNodes: [],\n  // transformTagName: false,\n  // transformAttributeName: false,\n};\n\nfunction Builder(options) {\n  this.options = Object.assign({}, defaultOptions, options);\n  if (this.options.ignoreAttributes || this.options.attributesGroupName) {\n    this.isAttribute = function(/*a*/) {\n      return false;\n    };\n  } else {\n    this.attrPrefixLen = this.options.attributeNamePrefix.length;\n    this.isAttribute = isAttribute;\n  }\n\n  this.processTextOrObjNode = processTextOrObjNode\n\n  if (this.options.format) {\n    this.indentate = indentate;\n    this.tagEndChar = '>\\n';\n    this.newLine = '\\n';\n  } else {\n    this.indentate = function() {\n      return '';\n    };\n    this.tagEndChar = '>';\n    this.newLine = '';\n  }\n}\n\nBuilder.prototype.build = function(jObj) {\n  if(this.options.preserveOrder){\n    return buildFromOrderedJs(jObj, this.options);\n  }else {\n    if(Array.isArray(jObj) && this.options.arrayNodeName && this.options.arrayNodeName.length > 1){\n      jObj = {\n        [this.options.arrayNodeName] : jObj\n      }\n    }\n    return this.j2x(jObj, 0).val;\n  }\n};\n\nBuilder.prototype.j2x = function(jObj, level) {\n  let attrStr = '';\n  let val = '';\n  for (let key in jObj) {\n    if (typeof jObj[key] === 'undefined') {\n      // supress undefined node\n    } else if (jObj[key] === null) {\n      if(key[0] === \"?\") val += this.indentate(level) + '<' + key + '?' + this.tagEndChar;\n      else val += this.indentate(level) + '<' + key + '/' + this.tagEndChar;\n      // val += this.indentate(level) + '<' + key + '/' + this.tagEndChar;\n    } else if (jObj[key] instanceof Date) {\n      val += this.buildTextValNode(jObj[key], key, '', level);\n    } else if (typeof jObj[key] !== 'object') {\n      //premitive type\n      const attr = this.isAttribute(key);\n      if (attr) {\n        attrStr += this.buildAttrPairStr(attr, '' + jObj[key]);\n      }else {\n        //tag value\n        if (key === this.options.textNodeName) {\n          let newval = this.options.tagValueProcessor(key, '' + jObj[key]);\n          val += this.replaceEntitiesValue(newval);\n        } else {\n          val += this.buildTextValNode(jObj[key], key, '', level);\n        }\n      }\n    } else if (Array.isArray(jObj[key])) {\n      //repeated nodes\n      const arrLen = jObj[key].length;\n      for (let j = 0; j < arrLen; j++) {\n        const item = jObj[key][j];\n        if (typeof item === 'undefined') {\n          // supress undefined node\n        } else if (item === null) {\n          if(key[0] === \"?\") val += this.indentate(level) + '<' + key + '?' + this.tagEndChar;\n          else val += this.indentate(level) + '<' + key + '/' + this.tagEndChar;\n          // val += this.indentate(level) + '<' + key + '/' + this.tagEndChar;\n        } else if (typeof item === 'object') {\n          val += this.processTextOrObjNode(item, key, level)\n        } else {\n          val += this.buildTextValNode(item, key, '', level);\n        }\n      }\n    } else {\n      //nested node\n      if (this.options.attributesGroupName && key === this.options.attributesGroupName) {\n        const Ks = Object.keys(jObj[key]);\n        const L = Ks.length;\n        for (let j = 0; j < L; j++) {\n          attrStr += this.buildAttrPairStr(Ks[j], '' + jObj[key][Ks[j]]);\n        }\n      } else {\n        val += this.processTextOrObjNode(jObj[key], key, level)\n      }\n    }\n  }\n  return {attrStr: attrStr, val: val};\n};\n\nBuilder.prototype.buildAttrPairStr = function(attrName, val){\n  val = this.options.attributeValueProcessor(attrName, '' + val);\n  val = this.replaceEntitiesValue(val);\n  if (this.options.suppressBooleanAttributes && val === \"true\") {\n    return ' ' + attrName;\n  } else return ' ' + attrName + '=\"' + val + '\"';\n}\n\nfunction processTextOrObjNode (object, key, level) {\n  const result = this.j2x(object, level + 1);\n  if (object[this.options.textNodeName] !== undefined && Object.keys(object).length === 1) {\n    return this.buildTextValNode(object[this.options.textNodeName], key, result.attrStr, level);\n  } else {\n    return this.buildObjectNode(result.val, key, result.attrStr, level);\n  }\n}\n\nBuilder.prototype.buildObjectNode = function(val, key, attrStr, level) {\n  if(val === \"\"){\n    if(key[0] === \"?\") return  this.indentate(level) + '<' + key + attrStr+ '?' + this.tagEndChar;\n    else {\n      return this.indentate(level) + '<' + key + attrStr + this.closeTag(key) + this.tagEndChar;\n    }\n  }else{\n\n    let tagEndExp = '</' + key + this.tagEndChar;\n    let piClosingChar = \"\";\n    \n    if(key[0] === \"?\") {\n      piClosingChar = \"?\";\n      tagEndExp = \"\";\n    }\n  \n    if (attrStr && val.indexOf('<') === -1) {\n      return ( this.indentate(level) + '<' +  key + attrStr + piClosingChar + '>' + val + tagEndExp );\n    } else if (this.options.commentPropName !== false && key === this.options.commentPropName && piClosingChar.length === 0) {\n      return this.indentate(level) + `<!--${val}-->` + this.newLine;\n    }else {\n      return (\n        this.indentate(level) + '<' + key + attrStr + piClosingChar + this.tagEndChar +\n        val +\n        this.indentate(level) + tagEndExp    );\n    }\n  }\n}\n\nBuilder.prototype.closeTag = function(key){\n  let closeTag = \"\";\n  if(this.options.unpairedTags.indexOf(key) !== -1){ //unpaired\n    if(!this.options.suppressUnpairedNode) closeTag = \"/\"\n  }else if(this.options.suppressEmptyNode){ //empty\n    closeTag = \"/\";\n  }else{\n    closeTag = `></${key}`\n  }\n  return closeTag;\n}\n\nfunction buildEmptyObjNode(val, key, attrStr, level) {\n  if (val !== '') {\n    return this.buildObjectNode(val, key, attrStr, level);\n  } else {\n    if(key[0] === \"?\") return  this.indentate(level) + '<' + key + attrStr+ '?' + this.tagEndChar;\n    else {\n      return  this.indentate(level) + '<' + key + attrStr + '/' + this.tagEndChar;\n      // return this.buildTagStr(level,key, attrStr);\n    }\n  }\n}\n\nBuilder.prototype.buildTextValNode = function(val, key, attrStr, level) {\n  if (this.options.cdataPropName !== false && key === this.options.cdataPropName) {\n    return this.indentate(level) + `<![CDATA[${val}]]>` +  this.newLine;\n  }else if (this.options.commentPropName !== false && key === this.options.commentPropName) {\n    return this.indentate(level) + `<!--${val}-->` +  this.newLine;\n  }else if(key[0] === \"?\") {//PI tag\n    return  this.indentate(level) + '<' + key + attrStr+ '?' + this.tagEndChar; \n  }else{\n    let textValue = this.options.tagValueProcessor(key, val);\n    textValue = this.replaceEntitiesValue(textValue);\n  \n    if( textValue === ''){\n      return this.indentate(level) + '<' + key + attrStr + this.closeTag(key) + this.tagEndChar;\n    }else{\n      return this.indentate(level) + '<' + key + attrStr + '>' +\n         textValue +\n        '</' + key + this.tagEndChar;\n    }\n  }\n}\n\nBuilder.prototype.replaceEntitiesValue = function(textValue){\n  if(textValue && textValue.length > 0 && this.options.processEntities){\n    for (let i=0; i<this.options.entities.length; i++) {\n      const entity = this.options.entities[i];\n      textValue = textValue.replace(entity.regex, entity.val);\n    }\n  }\n  return textValue;\n}\n\nfunction indentate(level) {\n  return this.options.indentBy.repeat(level);\n}\n\nfunction isAttribute(name /*, options*/) {\n  if (name.startsWith(this.options.attributeNamePrefix)) {\n    return name.substr(this.attrPrefixLen);\n  } else {\n    return false;\n  }\n}\n\nmodule.exports = Builder;\n","const EOL = \"\\n\";\n\n/**\n * \n * @param {array} jArray \n * @param {any} options \n * @returns \n */\nfunction toXml(jArray, options) {\n    let indentation = \"\";\n    if (options.format && options.indentBy.length > 0) {\n        indentation = EOL;\n    }\n    return arrToStr(jArray, options, \"\", indentation);\n}\n\nfunction arrToStr(arr, options, jPath, indentation) {\n    let xmlStr = \"\";\n    let isPreviousElementTag = false;\n\n    for (let i = 0; i < arr.length; i++) {\n        const tagObj = arr[i];\n        const tagName = propName(tagObj);\n        let newJPath = \"\";\n        if (jPath.length === 0) newJPath = tagName\n        else newJPath = `${jPath}.${tagName}`;\n\n        if (tagName === options.textNodeName) {\n            let tagText = tagObj[tagName];\n            if (!isStopNode(newJPath, options)) {\n                tagText = options.tagValueProcessor(tagName, tagText);\n                tagText = replaceEntitiesValue(tagText, options);\n            }\n            if (isPreviousElementTag) {\n                xmlStr += indentation;\n            }\n            xmlStr += tagText;\n            isPreviousElementTag = false;\n            continue;\n        } else if (tagName === options.cdataPropName) {\n            if (isPreviousElementTag) {\n                xmlStr += indentation;\n            }\n            xmlStr += `<![CDATA[${tagObj[tagName][0][options.textNodeName]}]]>`;\n            isPreviousElementTag = false;\n            continue;\n        } else if (tagName === options.commentPropName) {\n            xmlStr += indentation + `<!--${tagObj[tagName][0][options.textNodeName]}-->`;\n            isPreviousElementTag = true;\n            continue;\n        } else if (tagName[0] === \"?\") {\n            const attStr = attr_to_str(tagObj[\":@\"], options);\n            const tempInd = tagName === \"?xml\" ? \"\" : indentation;\n            let piTextNodeName = tagObj[tagName][0][options.textNodeName];\n            piTextNodeName = piTextNodeName.length !== 0 ? \" \" + piTextNodeName : \"\"; //remove extra spacing\n            xmlStr += tempInd + `<${tagName}${piTextNodeName}${attStr}?>`;\n            isPreviousElementTag = true;\n            continue;\n        }\n        let newIdentation = indentation;\n        if (newIdentation !== \"\") {\n            newIdentation += options.indentBy;\n        }\n        const attStr = attr_to_str(tagObj[\":@\"], options);\n        const tagStart = indentation + `<${tagName}${attStr}`;\n        const tagValue = arrToStr(tagObj[tagName], options, newJPath, newIdentation);\n        if (options.unpairedTags.indexOf(tagName) !== -1) {\n            if (options.suppressUnpairedNode) xmlStr += tagStart + \">\";\n            else xmlStr += tagStart + \"/>\";\n        } else if ((!tagValue || tagValue.length === 0) && options.suppressEmptyNode) {\n            xmlStr += tagStart + \"/>\";\n        } else if (tagValue && tagValue.endsWith(\">\")) {\n            xmlStr += tagStart + `>${tagValue}${indentation}</${tagName}>`;\n        } else {\n            xmlStr += tagStart + \">\";\n            if (tagValue && indentation !== \"\" && (tagValue.includes(\"/>\") || tagValue.includes(\"</\"))) {\n                xmlStr += indentation + options.indentBy + tagValue + indentation;\n            } else {\n                xmlStr += tagValue;\n            }\n            xmlStr += `</${tagName}>`;\n        }\n        isPreviousElementTag = true;\n    }\n\n    return xmlStr;\n}\n\nfunction propName(obj) {\n    const keys = Object.keys(obj);\n    for (let i = 0; i < keys.length; i++) {\n        const key = keys[i];\n        if (key !== \":@\") return key;\n    }\n}\n\nfunction attr_to_str(attrMap, options) {\n    let attrStr = \"\";\n    if (attrMap && !options.ignoreAttributes) {\n        for (let attr in attrMap) {\n            let attrVal = options.attributeValueProcessor(attr, attrMap[attr]);\n            attrVal = replaceEntitiesValue(attrVal, options);\n            if (attrVal === true && options.suppressBooleanAttributes) {\n                attrStr += ` ${attr.substr(options.attributeNamePrefix.length)}`;\n            } else {\n                attrStr += ` ${attr.substr(options.attributeNamePrefix.length)}=\"${attrVal}\"`;\n            }\n        }\n    }\n    return attrStr;\n}\n\nfunction isStopNode(jPath, options) {\n    jPath = jPath.substr(0, jPath.length - options.textNodeName.length - 1);\n    let tagName = jPath.substr(jPath.lastIndexOf(\".\") + 1);\n    for (let index in options.stopNodes) {\n        if (options.stopNodes[index] === jPath || options.stopNodes[index] === \"*.\" + tagName) return true;\n    }\n    return false;\n}\n\nfunction replaceEntitiesValue(textValue, options) {\n    if (textValue && textValue.length > 0 && options.processEntities) {\n        for (let i = 0; i < options.entities.length; i++) {\n            const entity = options.entities[i];\n            textValue = textValue.replace(entity.regex, entity.val);\n        }\n    }\n    return textValue;\n}\nmodule.exports = toXml;\n","//TODO: handle comments\nfunction readDocType(xmlData, i){\n    \n    const entities = {};\n    if( xmlData[i + 3] === 'O' &&\n         xmlData[i + 4] === 'C' &&\n         xmlData[i + 5] === 'T' &&\n         xmlData[i + 6] === 'Y' &&\n         xmlData[i + 7] === 'P' &&\n         xmlData[i + 8] === 'E')\n    {    \n        i = i+9;\n        let angleBracketsCount = 1;\n        let hasBody = false, entity = false, comment = false;\n        let exp = \"\";\n        for(;i<xmlData.length;i++){\n            if (xmlData[i] === '<' && !comment) {\n                if( hasBody && \n                     xmlData[i+1] === '!' &&\n                     xmlData[i+2] === 'E' &&\n                     xmlData[i+3] === 'N' &&\n                     xmlData[i+4] === 'T' &&\n                     xmlData[i+5] === 'I' &&\n                     xmlData[i+6] === 'T' &&\n                     xmlData[i+7] === 'Y'\n                ){\n                    i += 7;\n                    entity = true;\n                }else if( hasBody && \n                    xmlData[i+1] === '!' &&\n                     xmlData[i+2] === 'E' &&\n                     xmlData[i+3] === 'L' &&\n                     xmlData[i+4] === 'E' &&\n                     xmlData[i+5] === 'M' &&\n                     xmlData[i+6] === 'E' &&\n                     xmlData[i+7] === 'N' &&\n                     xmlData[i+8] === 'T'\n                ){\n                    //Not supported\n                    i += 8;\n                }else if( hasBody && \n                    xmlData[i+1] === '!' &&\n                    xmlData[i+2] === 'A' &&\n                    xmlData[i+3] === 'T' &&\n                    xmlData[i+4] === 'T' &&\n                    xmlData[i+5] === 'L' &&\n                    xmlData[i+6] === 'I' &&\n                    xmlData[i+7] === 'S' &&\n                    xmlData[i+8] === 'T'\n                ){\n                    //Not supported\n                    i += 8;\n                }else if( hasBody && \n                    xmlData[i+1] === '!' &&\n                    xmlData[i+2] === 'N' &&\n                    xmlData[i+3] === 'O' &&\n                    xmlData[i+4] === 'T' &&\n                    xmlData[i+5] === 'A' &&\n                    xmlData[i+6] === 'T' &&\n                    xmlData[i+7] === 'I' &&\n                    xmlData[i+8] === 'O' &&\n                    xmlData[i+9] === 'N'\n                ){\n                    //Not supported\n                    i += 9;\n                }else if( //comment\n                    xmlData[i+1] === '!' &&\n                    xmlData[i+2] === '-' &&\n                    xmlData[i+3] === '-'\n                ){\n                    comment = true;\n                }else{\n                    throw new Error(\"Invalid DOCTYPE\");\n                }\n                angleBracketsCount++;\n                exp = \"\";\n            } else if (xmlData[i] === '>') {\n                if(comment){\n                    if( xmlData[i - 1] === \"-\" && xmlData[i - 2] === \"-\"){\n                        comment = false;\n                        angleBracketsCount--;\n                    }\n                }else{\n                    if(entity) {\n                        parseEntityExp(exp, entities);\n                        entity = false;\n                    }\n                    angleBracketsCount--;\n                }\n                if (angleBracketsCount === 0) {\n                  break;\n                }\n            }else if( xmlData[i] === '['){\n                hasBody = true;\n            }else{\n                exp += xmlData[i];\n            }\n        }\n        if(angleBracketsCount !== 0){\n            throw new Error(`Unclosed DOCTYPE`);\n        }\n    }else{\n        throw new Error(`Invalid Tag instead of DOCTYPE`);\n    }\n    return {entities, i};\n}\n\nconst entityRegex = RegExp(\"^\\\\s([a-zA-z0-0]+)[ \\t](['\\\"])([^&]+)\\\\2\");\nfunction parseEntityExp(exp, entities){\n    const match = entityRegex.exec(exp);\n    if(match){\n        entities[ match[1] ] = {\n            regx : RegExp( `&${match[1]};`,\"g\"),\n            val: match[3]\n        };\n    }\n}\nmodule.exports = readDocType;","\nconst defaultOptions = {\n    preserveOrder: false,\n    attributeNamePrefix: '@_',\n    attributesGroupName: false,\n    textNodeName: '#text',\n    ignoreAttributes: true,\n    removeNSPrefix: false, // remove NS from tag name or attribute name if true\n    allowBooleanAttributes: false, //a tag can have attributes without any value\n    //ignoreRootElement : false,\n    parseTagValue: true,\n    parseAttributeValue: false,\n    trimValues: true, //Trim string values of tag and attributes\n    cdataPropName: false,\n    numberParseOptions: {\n      hex: true,\n      leadingZeros: true,\n      eNotation: true\n    },\n    tagValueProcessor: function(tagName, val) {\n      return val;\n    },\n    attributeValueProcessor: function(attrName, val) {\n      return val;\n    },\n    stopNodes: [], //nested tags will not be parsed even for errors\n    alwaysCreateTextNode: false,\n    isArray: () => false,\n    commentPropName: false,\n    unpairedTags: [],\n    processEntities: true,\n    htmlEntities: false,\n    ignoreDeclaration: false,\n    ignorePiTags: false,\n    transformTagName: false,\n    transformAttributeName: false,\n};\n   \nconst buildOptions = function(options) {\n    return Object.assign({}, defaultOptions, options);\n};\n\nexports.buildOptions = buildOptions;\nexports.defaultOptions = defaultOptions;","'use strict';\n///@ts-check\n\nconst util = require('../util');\nconst xmlNode = require('./xmlNode');\nconst readDocType = require(\"./DocTypeReader\");\nconst toNumber = require(\"strnum\");\n\nconst regx =\n  '<((!\\\\[CDATA\\\\[([\\\\s\\\\S]*?)(]]>))|((NAME:)?(NAME))([^>]*)>|((\\\\/)(NAME)\\\\s*>))([^<]*)'\n  .replace(/NAME/g, util.nameRegexp);\n\n//const tagsRegx = new RegExp(\"<(\\\\/?[\\\\w:\\\\-\\._]+)([^>]*)>(\\\\s*\"+cdataRegx+\")*([^<]+)?\",\"g\");\n//const tagsRegx = new RegExp(\"<(\\\\/?)((\\\\w*:)?([\\\\w:\\\\-\\._]+))([^>]*)>([^<]*)(\"+cdataRegx+\"([^<]*))*([^<]+)?\",\"g\");\n\nclass OrderedObjParser{\n  constructor(options){\n    this.options = options;\n    this.currentNode = null;\n    this.tagsNodeStack = [];\n    this.docTypeEntities = {};\n    this.lastEntities = {\n      \"apos\" : { regex: /&(apos|#39|#x27);/g, val : \"'\"},\n      \"gt\" : { regex: /&(gt|#62|#x3E);/g, val : \">\"},\n      \"lt\" : { regex: /&(lt|#60|#x3C);/g, val : \"<\"},\n      \"quot\" : { regex: /&(quot|#34|#x22);/g, val : \"\\\"\"},\n    };\n    this.ampEntity = { regex: /&(amp|#38|#x26);/g, val : \"&\"};\n    this.htmlEntities = {\n      \"space\": { regex: /&(nbsp|#160);/g, val: \" \" },\n      // \"lt\" : { regex: /&(lt|#60);/g, val: \"<\" },\n      // \"gt\" : { regex: /&(gt|#62);/g, val: \">\" },\n      // \"amp\" : { regex: /&(amp|#38);/g, val: \"&\" },\n      // \"quot\" : { regex: /&(quot|#34);/g, val: \"\\\"\" },\n      // \"apos\" : { regex: /&(apos|#39);/g, val: \"'\" },\n      \"cent\" : { regex: /&(cent|#162);/g, val: \"¢\" },\n      \"pound\" : { regex: /&(pound|#163);/g, val: \"£\" },\n      \"yen\" : { regex: /&(yen|#165);/g, val: \"¥\" },\n      \"euro\" : { regex: /&(euro|#8364);/g, val: \"€\" },\n      \"copyright\" : { regex: /&(copy|#169);/g, val: \"©\" },\n      \"reg\" : { regex: /&(reg|#174);/g, val: \"®\" },\n      \"inr\" : { regex: /&(inr|#8377);/g, val: \"₹\" },\n    };\n    this.addExternalEntities = addExternalEntities;\n    this.parseXml = parseXml;\n    this.parseTextData = parseTextData;\n    this.resolveNameSpace = resolveNameSpace;\n    this.buildAttributesMap = buildAttributesMap;\n    this.isItStopNode = isItStopNode;\n    this.replaceEntitiesValue = replaceEntitiesValue;\n    this.readStopNodeData = readStopNodeData;\n    this.saveTextToParentTag = saveTextToParentTag;\n  }\n\n}\n\nfunction addExternalEntities(externalEntities){\n  const entKeys = Object.keys(externalEntities);\n  for (let i = 0; i < entKeys.length; i++) {\n    const ent = entKeys[i];\n    this.lastEntities[ent] = {\n       regex: new RegExp(\"&\"+ent+\";\",\"g\"),\n       val : externalEntities[ent]\n    }\n  }\n}\n\n/**\n * @param {string} val\n * @param {string} tagName\n * @param {string} jPath\n * @param {boolean} dontTrim\n * @param {boolean} hasAttributes\n * @param {boolean} isLeafNode\n * @param {boolean} escapeEntities\n */\nfunction parseTextData(val, tagName, jPath, dontTrim, hasAttributes, isLeafNode, escapeEntities) {\n  if (val !== undefined) {\n    if (this.options.trimValues && !dontTrim) {\n      val = val.trim();\n    }\n    if(val.length > 0){\n      if(!escapeEntities) val = this.replaceEntitiesValue(val);\n      \n      const newval = this.options.tagValueProcessor(tagName, val, jPath, hasAttributes, isLeafNode);\n      if(newval === null || newval === undefined){\n        //don't parse\n        return val;\n      }else if(typeof newval !== typeof val || newval !== val){\n        //overwrite\n        return newval;\n      }else if(this.options.trimValues){\n        return parseValue(val, this.options.parseTagValue, this.options.numberParseOptions);\n      }else{\n        const trimmedVal = val.trim();\n        if(trimmedVal === val){\n          return parseValue(val, this.options.parseTagValue, this.options.numberParseOptions);\n        }else{\n          return val;\n        }\n      }\n    }\n  }\n}\n\nfunction resolveNameSpace(tagname) {\n  if (this.options.removeNSPrefix) {\n    const tags = tagname.split(':');\n    const prefix = tagname.charAt(0) === '/' ? '/' : '';\n    if (tags[0] === 'xmlns') {\n      return '';\n    }\n    if (tags.length === 2) {\n      tagname = prefix + tags[1];\n    }\n  }\n  return tagname;\n}\n\n//TODO: change regex to capture NS\n//const attrsRegx = new RegExp(\"([\\\\w\\\\-\\\\.\\\\:]+)\\\\s*=\\\\s*(['\\\"])((.|\\n)*?)\\\\2\",\"gm\");\nconst attrsRegx = new RegExp('([^\\\\s=]+)\\\\s*(=\\\\s*([\\'\"])([\\\\s\\\\S]*?)\\\\3)?', 'gm');\n\nfunction buildAttributesMap(attrStr, jPath) {\n  if (!this.options.ignoreAttributes && typeof attrStr === 'string') {\n    // attrStr = attrStr.replace(/\\r?\\n/g, ' ');\n    //attrStr = attrStr || attrStr.trim();\n\n    const matches = util.getAllMatches(attrStr, attrsRegx);\n    const len = matches.length; //don't make it inline\n    const attrs = {};\n    for (let i = 0; i < len; i++) {\n      const attrName = this.resolveNameSpace(matches[i][1]);\n      let oldVal = matches[i][4];\n      let aName = this.options.attributeNamePrefix + attrName;\n      if (attrName.length) {\n        if (this.options.transformAttributeName) {\n          aName = this.options.transformAttributeName(aName);\n        }\n        if(aName === \"__proto__\") aName  = \"#__proto__\";\n        if (oldVal !== undefined) {\n          if (this.options.trimValues) {\n            oldVal = oldVal.trim();\n          }\n          oldVal = this.replaceEntitiesValue(oldVal);\n          const newVal = this.options.attributeValueProcessor(attrName, oldVal, jPath);\n          if(newVal === null || newVal === undefined){\n            //don't parse\n            attrs[aName] = oldVal;\n          }else if(typeof newVal !== typeof oldVal || newVal !== oldVal){\n            //overwrite\n            attrs[aName] = newVal;\n          }else{\n            //parse\n            attrs[aName] = parseValue(\n              oldVal,\n              this.options.parseAttributeValue,\n              this.options.numberParseOptions\n            );\n          }\n        } else if (this.options.allowBooleanAttributes) {\n          attrs[aName] = true;\n        }\n      }\n    }\n    if (!Object.keys(attrs).length) {\n      return;\n    }\n    if (this.options.attributesGroupName) {\n      const attrCollection = {};\n      attrCollection[this.options.attributesGroupName] = attrs;\n      return attrCollection;\n    }\n    return attrs;\n  }\n}\n\nconst parseXml = function(xmlData) {\n  xmlData = xmlData.replace(/\\r\\n?/g, \"\\n\"); //TODO: remove this line\n  const xmlObj = new xmlNode('!xml');\n  let currentNode = xmlObj;\n  let textData = \"\";\n  let jPath = \"\";\n  for(let i=0; i< xmlData.length; i++){//for each char in XML data\n    const ch = xmlData[i];\n    if(ch === '<'){\n      // const nextIndex = i+1;\n      // const _2ndChar = xmlData[nextIndex];\n      if( xmlData[i+1] === '/') {//Closing Tag\n        const closeIndex = findClosingIndex(xmlData, \">\", i, \"Closing Tag is not closed.\")\n        let tagName = xmlData.substring(i+2,closeIndex).trim();\n\n        if(this.options.removeNSPrefix){\n          const colonIndex = tagName.indexOf(\":\");\n          if(colonIndex !== -1){\n            tagName = tagName.substr(colonIndex+1);\n          }\n        }\n\n        if(this.options.transformTagName) {\n          tagName = this.options.transformTagName(tagName);\n        }\n\n        if(currentNode){\n          textData = this.saveTextToParentTag(textData, currentNode, jPath);\n        }\n\n        jPath = jPath.substr(0, jPath.lastIndexOf(\".\"));\n        \n        currentNode = this.tagsNodeStack.pop();//avoid recurssion, set the parent tag scope\n        textData = \"\";\n        i = closeIndex;\n      } else if( xmlData[i+1] === '?') {\n\n        let tagData = readTagExp(xmlData,i, false, \"?>\");\n        if(!tagData) throw new Error(\"Pi Tag is not closed.\");\n\n        textData = this.saveTextToParentTag(textData, currentNode, jPath);\n        if( (this.options.ignoreDeclaration && tagData.tagName === \"?xml\") || this.options.ignorePiTags){\n\n        }else{\n  \n          const childNode = new xmlNode(tagData.tagName);\n          childNode.add(this.options.textNodeName, \"\");\n          \n          if(tagData.tagName !== tagData.tagExp && tagData.attrExpPresent){\n            childNode[\":@\"] = this.buildAttributesMap(tagData.tagExp, jPath);\n          }\n          currentNode.addChild(childNode);\n\n        }\n\n\n        i = tagData.closeIndex + 1;\n      } else if(xmlData.substr(i + 1, 3) === '!--') {\n        const endIndex = findClosingIndex(xmlData, \"-->\", i+4, \"Comment is not closed.\")\n        if(this.options.commentPropName){\n          const comment = xmlData.substring(i + 4, endIndex - 2);\n\n          textData = this.saveTextToParentTag(textData, currentNode, jPath);\n\n          currentNode.add(this.options.commentPropName, [ { [this.options.textNodeName] : comment } ]);\n        }\n        i = endIndex;\n      } else if( xmlData.substr(i + 1, 2) === '!D') {\n        const result = readDocType(xmlData, i);\n        this.docTypeEntities = result.entities;\n        i = result.i;\n      }else if(xmlData.substr(i + 1, 2) === '![') {\n        const closeIndex = findClosingIndex(xmlData, \"]]>\", i, \"CDATA is not closed.\") - 2;\n        const tagExp = xmlData.substring(i + 9,closeIndex);\n\n        textData = this.saveTextToParentTag(textData, currentNode, jPath);\n\n        //cdata should be set even if it is 0 length string\n        if(this.options.cdataPropName){\n          // let val = this.parseTextData(tagExp, this.options.cdataPropName, jPath + \".\" + this.options.cdataPropName, true, false, true);\n          // if(!val) val = \"\";\n          currentNode.add(this.options.cdataPropName, [ { [this.options.textNodeName] : tagExp } ]);\n        }else{\n          let val = this.parseTextData(tagExp, currentNode.tagname, jPath, true, false, true);\n          if(val == undefined) val = \"\";\n          currentNode.add(this.options.textNodeName, val);\n        }\n        \n        i = closeIndex + 2;\n      }else {//Opening tag\n        let result = readTagExp(xmlData,i, this.options.removeNSPrefix);\n        let tagName= result.tagName;\n        let tagExp = result.tagExp;\n        let attrExpPresent = result.attrExpPresent;\n        let closeIndex = result.closeIndex;\n\n        if (this.options.transformTagName) {\n          tagName = this.options.transformTagName(tagName);\n        }\n        \n        //save text as child node\n        if (currentNode && textData) {\n          if(currentNode.tagname !== '!xml'){\n            //when nested tag is found\n            textData = this.saveTextToParentTag(textData, currentNode, jPath, false);\n          }\n        }\n\n        if(tagName !== xmlObj.tagname){\n          jPath += jPath ? \".\" + tagName : tagName;\n        }\n\n        //check if last tag was unpaired tag\n        const lastTag = currentNode;\n        if(lastTag && this.options.unpairedTags.indexOf(lastTag.tagname) !== -1 ){\n          currentNode = this.tagsNodeStack.pop();\n        }\n\n        if (this.isItStopNode(this.options.stopNodes, jPath, tagName)) { //TODO: namespace\n          let tagContent = \"\";\n          //self-closing tag\n          if(tagExp.length > 0 && tagExp.lastIndexOf(\"/\") === tagExp.length - 1){\n            i = result.closeIndex;\n          }\n          //boolean tag\n          else if(this.options.unpairedTags.indexOf(tagName) !== -1){\n            i = result.closeIndex;\n          }\n          //normal tag\n          else{\n            //read until closing tag is found\n            const result = this.readStopNodeData(xmlData, tagName, closeIndex + 1);\n            if(!result) throw new Error(`Unexpected end of ${tagName}`);\n            i = result.i;\n            tagContent = result.tagContent;\n          }\n\n          const childNode = new xmlNode(tagName);\n          if(tagName !== tagExp && attrExpPresent){\n            childNode[\":@\"] = this.buildAttributesMap(tagExp, jPath);\n          }\n          if(tagContent) {\n            tagContent = this.parseTextData(tagContent, tagName, jPath, true, attrExpPresent, true, true);\n          }\n          \n          jPath = jPath.substr(0, jPath.lastIndexOf(\".\"));\n          childNode.add(this.options.textNodeName, tagContent);\n          \n          currentNode.addChild(childNode);\n        }else{\n  //selfClosing tag\n          if(tagExp.length > 0 && tagExp.lastIndexOf(\"/\") === tagExp.length - 1){\n            if(tagName[tagName.length - 1] === \"/\"){ //remove trailing '/'\n              tagName = tagName.substr(0, tagName.length - 1);\n              tagExp = tagName;\n            }else{\n              tagExp = tagExp.substr(0, tagExp.length - 1);\n            }\n            \n            if(this.options.transformTagName) {\n              tagName = this.options.transformTagName(tagName);\n            }\n\n            const childNode = new xmlNode(tagName);\n            if(tagName !== tagExp && attrExpPresent){\n              childNode[\":@\"] = this.buildAttributesMap(tagExp, jPath);\n            }\n            jPath = jPath.substr(0, jPath.lastIndexOf(\".\"));\n            currentNode.addChild(childNode);\n          }\n    //opening tag\n          else{\n            const childNode = new xmlNode( tagName);\n            this.tagsNodeStack.push(currentNode);\n            \n            if(tagName !== tagExp && attrExpPresent){\n              childNode[\":@\"] = this.buildAttributesMap(tagExp, jPath);\n            }\n            currentNode.addChild(childNode);\n            currentNode = childNode;\n          }\n          textData = \"\";\n          i = closeIndex;\n        }\n      }\n    }else{\n      textData += xmlData[i];\n    }\n  }\n  return xmlObj.child;\n}\n\nconst replaceEntitiesValue = function(val){\n\n  if(this.options.processEntities){\n    for(let entityName in this.docTypeEntities){\n      const entity = this.docTypeEntities[entityName];\n      val = val.replace( entity.regx, entity.val);\n    }\n    for(let entityName in this.lastEntities){\n      const entity = this.lastEntities[entityName];\n      val = val.replace( entity.regex, entity.val);\n    }\n    if(this.options.htmlEntities){\n      for(let entityName in this.htmlEntities){\n        const entity = this.htmlEntities[entityName];\n        val = val.replace( entity.regex, entity.val);\n      }\n    }\n    val = val.replace( this.ampEntity.regex, this.ampEntity.val);\n  }\n  return val;\n}\nfunction saveTextToParentTag(textData, currentNode, jPath, isLeafNode) {\n  if (textData) { //store previously collected data as textNode\n    if(isLeafNode === undefined) isLeafNode = Object.keys(currentNode.child).length === 0\n    \n    textData = this.parseTextData(textData,\n      currentNode.tagname,\n      jPath,\n      false,\n      currentNode[\":@\"] ? Object.keys(currentNode[\":@\"]).length !== 0 : false,\n      isLeafNode);\n\n    if (textData !== undefined && textData !== \"\")\n      currentNode.add(this.options.textNodeName, textData);\n    textData = \"\";\n  }\n  return textData;\n}\n\n//TODO: use jPath to simplify the logic\n/**\n * \n * @param {string[]} stopNodes \n * @param {string} jPath\n * @param {string} currentTagName \n */\nfunction isItStopNode(stopNodes, jPath, currentTagName){\n  const allNodesExp = \"*.\" + currentTagName;\n  for (const stopNodePath in stopNodes) {\n    const stopNodeExp = stopNodes[stopNodePath];\n    if( allNodesExp === stopNodeExp || jPath === stopNodeExp  ) return true;\n  }\n  return false;\n}\n\n/**\n * Returns the tag Expression and where it is ending handling single-dobule quotes situation\n * @param {string} xmlData \n * @param {number} i starting index\n * @returns \n */\nfunction tagExpWithClosingIndex(xmlData, i, closingChar = \">\"){\n  let attrBoundary;\n  let tagExp = \"\";\n  for (let index = i; index < xmlData.length; index++) {\n    let ch = xmlData[index];\n    if (attrBoundary) {\n        if (ch === attrBoundary) attrBoundary = \"\";//reset\n    } else if (ch === '\"' || ch === \"'\") {\n        attrBoundary = ch;\n    } else if (ch === closingChar[0]) {\n      if(closingChar[1]){\n        if(xmlData[index + 1] === closingChar[1]){\n          return {\n            data: tagExp,\n            index: index\n          }\n        }\n      }else{\n        return {\n          data: tagExp,\n          index: index\n        }\n      }\n    } else if (ch === '\\t') {\n      ch = \" \"\n    }\n    tagExp += ch;\n  }\n}\n\nfunction findClosingIndex(xmlData, str, i, errMsg){\n  const closingIndex = xmlData.indexOf(str, i);\n  if(closingIndex === -1){\n    throw new Error(errMsg)\n  }else{\n    return closingIndex + str.length - 1;\n  }\n}\n\nfunction readTagExp(xmlData,i, removeNSPrefix, closingChar = \">\"){\n  const result = tagExpWithClosingIndex(xmlData, i+1, closingChar);\n  if(!result) return;\n  let tagExp = result.data;\n  const closeIndex = result.index;\n  const separatorIndex = tagExp.search(/\\s/);\n  let tagName = tagExp;\n  let attrExpPresent = true;\n  if(separatorIndex !== -1){//separate tag name and attributes expression\n    tagName = tagExp.substr(0, separatorIndex).replace(/\\s\\s*$/, '');\n    tagExp = tagExp.substr(separatorIndex + 1);\n  }\n\n  if(removeNSPrefix){\n    const colonIndex = tagName.indexOf(\":\");\n    if(colonIndex !== -1){\n      tagName = tagName.substr(colonIndex+1);\n      attrExpPresent = tagName !== result.data.substr(colonIndex + 1);\n    }\n  }\n\n  return {\n    tagName: tagName,\n    tagExp: tagExp,\n    closeIndex: closeIndex,\n    attrExpPresent: attrExpPresent,\n  }\n}\n/**\n * find paired tag for a stop node\n * @param {string} xmlData \n * @param {string} tagName \n * @param {number} i \n */\nfunction readStopNodeData(xmlData, tagName, i){\n  const startIndex = i;\n  // Starting at 1 since we already have an open tag\n  let openTagCount = 1;\n\n  for (; i < xmlData.length; i++) {\n    if( xmlData[i] === \"<\"){ \n      if (xmlData[i+1] === \"/\") {//close tag\n          const closeIndex = findClosingIndex(xmlData, \">\", i, `${tagName} is not closed`);\n          let closeTagName = xmlData.substring(i+2,closeIndex).trim();\n          if(closeTagName === tagName){\n            openTagCount--;\n            if (openTagCount === 0) {\n              return {\n                tagContent: xmlData.substring(startIndex, i),\n                i : closeIndex\n              }\n            }\n          }\n          i=closeIndex;\n        } else if(xmlData[i+1] === '?') { \n          const closeIndex = findClosingIndex(xmlData, \"?>\", i+1, \"StopNode is not closed.\")\n          i=closeIndex;\n        } else if(xmlData.substr(i + 1, 3) === '!--') { \n          const closeIndex = findClosingIndex(xmlData, \"-->\", i+3, \"StopNode is not closed.\")\n          i=closeIndex;\n        } else if(xmlData.substr(i + 1, 2) === '![') { \n          const closeIndex = findClosingIndex(xmlData, \"]]>\", i, \"StopNode is not closed.\") - 2;\n          i=closeIndex;\n        } else {\n          const tagData = readTagExp(xmlData, i, '>')\n\n          if (tagData) {\n            const openTagName = tagData && tagData.tagName;\n            if (openTagName === tagName && tagData.tagExp[tagData.tagExp.length-1] !== \"/\") {\n              openTagCount++;\n            }\n            i=tagData.closeIndex;\n          }\n        }\n      }\n  }//end for loop\n}\n\nfunction parseValue(val, shouldParse, options) {\n  if (shouldParse && typeof val === 'string') {\n    //console.log(options)\n    const newval = val.trim();\n    if(newval === 'true' ) return true;\n    else if(newval === 'false' ) return false;\n    else return toNumber(val, options);\n  } else {\n    if (util.isExist(val)) {\n      return val;\n    } else {\n      return '';\n    }\n  }\n}\n\n\nmodule.exports = OrderedObjParser;\n","const { buildOptions} = require(\"./OptionsBuilder\");\nconst OrderedObjParser = require(\"./OrderedObjParser\");\nconst { prettify} = require(\"./node2json\");\nconst validator = require('../validator');\n\nclass XMLParser{\n    \n    constructor(options){\n        this.externalEntities = {};\n        this.options = buildOptions(options);\n        \n    }\n    /**\n     * Parse XML dats to JS object \n     * @param {string|Buffer} xmlData \n     * @param {boolean|Object} validationOption \n     */\n    parse(xmlData,validationOption){\n        if(typeof xmlData === \"string\"){\n        }else if( xmlData.toString){\n            xmlData = xmlData.toString();\n        }else{\n            throw new Error(\"XML data is accepted in String or Bytes[] form.\")\n        }\n        if( validationOption){\n            if(validationOption === true) validationOption = {}; //validate with default options\n            \n            const result = validator.validate(xmlData, validationOption);\n            if (result !== true) {\n              throw Error( `${result.err.msg}:${result.err.line}:${result.err.col}` )\n            }\n          }\n        const orderedObjParser = new OrderedObjParser(this.options);\n        orderedObjParser.addExternalEntities(this.externalEntities);\n        const orderedResult = orderedObjParser.parseXml(xmlData);\n        if(this.options.preserveOrder || orderedResult === undefined) return orderedResult;\n        else return prettify(orderedResult, this.options);\n    }\n\n    /**\n     * Add Entity which is not by default supported by this library\n     * @param {string} key \n     * @param {string} value \n     */\n    addEntity(key, value){\n        if(value.indexOf(\"&\") !== -1){\n            throw new Error(\"Entity value can't have '&'\")\n        }else if(key.indexOf(\"&\") !== -1 || key.indexOf(\";\") !== -1){\n            throw new Error(\"An entity must be set without '&' and ';'. Eg. use '#xD' for '&#xD;'\")\n        }else if(value === \"&\"){\n            throw new Error(\"An entity with value '&' is not permitted\");\n        }else{\n            this.externalEntities[key] = value;\n        }\n    }\n}\n\nmodule.exports = XMLParser;","'use strict';\n\n/**\n * \n * @param {array} node \n * @param {any} options \n * @returns \n */\nfunction prettify(node, options){\n  return compress( node, options);\n}\n\n/**\n * \n * @param {array} arr \n * @param {object} options \n * @param {string} jPath \n * @returns object\n */\nfunction compress(arr, options, jPath){\n  let text;\n  const compressedObj = {};\n  for (let i = 0; i < arr.length; i++) {\n    const tagObj = arr[i];\n    const property = propName(tagObj);\n    let newJpath = \"\";\n    if(jPath === undefined) newJpath = property;\n    else newJpath = jPath + \".\" + property;\n\n    if(property === options.textNodeName){\n      if(text === undefined) text = tagObj[property];\n      else text += \"\" + tagObj[property];\n    }else if(property === undefined){\n      continue;\n    }else if(tagObj[property]){\n      \n      let val = compress(tagObj[property], options, newJpath);\n      const isLeaf = isLeafTag(val, options);\n\n      if(tagObj[\":@\"]){\n        assignAttributes( val, tagObj[\":@\"], newJpath, options);\n      }else if(Object.keys(val).length === 1 && val[options.textNodeName] !== undefined && !options.alwaysCreateTextNode){\n        val = val[options.textNodeName];\n      }else if(Object.keys(val).length === 0){\n        if(options.alwaysCreateTextNode) val[options.textNodeName] = \"\";\n        else val = \"\";\n      }\n\n      if(compressedObj[property] !== undefined && compressedObj.hasOwnProperty(property)) {\n        if(!Array.isArray(compressedObj[property])) {\n            compressedObj[property] = [ compressedObj[property] ];\n        }\n        compressedObj[property].push(val);\n      }else{\n        //TODO: if a node is not an array, then check if it should be an array\n        //also determine if it is a leaf node\n        if (options.isArray(property, newJpath, isLeaf )) {\n          compressedObj[property] = [val];\n        }else{\n          compressedObj[property] = val;\n        }\n      }\n    }\n    \n  }\n  // if(text && text.length > 0) compressedObj[options.textNodeName] = text;\n  if(typeof text === \"string\"){\n    if(text.length > 0) compressedObj[options.textNodeName] = text;\n  }else if(text !== undefined) compressedObj[options.textNodeName] = text;\n  return compressedObj;\n}\n\nfunction propName(obj){\n  const keys = Object.keys(obj);\n  for (let i = 0; i < keys.length; i++) {\n    const key = keys[i];\n    if(key !== \":@\") return key;\n  }\n}\n\nfunction assignAttributes(obj, attrMap, jpath, options){\n  if (attrMap) {\n    const keys = Object.keys(attrMap);\n    const len = keys.length; //don't make it inline\n    for (let i = 0; i < len; i++) {\n      const atrrName = keys[i];\n      if (options.isArray(atrrName, jpath + \".\" + atrrName, true, true)) {\n        obj[atrrName] = [ attrMap[atrrName] ];\n      } else {\n        obj[atrrName] = attrMap[atrrName];\n      }\n    }\n  }\n}\n\nfunction isLeafTag(obj, options){\n  const propCount = Object.keys(obj).length;\n  if( propCount === 0 || (propCount === 1 && obj[options.textNodeName]) ) return true;\n  return false;\n}\nexports.prettify = prettify;\n","'use strict';\n\nclass XmlNode{\n  constructor(tagname) {\n    this.tagname = tagname;\n    this.child = []; //nested tags, text, cdata, comments in order\n    this[\":@\"] = {}; //attributes map\n  }\n  add(key,val){\n    // this.child.push( {name : key, val: val, isCdata: isCdata });\n    if(key === \"__proto__\") key = \"#__proto__\";\n    this.child.push( {[key]: val });\n  }\n  addChild(node) {\n    if(node.tagname === \"__proto__\") node.tagname = \"#__proto__\";\n    if(node[\":@\"] && Object.keys(node[\":@\"]).length > 0){\n      this.child.push( { [node.tagname]: node.child, [\":@\"]: node[\":@\"] });\n    }else{\n      this.child.push( { [node.tagname]: node.child });\n    }\n  };\n};\n\n\nmodule.exports = XmlNode;","/**\n * Mnemonist LRUCache\n * ===================\n *\n * JavaScript implementation of the LRU Cache data structure. To save up\n * memory and allocations this implementation represents its underlying\n * doubly-linked list as static arrays and pointers. Thus, memory is allocated\n * only once at instantiation and JS objects are never created to serve as\n * pointers. This also means this implementation does not trigger too many\n * garbage collections.\n *\n * Note that to save up memory, a LRU Cache can be implemented using a singly\n * linked list by storing predecessors' pointers as hashmap values.\n * However, this means more hashmap lookups and would probably slow the whole\n * thing down. What's more, pointers are not the things taking most space in\n * memory.\n */\nvar Iterator = require('obliterator/iterator'),\n    forEach = require('obliterator/foreach'),\n    typed = require('./utils/typed-arrays.js'),\n    iterables = require('./utils/iterables.js');\n\n/**\n * LRUCache.\n *\n * @constructor\n * @param {function} Keys     - Array class for storing keys.\n * @param {function} Values   - Array class for storing values.\n * @param {number}   capacity - Desired capacity.\n */\nfunction LRUCache(Keys, Values, capacity) {\n  if (arguments.length < 2) {\n    capacity = Keys;\n    Keys = null;\n    Values = null;\n  }\n\n  this.capacity = capacity;\n\n  if (typeof this.capacity !== 'number' || this.capacity <= 0)\n    throw new Error('mnemonist/lru-cache: capacity should be positive number.');\n\n  var PointerArray = typed.getPointerArray(capacity);\n\n  this.forward = new PointerArray(capacity);\n  this.backward = new PointerArray(capacity);\n  this.K = typeof Keys === 'function' ? new Keys(capacity) : new Array(capacity);\n  this.V = typeof Values === 'function' ? new Values(capacity) : new Array(capacity);\n\n  // Properties\n  this.size = 0;\n  this.head = 0;\n  this.tail = 0;\n  this.items = {};\n}\n\n/**\n * Method used to clear the structure.\n *\n * @return {undefined}\n */\nLRUCache.prototype.clear = function() {\n  this.size = 0;\n  this.head = 0;\n  this.tail = 0;\n  this.items = {};\n};\n\n/**\n * Method used to splay a value on top.\n *\n * @param  {number}   pointer - Pointer of the value to splay on top.\n * @return {LRUCache}\n */\nLRUCache.prototype.splayOnTop = function(pointer) {\n  var oldHead = this.head;\n\n  if (this.head === pointer)\n    return this;\n\n  var previous = this.backward[pointer],\n      next = this.forward[pointer];\n\n  if (this.tail === pointer) {\n    this.tail = previous;\n  }\n  else {\n    this.backward[next] = previous;\n  }\n\n  this.forward[previous] = next;\n\n  this.backward[oldHead] = pointer;\n  this.head = pointer;\n  this.forward[pointer] = oldHead;\n\n  return this;\n};\n\n/**\n * Method used to set the value for the given key in the cache.\n *\n * @param  {any} key   - Key.\n * @param  {any} value - Value.\n * @return {undefined}\n */\nLRUCache.prototype.set = function(key, value) {\n\n  // The key already exists, we just need to update the value and splay on top\n  var pointer = this.items[key];\n\n  if (typeof pointer !== 'undefined') {\n    this.splayOnTop(pointer);\n    this.V[pointer] = value;\n\n    return;\n  }\n\n  // The cache is not yet full\n  if (this.size < this.capacity) {\n    pointer = this.size++;\n  }\n\n  // Cache is full, we need to drop the last value\n  else {\n    pointer = this.tail;\n    this.tail = this.backward[pointer];\n    delete this.items[this.K[pointer]];\n  }\n\n  // Storing key & value\n  this.items[key] = pointer;\n  this.K[pointer] = key;\n  this.V[pointer] = value;\n\n  // Moving the item at the front of the list\n  this.forward[pointer] = this.head;\n  this.backward[this.head] = pointer;\n  this.head = pointer;\n};\n\n/**\n * Method used to set the value for the given key in the cache\n *\n * @param  {any} key   - Key.\n * @param  {any} value - Value.\n * @return {{evicted: boolean, key: any, value: any}} An object containing the\n * key and value of an item that was overwritten or evicted in the set\n * operation, as well as a boolean indicating whether it was evicted due to\n * limited capacity. Return value is null if nothing was evicted or overwritten\n * during the set operation.\n */\nLRUCache.prototype.setpop = function(key, value) {\n  var oldValue = null;\n  var oldKey = null;\n  // The key already exists, we just need to update the value and splay on top\n  var pointer = this.items[key];\n\n  if (typeof pointer !== 'undefined') {\n    this.splayOnTop(pointer);\n    oldValue = this.V[pointer];\n    this.V[pointer] = value;\n    return {evicted: false, key: key, value: oldValue};\n  }\n\n  // The cache is not yet full\n  if (this.size < this.capacity) {\n    pointer = this.size++;\n  }\n\n  // Cache is full, we need to drop the last value\n  else {\n    pointer = this.tail;\n    this.tail = this.backward[pointer];\n    oldValue = this.V[pointer];\n    oldKey = this.K[pointer];\n    delete this.items[this.K[pointer]];\n  }\n\n  // Storing key & value\n  this.items[key] = pointer;\n  this.K[pointer] = key;\n  this.V[pointer] = value;\n\n  // Moving the item at the front of the list\n  this.forward[pointer] = this.head;\n  this.backward[this.head] = pointer;\n  this.head = pointer;\n\n  // Return object if eviction took place, otherwise return null\n  if (oldKey) {\n    return {evicted: true, key: oldKey, value: oldValue};\n  }\n  else {\n    return null;\n  }\n};\n\n/**\n * Method used to check whether the key exists in the cache.\n *\n * @param  {any} key   - Key.\n * @return {boolean}\n */\nLRUCache.prototype.has = function(key) {\n  return key in this.items;\n};\n\n/**\n * Method used to get the value attached to the given key. Will move the\n * related key to the front of the underlying linked list.\n *\n * @param  {any} key   - Key.\n * @return {any}\n */\nLRUCache.prototype.get = function(key) {\n  var pointer = this.items[key];\n\n  if (typeof pointer === 'undefined')\n    return;\n\n  this.splayOnTop(pointer);\n\n  return this.V[pointer];\n};\n\n/**\n * Method used to get the value attached to the given key. Does not modify\n * the ordering of the underlying linked list.\n *\n * @param  {any} key   - Key.\n * @return {any}\n */\nLRUCache.prototype.peek = function(key) {\n    var pointer = this.items[key];\n\n    if (typeof pointer === 'undefined')\n        return;\n\n    return this.V[pointer];\n};\n\n/**\n * Method used to iterate over the cache's entries using a callback.\n *\n * @param  {function}  callback - Function to call for each item.\n * @param  {object}    scope    - Optional scope.\n * @return {undefined}\n */\nLRUCache.prototype.forEach = function(callback, scope) {\n  scope = arguments.length > 1 ? scope : this;\n\n  var i = 0,\n      l = this.size;\n\n  var pointer = this.head,\n      keys = this.K,\n      values = this.V,\n      forward = this.forward;\n\n  while (i < l) {\n\n    callback.call(scope, values[pointer], keys[pointer], this);\n    pointer = forward[pointer];\n\n    i++;\n  }\n};\n\n/**\n * Method used to create an iterator over the cache's keys from most\n * recently used to least recently used.\n *\n * @return {Iterator}\n */\nLRUCache.prototype.keys = function() {\n  var i = 0,\n      l = this.size;\n\n  var pointer = this.head,\n      keys = this.K,\n      forward = this.forward;\n\n  return new Iterator(function() {\n    if (i >= l)\n      return {done: true};\n\n    var key = keys[pointer];\n\n    i++;\n\n    if (i < l)\n      pointer = forward[pointer];\n\n    return {\n      done: false,\n      value: key\n    };\n  });\n};\n\n/**\n * Method used to create an iterator over the cache's values from most\n * recently used to least recently used.\n *\n * @return {Iterator}\n */\nLRUCache.prototype.values = function() {\n  var i = 0,\n      l = this.size;\n\n  var pointer = this.head,\n      values = this.V,\n      forward = this.forward;\n\n  return new Iterator(function() {\n    if (i >= l)\n      return {done: true};\n\n    var value = values[pointer];\n\n    i++;\n\n    if (i < l)\n      pointer = forward[pointer];\n\n    return {\n      done: false,\n      value: value\n    };\n  });\n};\n\n/**\n * Method used to create an iterator over the cache's entries from most\n * recently used to least recently used.\n *\n * @return {Iterator}\n */\nLRUCache.prototype.entries = function() {\n  var i = 0,\n      l = this.size;\n\n  var pointer = this.head,\n      keys = this.K,\n      values = this.V,\n      forward = this.forward;\n\n  return new Iterator(function() {\n    if (i >= l)\n      return {done: true};\n\n    var key = keys[pointer],\n        value = values[pointer];\n\n    i++;\n\n    if (i < l)\n      pointer = forward[pointer];\n\n    return {\n      done: false,\n      value: [key, value]\n    };\n  });\n};\n\n/**\n * Attaching the #.entries method to Symbol.iterator if possible.\n */\nif (typeof Symbol !== 'undefined')\n  LRUCache.prototype[Symbol.iterator] = LRUCache.prototype.entries;\n\n/**\n * Convenience known methods.\n */\nLRUCache.prototype.inspect = function() {\n  var proxy = new Map();\n\n  var iterator = this.entries(),\n      step;\n\n  while ((step = iterator.next(), !step.done))\n    proxy.set(step.value[0], step.value[1]);\n\n  // Trick so that node displays the name of the constructor\n  Object.defineProperty(proxy, 'constructor', {\n    value: LRUCache,\n    enumerable: false\n  });\n\n  return proxy;\n};\n\nif (typeof Symbol !== 'undefined')\n  LRUCache.prototype[Symbol.for('nodejs.util.inspect.custom')] = LRUCache.prototype.inspect;\n\n/**\n * Static @.from function taking an arbitrary iterable & converting it into\n * a structure.\n *\n * @param  {Iterable} iterable - Target iterable.\n * @param  {function} Keys     - Array class for storing keys.\n * @param  {function} Values   - Array class for storing values.\n * @param  {number}   capacity - Cache's capacity.\n * @return {LRUCache}\n */\nLRUCache.from = function(iterable, Keys, Values, capacity) {\n  if (arguments.length < 2) {\n    capacity = iterables.guessLength(iterable);\n\n    if (typeof capacity !== 'number')\n      throw new Error('mnemonist/lru-cache.from: could not guess iterable length. Please provide desired capacity as last argument.');\n  }\n  else if (arguments.length === 2) {\n    capacity = Keys;\n    Keys = null;\n    Values = null;\n  }\n\n  var cache = new LRUCache(Keys, Values, capacity);\n\n  forEach(iterable, function(value, key) {\n    cache.set(key, value);\n  });\n\n  return cache;\n};\n\n/**\n * Exporting.\n */\nmodule.exports = LRUCache;\n","/**\n * Mnemonist Iterable Function\n * ============================\n *\n * Harmonized iteration helpers over mixed iterable targets.\n */\nvar forEach = require('obliterator/foreach');\n\nvar typed = require('./typed-arrays.js');\n\n/**\n * Function used to determine whether the given object supports array-like\n * random access.\n *\n * @param  {any} target - Target object.\n * @return {boolean}\n */\nfunction isArrayLike(target) {\n  return Array.isArray(target) || typed.isTypedArray(target);\n}\n\n/**\n * Function used to guess the length of the structure over which we are going\n * to iterate.\n *\n * @param  {any} target - Target object.\n * @return {number|undefined}\n */\nfunction guessLength(target) {\n  if (typeof target.length === 'number')\n    return target.length;\n\n  if (typeof target.size === 'number')\n    return target.size;\n\n  return;\n}\n\n/**\n * Function used to convert an iterable to an array.\n *\n * @param  {any}   target - Iteration target.\n * @return {array}\n */\nfunction toArray(target) {\n  var l = guessLength(target);\n\n  var array = typeof l === 'number' ? new Array(l) : [];\n\n  var i = 0;\n\n  // TODO: we could optimize when given target is array like\n  forEach(target, function(value) {\n    array[i++] = value;\n  });\n\n  return array;\n}\n\n/**\n * Same as above but returns a supplementary indices array.\n *\n * @param  {any}   target - Iteration target.\n * @return {array}\n */\nfunction toArrayWithIndices(target) {\n  var l = guessLength(target);\n\n  var IndexArray = typeof l === 'number' ?\n    typed.getPointerArray(l) :\n    Array;\n\n  var array = typeof l === 'number' ? new Array(l) : [];\n  var indices = typeof l === 'number' ? new IndexArray(l) : [];\n\n  var i = 0;\n\n  // TODO: we could optimize when given target is array like\n  forEach(target, function(value) {\n    array[i] = value;\n    indices[i] = i++;\n  });\n\n  return [array, indices];\n}\n\n/**\n * Exporting.\n */\nexports.isArrayLike = isArrayLike;\nexports.guessLength = guessLength;\nexports.toArray = toArray;\nexports.toArrayWithIndices = toArrayWithIndices;\n","/**\n * Mnemonist Typed Array Helpers\n * ==============================\n *\n * Miscellaneous helpers related to typed arrays.\n */\n\n/**\n * When using an unsigned integer array to store pointers, one might want to\n * choose the optimal word size in regards to the actual numbers of pointers\n * to store.\n *\n * This helpers does just that.\n *\n * @param  {number} size - Expected size of the array to map.\n * @return {TypedArray}\n */\nvar MAX_8BIT_INTEGER = Math.pow(2, 8) - 1,\n    MAX_16BIT_INTEGER = Math.pow(2, 16) - 1,\n    MAX_32BIT_INTEGER = Math.pow(2, 32) - 1;\n\nvar MAX_SIGNED_8BIT_INTEGER = Math.pow(2, 7) - 1,\n    MAX_SIGNED_16BIT_INTEGER = Math.pow(2, 15) - 1,\n    MAX_SIGNED_32BIT_INTEGER = Math.pow(2, 31) - 1;\n\nexports.getPointerArray = function(size) {\n  var maxIndex = size - 1;\n\n  if (maxIndex <= MAX_8BIT_INTEGER)\n    return Uint8Array;\n\n  if (maxIndex <= MAX_16BIT_INTEGER)\n    return Uint16Array;\n\n  if (maxIndex <= MAX_32BIT_INTEGER)\n    return Uint32Array;\n\n  return Float64Array;\n};\n\nexports.getSignedPointerArray = function(size) {\n  var maxIndex = size - 1;\n\n  if (maxIndex <= MAX_SIGNED_8BIT_INTEGER)\n    return Int8Array;\n\n  if (maxIndex <= MAX_SIGNED_16BIT_INTEGER)\n    return Int16Array;\n\n  if (maxIndex <= MAX_SIGNED_32BIT_INTEGER)\n    return Int32Array;\n\n  return Float64Array;\n};\n\n/**\n * Function returning the minimal type able to represent the given number.\n *\n * @param  {number} value - Value to test.\n * @return {TypedArrayClass}\n */\nexports.getNumberType = function(value) {\n\n  // <= 32 bits itnteger?\n  if (value === (value | 0)) {\n\n    // Negative\n    if (Math.sign(value) === -1) {\n      if (value <= 127 && value >= -128)\n        return Int8Array;\n\n      if (value <= 32767 && value >= -32768)\n        return Int16Array;\n\n      return Int32Array;\n    }\n    else {\n\n      if (value <= 255)\n        return Uint8Array;\n\n      if (value <= 65535)\n        return Uint16Array;\n\n      return Uint32Array;\n    }\n  }\n\n  // 53 bits integer & floats\n  // NOTE: it's kinda hard to tell whether we could use 32bits or not...\n  return Float64Array;\n};\n\n/**\n * Function returning the minimal type able to represent the given array\n * of JavaScript numbers.\n *\n * @param  {array}    array  - Array to represent.\n * @param  {function} getter - Optional getter.\n * @return {TypedArrayClass}\n */\nvar TYPE_PRIORITY = {\n  Uint8Array: 1,\n  Int8Array: 2,\n  Uint16Array: 3,\n  Int16Array: 4,\n  Uint32Array: 5,\n  Int32Array: 6,\n  Float32Array: 7,\n  Float64Array: 8\n};\n\n// TODO: make this a one-shot for one value\nexports.getMinimalRepresentation = function(array, getter) {\n  var maxType = null,\n      maxPriority = 0,\n      p,\n      t,\n      v,\n      i,\n      l;\n\n  for (i = 0, l = array.length; i < l; i++) {\n    v = getter ? getter(array[i]) : array[i];\n    t = exports.getNumberType(v);\n    p = TYPE_PRIORITY[t.name];\n\n    if (p > maxPriority) {\n      maxPriority = p;\n      maxType = t;\n    }\n  }\n\n  return maxType;\n};\n\n/**\n * Function returning whether the given value is a typed array.\n *\n * @param  {any} value - Value to test.\n * @return {boolean}\n */\nexports.isTypedArray = function(value) {\n  return typeof ArrayBuffer !== 'undefined' && ArrayBuffer.isView(value);\n};\n\n/**\n * Function used to concat byte arrays.\n *\n * @param  {...ByteArray}\n * @return {ByteArray}\n */\nexports.concat = function() {\n  var length = 0,\n      i,\n      o,\n      l;\n\n  for (i = 0, l = arguments.length; i < l; i++)\n    length += arguments[i].length;\n\n  var array = new (arguments[0].constructor)(length);\n\n  for (i = 0, o = 0; i < l; i++) {\n    array.set(arguments[i], o);\n    o += arguments[i].length;\n  }\n\n  return array;\n};\n\n/**\n * Function used to initialize a byte array of indices.\n *\n * @param  {number}    length - Length of target.\n * @return {ByteArray}\n */\nexports.indices = function(length) {\n  var PointerArray = exports.getPointerArray(length);\n\n  var array = new PointerArray(length);\n\n  for (var i = 0; i < length; i++)\n    array[i] = i;\n\n  return array;\n};\n","/**\n * Obliterator ForEach Function\n * =============================\n *\n * Helper function used to easily iterate over mixed values.\n */\n\n/**\n * Constants.\n */\nvar ARRAY_BUFFER_SUPPORT = typeof ArrayBuffer !== 'undefined',\n    SYMBOL_SUPPORT = typeof Symbol !== 'undefined';\n\n/**\n * Function able to iterate over almost any iterable JS value.\n *\n * @param  {any}      iterable - Iterable value.\n * @param  {function} callback - Callback function.\n */\nfunction forEach(iterable, callback) {\n  var iterator, k, i, l, s;\n\n  if (!iterable)\n    throw new Error('obliterator/forEach: invalid iterable.');\n\n  if (typeof callback !== 'function')\n    throw new Error('obliterator/forEach: expecting a callback.');\n\n  // The target is an array or a string or function arguments\n  if (\n    Array.isArray(iterable) ||\n    (ARRAY_BUFFER_SUPPORT && ArrayBuffer.isView(iterable)) ||\n    typeof iterable === 'string' ||\n    iterable.toString() === '[object Arguments]'\n  ) {\n    for (i = 0, l = iterable.length; i < l; i++)\n      callback(iterable[i], i);\n    return;\n  }\n\n  // The target has a #.forEach method\n  if (typeof iterable.forEach === 'function') {\n    iterable.forEach(callback);\n    return;\n  }\n\n  // The target is iterable\n  if (\n    SYMBOL_SUPPORT &&\n    Symbol.iterator in iterable &&\n    typeof iterable.next !== 'function'\n  ) {\n    iterable = iterable[Symbol.iterator]();\n  }\n\n  // The target is an iterator\n  if (typeof iterable.next === 'function') {\n    iterator = iterable;\n    i = 0;\n\n    while ((s = iterator.next(), s.done !== true)) {\n      callback(s.value, i);\n      i++;\n    }\n\n    return;\n  }\n\n  // The target is a plain object\n  for (k in iterable) {\n    if (iterable.hasOwnProperty(k)) {\n      callback(iterable[k], k);\n    }\n  }\n\n  return;\n}\n\n/**\n * Same function as the above `forEach` but will yield `null` when the target\n * does not have keys.\n *\n * @param  {any}      iterable - Iterable value.\n * @param  {function} callback - Callback function.\n */\nforEach.forEachWithNullKeys = function(iterable, callback) {\n  var iterator, k, i, l, s;\n\n  if (!iterable)\n    throw new Error('obliterator/forEachWithNullKeys: invalid iterable.');\n\n  if (typeof callback !== 'function')\n    throw new Error('obliterator/forEachWithNullKeys: expecting a callback.');\n\n  // The target is an array or a string or function arguments\n  if (\n    Array.isArray(iterable) ||\n    (ARRAY_BUFFER_SUPPORT && ArrayBuffer.isView(iterable)) ||\n    typeof iterable === 'string' ||\n    iterable.toString() === '[object Arguments]'\n  ) {\n    for (i = 0, l = iterable.length; i < l; i++)\n      callback(iterable[i], null);\n    return;\n  }\n\n  // The target is a Set\n  if (iterable instanceof Set) {\n    iterable.forEach(function(value) {\n      callback(value, null);\n    });\n    return;\n  }\n\n  // The target has a #.forEach method\n  if (typeof iterable.forEach === 'function') {\n    iterable.forEach(callback);\n    return;\n  }\n\n  // The target is iterable\n  if (\n    SYMBOL_SUPPORT &&\n    Symbol.iterator in iterable &&\n    typeof iterable.next !== 'function'\n  ) {\n    iterable = iterable[Symbol.iterator]();\n  }\n\n  // The target is an iterator\n  if (typeof iterable.next === 'function') {\n    iterator = iterable;\n    i = 0;\n\n    while ((s = iterator.next(), s.done !== true)) {\n      callback(s.value, null);\n      i++;\n    }\n\n    return;\n  }\n\n  // The target is a plain object\n  for (k in iterable) {\n    if (iterable.hasOwnProperty(k)) {\n      callback(iterable[k], k);\n    }\n  }\n\n  return;\n};\n\n/**\n * Exporting.\n */\nmodule.exports = forEach;\n","/**\n * Obliterator Iterator Class\n * ===========================\n *\n * Simple class representing the library's iterators.\n */\n\n/**\n * Iterator class.\n *\n * @constructor\n * @param {function} next - Next function.\n */\nfunction Iterator(next) {\n\n  // Hiding the given function\n  Object.defineProperty(this, '_next', {\n    writable: false,\n    enumerable: false,\n    value: next\n  });\n\n  // Is the iterator complete?\n  this.done = false;\n}\n\n/**\n * Next function.\n *\n * @return {object}\n */\n// NOTE: maybe this should dropped for performance?\nIterator.prototype.next = function() {\n  if (this.done)\n    return {done: true};\n\n  var step = this._next();\n\n  if (step.done)\n    this.done = true;\n\n  return step;\n};\n\n/**\n * If symbols are supported, we add `next` to `Symbol.iterator`.\n */\nif (typeof Symbol !== 'undefined')\n  Iterator.prototype[Symbol.iterator] = function() {\n    return this;\n  };\n\n/**\n * Returning an iterator of the given values.\n *\n * @param  {any...} values - Values.\n * @return {Iterator}\n */\nIterator.of = function() {\n  var args = arguments,\n      l = args.length,\n      i = 0;\n\n  return new Iterator(function() {\n    if (i >= l)\n      return {done: true};\n\n    return {done: false, value: args[i++]};\n  });\n};\n\n/**\n * Returning an empty iterator.\n *\n * @return {Iterator}\n */\nIterator.empty = function() {\n  var iterator = new Iterator(null);\n  iterator.done = true;\n\n  return iterator;\n};\n\n/**\n * Returning whether the given value is an iterator.\n *\n * @param  {any} value - Value.\n * @return {boolean}\n */\nIterator.is = function(value) {\n  if (value instanceof Iterator)\n    return true;\n\n  return (\n    typeof value === 'object' &&\n    value !== null &&\n    typeof value.next === 'function'\n  );\n};\n\n/**\n * Exporting.\n */\nmodule.exports = Iterator;\n","const hexRegex = /^[-+]?0x[a-fA-F0-9]+$/;\nconst numRegex = /^([\\-\\+])?(0*)(\\.[0-9]+([eE]\\-?[0-9]+)?|[0-9]+(\\.[0-9]+([eE]\\-?[0-9]+)?)?)$/;\n// const octRegex = /0x[a-z0-9]+/;\n// const binRegex = /0x[a-z0-9]+/;\n\n\n//polyfill\nif (!Number.parseInt && window.parseInt) {\n    Number.parseInt = window.parseInt;\n}\nif (!Number.parseFloat && window.parseFloat) {\n    Number.parseFloat = window.parseFloat;\n}\n\n  \nconst consider = {\n    hex :  true,\n    leadingZeros: true,\n    decimalPoint: \"\\.\",\n    eNotation: true\n    //skipLike: /regex/\n};\n\nfunction toNumber(str, options = {}){\n    // const options = Object.assign({}, consider);\n    // if(opt.leadingZeros === false){\n    //     options.leadingZeros = false;\n    // }else if(opt.hex === false){\n    //     options.hex = false;\n    // }\n\n    options = Object.assign({}, consider, options );\n    if(!str || typeof str !== \"string\" ) return str;\n    \n    let trimmedStr  = str.trim();\n    // if(trimmedStr === \"0.0\") return 0;\n    // else if(trimmedStr === \"+0.0\") return 0;\n    // else if(trimmedStr === \"-0.0\") return -0;\n\n    if(options.skipLike !== undefined && options.skipLike.test(trimmedStr)) return str;\n    else if (options.hex && hexRegex.test(trimmedStr)) {\n        return Number.parseInt(trimmedStr, 16);\n    // } else if (options.parseOct && octRegex.test(str)) {\n    //     return Number.parseInt(val, 8);\n    // }else if (options.parseBin && binRegex.test(str)) {\n    //     return Number.parseInt(val, 2);\n    }else{\n        //separate negative sign, leading zeros, and rest number\n        const match = numRegex.exec(trimmedStr);\n        if(match){\n            const sign = match[1];\n            const leadingZeros = match[2];\n            let numTrimmedByZeros = trimZeros(match[3]); //complete num without leading zeros\n            //trim ending zeros for floating number\n            \n            const eNotation = match[4] || match[6];\n            if(!options.leadingZeros && leadingZeros.length > 0 && sign && trimmedStr[2] !== \".\") return str; //-0123\n            else if(!options.leadingZeros && leadingZeros.length > 0 && !sign && trimmedStr[1] !== \".\") return str; //0123\n            else{//no leading zeros or leading zeros are allowed\n                const num = Number(trimmedStr);\n                const numStr = \"\" + num;\n                if(numStr.search(/[eE]/) !== -1){ //given number is long and parsed to eNotation\n                    if(options.eNotation) return num;\n                    else return str;\n                }else if(eNotation){ //given number has enotation\n                    if(options.eNotation) return num;\n                    else return str;\n                }else if(trimmedStr.indexOf(\".\") !== -1){ //floating number\n                    // const decimalPart = match[5].substr(1);\n                    // const intPart = trimmedStr.substr(0,trimmedStr.indexOf(\".\"));\n\n                    \n                    // const p = numStr.indexOf(\".\");\n                    // const givenIntPart = numStr.substr(0,p);\n                    // const givenDecPart = numStr.substr(p+1);\n                    if(numStr === \"0\" && (numTrimmedByZeros === \"\") ) return num; //0.0\n                    else if(numStr === numTrimmedByZeros) return num; //0.456. 0.79000\n                    else if( sign && numStr === \"-\"+numTrimmedByZeros) return num;\n                    else return str;\n                }\n                \n                if(leadingZeros){\n                    // if(numTrimmedByZeros === numStr){\n                    //     if(options.leadingZeros) return num;\n                    //     else return str;\n                    // }else return str;\n                    if(numTrimmedByZeros === numStr) return num;\n                    else if(sign+numTrimmedByZeros === numStr) return num;\n                    else return str;\n                }\n\n                if(trimmedStr === numStr) return num;\n                else if(trimmedStr === sign+numStr) return num;\n                // else{\n                //     //number with +/- sign\n                //     trimmedStr.test(/[-+][0-9]);\n\n                // }\n                return str;\n            }\n            // else if(!eNotation && trimmedStr && trimmedStr !== Number(trimmedStr) ) return str;\n            \n        }else{ //non-numeric string\n            return str;\n        }\n    }\n}\n\n/**\n * \n * @param {string} numStr without leading zeros\n * @returns \n */\nfunction trimZeros(numStr){\n    if(numStr && numStr.indexOf(\".\") !== -1){//float\n        numStr = numStr.replace(/0+$/, \"\"); //remove ending zeros\n        if(numStr === \".\")  numStr = \"0\";\n        else if(numStr[0] === \".\")  numStr = \"0\"+numStr;\n        else if(numStr[numStr.length-1] === \".\")  numStr = numStr.substr(0,numStr.length-1);\n        return numStr;\n    }\n    return numStr;\n}\nmodule.exports = toNumber\n","module.exports = require('./lib/tunnel');\n","'use strict';\n\nvar net = require('net');\nvar tls = require('tls');\nvar http = require('http');\nvar https = require('https');\nvar events = require('events');\nvar assert = require('assert');\nvar util = require('util');\n\n\nexports.httpOverHttp = httpOverHttp;\nexports.httpsOverHttp = httpsOverHttp;\nexports.httpOverHttps = httpOverHttps;\nexports.httpsOverHttps = httpsOverHttps;\n\n\nfunction httpOverHttp(options) {\n  var agent = new TunnelingAgent(options);\n  agent.request = http.request;\n  return agent;\n}\n\nfunction httpsOverHttp(options) {\n  var agent = new TunnelingAgent(options);\n  agent.request = http.request;\n  agent.createSocket = createSecureSocket;\n  agent.defaultPort = 443;\n  return agent;\n}\n\nfunction httpOverHttps(options) {\n  var agent = new TunnelingAgent(options);\n  agent.request = https.request;\n  return agent;\n}\n\nfunction httpsOverHttps(options) {\n  var agent = new TunnelingAgent(options);\n  agent.request = https.request;\n  agent.createSocket = createSecureSocket;\n  agent.defaultPort = 443;\n  return agent;\n}\n\n\nfunction TunnelingAgent(options) {\n  var self = this;\n  self.options = options || {};\n  self.proxyOptions = self.options.proxy || {};\n  self.maxSockets = self.options.maxSockets || http.Agent.defaultMaxSockets;\n  self.requests = [];\n  self.sockets = [];\n\n  self.on('free', function onFree(socket, host, port, localAddress) {\n    var options = toOptions(host, port, localAddress);\n    for (var i = 0, len = self.requests.length; i < len; ++i) {\n      var pending = self.requests[i];\n      if (pending.host === options.host && pending.port === options.port) {\n        // Detect the request to connect same origin server,\n        // reuse the connection.\n        self.requests.splice(i, 1);\n        pending.request.onSocket(socket);\n        return;\n      }\n    }\n    socket.destroy();\n    self.removeSocket(socket);\n  });\n}\nutil.inherits(TunnelingAgent, events.EventEmitter);\n\nTunnelingAgent.prototype.addRequest = function addRequest(req, host, port, localAddress) {\n  var self = this;\n  var options = mergeOptions({request: req}, self.options, toOptions(host, port, localAddress));\n\n  if (self.sockets.length >= this.maxSockets) {\n    // We are over limit so we'll add it to the queue.\n    self.requests.push(options);\n    return;\n  }\n\n  // If we are under maxSockets create a new one.\n  self.createSocket(options, function(socket) {\n    socket.on('free', onFree);\n    socket.on('close', onCloseOrRemove);\n    socket.on('agentRemove', onCloseOrRemove);\n    req.onSocket(socket);\n\n    function onFree() {\n      self.emit('free', socket, options);\n    }\n\n    function onCloseOrRemove(err) {\n      self.removeSocket(socket);\n      socket.removeListener('free', onFree);\n      socket.removeListener('close', onCloseOrRemove);\n      socket.removeListener('agentRemove', onCloseOrRemove);\n    }\n  });\n};\n\nTunnelingAgent.prototype.createSocket = function createSocket(options, cb) {\n  var self = this;\n  var placeholder = {};\n  self.sockets.push(placeholder);\n\n  var connectOptions = mergeOptions({}, self.proxyOptions, {\n    method: 'CONNECT',\n    path: options.host + ':' + options.port,\n    agent: false,\n    headers: {\n      host: options.host + ':' + options.port\n    }\n  });\n  if (options.localAddress) {\n    connectOptions.localAddress = options.localAddress;\n  }\n  if (connectOptions.proxyAuth) {\n    connectOptions.headers = connectOptions.headers || {};\n    connectOptions.headers['Proxy-Authorization'] = 'Basic ' +\n        new Buffer(connectOptions.proxyAuth).toString('base64');\n  }\n\n  debug('making CONNECT request');\n  var connectReq = self.request(connectOptions);\n  connectReq.useChunkedEncodingByDefault = false; // for v0.6\n  connectReq.once('response', onResponse); // for v0.6\n  connectReq.once('upgrade', onUpgrade);   // for v0.6\n  connectReq.once('connect', onConnect);   // for v0.7 or later\n  connectReq.once('error', onError);\n  connectReq.end();\n\n  function onResponse(res) {\n    // Very hacky. This is necessary to avoid http-parser leaks.\n    res.upgrade = true;\n  }\n\n  function onUpgrade(res, socket, head) {\n    // Hacky.\n    process.nextTick(function() {\n      onConnect(res, socket, head);\n    });\n  }\n\n  function onConnect(res, socket, head) {\n    connectReq.removeAllListeners();\n    socket.removeAllListeners();\n\n    if (res.statusCode !== 200) {\n      debug('tunneling socket could not be established, statusCode=%d',\n        res.statusCode);\n      socket.destroy();\n      var error = new Error('tunneling socket could not be established, ' +\n        'statusCode=' + res.statusCode);\n      error.code = 'ECONNRESET';\n      options.request.emit('error', error);\n      self.removeSocket(placeholder);\n      return;\n    }\n    if (head.length > 0) {\n      debug('got illegal response body from proxy');\n      socket.destroy();\n      var error = new Error('got illegal response body from proxy');\n      error.code = 'ECONNRESET';\n      options.request.emit('error', error);\n      self.removeSocket(placeholder);\n      return;\n    }\n    debug('tunneling connection has established');\n    self.sockets[self.sockets.indexOf(placeholder)] = socket;\n    return cb(socket);\n  }\n\n  function onError(cause) {\n    connectReq.removeAllListeners();\n\n    debug('tunneling socket could not be established, cause=%s\\n',\n          cause.message, cause.stack);\n    var error = new Error('tunneling socket could not be established, ' +\n                          'cause=' + cause.message);\n    error.code = 'ECONNRESET';\n    options.request.emit('error', error);\n    self.removeSocket(placeholder);\n  }\n};\n\nTunnelingAgent.prototype.removeSocket = function removeSocket(socket) {\n  var pos = this.sockets.indexOf(socket)\n  if (pos === -1) {\n    return;\n  }\n  this.sockets.splice(pos, 1);\n\n  var pending = this.requests.shift();\n  if (pending) {\n    // If we have pending requests and a socket gets closed a new one\n    // needs to be created to take over in the pool for the one that closed.\n    this.createSocket(pending, function(socket) {\n      pending.request.onSocket(socket);\n    });\n  }\n};\n\nfunction createSecureSocket(options, cb) {\n  var self = this;\n  TunnelingAgent.prototype.createSocket.call(self, options, function(socket) {\n    var hostHeader = options.request.getHeader('host');\n    var tlsOptions = mergeOptions({}, self.options, {\n      socket: socket,\n      servername: hostHeader ? hostHeader.replace(/:.*$/, '') : options.host\n    });\n\n    // 0 is dummy port for v0.6\n    var secureSocket = tls.connect(0, tlsOptions);\n    self.sockets[self.sockets.indexOf(socket)] = secureSocket;\n    cb(secureSocket);\n  });\n}\n\n\nfunction toOptions(host, port, localAddress) {\n  if (typeof host === 'string') { // since v0.10\n    return {\n      host: host,\n      port: port,\n      localAddress: localAddress\n    };\n  }\n  return host; // for v0.11 or later\n}\n\nfunction mergeOptions(target) {\n  for (var i = 1, len = arguments.length; i < len; ++i) {\n    var overrides = arguments[i];\n    if (typeof overrides === 'object') {\n      var keys = Object.keys(overrides);\n      for (var j = 0, keyLen = keys.length; j < keyLen; ++j) {\n        var k = keys[j];\n        if (overrides[k] !== undefined) {\n          target[k] = overrides[k];\n        }\n      }\n    }\n  }\n  return target;\n}\n\n\nvar debug;\nif (process.env.NODE_DEBUG && /\\btunnel\\b/.test(process.env.NODE_DEBUG)) {\n  debug = function() {\n    var args = Array.prototype.slice.call(arguments);\n    if (typeof args[0] === 'string') {\n      args[0] = 'TUNNEL: ' + args[0];\n    } else {\n      args.unshift('TUNNEL:');\n    }\n    console.error.apply(console, args);\n  }\n} else {\n  debug = function() {};\n}\nexports.debug = debug; // for test\n","import rng from './rng.js';\nimport stringify from './stringify.js'; // **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\n\nlet _nodeId;\n\nlet _clockseq; // Previous uuid creation time\n\n\nlet _lastMSecs = 0;\nlet _lastNSecs = 0; // See https://github.com/uuidjs/uuid for API details\n\nfunction v1(options, buf, offset) {\n  let i = buf && offset || 0;\n  const b = buf || new Array(16);\n  options = options || {};\n  let node = options.node || _nodeId;\n  let clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq; // node and clockseq need to be initialized to random values if they're not\n  // specified.  We do this lazily to minimize issues related to insufficient\n  // system entropy.  See #189\n\n  if (node == null || clockseq == null) {\n    const seedBytes = options.random || (options.rng || rng)();\n\n    if (node == null) {\n      // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n      node = _nodeId = [seedBytes[0] | 0x01, seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]];\n    }\n\n    if (clockseq == null) {\n      // Per 4.2.2, randomize (14 bit) clockseq\n      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;\n    }\n  } // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n\n\n  let msecs = options.msecs !== undefined ? options.msecs : Date.now(); // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n\n  let nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1; // Time since last uuid creation (in msecs)\n\n  const dt = msecs - _lastMSecs + (nsecs - _lastNSecs) / 10000; // Per 4.2.1.2, Bump clockseq on clock regression\n\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  } // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n\n\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  } // Per 4.2.1.2 Throw error if too many uuids are requested\n\n\n  if (nsecs >= 10000) {\n    throw new Error(\"uuid.v1(): Can't create more than 10M uuids/sec\");\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq; // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n\n  msecs += 12219292800000; // `time_low`\n\n  const tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff; // `time_mid`\n\n  const tmh = msecs / 0x100000000 * 10000 & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff; // `time_high_and_version`\n\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n\n  b[i++] = tmh >>> 16 & 0xff; // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n\n  b[i++] = clockseq >>> 8 | 0x80; // `clock_seq_low`\n\n  b[i++] = clockseq & 0xff; // `node`\n\n  for (let n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n\n  return buf || stringify(b);\n}\n\nexport default v1;","import validate from './validate.js';\n\nfunction parse(uuid) {\n  if (!validate(uuid)) {\n    throw TypeError('Invalid UUID');\n  }\n\n  let v;\n  const arr = new Uint8Array(16); // Parse ########-....-....-....-............\n\n  arr[0] = (v = parseInt(uuid.slice(0, 8), 16)) >>> 24;\n  arr[1] = v >>> 16 & 0xff;\n  arr[2] = v >>> 8 & 0xff;\n  arr[3] = v & 0xff; // Parse ........-####-....-....-............\n\n  arr[4] = (v = parseInt(uuid.slice(9, 13), 16)) >>> 8;\n  arr[5] = v & 0xff; // Parse ........-....-####-....-............\n\n  arr[6] = (v = parseInt(uuid.slice(14, 18), 16)) >>> 8;\n  arr[7] = v & 0xff; // Parse ........-....-....-####-............\n\n  arr[8] = (v = parseInt(uuid.slice(19, 23), 16)) >>> 8;\n  arr[9] = v & 0xff; // Parse ........-....-....-....-############\n  // (Use \"/\" to avoid 32-bit truncation when bit-shifting high-order bytes)\n\n  arr[10] = (v = parseInt(uuid.slice(24, 36), 16)) / 0x10000000000 & 0xff;\n  arr[11] = v / 0x100000000 & 0xff;\n  arr[12] = v >>> 24 & 0xff;\n  arr[13] = v >>> 16 & 0xff;\n  arr[14] = v >>> 8 & 0xff;\n  arr[15] = v & 0xff;\n  return arr;\n}\n\nexport default parse;","import stringify from './stringify.js';\nimport parse from './parse.js';\n\nfunction stringToBytes(str) {\n  str = unescape(encodeURIComponent(str)); // UTF8 escape\n\n  const bytes = [];\n\n  for (let i = 0; i < str.length; ++i) {\n    bytes.push(str.charCodeAt(i));\n  }\n\n  return bytes;\n}\n\nexport const DNS = '6ba7b810-9dad-11d1-80b4-00c04fd430c8';\nexport const URL = '6ba7b811-9dad-11d1-80b4-00c04fd430c8';\nexport default function (name, version, hashfunc) {\n  function generateUUID(value, namespace, buf, offset) {\n    if (typeof value === 'string') {\n      value = stringToBytes(value);\n    }\n\n    if (typeof namespace === 'string') {\n      namespace = parse(namespace);\n    }\n\n    if (namespace.length !== 16) {\n      throw TypeError('Namespace must be array-like (16 iterable integer values, 0-255)');\n    } // Compute hash of namespace and value, Per 4.3\n    // Future: Use spread syntax when supported on all platforms, e.g. `bytes =\n    // hashfunc([...namespace, ... value])`\n\n\n    let bytes = new Uint8Array(16 + value.length);\n    bytes.set(namespace);\n    bytes.set(value, namespace.length);\n    bytes = hashfunc(bytes);\n    bytes[6] = bytes[6] & 0x0f | version;\n    bytes[8] = bytes[8] & 0x3f | 0x80;\n\n    if (buf) {\n      offset = offset || 0;\n\n      for (let i = 0; i < 16; ++i) {\n        buf[offset + i] = bytes[i];\n      }\n\n      return buf;\n    }\n\n    return stringify(bytes);\n  } // Function#name is not settable on some platforms (#270)\n\n\n  try {\n    generateUUID.name = name; // eslint-disable-next-line no-empty\n  } catch (err) {} // For CommonJS default export support\n\n\n  generateUUID.DNS = DNS;\n  generateUUID.URL = URL;\n  return generateUUID;\n}","import crypto from 'crypto';\n\nfunction md5(bytes) {\n  if (Array.isArray(bytes)) {\n    bytes = Buffer.from(bytes);\n  } else if (typeof bytes === 'string') {\n    bytes = Buffer.from(bytes, 'utf8');\n  }\n\n  return crypto.createHash('md5').update(bytes).digest();\n}\n\nexport default md5;","import v35 from './v35.js';\nimport md5 from './md5.js';\nconst v3 = v35('v3', 0x30, md5);\nexport default v3;","import crypto from 'crypto';\n\nfunction sha1(bytes) {\n  if (Array.isArray(bytes)) {\n    bytes = Buffer.from(bytes);\n  } else if (typeof bytes === 'string') {\n    bytes = Buffer.from(bytes, 'utf8');\n  }\n\n  return crypto.createHash('sha1').update(bytes).digest();\n}\n\nexport default sha1;","import v35 from './v35.js';\nimport sha1 from './sha1.js';\nconst v5 = v35('v5', 0x50, sha1);\nexport default v5;","export default '00000000-0000-0000-0000-000000000000';","import validate from './validate.js';\n\nfunction version(uuid) {\n  if (!validate(uuid)) {\n    throw TypeError('Invalid UUID');\n  }\n\n  return parseInt(uuid.substr(14, 1), 16);\n}\n\nexport default version;","import crypto from 'crypto';\nconst rnds8Pool = new Uint8Array(256); // # of random values to pre-allocate\n\nlet poolPtr = rnds8Pool.length;\nexport default function rng() {\n  if (poolPtr > rnds8Pool.length - 16) {\n    crypto.randomFillSync(rnds8Pool);\n    poolPtr = 0;\n  }\n\n  return rnds8Pool.slice(poolPtr, poolPtr += 16);\n}","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nconst byteToHex = [];\n\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  const uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  const rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (let i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","module.exports = require(\"assert\");","module.exports = require(\"crypto\");","module.exports = require(\"events\");","module.exports = require(\"fs\");","module.exports = require(\"http\");","module.exports = require(\"https\");","module.exports = require(\"net\");","module.exports = require(\"os\");","module.exports = require(\"path\");","module.exports = require(\"tls\");","module.exports = require(\"util\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","export var SelectorType;\n(function (SelectorType) {\n    SelectorType[\"ENV\"] = \"env\";\n    SelectorType[\"CONFIG\"] = \"shared config entry\";\n})(SelectorType || (SelectorType = {}));\nexport const booleanSelector = (obj, key, type) => {\n    if (!(key in obj))\n        return undefined;\n    if (obj[key] === \"true\")\n        return true;\n    if (obj[key] === \"false\")\n        return false;\n    throw new Error(`Cannot load ${type} \"${key}\". Expected \"true\" or \"false\", got ${obj[key]}.`);\n};\n","import { booleanSelector, SelectorType } from \"@aws-sdk/util-config-provider\";\nexport const ENV_USE_DUALSTACK_ENDPOINT = \"AWS_USE_DUALSTACK_ENDPOINT\";\nexport const CONFIG_USE_DUALSTACK_ENDPOINT = \"use_dualstack_endpoint\";\nexport const DEFAULT_USE_DUALSTACK_ENDPOINT = false;\nexport const NODE_USE_DUALSTACK_ENDPOINT_CONFIG_OPTIONS = {\n    environmentVariableSelector: (env) => booleanSelector(env, ENV_USE_DUALSTACK_ENDPOINT, SelectorType.ENV),\n    configFileSelector: (profile) => booleanSelector(profile, CONFIG_USE_DUALSTACK_ENDPOINT, SelectorType.CONFIG),\n    default: false,\n};\n","import { booleanSelector, SelectorType } from \"@aws-sdk/util-config-provider\";\nexport const ENV_USE_FIPS_ENDPOINT = \"AWS_USE_FIPS_ENDPOINT\";\nexport const CONFIG_USE_FIPS_ENDPOINT = \"use_fips_endpoint\";\nexport const DEFAULT_USE_FIPS_ENDPOINT = false;\nexport const NODE_USE_FIPS_ENDPOINT_CONFIG_OPTIONS = {\n    environmentVariableSelector: (env) => booleanSelector(env, ENV_USE_FIPS_ENDPOINT, SelectorType.ENV),\n    configFileSelector: (profile) => booleanSelector(profile, CONFIG_USE_FIPS_ENDPOINT, SelectorType.CONFIG),\n    default: false,\n};\n","export const REGION_ENV_NAME = \"AWS_REGION\";\nexport const REGION_INI_NAME = \"region\";\nexport const NODE_REGION_CONFIG_OPTIONS = {\n    environmentVariableSelector: (env) => env[REGION_ENV_NAME],\n    configFileSelector: (profile) => profile[REGION_INI_NAME],\n    default: () => {\n        throw new Error(\"Region is missing\");\n    },\n};\nexport const NODE_REGION_CONFIG_FILE_OPTIONS = {\n    preferredFile: \"credentials\",\n};\n","export const isFipsRegion = (region) => typeof region === \"string\" && (region.startsWith(\"fips-\") || region.endsWith(\"-fips\"));\n","import { isFipsRegion } from \"./isFipsRegion\";\nexport const getRealRegion = (region) => isFipsRegion(region)\n    ? [\"fips-aws-global\", \"aws-fips\"].includes(region)\n        ? \"us-east-1\"\n        : region.replace(/fips-(dkr-|prod-)?|-fips/, \"\")\n    : region;\n","import { getRealRegion } from \"./getRealRegion\";\nimport { isFipsRegion } from \"./isFipsRegion\";\nexport const resolveRegionConfig = (input) => {\n    const { region, useFipsEndpoint } = input;\n    if (!region) {\n        throw new Error(\"Region is missing\");\n    }\n    return {\n        ...input,\n        region: async () => {\n            if (typeof region === \"string\") {\n                return getRealRegion(region);\n            }\n            const providedRegion = await region();\n            return getRealRegion(providedRegion);\n        },\n        useFipsEndpoint: async () => {\n            const providedRegion = typeof region === \"string\" ? region : await region();\n            if (isFipsRegion(providedRegion)) {\n                return true;\n            }\n            return typeof useFipsEndpoint !== \"function\" ? Promise.resolve(!!useFipsEndpoint) : useFipsEndpoint();\n        },\n    };\n};\n","export var FieldPosition;\n(function (FieldPosition) {\n    FieldPosition[FieldPosition[\"HEADER\"] = 0] = \"HEADER\";\n    FieldPosition[FieldPosition[\"TRAILER\"] = 1] = \"TRAILER\";\n})(FieldPosition || (FieldPosition = {}));\n","export class HttpRequest {\n    constructor(options) {\n        this.method = options.method || \"GET\";\n        this.hostname = options.hostname || \"localhost\";\n        this.port = options.port;\n        this.query = options.query || {};\n        this.headers = options.headers || {};\n        this.body = options.body;\n        this.protocol = options.protocol\n            ? options.protocol.slice(-1) !== \":\"\n                ? `${options.protocol}:`\n                : options.protocol\n            : \"https:\";\n        this.path = options.path ? (options.path.charAt(0) !== \"/\" ? `/${options.path}` : options.path) : \"/\";\n    }\n    static isInstance(request) {\n        if (!request)\n            return false;\n        const req = request;\n        return (\"method\" in req &&\n            \"protocol\" in req &&\n            \"hostname\" in req &&\n            \"path\" in req &&\n            typeof req[\"query\"] === \"object\" &&\n            typeof req[\"headers\"] === \"object\");\n    }\n    clone() {\n        const cloned = new HttpRequest({\n            ...this,\n            headers: { ...this.headers },\n        });\n        if (cloned.query)\n            cloned.query = cloneQuery(cloned.query);\n        return cloned;\n    }\n}\nfunction cloneQuery(query) {\n    return Object.keys(query).reduce((carry, paramName) => {\n        const param = query[paramName];\n        return {\n            ...carry,\n            [paramName]: Array.isArray(param) ? [...param] : param,\n        };\n    }, {});\n}\n","export class HttpResponse {\n    constructor(options) {\n        this.statusCode = options.statusCode;\n        this.headers = options.headers || {};\n        this.body = options.body;\n    }\n    static isInstance(response) {\n        if (!response)\n            return false;\n        const resp = response;\n        return typeof resp.statusCode === \"number\" && typeof resp.headers === \"object\";\n    }\n}\n","import { HttpRequest } from \"@aws-sdk/protocol-http\";\nconst CONTENT_LENGTH_HEADER = \"content-length\";\nexport function contentLengthMiddleware(bodyLengthChecker) {\n    return (next) => async (args) => {\n        const request = args.request;\n        if (HttpRequest.isInstance(request)) {\n            const { body, headers } = request;\n            if (body &&\n                Object.keys(headers)\n                    .map((str) => str.toLowerCase())\n                    .indexOf(CONTENT_LENGTH_HEADER) === -1) {\n                try {\n                    const length = bodyLengthChecker(body);\n                    request.headers = {\n                        ...request.headers,\n                        [CONTENT_LENGTH_HEADER]: String(length),\n                    };\n                }\n                catch (error) {\n                }\n            }\n        }\n        return next({\n            ...args,\n            request,\n        });\n    };\n}\nexport const contentLengthMiddlewareOptions = {\n    step: \"build\",\n    tags: [\"SET_CONTENT_LENGTH\", \"CONTENT_LENGTH\"],\n    name: \"contentLengthMiddleware\",\n    override: true,\n};\nexport const getContentLengthPlugin = (options) => ({\n    applyToStack: (clientStack) => {\n        clientStack.add(contentLengthMiddleware(options.bodyLengthChecker), contentLengthMiddlewareOptions);\n    },\n});\n","import { deserializerMiddleware } from \"./deserializerMiddleware\";\nimport { serializerMiddleware } from \"./serializerMiddleware\";\nexport const deserializerMiddlewareOption = {\n    name: \"deserializerMiddleware\",\n    step: \"deserialize\",\n    tags: [\"DESERIALIZER\"],\n    override: true,\n};\nexport const serializerMiddlewareOption = {\n    name: \"serializerMiddleware\",\n    step: \"serialize\",\n    tags: [\"SERIALIZER\"],\n    override: true,\n};\nexport function getSerdePlugin(config, serializer, deserializer) {\n    return {\n        applyToStack: (commandStack) => {\n            commandStack.add(deserializerMiddleware(config, deserializer), deserializerMiddlewareOption);\n            commandStack.add(serializerMiddleware(config, serializer), serializerMiddlewareOption);\n        },\n    };\n}\n","export const deserializerMiddleware = (options, deserializer) => (next, context) => async (args) => {\n    const { response } = await next(args);\n    try {\n        const parsed = await deserializer(response, options);\n        return {\n            response,\n            output: parsed,\n        };\n    }\n    catch (error) {\n        Object.defineProperty(error, \"$response\", {\n            value: response,\n        });\n        if (!('$metadata' in error)) {\n            const hint = `Deserialization error: to see the raw response, inspect the hidden field {error}.$response on this object.`;\n            error.message += \"\\n  \" + hint;\n        }\n        throw error;\n    }\n};\n","export const serializerMiddleware = (options, serializer) => (next, context) => async (args) => {\n    const endpoint = context.endpointV2?.url && options.urlParser\n        ? async () => options.urlParser(context.endpointV2.url)\n        : options.endpoint;\n    if (!endpoint) {\n        throw new Error(\"No valid endpoint provider available.\");\n    }\n    const request = await serializer(args.input, { ...options, endpoint });\n    return next({\n        ...args,\n        request,\n    });\n};\n","export const resolveParamsForS3 = async (endpointParams) => {\n    const bucket = endpointParams?.Bucket || \"\";\n    if (typeof endpointParams.Bucket === \"string\") {\n        endpointParams.Bucket = bucket.replace(/#/g, encodeURIComponent(\"#\")).replace(/\\?/g, encodeURIComponent(\"?\"));\n    }\n    if (isArnBucketName(bucket)) {\n        if (endpointParams.ForcePathStyle === true) {\n            throw new Error(\"Path-style addressing cannot be used with ARN buckets\");\n        }\n    }\n    else if (!isDnsCompatibleBucketName(bucket) ||\n        (bucket.indexOf(\".\") !== -1 && !String(endpointParams.Endpoint).startsWith(\"http:\")) ||\n        bucket.toLowerCase() !== bucket ||\n        bucket.length < 3) {\n        endpointParams.ForcePathStyle = true;\n    }\n    if (endpointParams.DisableMultiRegionAccessPoints) {\n        endpointParams.disableMultiRegionAccessPoints = true;\n        endpointParams.DisableMRAP = true;\n    }\n    return endpointParams;\n};\nconst DOMAIN_PATTERN = /^[a-z0-9][a-z0-9\\.\\-]{1,61}[a-z0-9]$/;\nconst IP_ADDRESS_PATTERN = /(\\d+\\.){3}\\d+/;\nconst DOTS_PATTERN = /\\.\\./;\nexport const DOT_PATTERN = /\\./;\nexport const S3_HOSTNAME_PATTERN = /^(.+\\.)?s3(-fips)?(\\.dualstack)?[.-]([a-z0-9-]+)\\./;\nexport const isDnsCompatibleBucketName = (bucketName) => DOMAIN_PATTERN.test(bucketName) && !IP_ADDRESS_PATTERN.test(bucketName) && !DOTS_PATTERN.test(bucketName);\nexport const isArnBucketName = (bucketName) => {\n    const [arn, partition, service, region, account, typeOrId] = bucketName.split(\":\");\n    const isArn = arn === \"arn\" && bucketName.split(\":\").length >= 6;\n    const isValidArn = [arn, partition, service, account, typeOrId].filter(Boolean).length === 5;\n    if (isArn && !isValidArn) {\n        throw new Error(`Invalid ARN: ${bucketName} was an invalid ARN.`);\n    }\n    return arn === \"arn\" && !!partition && !!service && !!account && !!typeOrId;\n};\n","export const createConfigValueProvider = (configKey, canonicalEndpointParamKey, config) => {\n    const configProvider = async () => {\n        const configValue = config[configKey] ?? config[canonicalEndpointParamKey];\n        if (typeof configValue === \"function\") {\n            return configValue();\n        }\n        return configValue;\n    };\n    if (configKey === \"endpoint\" || canonicalEndpointParamKey === \"endpoint\") {\n        return async () => {\n            const endpoint = await configProvider();\n            if (endpoint && typeof endpoint === \"object\") {\n                if (\"url\" in endpoint) {\n                    return endpoint.url.href;\n                }\n                if (\"hostname\" in endpoint) {\n                    const { protocol, hostname, port, path } = endpoint;\n                    return `${protocol}//${hostname}${port ? \":\" + port : \"\"}${path}`;\n                }\n            }\n            return endpoint;\n        };\n    }\n    return configProvider;\n};\n","import { resolveParamsForS3 } from \"../service-customizations\";\nimport { createConfigValueProvider } from \"./createConfigValueProvider\";\nexport const getEndpointFromInstructions = async (commandInput, instructionsSupplier, clientConfig, context) => {\n    const endpointParams = await resolveParams(commandInput, instructionsSupplier, clientConfig);\n    if (typeof clientConfig.endpointProvider !== \"function\") {\n        throw new Error(\"config.endpointProvider is not set.\");\n    }\n    const endpoint = clientConfig.endpointProvider(endpointParams, context);\n    return endpoint;\n};\nexport const resolveParams = async (commandInput, instructionsSupplier, clientConfig) => {\n    const endpointParams = {};\n    const instructions = instructionsSupplier?.getEndpointParameterInstructions?.() || {};\n    for (const [name, instruction] of Object.entries(instructions)) {\n        switch (instruction.type) {\n            case \"staticContextParams\":\n                endpointParams[name] = instruction.value;\n                break;\n            case \"contextParams\":\n                endpointParams[name] = commandInput[instruction.name];\n                break;\n            case \"clientContextParams\":\n            case \"builtInParams\":\n                endpointParams[name] = await createConfigValueProvider(instruction.name, name, clientConfig)();\n                break;\n            default:\n                throw new Error(\"Unrecognized endpoint parameter instruction: \" + JSON.stringify(instruction));\n        }\n    }\n    if (Object.keys(instructions).length === 0) {\n        Object.assign(endpointParams, clientConfig);\n    }\n    if (String(clientConfig.serviceId).toLowerCase() === \"s3\") {\n        await resolveParamsForS3(endpointParams);\n    }\n    return endpointParams;\n};\n","import { getEndpointFromInstructions } from \"./adaptors/getEndpointFromInstructions\";\nexport const endpointMiddleware = ({ config, instructions, }) => {\n    return (next, context) => async (args) => {\n        const endpoint = await getEndpointFromInstructions(args.input, {\n            getEndpointParameterInstructions() {\n                return instructions;\n            },\n        }, { ...config }, context);\n        context.endpointV2 = endpoint;\n        context.authSchemes = endpoint.properties?.authSchemes;\n        const authScheme = context.authSchemes?.[0];\n        if (authScheme) {\n            context[\"signing_region\"] = authScheme.signingRegion;\n            context[\"signing_service\"] = authScheme.signingName;\n        }\n        return next({\n            ...args,\n        });\n    };\n};\n","import { serializerMiddlewareOption } from \"@aws-sdk/middleware-serde\";\nimport { endpointMiddleware } from \"./endpointMiddleware\";\nexport const endpointMiddlewareOptions = {\n    step: \"serialize\",\n    tags: [\"ENDPOINT_PARAMETERS\", \"ENDPOINT_V2\", \"ENDPOINT\"],\n    name: \"endpointV2Middleware\",\n    override: true,\n    relation: \"before\",\n    toMiddleware: serializerMiddlewareOption.name,\n};\nexport const getEndpointPlugin = (config, instructions) => ({\n    applyToStack: (clientStack) => {\n        clientStack.addRelativeTo(endpointMiddleware({\n            config,\n            instructions,\n        }), endpointMiddlewareOptions);\n    },\n});\n","export const normalizeProvider = (input) => {\n    if (typeof input === \"function\")\n        return input;\n    const promisified = Promise.resolve(input);\n    return () => promisified;\n};\n","import { parseQueryString } from \"@aws-sdk/querystring-parser\";\nexport const parseUrl = (url) => {\n    if (typeof url === \"string\") {\n        return parseUrl(new URL(url));\n    }\n    const { hostname, pathname, port, protocol, search } = url;\n    let query;\n    if (search) {\n        query = parseQueryString(search);\n    }\n    return {\n        hostname,\n        port: port ? parseInt(port) : undefined,\n        protocol,\n        path: pathname,\n        query,\n    };\n};\n","export function parseQueryString(querystring) {\n    const query = {};\n    querystring = querystring.replace(/^\\?/, \"\");\n    if (querystring) {\n        for (const pair of querystring.split(\"&\")) {\n            let [key, value = null] = pair.split(\"=\");\n            key = decodeURIComponent(key);\n            if (value) {\n                value = decodeURIComponent(value);\n            }\n            if (!(key in query)) {\n                query[key] = value;\n            }\n            else if (Array.isArray(query[key])) {\n                query[key].push(value);\n            }\n            else {\n                query[key] = [query[key], value];\n            }\n        }\n    }\n    return query;\n}\n","import { normalizeProvider } from \"@aws-sdk/util-middleware\";\nimport { toEndpointV1 } from \"./adaptors/toEndpointV1\";\nexport const resolveEndpointConfig = (input) => {\n    const tls = input.tls ?? true;\n    const { endpoint } = input;\n    const customEndpointProvider = endpoint != null ? async () => toEndpointV1(await normalizeProvider(endpoint)()) : undefined;\n    const isCustomEndpoint = !!endpoint;\n    return {\n        ...input,\n        endpoint: customEndpointProvider,\n        tls,\n        isCustomEndpoint,\n        useDualstackEndpoint: normalizeProvider(input.useDualstackEndpoint ?? false),\n        useFipsEndpoint: normalizeProvider(input.useFipsEndpoint ?? false),\n    };\n};\n","import { parseUrl } from \"@aws-sdk/url-parser\";\nexport const toEndpointV1 = (endpoint) => {\n    if (typeof endpoint === \"object\") {\n        if (\"url\" in endpoint) {\n            return parseUrl(endpoint.url);\n        }\n        return endpoint;\n    }\n    return parseUrl(endpoint);\n};\n","const ENV_ENDPOINT_DISCOVERY = [\"AWS_ENABLE_ENDPOINT_DISCOVERY\", \"AWS_ENDPOINT_DISCOVERY_ENABLED\"];\nconst CONFIG_ENDPOINT_DISCOVERY = \"endpoint_discovery_enabled\";\nconst isFalsy = (value) => [\"false\", \"0\"].indexOf(value) >= 0;\nexport const NODE_ENDPOINT_DISCOVERY_CONFIG_OPTIONS = {\n    environmentVariableSelector: (env) => {\n        for (let i = 0; i < ENV_ENDPOINT_DISCOVERY.length; i++) {\n            const envKey = ENV_ENDPOINT_DISCOVERY[i];\n            if (envKey in env) {\n                const value = env[envKey];\n                if (value === \"\") {\n                    throw Error(`Environment variable ${envKey} can't be empty of undefined, got \"${value}\"`);\n                }\n                return !isFalsy(value);\n            }\n        }\n    },\n    configFileSelector: (profile) => {\n        if (CONFIG_ENDPOINT_DISCOVERY in profile) {\n            const value = profile[CONFIG_ENDPOINT_DISCOVERY];\n            if (value === undefined) {\n                throw Error(`Shared config entry ${CONFIG_ENDPOINT_DISCOVERY} can't be undefined, got \"${value}\"`);\n            }\n            return !isFalsy(value);\n        }\n    },\n    default: undefined,\n};\n","import LRUCache from \"mnemonist/lru-cache\";\nexport class EndpointCache {\n    constructor(capacity) {\n        this.cache = new LRUCache(capacity);\n    }\n    getEndpoint(key) {\n        const endpointsWithExpiry = this.get(key);\n        if (!endpointsWithExpiry || endpointsWithExpiry.length === 0) {\n            return undefined;\n        }\n        const endpoints = endpointsWithExpiry.map((endpoint) => endpoint.Address);\n        return endpoints[Math.floor(Math.random() * endpoints.length)];\n    }\n    get(key) {\n        if (!this.has(key)) {\n            return;\n        }\n        const value = this.cache.get(key);\n        if (!value) {\n            return;\n        }\n        const now = Date.now();\n        const endpointsWithExpiry = value.filter((endpoint) => now < endpoint.Expires);\n        if (endpointsWithExpiry.length === 0) {\n            this.delete(key);\n            return undefined;\n        }\n        return endpointsWithExpiry;\n    }\n    set(key, endpoints) {\n        const now = Date.now();\n        this.cache.set(key, endpoints.map(({ Address, CachePeriodInMinutes }) => ({\n            Address,\n            Expires: now + CachePeriodInMinutes * 60 * 1000,\n        })));\n    }\n    delete(key) {\n        this.cache.set(key, []);\n    }\n    has(key) {\n        if (!this.cache.has(key)) {\n            return false;\n        }\n        const endpoints = this.cache.peek(key);\n        if (!endpoints) {\n            return false;\n        }\n        return endpoints.length > 0;\n    }\n    clear() {\n        this.cache.clear();\n    }\n}\n","import { HttpRequest } from \"@aws-sdk/protocol-http\";\nexport function resolveHostHeaderConfig(input) {\n    return input;\n}\nexport const hostHeaderMiddleware = (options) => (next) => async (args) => {\n    if (!HttpRequest.isInstance(args.request))\n        return next(args);\n    const { request } = args;\n    const { handlerProtocol = \"\" } = options.requestHandler.metadata || {};\n    if (handlerProtocol.indexOf(\"h2\") >= 0 && !request.headers[\":authority\"]) {\n        delete request.headers[\"host\"];\n        request.headers[\":authority\"] = \"\";\n    }\n    else if (!request.headers[\"host\"]) {\n        let host = request.hostname;\n        if (request.port != null)\n            host += `:${request.port}`;\n        request.headers[\"host\"] = host;\n    }\n    return next(args);\n};\nexport const hostHeaderMiddlewareOptions = {\n    name: \"hostHeaderMiddleware\",\n    step: \"build\",\n    priority: \"low\",\n    tags: [\"HOST\"],\n    override: true,\n};\nexport const getHostHeaderPlugin = (options) => ({\n    applyToStack: (clientStack) => {\n        clientStack.add(hostHeaderMiddleware(options), hostHeaderMiddlewareOptions);\n    },\n});\n","export const loggerMiddleware = () => (next, context) => async (args) => {\n    try {\n        const response = await next(args);\n        const { clientName, commandName, logger, dynamoDbDocumentClientOptions = {} } = context;\n        const { overrideInputFilterSensitiveLog, overrideOutputFilterSensitiveLog } = dynamoDbDocumentClientOptions;\n        const inputFilterSensitiveLog = overrideInputFilterSensitiveLog ?? context.inputFilterSensitiveLog;\n        const outputFilterSensitiveLog = overrideOutputFilterSensitiveLog ?? context.outputFilterSensitiveLog;\n        const { $metadata, ...outputWithoutMetadata } = response.output;\n        logger?.info?.({\n            clientName,\n            commandName,\n            input: inputFilterSensitiveLog(args.input),\n            output: outputFilterSensitiveLog(outputWithoutMetadata),\n            metadata: $metadata,\n        });\n        return response;\n    }\n    catch (error) {\n        const { clientName, commandName, logger, dynamoDbDocumentClientOptions = {} } = context;\n        const { overrideInputFilterSensitiveLog } = dynamoDbDocumentClientOptions;\n        const inputFilterSensitiveLog = overrideInputFilterSensitiveLog ?? context.inputFilterSensitiveLog;\n        logger?.error?.({\n            clientName,\n            commandName,\n            input: inputFilterSensitiveLog(args.input),\n            error,\n            metadata: error.$metadata,\n        });\n        throw error;\n    }\n};\nexport const loggerMiddlewareOptions = {\n    name: \"loggerMiddleware\",\n    tags: [\"LOGGER\"],\n    step: \"initialize\",\n    override: true,\n};\nexport const getLoggerPlugin = (options) => ({\n    applyToStack: (clientStack) => {\n        clientStack.add(loggerMiddleware(), loggerMiddlewareOptions);\n    },\n});\n","import { HttpRequest } from \"@aws-sdk/protocol-http\";\nconst TRACE_ID_HEADER_NAME = \"X-Amzn-Trace-Id\";\nconst ENV_LAMBDA_FUNCTION_NAME = \"AWS_LAMBDA_FUNCTION_NAME\";\nconst ENV_TRACE_ID = \"_X_AMZN_TRACE_ID\";\nexport const recursionDetectionMiddleware = (options) => (next) => async (args) => {\n    const { request } = args;\n    if (!HttpRequest.isInstance(request) ||\n        options.runtime !== \"node\" ||\n        request.headers.hasOwnProperty(TRACE_ID_HEADER_NAME)) {\n        return next(args);\n    }\n    const functionName = process.env[ENV_LAMBDA_FUNCTION_NAME];\n    const traceId = process.env[ENV_TRACE_ID];\n    const nonEmptyString = (str) => typeof str === \"string\" && str.length > 0;\n    if (nonEmptyString(functionName) && nonEmptyString(traceId)) {\n        request.headers[TRACE_ID_HEADER_NAME] = traceId;\n    }\n    return next({\n        ...args,\n        request,\n    });\n};\nexport const addRecursionDetectionMiddlewareOptions = {\n    step: \"build\",\n    tags: [\"RECURSION_DETECTION\"],\n    name: \"recursionDetectionMiddleware\",\n    override: true,\n    priority: \"low\",\n};\nexport const getRecursionDetectionPlugin = (options) => ({\n    applyToStack: (clientStack) => {\n        clientStack.add(recursionDetectionMiddleware(options), addRecursionDetectionMiddlewareOptions);\n    },\n});\n","export var RETRY_MODES;\n(function (RETRY_MODES) {\n    RETRY_MODES[\"STANDARD\"] = \"standard\";\n    RETRY_MODES[\"ADAPTIVE\"] = \"adaptive\";\n})(RETRY_MODES || (RETRY_MODES = {}));\nexport const DEFAULT_MAX_ATTEMPTS = 3;\nexport const DEFAULT_RETRY_MODE = RETRY_MODES.STANDARD;\n","export const CLOCK_SKEW_ERROR_CODES = [\n    \"AuthFailure\",\n    \"InvalidSignatureException\",\n    \"RequestExpired\",\n    \"RequestInTheFuture\",\n    \"RequestTimeTooSkewed\",\n    \"SignatureDoesNotMatch\",\n];\nexport const THROTTLING_ERROR_CODES = [\n    \"BandwidthLimitExceeded\",\n    \"EC2ThrottledException\",\n    \"LimitExceededException\",\n    \"PriorRequestNotComplete\",\n    \"ProvisionedThroughputExceededException\",\n    \"RequestLimitExceeded\",\n    \"RequestThrottled\",\n    \"RequestThrottledException\",\n    \"SlowDown\",\n    \"ThrottledException\",\n    \"Throttling\",\n    \"ThrottlingException\",\n    \"TooManyRequestsException\",\n    \"TransactionInProgressException\",\n];\nexport const TRANSIENT_ERROR_CODES = [\"AbortError\", \"TimeoutError\", \"RequestTimeout\", \"RequestTimeoutException\"];\nexport const TRANSIENT_ERROR_STATUS_CODES = [500, 502, 503, 504];\nexport const NODEJS_TIMEOUT_ERROR_CODES = [\"ECONNRESET\", \"ECONNREFUSED\", \"EPIPE\", \"ETIMEDOUT\"];\n","import { CLOCK_SKEW_ERROR_CODES, NODEJS_TIMEOUT_ERROR_CODES, THROTTLING_ERROR_CODES, TRANSIENT_ERROR_CODES, TRANSIENT_ERROR_STATUS_CODES, } from \"./constants\";\nexport const isRetryableByTrait = (error) => error.$retryable !== undefined;\nexport const isClockSkewError = (error) => CLOCK_SKEW_ERROR_CODES.includes(error.name);\nexport const isThrottlingError = (error) => error.$metadata?.httpStatusCode === 429 ||\n    THROTTLING_ERROR_CODES.includes(error.name) ||\n    error.$retryable?.throttling == true;\nexport const isTransientError = (error) => TRANSIENT_ERROR_CODES.includes(error.name) ||\n    NODEJS_TIMEOUT_ERROR_CODES.includes(error?.code || \"\") ||\n    TRANSIENT_ERROR_STATUS_CODES.includes(error.$metadata?.httpStatusCode || 0);\nexport const isServerError = (error) => {\n    if (error.$metadata?.httpStatusCode !== undefined) {\n        const statusCode = error.$metadata.httpStatusCode;\n        if (500 <= statusCode && statusCode <= 599 && !isTransientError(error)) {\n            return true;\n        }\n        return false;\n    }\n    return false;\n};\n","import { isThrottlingError } from \"@aws-sdk/service-error-classification\";\nexport class DefaultRateLimiter {\n    constructor(options) {\n        this.currentCapacity = 0;\n        this.enabled = false;\n        this.lastMaxRate = 0;\n        this.measuredTxRate = 0;\n        this.requestCount = 0;\n        this.lastTimestamp = 0;\n        this.timeWindow = 0;\n        this.beta = options?.beta ?? 0.7;\n        this.minCapacity = options?.minCapacity ?? 1;\n        this.minFillRate = options?.minFillRate ?? 0.5;\n        this.scaleConstant = options?.scaleConstant ?? 0.4;\n        this.smooth = options?.smooth ?? 0.8;\n        const currentTimeInSeconds = this.getCurrentTimeInSeconds();\n        this.lastThrottleTime = currentTimeInSeconds;\n        this.lastTxRateBucket = Math.floor(this.getCurrentTimeInSeconds());\n        this.fillRate = this.minFillRate;\n        this.maxCapacity = this.minCapacity;\n    }\n    getCurrentTimeInSeconds() {\n        return Date.now() / 1000;\n    }\n    async getSendToken() {\n        return this.acquireTokenBucket(1);\n    }\n    async acquireTokenBucket(amount) {\n        if (!this.enabled) {\n            return;\n        }\n        this.refillTokenBucket();\n        if (amount > this.currentCapacity) {\n            const delay = ((amount - this.currentCapacity) / this.fillRate) * 1000;\n            await new Promise((resolve) => setTimeout(resolve, delay));\n        }\n        this.currentCapacity = this.currentCapacity - amount;\n    }\n    refillTokenBucket() {\n        const timestamp = this.getCurrentTimeInSeconds();\n        if (!this.lastTimestamp) {\n            this.lastTimestamp = timestamp;\n            return;\n        }\n        const fillAmount = (timestamp - this.lastTimestamp) * this.fillRate;\n        this.currentCapacity = Math.min(this.maxCapacity, this.currentCapacity + fillAmount);\n        this.lastTimestamp = timestamp;\n    }\n    updateClientSendingRate(response) {\n        let calculatedRate;\n        this.updateMeasuredRate();\n        if (isThrottlingError(response)) {\n            const rateToUse = !this.enabled ? this.measuredTxRate : Math.min(this.measuredTxRate, this.fillRate);\n            this.lastMaxRate = rateToUse;\n            this.calculateTimeWindow();\n            this.lastThrottleTime = this.getCurrentTimeInSeconds();\n            calculatedRate = this.cubicThrottle(rateToUse);\n            this.enableTokenBucket();\n        }\n        else {\n            this.calculateTimeWindow();\n            calculatedRate = this.cubicSuccess(this.getCurrentTimeInSeconds());\n        }\n        const newRate = Math.min(calculatedRate, 2 * this.measuredTxRate);\n        this.updateTokenBucketRate(newRate);\n    }\n    calculateTimeWindow() {\n        this.timeWindow = this.getPrecise(Math.pow((this.lastMaxRate * (1 - this.beta)) / this.scaleConstant, 1 / 3));\n    }\n    cubicThrottle(rateToUse) {\n        return this.getPrecise(rateToUse * this.beta);\n    }\n    cubicSuccess(timestamp) {\n        return this.getPrecise(this.scaleConstant * Math.pow(timestamp - this.lastThrottleTime - this.timeWindow, 3) + this.lastMaxRate);\n    }\n    enableTokenBucket() {\n        this.enabled = true;\n    }\n    updateTokenBucketRate(newRate) {\n        this.refillTokenBucket();\n        this.fillRate = Math.max(newRate, this.minFillRate);\n        this.maxCapacity = Math.max(newRate, this.minCapacity);\n        this.currentCapacity = Math.min(this.currentCapacity, this.maxCapacity);\n    }\n    updateMeasuredRate() {\n        const t = this.getCurrentTimeInSeconds();\n        const timeBucket = Math.floor(t * 2) / 2;\n        this.requestCount++;\n        if (timeBucket > this.lastTxRateBucket) {\n            const currentRate = this.requestCount / (timeBucket - this.lastTxRateBucket);\n            this.measuredTxRate = this.getPrecise(currentRate * this.smooth + this.measuredTxRate * (1 - this.smooth));\n            this.requestCount = 0;\n            this.lastTxRateBucket = timeBucket;\n        }\n    }\n    getPrecise(num) {\n        return parseFloat(num.toFixed(8));\n    }\n}\n","export const DEFAULT_RETRY_DELAY_BASE = 100;\nexport const MAXIMUM_RETRY_DELAY = 20 * 1000;\nexport const THROTTLING_RETRY_DELAY_BASE = 500;\nexport const INITIAL_RETRY_TOKENS = 500;\nexport const RETRY_COST = 5;\nexport const TIMEOUT_RETRY_COST = 10;\nexport const NO_RETRY_INCREMENT = 1;\nexport const INVOCATION_ID_HEADER = \"amz-sdk-invocation-id\";\nexport const REQUEST_HEADER = \"amz-sdk-request\";\n","import { DEFAULT_RETRY_DELAY_BASE, MAXIMUM_RETRY_DELAY, NO_RETRY_INCREMENT, RETRY_COST, THROTTLING_RETRY_DELAY_BASE, TIMEOUT_RETRY_COST, } from \"./constants\";\nimport { getDefaultRetryBackoffStrategy } from \"./defaultRetryBackoffStrategy\";\nexport const getDefaultRetryToken = (initialRetryTokens, initialRetryDelay, initialRetryCount, options) => {\n    const MAX_CAPACITY = initialRetryTokens;\n    const retryCost = options?.retryCost ?? RETRY_COST;\n    const timeoutRetryCost = options?.timeoutRetryCost ?? TIMEOUT_RETRY_COST;\n    const retryBackoffStrategy = options?.retryBackoffStrategy ?? getDefaultRetryBackoffStrategy();\n    let availableCapacity = initialRetryTokens;\n    let retryDelay = Math.min(MAXIMUM_RETRY_DELAY, initialRetryDelay);\n    let lastRetryCost = undefined;\n    let retryCount = initialRetryCount ?? 0;\n    const getCapacityAmount = (errorType) => (errorType === \"TRANSIENT\" ? timeoutRetryCost : retryCost);\n    const getRetryCount = () => retryCount;\n    const getRetryDelay = () => retryDelay;\n    const getLastRetryCost = () => lastRetryCost;\n    const hasRetryTokens = (errorType) => getCapacityAmount(errorType) <= availableCapacity;\n    const getRetryTokenCount = (errorInfo) => {\n        const errorType = errorInfo.errorType;\n        if (!hasRetryTokens(errorType)) {\n            throw new Error(\"No retry token available\");\n        }\n        const capacityAmount = getCapacityAmount(errorType);\n        const delayBase = errorType === \"THROTTLING\" ? THROTTLING_RETRY_DELAY_BASE : DEFAULT_RETRY_DELAY_BASE;\n        retryBackoffStrategy.setDelayBase(delayBase);\n        const delayFromErrorType = retryBackoffStrategy.computeNextBackoffDelay(retryCount);\n        if (errorInfo.retryAfterHint) {\n            const delayFromRetryAfterHint = errorInfo.retryAfterHint.getTime() - Date.now();\n            retryDelay = Math.max(delayFromRetryAfterHint || 0, delayFromErrorType);\n        }\n        else {\n            retryDelay = delayFromErrorType;\n        }\n        retryCount++;\n        lastRetryCost = capacityAmount;\n        availableCapacity -= capacityAmount;\n        return capacityAmount;\n    };\n    const releaseRetryTokens = (releaseAmount) => {\n        availableCapacity += releaseAmount ?? NO_RETRY_INCREMENT;\n        availableCapacity = Math.min(availableCapacity, MAX_CAPACITY);\n    };\n    return {\n        getRetryCount,\n        getRetryDelay,\n        getLastRetryCost,\n        hasRetryTokens,\n        getRetryTokenCount,\n        releaseRetryTokens,\n    };\n};\n","import { DEFAULT_RETRY_DELAY_BASE, MAXIMUM_RETRY_DELAY } from \"./constants\";\nexport const getDefaultRetryBackoffStrategy = () => {\n    let delayBase = DEFAULT_RETRY_DELAY_BASE;\n    const computeNextBackoffDelay = (attempts) => {\n        return Math.floor(Math.min(MAXIMUM_RETRY_DELAY, Math.random() * 2 ** attempts * delayBase));\n    };\n    const setDelayBase = (delay) => {\n        delayBase = delay;\n    };\n    return {\n        computeNextBackoffDelay,\n        setDelayBase,\n    };\n};\n","import { DEFAULT_MAX_ATTEMPTS, RETRY_MODES } from \"./config\";\nimport { DEFAULT_RETRY_DELAY_BASE, INITIAL_RETRY_TOKENS } from \"./constants\";\nimport { getDefaultRetryToken } from \"./defaultRetryToken\";\nexport class StandardRetryStrategy {\n    constructor(maxAttempts) {\n        this.maxAttempts = maxAttempts;\n        this.mode = RETRY_MODES.STANDARD;\n        this.retryToken = getDefaultRetryToken(INITIAL_RETRY_TOKENS, DEFAULT_RETRY_DELAY_BASE);\n        this.maxAttemptsProvider = typeof maxAttempts === \"function\" ? maxAttempts : async () => maxAttempts;\n    }\n    async acquireInitialRetryToken(retryTokenScope) {\n        return this.retryToken;\n    }\n    async refreshRetryTokenForRetry(tokenToRenew, errorInfo) {\n        const maxAttempts = await this.getMaxAttempts();\n        if (this.shouldRetry(tokenToRenew, errorInfo, maxAttempts)) {\n            tokenToRenew.getRetryTokenCount(errorInfo);\n            return tokenToRenew;\n        }\n        throw new Error(\"No retry token available\");\n    }\n    recordSuccess(token) {\n        this.retryToken.releaseRetryTokens(token.getLastRetryCost());\n    }\n    async getMaxAttempts() {\n        let maxAttempts;\n        try {\n            return await this.maxAttemptsProvider();\n        }\n        catch (error) {\n            console.warn(`Max attempts provider could not resolve. Using default of ${DEFAULT_MAX_ATTEMPTS}`);\n            return DEFAULT_MAX_ATTEMPTS;\n        }\n    }\n    shouldRetry(tokenToRenew, errorInfo, maxAttempts) {\n        const attempts = tokenToRenew.getRetryCount();\n        return (attempts < maxAttempts &&\n            tokenToRenew.hasRetryTokens(errorInfo.errorType) &&\n            this.isRetryableError(errorInfo.errorType));\n    }\n    isRetryableError(errorType) {\n        return errorType === \"THROTTLING\" || errorType === \"TRANSIENT\";\n    }\n}\n","import { RETRY_MODES } from \"./config\";\nimport { DefaultRateLimiter } from \"./DefaultRateLimiter\";\nimport { StandardRetryStrategy } from \"./StandardRetryStrategy\";\nexport class AdaptiveRetryStrategy {\n    constructor(maxAttemptsProvider, options) {\n        this.maxAttemptsProvider = maxAttemptsProvider;\n        this.mode = RETRY_MODES.ADAPTIVE;\n        const { rateLimiter } = options ?? {};\n        this.rateLimiter = rateLimiter ?? new DefaultRateLimiter();\n        this.standardRetryStrategy = new StandardRetryStrategy(maxAttemptsProvider);\n    }\n    async acquireInitialRetryToken(retryTokenScope) {\n        await this.rateLimiter.getSendToken();\n        return this.standardRetryStrategy.acquireInitialRetryToken(retryTokenScope);\n    }\n    async refreshRetryTokenForRetry(tokenToRenew, errorInfo) {\n        this.rateLimiter.updateClientSendingRate(errorInfo);\n        return this.standardRetryStrategy.refreshRetryTokenForRetry(tokenToRenew, errorInfo);\n    }\n    recordSuccess(token) {\n        this.rateLimiter.updateClientSendingRate({});\n        this.standardRetryStrategy.recordSuccess(token);\n    }\n}\n","import { normalizeProvider } from \"@aws-sdk/util-middleware\";\nimport { AdaptiveRetryStrategy, DEFAULT_MAX_ATTEMPTS, DEFAULT_RETRY_MODE, RETRY_MODES, StandardRetryStrategy, } from \"@aws-sdk/util-retry\";\nexport const ENV_MAX_ATTEMPTS = \"AWS_MAX_ATTEMPTS\";\nexport const CONFIG_MAX_ATTEMPTS = \"max_attempts\";\nexport const NODE_MAX_ATTEMPT_CONFIG_OPTIONS = {\n    environmentVariableSelector: (env) => {\n        const value = env[ENV_MAX_ATTEMPTS];\n        if (!value)\n            return undefined;\n        const maxAttempt = parseInt(value);\n        if (Number.isNaN(maxAttempt)) {\n            throw new Error(`Environment variable ${ENV_MAX_ATTEMPTS} mast be a number, got \"${value}\"`);\n        }\n        return maxAttempt;\n    },\n    configFileSelector: (profile) => {\n        const value = profile[CONFIG_MAX_ATTEMPTS];\n        if (!value)\n            return undefined;\n        const maxAttempt = parseInt(value);\n        if (Number.isNaN(maxAttempt)) {\n            throw new Error(`Shared config file entry ${CONFIG_MAX_ATTEMPTS} mast be a number, got \"${value}\"`);\n        }\n        return maxAttempt;\n    },\n    default: DEFAULT_MAX_ATTEMPTS,\n};\nexport const resolveRetryConfig = (input) => {\n    const { retryStrategy } = input;\n    const maxAttempts = normalizeProvider(input.maxAttempts ?? DEFAULT_MAX_ATTEMPTS);\n    return {\n        ...input,\n        maxAttempts,\n        retryStrategy: async () => {\n            if (retryStrategy) {\n                return retryStrategy;\n            }\n            const retryMode = await normalizeProvider(input.retryMode)();\n            if (retryMode === RETRY_MODES.ADAPTIVE) {\n                return new AdaptiveRetryStrategy(maxAttempts);\n            }\n            return new StandardRetryStrategy(maxAttempts);\n        },\n    };\n};\nexport const ENV_RETRY_MODE = \"AWS_RETRY_MODE\";\nexport const CONFIG_RETRY_MODE = \"retry_mode\";\nexport const NODE_RETRY_MODE_CONFIG_OPTIONS = {\n    environmentVariableSelector: (env) => env[ENV_RETRY_MODE],\n    configFileSelector: (profile) => profile[CONFIG_RETRY_MODE],\n    default: DEFAULT_RETRY_MODE,\n};\n","export const asSdkError = (error) => {\n    if (error instanceof Error)\n        return error;\n    if (error instanceof Object)\n        return Object.assign(new Error(), error);\n    if (typeof error === \"string\")\n        return new Error(error);\n    return new Error(`AWS SDK error wrapper for ${error}`);\n};\n","import { HttpRequest, HttpResponse } from \"@aws-sdk/protocol-http\";\nimport { isServerError, isThrottlingError, isTransientError } from \"@aws-sdk/service-error-classification\";\nimport { INVOCATION_ID_HEADER, REQUEST_HEADER } from \"@aws-sdk/util-retry\";\nimport { v4 } from \"uuid\";\nimport { asSdkError } from \"./util\";\nexport const retryMiddleware = (options) => (next, context) => async (args) => {\n    let retryStrategy = await options.retryStrategy();\n    const maxAttempts = await options.maxAttempts();\n    if (isRetryStrategyV2(retryStrategy)) {\n        retryStrategy = retryStrategy;\n        let retryToken = await retryStrategy.acquireInitialRetryToken(context[\"partition_id\"]);\n        let lastError = new Error();\n        let attempts = 0;\n        let totalRetryDelay = 0;\n        const { request } = args;\n        if (HttpRequest.isInstance(request)) {\n            request.headers[INVOCATION_ID_HEADER] = v4();\n        }\n        while (true) {\n            try {\n                if (HttpRequest.isInstance(request)) {\n                    request.headers[REQUEST_HEADER] = `attempt=${attempts + 1}; max=${maxAttempts}`;\n                }\n                const { response, output } = await next(args);\n                retryStrategy.recordSuccess(retryToken);\n                output.$metadata.attempts = attempts + 1;\n                output.$metadata.totalRetryDelay = totalRetryDelay;\n                return { response, output };\n            }\n            catch (e) {\n                const retryErrorInfo = getRetryErrorInfo(e);\n                lastError = asSdkError(e);\n                try {\n                    retryToken = await retryStrategy.refreshRetryTokenForRetry(retryToken, retryErrorInfo);\n                }\n                catch (refreshError) {\n                    if (!lastError.$metadata) {\n                        lastError.$metadata = {};\n                    }\n                    lastError.$metadata.attempts = attempts + 1;\n                    lastError.$metadata.totalRetryDelay = totalRetryDelay;\n                    throw lastError;\n                }\n                attempts = retryToken.getRetryCount();\n                const delay = retryToken.getRetryDelay();\n                totalRetryDelay += delay;\n                await new Promise((resolve) => setTimeout(resolve, delay));\n            }\n        }\n    }\n    else {\n        retryStrategy = retryStrategy;\n        if (retryStrategy?.mode)\n            context.userAgent = [...(context.userAgent || []), [\"cfg/retry-mode\", retryStrategy.mode]];\n        return retryStrategy.retry(next, args);\n    }\n};\nconst isRetryStrategyV2 = (retryStrategy) => typeof retryStrategy.acquireInitialRetryToken !== \"undefined\" &&\n    typeof retryStrategy.refreshRetryTokenForRetry !== \"undefined\" &&\n    typeof retryStrategy.recordSuccess !== \"undefined\";\nconst getRetryErrorInfo = (error) => {\n    const errorInfo = {\n        errorType: getRetryErrorType(error),\n    };\n    const retryAfterHint = getRetryAfterHint(error.$response);\n    if (retryAfterHint) {\n        errorInfo.retryAfterHint = retryAfterHint;\n    }\n    return errorInfo;\n};\nconst getRetryErrorType = (error) => {\n    if (isThrottlingError(error))\n        return \"THROTTLING\";\n    if (isTransientError(error))\n        return \"TRANSIENT\";\n    if (isServerError(error))\n        return \"SERVER_ERROR\";\n    return \"CLIENT_ERROR\";\n};\nexport const retryMiddlewareOptions = {\n    name: \"retryMiddleware\",\n    tags: [\"RETRY\"],\n    step: \"finalizeRequest\",\n    priority: \"high\",\n    override: true,\n};\nexport const getRetryPlugin = (options) => ({\n    applyToStack: (clientStack) => {\n        clientStack.add(retryMiddleware(options), retryMiddlewareOptions);\n    },\n});\nexport const getRetryAfterHint = (response) => {\n    if (!HttpResponse.isInstance(response))\n        return;\n    const retryAfterHeaderName = Object.keys(response.headers).find((key) => key.toLowerCase() === \"retry-after\");\n    if (!retryAfterHeaderName)\n        return;\n    const retryAfter = response.headers[retryAfterHeaderName];\n    const retryAfterSeconds = Number(retryAfter);\n    if (!Number.isNaN(retryAfterSeconds))\n        return new Date(retryAfterSeconds * 1000);\n    const retryAfterDate = new Date(retryAfter);\n    return retryAfterDate;\n};\n","export class ProviderError extends Error {\n    constructor(message, tryNextLink = true) {\n        super(message);\n        this.tryNextLink = tryNextLink;\n        this.name = \"ProviderError\";\n        Object.setPrototypeOf(this, ProviderError.prototype);\n    }\n    static from(error, tryNextLink = true) {\n        return Object.assign(new this(error.message, tryNextLink), error);\n    }\n}\n","import { ProviderError } from \"./ProviderError\";\nexport class CredentialsProviderError extends ProviderError {\n    constructor(message, tryNextLink = true) {\n        super(message, tryNextLink);\n        this.tryNextLink = tryNextLink;\n        this.name = \"CredentialsProviderError\";\n        Object.setPrototypeOf(this, CredentialsProviderError.prototype);\n    }\n}\n","import { ProviderError } from \"./ProviderError\";\nexport class TokenProviderError extends ProviderError {\n    constructor(message, tryNextLink = true) {\n        super(message, tryNextLink);\n        this.tryNextLink = tryNextLink;\n        this.name = \"TokenProviderError\";\n        Object.setPrototypeOf(this, TokenProviderError.prototype);\n    }\n}\n","import { ProviderError } from \"./ProviderError\";\nexport function chain(...providers) {\n    return () => {\n        let promise = Promise.reject(new ProviderError(\"No providers in chain\"));\n        for (const provider of providers) {\n            promise = promise.catch((err) => {\n                if (err?.tryNextLink) {\n                    return provider();\n                }\n                throw err;\n            });\n        }\n        return promise;\n    };\n}\n","export const fromStatic = (staticValue) => () => Promise.resolve(staticValue);\n","export const memoize = (provider, isExpired, requiresRefresh) => {\n    let resolved;\n    let pending;\n    let hasResult;\n    let isConstant = false;\n    const coalesceProvider = async () => {\n        if (!pending) {\n            pending = provider();\n        }\n        try {\n            resolved = await pending;\n            hasResult = true;\n            isConstant = false;\n        }\n        finally {\n            pending = undefined;\n        }\n        return resolved;\n    };\n    if (isExpired === undefined) {\n        return async (options) => {\n            if (!hasResult || options?.forceRefresh) {\n                resolved = await coalesceProvider();\n            }\n            return resolved;\n        };\n    }\n    return async (options) => {\n        if (!hasResult || options?.forceRefresh) {\n            resolved = await coalesceProvider();\n        }\n        if (isConstant) {\n            return resolved;\n        }\n        if (requiresRefresh && !requiresRefresh(resolved)) {\n            isConstant = true;\n            return resolved;\n        }\n        if (isExpired(resolved)) {\n            await coalesceProvider();\n            return resolved;\n        }\n        return resolved;\n    };\n};\n","const SHORT_TO_HEX = {};\nconst HEX_TO_SHORT = {};\nfor (let i = 0; i < 256; i++) {\n    let encodedByte = i.toString(16).toLowerCase();\n    if (encodedByte.length === 1) {\n        encodedByte = `0${encodedByte}`;\n    }\n    SHORT_TO_HEX[i] = encodedByte;\n    HEX_TO_SHORT[encodedByte] = i;\n}\nexport function fromHex(encoded) {\n    if (encoded.length % 2 !== 0) {\n        throw new Error(\"Hex encoded strings must have an even number length\");\n    }\n    const out = new Uint8Array(encoded.length / 2);\n    for (let i = 0; i < encoded.length; i += 2) {\n        const encodedByte = encoded.slice(i, i + 2).toLowerCase();\n        if (encodedByte in HEX_TO_SHORT) {\n            out[i / 2] = HEX_TO_SHORT[encodedByte];\n        }\n        else {\n            throw new Error(`Cannot decode unrecognized sequence ${encodedByte} as hexadecimal`);\n        }\n    }\n    return out;\n}\nexport function toHex(bytes) {\n    let out = \"\";\n    for (let i = 0; i < bytes.byteLength; i++) {\n        out += SHORT_TO_HEX[bytes[i]];\n    }\n    return out;\n}\n","export const isArrayBuffer = (arg) => (typeof ArrayBuffer === \"function\" && arg instanceof ArrayBuffer) ||\n    Object.prototype.toString.call(arg) === \"[object ArrayBuffer]\";\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"buffer\");","import { isArrayBuffer } from \"@aws-sdk/is-array-buffer\";\nimport { Buffer } from \"buffer\";\nexport const fromArrayBuffer = (input, offset = 0, length = input.byteLength - offset) => {\n    if (!isArrayBuffer(input)) {\n        throw new TypeError(`The \"input\" argument must be ArrayBuffer. Received type ${typeof input} (${input})`);\n    }\n    return Buffer.from(input, offset, length);\n};\nexport const fromString = (input, encoding) => {\n    if (typeof input !== \"string\") {\n        throw new TypeError(`The \"input\" argument must be of type string. Received type ${typeof input} (${input})`);\n    }\n    return encoding ? Buffer.from(input, encoding) : Buffer.from(input);\n};\n","import { fromString } from \"@aws-sdk/util-buffer-from\";\nexport const fromUtf8 = (input) => {\n    const buf = fromString(input, \"utf8\");\n    return new Uint8Array(buf.buffer, buf.byteOffset, buf.byteLength / Uint8Array.BYTES_PER_ELEMENT);\n};\n","import { fromUtf8 } from \"./fromUtf8\";\nexport const toUint8Array = (data) => {\n    if (typeof data === \"string\") {\n        return fromUtf8(data);\n    }\n    if (ArrayBuffer.isView(data)) {\n        return new Uint8Array(data.buffer, data.byteOffset, data.byteLength / Uint8Array.BYTES_PER_ELEMENT);\n    }\n    return new Uint8Array(data);\n};\n","import { fromArrayBuffer } from \"@aws-sdk/util-buffer-from\";\nexport const toUtf8 = (input) => fromArrayBuffer(input.buffer, input.byteOffset, input.byteLength).toString(\"utf8\");\n","export const ALGORITHM_QUERY_PARAM = \"X-Amz-Algorithm\";\nexport const CREDENTIAL_QUERY_PARAM = \"X-Amz-Credential\";\nexport const AMZ_DATE_QUERY_PARAM = \"X-Amz-Date\";\nexport const SIGNED_HEADERS_QUERY_PARAM = \"X-Amz-SignedHeaders\";\nexport const EXPIRES_QUERY_PARAM = \"X-Amz-Expires\";\nexport const SIGNATURE_QUERY_PARAM = \"X-Amz-Signature\";\nexport const TOKEN_QUERY_PARAM = \"X-Amz-Security-Token\";\nexport const REGION_SET_PARAM = \"X-Amz-Region-Set\";\nexport const AUTH_HEADER = \"authorization\";\nexport const AMZ_DATE_HEADER = AMZ_DATE_QUERY_PARAM.toLowerCase();\nexport const DATE_HEADER = \"date\";\nexport const GENERATED_HEADERS = [AUTH_HEADER, AMZ_DATE_HEADER, DATE_HEADER];\nexport const SIGNATURE_HEADER = SIGNATURE_QUERY_PARAM.toLowerCase();\nexport const SHA256_HEADER = \"x-amz-content-sha256\";\nexport const TOKEN_HEADER = TOKEN_QUERY_PARAM.toLowerCase();\nexport const HOST_HEADER = \"host\";\nexport const ALWAYS_UNSIGNABLE_HEADERS = {\n    authorization: true,\n    \"cache-control\": true,\n    connection: true,\n    expect: true,\n    from: true,\n    \"keep-alive\": true,\n    \"max-forwards\": true,\n    pragma: true,\n    referer: true,\n    te: true,\n    trailer: true,\n    \"transfer-encoding\": true,\n    upgrade: true,\n    \"user-agent\": true,\n    \"x-amzn-trace-id\": true,\n};\nexport const PROXY_HEADER_PATTERN = /^proxy-/;\nexport const SEC_HEADER_PATTERN = /^sec-/;\nexport const UNSIGNABLE_PATTERNS = [/^proxy-/i, /^sec-/i];\nexport const ALGORITHM_IDENTIFIER = \"AWS4-HMAC-SHA256\";\nexport const ALGORITHM_IDENTIFIER_V4A = \"AWS4-ECDSA-P256-SHA256\";\nexport const EVENT_ALGORITHM_IDENTIFIER = \"AWS4-HMAC-SHA256-PAYLOAD\";\nexport const UNSIGNED_PAYLOAD = \"UNSIGNED-PAYLOAD\";\nexport const MAX_CACHE_SIZE = 50;\nexport const KEY_TYPE_IDENTIFIER = \"aws4_request\";\nexport const MAX_PRESIGNED_TTL = 60 * 60 * 24 * 7;\n","import { toHex } from \"@aws-sdk/util-hex-encoding\";\nimport { toUint8Array } from \"@aws-sdk/util-utf8\";\nimport { KEY_TYPE_IDENTIFIER, MAX_CACHE_SIZE } from \"./constants\";\nconst signingKeyCache = {};\nconst cacheQueue = [];\nexport const createScope = (shortDate, region, service) => `${shortDate}/${region}/${service}/${KEY_TYPE_IDENTIFIER}`;\nexport const getSigningKey = async (sha256Constructor, credentials, shortDate, region, service) => {\n    const credsHash = await hmac(sha256Constructor, credentials.secretAccessKey, credentials.accessKeyId);\n    const cacheKey = `${shortDate}:${region}:${service}:${toHex(credsHash)}:${credentials.sessionToken}`;\n    if (cacheKey in signingKeyCache) {\n        return signingKeyCache[cacheKey];\n    }\n    cacheQueue.push(cacheKey);\n    while (cacheQueue.length > MAX_CACHE_SIZE) {\n        delete signingKeyCache[cacheQueue.shift()];\n    }\n    let key = `AWS4${credentials.secretAccessKey}`;\n    for (const signable of [shortDate, region, service, KEY_TYPE_IDENTIFIER]) {\n        key = await hmac(sha256Constructor, key, signable);\n    }\n    return (signingKeyCache[cacheKey] = key);\n};\nexport const clearCredentialCache = () => {\n    cacheQueue.length = 0;\n    Object.keys(signingKeyCache).forEach((cacheKey) => {\n        delete signingKeyCache[cacheKey];\n    });\n};\nconst hmac = (ctor, secret, data) => {\n    const hash = new ctor(secret);\n    hash.update(toUint8Array(data));\n    return hash.digest();\n};\n","import { ALWAYS_UNSIGNABLE_HEADERS, PROXY_HEADER_PATTERN, SEC_HEADER_PATTERN } from \"./constants\";\nexport const getCanonicalHeaders = ({ headers }, unsignableHeaders, signableHeaders) => {\n    const canonical = {};\n    for (const headerName of Object.keys(headers).sort()) {\n        if (headers[headerName] == undefined) {\n            continue;\n        }\n        const canonicalHeaderName = headerName.toLowerCase();\n        if (canonicalHeaderName in ALWAYS_UNSIGNABLE_HEADERS ||\n            unsignableHeaders?.has(canonicalHeaderName) ||\n            PROXY_HEADER_PATTERN.test(canonicalHeaderName) ||\n            SEC_HEADER_PATTERN.test(canonicalHeaderName)) {\n            if (!signableHeaders || (signableHeaders && !signableHeaders.has(canonicalHeaderName))) {\n                continue;\n            }\n        }\n        canonical[canonicalHeaderName] = headers[headerName].trim().replace(/\\s+/g, \" \");\n    }\n    return canonical;\n};\n","export const escapeUri = (uri) => encodeURIComponent(uri).replace(/[!'()*]/g, hexEncode);\nconst hexEncode = (c) => `%${c.charCodeAt(0).toString(16).toUpperCase()}`;\n","import { isArrayBuffer } from \"@aws-sdk/is-array-buffer\";\nimport { toHex } from \"@aws-sdk/util-hex-encoding\";\nimport { toUint8Array } from \"@aws-sdk/util-utf8\";\nimport { SHA256_HEADER, UNSIGNED_PAYLOAD } from \"./constants\";\nexport const getPayloadHash = async ({ headers, body }, hashConstructor) => {\n    for (const headerName of Object.keys(headers)) {\n        if (headerName.toLowerCase() === SHA256_HEADER) {\n            return headers[headerName];\n        }\n    }\n    if (body == undefined) {\n        return \"e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855\";\n    }\n    else if (typeof body === \"string\" || ArrayBuffer.isView(body) || isArrayBuffer(body)) {\n        const hashCtor = new hashConstructor();\n        hashCtor.update(toUint8Array(body));\n        return toHex(await hashCtor.digest());\n    }\n    return UNSIGNED_PAYLOAD;\n};\n","export const cloneRequest = ({ headers, query, ...rest }) => ({\n    ...rest,\n    headers: { ...headers },\n    query: query ? cloneQuery(query) : undefined,\n});\nexport const cloneQuery = (query) => Object.keys(query).reduce((carry, paramName) => {\n    const param = query[paramName];\n    return {\n        ...carry,\n        [paramName]: Array.isArray(param) ? [...param] : param,\n    };\n}, {});\n","import { cloneRequest } from \"./cloneRequest\";\nimport { GENERATED_HEADERS } from \"./constants\";\nexport const prepareRequest = (request) => {\n    request = typeof request.clone === \"function\" ? request.clone() : cloneRequest(request);\n    for (const headerName of Object.keys(request.headers)) {\n        if (GENERATED_HEADERS.indexOf(headerName.toLowerCase()) > -1) {\n            delete request.headers[headerName];\n        }\n    }\n    return request;\n};\n","export const iso8601 = (time) => toDate(time)\n    .toISOString()\n    .replace(/\\.\\d{3}Z$/, \"Z\");\nexport const toDate = (time) => {\n    if (typeof time === \"number\") {\n        return new Date(time * 1000);\n    }\n    if (typeof time === \"string\") {\n        if (Number(time)) {\n            return new Date(Number(time) * 1000);\n        }\n        return new Date(time);\n    }\n    return time;\n};\n","import { toHex } from \"@aws-sdk/util-hex-encoding\";\nimport { normalizeProvider } from \"@aws-sdk/util-middleware\";\nimport { toUint8Array } from \"@aws-sdk/util-utf8\";\nimport { ALGORITHM_IDENTIFIER, ALGORITHM_QUERY_PARAM, AMZ_DATE_HEADER, AMZ_DATE_QUERY_PARAM, AUTH_HEADER, CREDENTIAL_QUERY_PARAM, EVENT_ALGORITHM_IDENTIFIER, EXPIRES_QUERY_PARAM, MAX_PRESIGNED_TTL, SHA256_HEADER, SIGNATURE_QUERY_PARAM, SIGNED_HEADERS_QUERY_PARAM, TOKEN_HEADER, TOKEN_QUERY_PARAM, } from \"./constants\";\nimport { createScope, getSigningKey } from \"./credentialDerivation\";\nimport { getCanonicalHeaders } from \"./getCanonicalHeaders\";\nimport { getCanonicalQuery } from \"./getCanonicalQuery\";\nimport { getPayloadHash } from \"./getPayloadHash\";\nimport { hasHeader } from \"./headerUtil\";\nimport { moveHeadersToQuery } from \"./moveHeadersToQuery\";\nimport { prepareRequest } from \"./prepareRequest\";\nimport { iso8601 } from \"./utilDate\";\nexport class SignatureV4 {\n    constructor({ applyChecksum, credentials, region, service, sha256, uriEscapePath = true, }) {\n        this.service = service;\n        this.sha256 = sha256;\n        this.uriEscapePath = uriEscapePath;\n        this.applyChecksum = typeof applyChecksum === \"boolean\" ? applyChecksum : true;\n        this.regionProvider = normalizeProvider(region);\n        this.credentialProvider = normalizeProvider(credentials);\n    }\n    async presign(originalRequest, options = {}) {\n        const { signingDate = new Date(), expiresIn = 3600, unsignableHeaders, unhoistableHeaders, signableHeaders, signingRegion, signingService, } = options;\n        const credentials = await this.credentialProvider();\n        this.validateResolvedCredentials(credentials);\n        const region = signingRegion ?? (await this.regionProvider());\n        const { longDate, shortDate } = formatDate(signingDate);\n        if (expiresIn > MAX_PRESIGNED_TTL) {\n            return Promise.reject(\"Signature version 4 presigned URLs\" + \" must have an expiration date less than one week in\" + \" the future\");\n        }\n        const scope = createScope(shortDate, region, signingService ?? this.service);\n        const request = moveHeadersToQuery(prepareRequest(originalRequest), { unhoistableHeaders });\n        if (credentials.sessionToken) {\n            request.query[TOKEN_QUERY_PARAM] = credentials.sessionToken;\n        }\n        request.query[ALGORITHM_QUERY_PARAM] = ALGORITHM_IDENTIFIER;\n        request.query[CREDENTIAL_QUERY_PARAM] = `${credentials.accessKeyId}/${scope}`;\n        request.query[AMZ_DATE_QUERY_PARAM] = longDate;\n        request.query[EXPIRES_QUERY_PARAM] = expiresIn.toString(10);\n        const canonicalHeaders = getCanonicalHeaders(request, unsignableHeaders, signableHeaders);\n        request.query[SIGNED_HEADERS_QUERY_PARAM] = getCanonicalHeaderList(canonicalHeaders);\n        request.query[SIGNATURE_QUERY_PARAM] = await this.getSignature(longDate, scope, this.getSigningKey(credentials, region, shortDate, signingService), this.createCanonicalRequest(request, canonicalHeaders, await getPayloadHash(originalRequest, this.sha256)));\n        return request;\n    }\n    async sign(toSign, options) {\n        if (typeof toSign === \"string\") {\n            return this.signString(toSign, options);\n        }\n        else if (toSign.headers && toSign.payload) {\n            return this.signEvent(toSign, options);\n        }\n        else {\n            return this.signRequest(toSign, options);\n        }\n    }\n    async signEvent({ headers, payload }, { signingDate = new Date(), priorSignature, signingRegion, signingService }) {\n        const region = signingRegion ?? (await this.regionProvider());\n        const { shortDate, longDate } = formatDate(signingDate);\n        const scope = createScope(shortDate, region, signingService ?? this.service);\n        const hashedPayload = await getPayloadHash({ headers: {}, body: payload }, this.sha256);\n        const hash = new this.sha256();\n        hash.update(headers);\n        const hashedHeaders = toHex(await hash.digest());\n        const stringToSign = [\n            EVENT_ALGORITHM_IDENTIFIER,\n            longDate,\n            scope,\n            priorSignature,\n            hashedHeaders,\n            hashedPayload,\n        ].join(\"\\n\");\n        return this.signString(stringToSign, { signingDate, signingRegion: region, signingService });\n    }\n    async signString(stringToSign, { signingDate = new Date(), signingRegion, signingService } = {}) {\n        const credentials = await this.credentialProvider();\n        this.validateResolvedCredentials(credentials);\n        const region = signingRegion ?? (await this.regionProvider());\n        const { shortDate } = formatDate(signingDate);\n        const hash = new this.sha256(await this.getSigningKey(credentials, region, shortDate, signingService));\n        hash.update(toUint8Array(stringToSign));\n        return toHex(await hash.digest());\n    }\n    async signRequest(requestToSign, { signingDate = new Date(), signableHeaders, unsignableHeaders, signingRegion, signingService, } = {}) {\n        const credentials = await this.credentialProvider();\n        this.validateResolvedCredentials(credentials);\n        const region = signingRegion ?? (await this.regionProvider());\n        const request = prepareRequest(requestToSign);\n        const { longDate, shortDate } = formatDate(signingDate);\n        const scope = createScope(shortDate, region, signingService ?? this.service);\n        request.headers[AMZ_DATE_HEADER] = longDate;\n        if (credentials.sessionToken) {\n            request.headers[TOKEN_HEADER] = credentials.sessionToken;\n        }\n        const payloadHash = await getPayloadHash(request, this.sha256);\n        if (!hasHeader(SHA256_HEADER, request.headers) && this.applyChecksum) {\n            request.headers[SHA256_HEADER] = payloadHash;\n        }\n        const canonicalHeaders = getCanonicalHeaders(request, unsignableHeaders, signableHeaders);\n        const signature = await this.getSignature(longDate, scope, this.getSigningKey(credentials, region, shortDate, signingService), this.createCanonicalRequest(request, canonicalHeaders, payloadHash));\n        request.headers[AUTH_HEADER] =\n            `${ALGORITHM_IDENTIFIER} ` +\n                `Credential=${credentials.accessKeyId}/${scope}, ` +\n                `SignedHeaders=${getCanonicalHeaderList(canonicalHeaders)}, ` +\n                `Signature=${signature}`;\n        return request;\n    }\n    createCanonicalRequest(request, canonicalHeaders, payloadHash) {\n        const sortedHeaders = Object.keys(canonicalHeaders).sort();\n        return `${request.method}\n${this.getCanonicalPath(request)}\n${getCanonicalQuery(request)}\n${sortedHeaders.map((name) => `${name}:${canonicalHeaders[name]}`).join(\"\\n\")}\n\n${sortedHeaders.join(\";\")}\n${payloadHash}`;\n    }\n    async createStringToSign(longDate, credentialScope, canonicalRequest) {\n        const hash = new this.sha256();\n        hash.update(toUint8Array(canonicalRequest));\n        const hashedRequest = await hash.digest();\n        return `${ALGORITHM_IDENTIFIER}\n${longDate}\n${credentialScope}\n${toHex(hashedRequest)}`;\n    }\n    getCanonicalPath({ path }) {\n        if (this.uriEscapePath) {\n            const normalizedPathSegments = [];\n            for (const pathSegment of path.split(\"/\")) {\n                if (pathSegment?.length === 0)\n                    continue;\n                if (pathSegment === \".\")\n                    continue;\n                if (pathSegment === \"..\") {\n                    normalizedPathSegments.pop();\n                }\n                else {\n                    normalizedPathSegments.push(pathSegment);\n                }\n            }\n            const normalizedPath = `${path?.startsWith(\"/\") ? \"/\" : \"\"}${normalizedPathSegments.join(\"/\")}${normalizedPathSegments.length > 0 && path?.endsWith(\"/\") ? \"/\" : \"\"}`;\n            const doubleEncoded = encodeURIComponent(normalizedPath);\n            return doubleEncoded.replace(/%2F/g, \"/\");\n        }\n        return path;\n    }\n    async getSignature(longDate, credentialScope, keyPromise, canonicalRequest) {\n        const stringToSign = await this.createStringToSign(longDate, credentialScope, canonicalRequest);\n        const hash = new this.sha256(await keyPromise);\n        hash.update(toUint8Array(stringToSign));\n        return toHex(await hash.digest());\n    }\n    getSigningKey(credentials, region, shortDate, service) {\n        return getSigningKey(this.sha256, credentials, shortDate, region, service || this.service);\n    }\n    validateResolvedCredentials(credentials) {\n        if (typeof credentials !== \"object\" ||\n            typeof credentials.accessKeyId !== \"string\" ||\n            typeof credentials.secretAccessKey !== \"string\") {\n            throw new Error(\"Resolved credential object is not valid\");\n        }\n    }\n}\nconst formatDate = (now) => {\n    const longDate = iso8601(now).replace(/[\\-:]/g, \"\");\n    return {\n        longDate,\n        shortDate: longDate.slice(0, 8),\n    };\n};\nconst getCanonicalHeaderList = (headers) => Object.keys(headers).sort().join(\";\");\n","import { cloneRequest } from \"./cloneRequest\";\nexport const moveHeadersToQuery = (request, options = {}) => {\n    const { headers, query = {} } = typeof request.clone === \"function\" ? request.clone() : cloneRequest(request);\n    for (const name of Object.keys(headers)) {\n        const lname = name.toLowerCase();\n        if (lname.slice(0, 6) === \"x-amz-\" && !options.unhoistableHeaders?.has(lname)) {\n            query[name] = headers[name];\n            delete headers[name];\n        }\n    }\n    return {\n        ...request,\n        headers,\n        query,\n    };\n};\n","export const hasHeader = (soughtHeader, headers) => {\n    soughtHeader = soughtHeader.toLowerCase();\n    for (const headerName of Object.keys(headers)) {\n        if (soughtHeader === headerName.toLowerCase()) {\n            return true;\n        }\n    }\n    return false;\n};\nexport const getHeaderValue = (soughtHeader, headers) => {\n    soughtHeader = soughtHeader.toLowerCase();\n    for (const headerName of Object.keys(headers)) {\n        if (soughtHeader === headerName.toLowerCase()) {\n            return headers[headerName];\n        }\n    }\n    return undefined;\n};\nexport const deleteHeader = (soughtHeader, headers) => {\n    soughtHeader = soughtHeader.toLowerCase();\n    for (const headerName of Object.keys(headers)) {\n        if (soughtHeader === headerName.toLowerCase()) {\n            delete headers[headerName];\n        }\n    }\n};\n","import { escapeUri } from \"@aws-sdk/util-uri-escape\";\nimport { SIGNATURE_HEADER } from \"./constants\";\nexport const getCanonicalQuery = ({ query = {} }) => {\n    const keys = [];\n    const serialized = {};\n    for (const key of Object.keys(query).sort()) {\n        if (key.toLowerCase() === SIGNATURE_HEADER) {\n            continue;\n        }\n        keys.push(key);\n        const value = query[key];\n        if (typeof value === \"string\") {\n            serialized[key] = `${escapeUri(key)}=${escapeUri(value)}`;\n        }\n        else if (Array.isArray(value)) {\n            serialized[key] = value\n                .slice(0)\n                .sort()\n                .reduce((encoded, value) => encoded.concat([`${escapeUri(key)}=${escapeUri(value)}`]), [])\n                .join(\"&\");\n        }\n    }\n    return keys\n        .map((key) => serialized[key])\n        .filter((serialized) => serialized)\n        .join(\"&\");\n};\n","import { memoize } from \"@aws-sdk/property-provider\";\nimport { SignatureV4 } from \"@aws-sdk/signature-v4\";\nimport { normalizeProvider } from \"@aws-sdk/util-middleware\";\nconst CREDENTIAL_EXPIRE_WINDOW = 300000;\nexport const resolveAwsAuthConfig = (input) => {\n    const normalizedCreds = input.credentials\n        ? normalizeCredentialProvider(input.credentials)\n        : input.credentialDefaultProvider(input);\n    const { signingEscapePath = true, systemClockOffset = input.systemClockOffset || 0, sha256 } = input;\n    let signer;\n    if (input.signer) {\n        signer = normalizeProvider(input.signer);\n    }\n    else if (input.regionInfoProvider) {\n        signer = () => normalizeProvider(input.region)()\n            .then(async (region) => [\n            (await input.regionInfoProvider(region, {\n                useFipsEndpoint: await input.useFipsEndpoint(),\n                useDualstackEndpoint: await input.useDualstackEndpoint(),\n            })) || {},\n            region,\n        ])\n            .then(([regionInfo, region]) => {\n            const { signingRegion, signingService } = regionInfo;\n            input.signingRegion = input.signingRegion || signingRegion || region;\n            input.signingName = input.signingName || signingService || input.serviceId;\n            const params = {\n                ...input,\n                credentials: normalizedCreds,\n                region: input.signingRegion,\n                service: input.signingName,\n                sha256,\n                uriEscapePath: signingEscapePath,\n            };\n            const SignerCtor = input.signerConstructor || SignatureV4;\n            return new SignerCtor(params);\n        });\n    }\n    else {\n        signer = async (authScheme) => {\n            authScheme = Object.assign({}, {\n                name: \"sigv4\",\n                signingName: input.signingName || input.defaultSigningName,\n                signingRegion: await normalizeProvider(input.region)(),\n                properties: {},\n            }, authScheme);\n            const signingRegion = authScheme.signingRegion;\n            const signingService = authScheme.signingName;\n            input.signingRegion = input.signingRegion || signingRegion;\n            input.signingName = input.signingName || signingService || input.serviceId;\n            const params = {\n                ...input,\n                credentials: normalizedCreds,\n                region: input.signingRegion,\n                service: input.signingName,\n                sha256,\n                uriEscapePath: signingEscapePath,\n            };\n            const SignerCtor = input.signerConstructor || SignatureV4;\n            return new SignerCtor(params);\n        };\n    }\n    return {\n        ...input,\n        systemClockOffset,\n        signingEscapePath,\n        credentials: normalizedCreds,\n        signer,\n    };\n};\nexport const resolveSigV4AuthConfig = (input) => {\n    const normalizedCreds = input.credentials\n        ? normalizeCredentialProvider(input.credentials)\n        : input.credentialDefaultProvider(input);\n    const { signingEscapePath = true, systemClockOffset = input.systemClockOffset || 0, sha256 } = input;\n    let signer;\n    if (input.signer) {\n        signer = normalizeProvider(input.signer);\n    }\n    else {\n        signer = normalizeProvider(new SignatureV4({\n            credentials: normalizedCreds,\n            region: input.region,\n            service: input.signingName,\n            sha256,\n            uriEscapePath: signingEscapePath,\n        }));\n    }\n    return {\n        ...input,\n        systemClockOffset,\n        signingEscapePath,\n        credentials: normalizedCreds,\n        signer,\n    };\n};\nconst normalizeCredentialProvider = (credentials) => {\n    if (typeof credentials === \"function\") {\n        return memoize(credentials, (credentials) => credentials.expiration !== undefined &&\n            credentials.expiration.getTime() - Date.now() < CREDENTIAL_EXPIRE_WINDOW, (credentials) => credentials.expiration !== undefined);\n    }\n    return normalizeProvider(credentials);\n};\n","export const getSkewCorrectedDate = (systemClockOffset) => new Date(Date.now() + systemClockOffset);\n","import { isClockSkewed } from \"./isClockSkewed\";\nexport const getUpdatedSystemClockOffset = (clockTime, currentSystemClockOffset) => {\n    const clockTimeInMs = Date.parse(clockTime);\n    if (isClockSkewed(clockTimeInMs, currentSystemClockOffset)) {\n        return clockTimeInMs - Date.now();\n    }\n    return currentSystemClockOffset;\n};\n","import { getSkewCorrectedDate } from \"./getSkewCorrectedDate\";\nexport const isClockSkewed = (clockTime, systemClockOffset) => Math.abs(getSkewCorrectedDate(systemClockOffset).getTime() - clockTime) >= 300000;\n","import { HttpRequest, HttpResponse } from \"@aws-sdk/protocol-http\";\nimport { getSkewCorrectedDate } from \"./utils/getSkewCorrectedDate\";\nimport { getUpdatedSystemClockOffset } from \"./utils/getUpdatedSystemClockOffset\";\nexport const awsAuthMiddleware = (options) => (next, context) => async function (args) {\n    if (!HttpRequest.isInstance(args.request))\n        return next(args);\n    const authScheme = context.endpointV2?.properties?.authSchemes?.[0];\n    const multiRegionOverride = authScheme?.name === \"sigv4a\" ? authScheme?.signingRegionSet?.join(\",\") : undefined;\n    const signer = await options.signer(authScheme);\n    const output = await next({\n        ...args,\n        request: await signer.sign(args.request, {\n            signingDate: getSkewCorrectedDate(options.systemClockOffset),\n            signingRegion: multiRegionOverride || context[\"signing_region\"],\n            signingService: context[\"signing_service\"],\n        }),\n    }).catch((error) => {\n        const serverTime = error.ServerTime ?? getDateHeader(error.$response);\n        if (serverTime) {\n            options.systemClockOffset = getUpdatedSystemClockOffset(serverTime, options.systemClockOffset);\n        }\n        throw error;\n    });\n    const dateHeader = getDateHeader(output.response);\n    if (dateHeader) {\n        options.systemClockOffset = getUpdatedSystemClockOffset(dateHeader, options.systemClockOffset);\n    }\n    return output;\n};\nconst getDateHeader = (response) => HttpResponse.isInstance(response) ? response.headers?.date ?? response.headers?.Date : undefined;\nexport const awsAuthMiddlewareOptions = {\n    name: \"awsAuthMiddleware\",\n    tags: [\"SIGNATURE\", \"AWSAUTH\"],\n    relation: \"after\",\n    toMiddleware: \"retryMiddleware\",\n    override: true,\n};\nexport const getAwsAuthPlugin = (options) => ({\n    applyToStack: (clientStack) => {\n        clientStack.addRelativeTo(awsAuthMiddleware(options), awsAuthMiddlewareOptions);\n    },\n});\nexport const getSigV4AuthPlugin = getAwsAuthPlugin;\n","export function resolveUserAgentConfig(input) {\n    return {\n        ...input,\n        customUserAgent: typeof input.customUserAgent === \"string\" ? [[input.customUserAgent]] : input.customUserAgent,\n    };\n}\n","import partitionsInfo from \"./partitions.json\";\nlet selectedPartitionsInfo = partitionsInfo;\nlet selectedUserAgentPrefix = \"\";\nexport const partition = (value) => {\n    const { partitions } = selectedPartitionsInfo;\n    for (const partition of partitions) {\n        const { regions, outputs } = partition;\n        for (const [region, regionData] of Object.entries(regions)) {\n            if (region === value) {\n                return {\n                    ...outputs,\n                    ...regionData,\n                };\n            }\n        }\n    }\n    for (const partition of partitions) {\n        const { regionRegex, outputs } = partition;\n        if (new RegExp(regionRegex).test(value)) {\n            return {\n                ...outputs,\n            };\n        }\n    }\n    const DEFAULT_PARTITION = partitions.find((partition) => partition.id === \"aws\");\n    if (!DEFAULT_PARTITION) {\n        throw new Error(\"Provided region was not found in the partition array or regex,\" +\n            \" and default partition with id 'aws' doesn't exist.\");\n    }\n    return {\n        ...DEFAULT_PARTITION.outputs,\n    };\n};\nexport const setPartitionInfo = (partitionsInfo, userAgentPrefix = \"\") => {\n    selectedPartitionsInfo = partitionsInfo;\n    selectedUserAgentPrefix = userAgentPrefix;\n};\nexport const useDefaultPartitionInfo = () => {\n    setPartitionInfo(partitionsInfo, \"\");\n};\nexport const getUserAgentPrefix = () => selectedUserAgentPrefix;\n","export const debugId = \"endpoints\";\n","export function toDebugString(input) {\n    if (typeof input !== \"object\" || input == null) {\n        return input;\n    }\n    if (\"ref\" in input) {\n        return `$${toDebugString(input.ref)}`;\n    }\n    if (\"fn\" in input) {\n        return `${input.fn}(${(input.argv || []).map(toDebugString).join(\", \")})`;\n    }\n    return JSON.stringify(input, null, 2);\n}\n","export class EndpointError extends Error {\n    constructor(message) {\n        super(message);\n        this.name = \"EndpointError\";\n    }\n}\n","const IP_V4_REGEX = new RegExp(`^(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)(?:\\\\.(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)){3}$`);\nexport const isIpAddress = (value) => IP_V4_REGEX.test(value) || (value.startsWith(\"[\") && value.endsWith(\"]\"));\n","const VALID_HOST_LABEL_REGEX = new RegExp(`^(?!.*-$)(?!-)[a-zA-Z0-9-]{1,63}$`);\nexport const isValidHostLabel = (value, allowSubDomains = false) => {\n    if (!allowSubDomains) {\n        return VALID_HOST_LABEL_REGEX.test(value);\n    }\n    const labels = value.split(\".\");\n    for (const label of labels) {\n        if (!isValidHostLabel(label)) {\n            return false;\n        }\n    }\n    return true;\n};\n","import { isIpAddress } from \"../isIpAddress\";\nimport { isValidHostLabel } from \"../isValidHostLabel\";\nexport const isVirtualHostableS3Bucket = (value, allowSubDomains = false) => {\n    if (allowSubDomains) {\n        for (const label of value.split(\".\")) {\n            if (!isVirtualHostableS3Bucket(label)) {\n                return false;\n            }\n        }\n        return true;\n    }\n    if (!isValidHostLabel(value)) {\n        return false;\n    }\n    if (value.length < 3 || value.length > 63) {\n        return false;\n    }\n    if (value !== value.toLowerCase()) {\n        return false;\n    }\n    if (isIpAddress(value)) {\n        return false;\n    }\n    return true;\n};\n","export const parseArn = (value) => {\n    const segments = value.split(\":\");\n    if (segments.length < 6)\n        return null;\n    const [arn, partition, service, region, accountId, ...resourceId] = segments;\n    if (arn !== \"arn\" || partition === \"\" || service === \"\" || resourceId[0] === \"\")\n        return null;\n    return {\n        partition,\n        service,\n        region,\n        accountId,\n        resourceId: resourceId[0].includes(\"/\") ? resourceId[0].split(\"/\") : resourceId,\n    };\n};\n","export const booleanEquals = (value1, value2) => value1 === value2;\n","import { EndpointError } from \"../types\";\nimport { getAttrPathList } from \"./getAttrPathList\";\nexport const getAttr = (value, path) => getAttrPathList(path).reduce((acc, index) => {\n    if (typeof acc !== \"object\") {\n        throw new EndpointError(`Index '${index}' in '${path}' not found in '${JSON.stringify(value)}'`);\n    }\n    else if (Array.isArray(acc)) {\n        return acc[parseInt(index)];\n    }\n    return acc[index];\n}, value);\n","import { EndpointError } from \"../types\";\nexport const getAttrPathList = (path) => {\n    const parts = path.split(\".\");\n    const pathList = [];\n    for (const part of parts) {\n        const squareBracketIndex = part.indexOf(\"[\");\n        if (squareBracketIndex !== -1) {\n            if (part.indexOf(\"]\") !== part.length - 1) {\n                throw new EndpointError(`Path: '${path}' does not end with ']'`);\n            }\n            const arrayIndex = part.slice(squareBracketIndex + 1, -1);\n            if (Number.isNaN(parseInt(arrayIndex))) {\n                throw new EndpointError(`Invalid array index: '${arrayIndex}' in path: '${path}'`);\n            }\n            if (squareBracketIndex !== 0) {\n                pathList.push(part.slice(0, squareBracketIndex));\n            }\n            pathList.push(arrayIndex);\n        }\n        else {\n            pathList.push(part);\n        }\n    }\n    return pathList;\n};\n","export const isSet = (value) => value != null;\n","export const not = (value) => !value;\n","export var HttpAuthLocation;\n(function (HttpAuthLocation) {\n    HttpAuthLocation[\"HEADER\"] = \"header\";\n    HttpAuthLocation[\"QUERY\"] = \"query\";\n})(HttpAuthLocation || (HttpAuthLocation = {}));\n","export var HostAddressType;\n(function (HostAddressType) {\n    HostAddressType[\"AAAA\"] = \"AAAA\";\n    HostAddressType[\"A\"] = \"A\";\n})(HostAddressType || (HostAddressType = {}));\n","export var EndpointURLScheme;\n(function (EndpointURLScheme) {\n    EndpointURLScheme[\"HTTP\"] = \"http\";\n    EndpointURLScheme[\"HTTPS\"] = \"https\";\n})(EndpointURLScheme || (EndpointURLScheme = {}));\n","export var RequestHandlerProtocol;\n(function (RequestHandlerProtocol) {\n    RequestHandlerProtocol[\"HTTP_0_9\"] = \"http/0.9\";\n    RequestHandlerProtocol[\"HTTP_1_0\"] = \"http/1.0\";\n    RequestHandlerProtocol[\"TDS_8_0\"] = \"tds/8.0\";\n})(RequestHandlerProtocol || (RequestHandlerProtocol = {}));\n","import { EndpointURLScheme } from \"@aws-sdk/types\";\nimport { isIpAddress } from \"./isIpAddress\";\nconst DEFAULT_PORTS = {\n    [EndpointURLScheme.HTTP]: 80,\n    [EndpointURLScheme.HTTPS]: 443,\n};\nexport const parseURL = (value) => {\n    const whatwgURL = (() => {\n        try {\n            if (value instanceof URL) {\n                return value;\n            }\n            if (typeof value === \"object\" && \"hostname\" in value) {\n                const { hostname, port, protocol = \"\", path = \"\", query = {} } = value;\n                const url = new URL(`${protocol}//${hostname}${port ? `:${port}` : \"\"}${path}`);\n                url.search = Object.entries(query)\n                    .map(([k, v]) => `${k}=${v}`)\n                    .join(\"&\");\n                return url;\n            }\n            return new URL(value);\n        }\n        catch (error) {\n            return null;\n        }\n    })();\n    if (!whatwgURL) {\n        console.error(`Unable to parse ${JSON.stringify(value)} as a whatwg URL.`);\n        return null;\n    }\n    const urlString = whatwgURL.href;\n    const { host, hostname, pathname, protocol, search } = whatwgURL;\n    if (search) {\n        return null;\n    }\n    const scheme = protocol.slice(0, -1);\n    if (!Object.values(EndpointURLScheme).includes(scheme)) {\n        return null;\n    }\n    const isIp = isIpAddress(hostname);\n    const inputContainsDefaultPort = urlString.includes(`${host}:${DEFAULT_PORTS[scheme]}`) ||\n        (typeof value === \"string\" && value.includes(`${host}:${DEFAULT_PORTS[scheme]}`));\n    const authority = `${host}${inputContainsDefaultPort ? `:${DEFAULT_PORTS[scheme]}` : ``}`;\n    return {\n        scheme,\n        authority,\n        path: pathname,\n        normalizedPath: pathname.endsWith(\"/\") ? pathname : `${pathname}/`,\n        isIp,\n    };\n};\n","export const stringEquals = (value1, value2) => value1 === value2;\n","export const substring = (input, start, stop, reverse) => {\n    if (start >= stop || input.length < stop) {\n        return null;\n    }\n    if (!reverse) {\n        return input.substring(start, stop);\n    }\n    return input.substring(input.length - stop, input.length - start);\n};\n","export const uriEncode = (value) => encodeURIComponent(value).replace(/[!*'()]/g, (c) => `%${c.charCodeAt(0).toString(16).toUpperCase()}`);\n","import { getAttr } from \"../lib\";\nexport const evaluateTemplate = (template, options) => {\n    const evaluatedTemplateArr = [];\n    const templateContext = {\n        ...options.endpointParams,\n        ...options.referenceRecord,\n    };\n    let currentIndex = 0;\n    while (currentIndex < template.length) {\n        const openingBraceIndex = template.indexOf(\"{\", currentIndex);\n        if (openingBraceIndex === -1) {\n            evaluatedTemplateArr.push(template.slice(currentIndex));\n            break;\n        }\n        evaluatedTemplateArr.push(template.slice(currentIndex, openingBraceIndex));\n        const closingBraceIndex = template.indexOf(\"}\", openingBraceIndex);\n        if (closingBraceIndex === -1) {\n            evaluatedTemplateArr.push(template.slice(openingBraceIndex));\n            break;\n        }\n        if (template[openingBraceIndex + 1] === \"{\" && template[closingBraceIndex + 1] === \"}\") {\n            evaluatedTemplateArr.push(template.slice(openingBraceIndex + 1, closingBraceIndex));\n            currentIndex = closingBraceIndex + 2;\n        }\n        const parameterName = template.substring(openingBraceIndex + 1, closingBraceIndex);\n        if (parameterName.includes(\"#\")) {\n            const [refName, attrName] = parameterName.split(\"#\");\n            evaluatedTemplateArr.push(getAttr(templateContext[refName], attrName));\n        }\n        else {\n            evaluatedTemplateArr.push(templateContext[parameterName]);\n        }\n        currentIndex = closingBraceIndex + 1;\n    }\n    return evaluatedTemplateArr.join(\"\");\n};\n","import { EndpointError } from \"../types\";\nimport { callFunction } from \"./callFunction\";\nimport { evaluateTemplate } from \"./evaluateTemplate\";\nimport { getReferenceValue } from \"./getReferenceValue\";\nexport const evaluateExpression = (obj, keyName, options) => {\n    if (typeof obj === \"string\") {\n        return evaluateTemplate(obj, options);\n    }\n    else if (obj[\"fn\"]) {\n        return callFunction(obj, options);\n    }\n    else if (obj[\"ref\"]) {\n        return getReferenceValue(obj, options);\n    }\n    throw new EndpointError(`'${keyName}': ${String(obj)} is not a string, function or reference.`);\n};\n","export const getReferenceValue = ({ ref }, options) => {\n    const referenceRecord = {\n        ...options.endpointParams,\n        ...options.referenceRecord,\n    };\n    return referenceRecord[ref];\n};\n","import * as lib from \"../lib\";\nimport { evaluateExpression } from \"./evaluateExpression\";\nexport const callFunction = ({ fn, argv }, options) => {\n    const evaluatedArgs = argv.map((arg) => [\"boolean\", \"number\"].includes(typeof arg) ? arg : evaluateExpression(arg, \"arg\", options));\n    return fn.split(\".\").reduce((acc, key) => acc[key], lib)(...evaluatedArgs);\n};\n","import { debugId, toDebugString } from \"../debug\";\nimport { EndpointError } from \"../types\";\nimport { callFunction } from \"./callFunction\";\nexport const evaluateCondition = ({ assign, ...fnArgs }, options) => {\n    if (assign && assign in options.referenceRecord) {\n        throw new EndpointError(`'${assign}' is already defined in Reference Record.`);\n    }\n    const value = callFunction(fnArgs, options);\n    options.logger?.debug?.(debugId, `evaluateCondition: ${toDebugString(fnArgs)} = ${toDebugString(value)}`);\n    return {\n        result: value === \"\" ? true : !!value,\n        ...(assign != null && { toAssign: { name: assign, value } }),\n    };\n};\n","import { debugId, toDebugString } from \"../debug\";\nimport { evaluateCondition } from \"./evaluateCondition\";\nexport const evaluateConditions = (conditions = [], options) => {\n    const conditionsReferenceRecord = {};\n    for (const condition of conditions) {\n        const { result, toAssign } = evaluateCondition(condition, {\n            ...options,\n            referenceRecord: {\n                ...options.referenceRecord,\n                ...conditionsReferenceRecord,\n            },\n        });\n        if (!result) {\n            return { result };\n        }\n        if (toAssign) {\n            conditionsReferenceRecord[toAssign.name] = toAssign.value;\n            options.logger?.debug?.(debugId, `assign: ${toAssign.name} := ${toDebugString(toAssign.value)}`);\n        }\n    }\n    return { result: true, referenceRecord: conditionsReferenceRecord };\n};\n","import { EndpointError } from \"../types\";\nimport { evaluateExpression } from \"./evaluateExpression\";\nexport const getEndpointHeaders = (headers, options) => Object.entries(headers).reduce((acc, [headerKey, headerVal]) => ({\n    ...acc,\n    [headerKey]: headerVal.map((headerValEntry) => {\n        const processedExpr = evaluateExpression(headerValEntry, \"Header value entry\", options);\n        if (typeof processedExpr !== \"string\") {\n            throw new EndpointError(`Header '${headerKey}' value '${processedExpr}' is not a string`);\n        }\n        return processedExpr;\n    }),\n}), {});\n","import { EndpointError } from \"../types\";\nimport { evaluateTemplate } from \"./evaluateTemplate\";\nimport { getEndpointProperties } from \"./getEndpointProperties\";\nexport const getEndpointProperty = (property, options) => {\n    if (Array.isArray(property)) {\n        return property.map((propertyEntry) => getEndpointProperty(propertyEntry, options));\n    }\n    switch (typeof property) {\n        case \"string\":\n            return evaluateTemplate(property, options);\n        case \"object\":\n            if (property === null) {\n                throw new EndpointError(`Unexpected endpoint property: ${property}`);\n            }\n            return getEndpointProperties(property, options);\n        case \"boolean\":\n            return property;\n        default:\n            throw new EndpointError(`Unexpected endpoint property type: ${typeof property}`);\n    }\n};\n","import { getEndpointProperty } from \"./getEndpointProperty\";\nexport const getEndpointProperties = (properties, options) => Object.entries(properties).reduce((acc, [propertyKey, propertyVal]) => ({\n    ...acc,\n    [propertyKey]: getEndpointProperty(propertyVal, options),\n}), {});\n","import { EndpointError } from \"../types\";\nimport { evaluateExpression } from \"./evaluateExpression\";\nexport const getEndpointUrl = (endpointUrl, options) => {\n    const expression = evaluateExpression(endpointUrl, \"Endpoint URL\", options);\n    if (typeof expression === \"string\") {\n        try {\n            return new URL(expression);\n        }\n        catch (error) {\n            console.error(`Failed to construct URL with ${expression}`, error);\n            throw error;\n        }\n    }\n    throw new EndpointError(`Endpoint URL must be a string, got ${typeof expression}`);\n};\n","import { debugId, toDebugString } from \"../debug\";\nimport { evaluateConditions } from \"./evaluateConditions\";\nimport { getEndpointHeaders } from \"./getEndpointHeaders\";\nimport { getEndpointProperties } from \"./getEndpointProperties\";\nimport { getEndpointUrl } from \"./getEndpointUrl\";\nexport const evaluateEndpointRule = (endpointRule, options) => {\n    const { conditions, endpoint } = endpointRule;\n    const { result, referenceRecord } = evaluateConditions(conditions, options);\n    if (!result) {\n        return;\n    }\n    const endpointRuleOptions = {\n        ...options,\n        referenceRecord: { ...options.referenceRecord, ...referenceRecord },\n    };\n    const { url, properties, headers } = endpoint;\n    options.logger?.debug?.(debugId, `Resolving endpoint from template: ${toDebugString(endpoint)}`);\n    return {\n        ...(headers != undefined && {\n            headers: getEndpointHeaders(headers, endpointRuleOptions),\n        }),\n        ...(properties != undefined && {\n            properties: getEndpointProperties(properties, endpointRuleOptions),\n        }),\n        url: getEndpointUrl(url, endpointRuleOptions),\n    };\n};\n","import { EndpointError } from \"../types\";\nimport { evaluateConditions } from \"./evaluateConditions\";\nimport { evaluateExpression } from \"./evaluateExpression\";\nexport const evaluateErrorRule = (errorRule, options) => {\n    const { conditions, error } = errorRule;\n    const { result, referenceRecord } = evaluateConditions(conditions, options);\n    if (!result) {\n        return;\n    }\n    throw new EndpointError(evaluateExpression(error, \"Error\", {\n        ...options,\n        referenceRecord: { ...options.referenceRecord, ...referenceRecord },\n    }));\n};\n","import { evaluateConditions } from \"./evaluateConditions\";\nimport { evaluateRules } from \"./evaluateRules\";\nexport const evaluateTreeRule = (treeRule, options) => {\n    const { conditions, rules } = treeRule;\n    const { result, referenceRecord } = evaluateConditions(conditions, options);\n    if (!result) {\n        return;\n    }\n    return evaluateRules(rules, {\n        ...options,\n        referenceRecord: { ...options.referenceRecord, ...referenceRecord },\n    });\n};\n","import { EndpointError } from \"../types\";\nimport { evaluateEndpointRule } from \"./evaluateEndpointRule\";\nimport { evaluateErrorRule } from \"./evaluateErrorRule\";\nimport { evaluateTreeRule } from \"./evaluateTreeRule\";\nexport const evaluateRules = (rules, options) => {\n    for (const rule of rules) {\n        if (rule.type === \"endpoint\") {\n            const endpointOrUndefined = evaluateEndpointRule(rule, options);\n            if (endpointOrUndefined) {\n                return endpointOrUndefined;\n            }\n        }\n        else if (rule.type === \"error\") {\n            evaluateErrorRule(rule, options);\n        }\n        else if (rule.type === \"tree\") {\n            const endpointOrUndefined = evaluateTreeRule(rule, options);\n            if (endpointOrUndefined) {\n                return endpointOrUndefined;\n            }\n        }\n        else {\n            throw new EndpointError(`Unknown endpoint rule: ${rule}`);\n        }\n    }\n    throw new EndpointError(`Rules evaluation failed`);\n};\n","import { debugId, toDebugString } from \"./debug\";\nimport { EndpointError } from \"./types\";\nimport { evaluateRules } from \"./utils\";\nexport const resolveEndpoint = (ruleSetObject, options) => {\n    const { endpointParams, logger } = options;\n    const { parameters, rules } = ruleSetObject;\n    options.logger?.debug?.(debugId, `Initial EndpointParams: ${toDebugString(endpointParams)}`);\n    const paramsWithDefault = Object.entries(parameters)\n        .filter(([, v]) => v.default != null)\n        .map(([k, v]) => [k, v.default]);\n    if (paramsWithDefault.length > 0) {\n        for (const [paramKey, paramDefaultValue] of paramsWithDefault) {\n            endpointParams[paramKey] = endpointParams[paramKey] ?? paramDefaultValue;\n        }\n    }\n    const requiredParams = Object.entries(parameters)\n        .filter(([, v]) => v.required)\n        .map(([k]) => k);\n    for (const requiredParam of requiredParams) {\n        if (endpointParams[requiredParam] == null) {\n            throw new EndpointError(`Missing required parameter: '${requiredParam}'`);\n        }\n    }\n    const endpoint = evaluateRules(rules, { endpointParams, logger, referenceRecord: {} });\n    if (options.endpointParams?.Endpoint) {\n        try {\n            const givenEndpoint = new URL(options.endpointParams.Endpoint);\n            const { protocol, port } = givenEndpoint;\n            endpoint.url.protocol = protocol;\n            endpoint.url.port = port;\n        }\n        catch (e) {\n        }\n    }\n    options.logger?.debug?.(debugId, `Resolved endpoint: ${toDebugString(endpoint)}`);\n    return endpoint;\n};\n","export const USER_AGENT = \"user-agent\";\nexport const X_AMZ_USER_AGENT = \"x-amz-user-agent\";\nexport const SPACE = \" \";\nexport const UA_ESCAPE_REGEX = /[^\\!\\#\\$\\%\\&\\'\\*\\+\\-\\.\\^\\_\\`\\|\\~\\d\\w]/g;\n","import { HttpRequest } from \"@aws-sdk/protocol-http\";\nimport { getUserAgentPrefix } from \"@aws-sdk/util-endpoints\";\nimport { SPACE, UA_ESCAPE_REGEX, USER_AGENT, X_AMZ_USER_AGENT } from \"./constants\";\nexport const userAgentMiddleware = (options) => (next, context) => async (args) => {\n    const { request } = args;\n    if (!HttpRequest.isInstance(request))\n        return next(args);\n    const { headers } = request;\n    const userAgent = context?.userAgent?.map(escapeUserAgent) || [];\n    const defaultUserAgent = (await options.defaultUserAgentProvider()).map(escapeUserAgent);\n    const customUserAgent = options?.customUserAgent?.map(escapeUserAgent) || [];\n    const prefix = getUserAgentPrefix();\n    const sdkUserAgentValue = (prefix ? [prefix] : [])\n        .concat([...defaultUserAgent, ...userAgent, ...customUserAgent])\n        .join(SPACE);\n    const normalUAValue = [\n        ...defaultUserAgent.filter((section) => section.startsWith(\"aws-sdk-\")),\n        ...customUserAgent,\n    ].join(SPACE);\n    if (options.runtime !== \"browser\") {\n        if (normalUAValue) {\n            headers[X_AMZ_USER_AGENT] = headers[X_AMZ_USER_AGENT]\n                ? `${headers[USER_AGENT]} ${normalUAValue}`\n                : normalUAValue;\n        }\n        headers[USER_AGENT] = sdkUserAgentValue;\n    }\n    else {\n        headers[X_AMZ_USER_AGENT] = sdkUserAgentValue;\n    }\n    return next({\n        ...args,\n        request,\n    });\n};\nconst escapeUserAgent = ([name, version]) => {\n    const prefixSeparatorIndex = name.indexOf(\"/\");\n    const prefix = name.substring(0, prefixSeparatorIndex);\n    let uaName = name.substring(prefixSeparatorIndex + 1);\n    if (prefix === \"api\") {\n        uaName = uaName.toLowerCase();\n    }\n    return [prefix, uaName, version]\n        .filter((item) => item && item.length > 0)\n        .map((item) => item?.replace(UA_ESCAPE_REGEX, \"_\"))\n        .join(\"/\");\n};\nexport const getUserAgentMiddlewareOptions = {\n    name: \"getUserAgentMiddleware\",\n    step: \"build\",\n    priority: \"low\",\n    tags: [\"SET_USER_AGENT\", \"USER_AGENT\"],\n    override: true,\n};\nexport const getUserAgentPlugin = (config) => ({\n    applyToStack: (clientStack) => {\n        clientStack.add(userAgentMiddleware(config), getUserAgentMiddlewareOptions);\n    },\n});\n","export class NoOpLogger {\n    trace() { }\n    debug() { }\n    info() { }\n    warn() { }\n    error() { }\n}\n","export const constructStack = () => {\n    let absoluteEntries = [];\n    let relativeEntries = [];\n    const entriesNameSet = new Set();\n    const sort = (entries) => entries.sort((a, b) => stepWeights[b.step] - stepWeights[a.step] ||\n        priorityWeights[b.priority || \"normal\"] - priorityWeights[a.priority || \"normal\"]);\n    const removeByName = (toRemove) => {\n        let isRemoved = false;\n        const filterCb = (entry) => {\n            if (entry.name && entry.name === toRemove) {\n                isRemoved = true;\n                entriesNameSet.delete(toRemove);\n                return false;\n            }\n            return true;\n        };\n        absoluteEntries = absoluteEntries.filter(filterCb);\n        relativeEntries = relativeEntries.filter(filterCb);\n        return isRemoved;\n    };\n    const removeByReference = (toRemove) => {\n        let isRemoved = false;\n        const filterCb = (entry) => {\n            if (entry.middleware === toRemove) {\n                isRemoved = true;\n                if (entry.name)\n                    entriesNameSet.delete(entry.name);\n                return false;\n            }\n            return true;\n        };\n        absoluteEntries = absoluteEntries.filter(filterCb);\n        relativeEntries = relativeEntries.filter(filterCb);\n        return isRemoved;\n    };\n    const cloneTo = (toStack) => {\n        absoluteEntries.forEach((entry) => {\n            toStack.add(entry.middleware, { ...entry });\n        });\n        relativeEntries.forEach((entry) => {\n            toStack.addRelativeTo(entry.middleware, { ...entry });\n        });\n        return toStack;\n    };\n    const expandRelativeMiddlewareList = (from) => {\n        const expandedMiddlewareList = [];\n        from.before.forEach((entry) => {\n            if (entry.before.length === 0 && entry.after.length === 0) {\n                expandedMiddlewareList.push(entry);\n            }\n            else {\n                expandedMiddlewareList.push(...expandRelativeMiddlewareList(entry));\n            }\n        });\n        expandedMiddlewareList.push(from);\n        from.after.reverse().forEach((entry) => {\n            if (entry.before.length === 0 && entry.after.length === 0) {\n                expandedMiddlewareList.push(entry);\n            }\n            else {\n                expandedMiddlewareList.push(...expandRelativeMiddlewareList(entry));\n            }\n        });\n        return expandedMiddlewareList;\n    };\n    const getMiddlewareList = (debug = false) => {\n        const normalizedAbsoluteEntries = [];\n        const normalizedRelativeEntries = [];\n        const normalizedEntriesNameMap = {};\n        absoluteEntries.forEach((entry) => {\n            const normalizedEntry = {\n                ...entry,\n                before: [],\n                after: [],\n            };\n            if (normalizedEntry.name)\n                normalizedEntriesNameMap[normalizedEntry.name] = normalizedEntry;\n            normalizedAbsoluteEntries.push(normalizedEntry);\n        });\n        relativeEntries.forEach((entry) => {\n            const normalizedEntry = {\n                ...entry,\n                before: [],\n                after: [],\n            };\n            if (normalizedEntry.name)\n                normalizedEntriesNameMap[normalizedEntry.name] = normalizedEntry;\n            normalizedRelativeEntries.push(normalizedEntry);\n        });\n        normalizedRelativeEntries.forEach((entry) => {\n            if (entry.toMiddleware) {\n                const toMiddleware = normalizedEntriesNameMap[entry.toMiddleware];\n                if (toMiddleware === undefined) {\n                    if (debug) {\n                        return;\n                    }\n                    throw new Error(`${entry.toMiddleware} is not found when adding ${entry.name || \"anonymous\"} middleware ${entry.relation} ${entry.toMiddleware}`);\n                }\n                if (entry.relation === \"after\") {\n                    toMiddleware.after.push(entry);\n                }\n                if (entry.relation === \"before\") {\n                    toMiddleware.before.push(entry);\n                }\n            }\n        });\n        const mainChain = sort(normalizedAbsoluteEntries)\n            .map(expandRelativeMiddlewareList)\n            .reduce((wholeList, expendedMiddlewareList) => {\n            wholeList.push(...expendedMiddlewareList);\n            return wholeList;\n        }, []);\n        return mainChain;\n    };\n    const stack = {\n        add: (middleware, options = {}) => {\n            const { name, override } = options;\n            const entry = {\n                step: \"initialize\",\n                priority: \"normal\",\n                middleware,\n                ...options,\n            };\n            if (name) {\n                if (entriesNameSet.has(name)) {\n                    if (!override)\n                        throw new Error(`Duplicate middleware name '${name}'`);\n                    const toOverrideIndex = absoluteEntries.findIndex((entry) => entry.name === name);\n                    const toOverride = absoluteEntries[toOverrideIndex];\n                    if (toOverride.step !== entry.step || toOverride.priority !== entry.priority) {\n                        throw new Error(`\"${name}\" middleware with ${toOverride.priority} priority in ${toOverride.step} step cannot be ` +\n                            `overridden by same-name middleware with ${entry.priority} priority in ${entry.step} step.`);\n                    }\n                    absoluteEntries.splice(toOverrideIndex, 1);\n                }\n                entriesNameSet.add(name);\n            }\n            absoluteEntries.push(entry);\n        },\n        addRelativeTo: (middleware, options) => {\n            const { name, override } = options;\n            const entry = {\n                middleware,\n                ...options,\n            };\n            if (name) {\n                if (entriesNameSet.has(name)) {\n                    if (!override)\n                        throw new Error(`Duplicate middleware name '${name}'`);\n                    const toOverrideIndex = relativeEntries.findIndex((entry) => entry.name === name);\n                    const toOverride = relativeEntries[toOverrideIndex];\n                    if (toOverride.toMiddleware !== entry.toMiddleware || toOverride.relation !== entry.relation) {\n                        throw new Error(`\"${name}\" middleware ${toOverride.relation} \"${toOverride.toMiddleware}\" middleware cannot be overridden ` +\n                            `by same-name middleware ${entry.relation} \"${entry.toMiddleware}\" middleware.`);\n                    }\n                    relativeEntries.splice(toOverrideIndex, 1);\n                }\n                entriesNameSet.add(name);\n            }\n            relativeEntries.push(entry);\n        },\n        clone: () => cloneTo(constructStack()),\n        use: (plugin) => {\n            plugin.applyToStack(stack);\n        },\n        remove: (toRemove) => {\n            if (typeof toRemove === \"string\")\n                return removeByName(toRemove);\n            else\n                return removeByReference(toRemove);\n        },\n        removeByTag: (toRemove) => {\n            let isRemoved = false;\n            const filterCb = (entry) => {\n                const { tags, name } = entry;\n                if (tags && tags.includes(toRemove)) {\n                    if (name)\n                        entriesNameSet.delete(name);\n                    isRemoved = true;\n                    return false;\n                }\n                return true;\n            };\n            absoluteEntries = absoluteEntries.filter(filterCb);\n            relativeEntries = relativeEntries.filter(filterCb);\n            return isRemoved;\n        },\n        concat: (from) => {\n            const cloned = cloneTo(constructStack());\n            cloned.use(from);\n            return cloned;\n        },\n        applyToStack: cloneTo,\n        identify: () => {\n            return getMiddlewareList(true).map((mw) => {\n                return mw.name + \": \" + (mw.tags || []).join(\",\");\n            });\n        },\n        resolve: (handler, context) => {\n            for (const middleware of getMiddlewareList()\n                .map((entry) => entry.middleware)\n                .reverse()) {\n                handler = middleware(handler, context);\n            }\n            return handler;\n        },\n    };\n    return stack;\n};\nconst stepWeights = {\n    initialize: 5,\n    serialize: 4,\n    build: 3,\n    finalizeRequest: 2,\n    deserialize: 1,\n};\nconst priorityWeights = {\n    high: 3,\n    normal: 2,\n    low: 1,\n};\n","import { constructStack } from \"@aws-sdk/middleware-stack\";\nexport class Client {\n    constructor(config) {\n        this.middlewareStack = constructStack();\n        this.config = config;\n    }\n    send(command, optionsOrCb, cb) {\n        const options = typeof optionsOrCb !== \"function\" ? optionsOrCb : undefined;\n        const callback = typeof optionsOrCb === \"function\" ? optionsOrCb : cb;\n        const handler = command.resolveMiddleware(this.middlewareStack, this.config, options);\n        if (callback) {\n            handler(command)\n                .then((result) => callback(null, result.output), (err) => callback(err))\n                .catch(() => { });\n        }\n        else {\n            return handler(command).then((result) => result.output);\n        }\n    }\n    destroy() {\n        if (this.config.requestHandler.destroy)\n            this.config.requestHandler.destroy();\n    }\n}\n","import { constructStack } from \"@aws-sdk/middleware-stack\";\nexport class Command {\n    constructor() {\n        this.middlewareStack = constructStack();\n    }\n}\n","export const SENSITIVE_STRING = \"***SensitiveInformation***\";\n","export const parseBoolean = (value) => {\n    switch (value) {\n        case \"true\":\n            return true;\n        case \"false\":\n            return false;\n        default:\n            throw new Error(`Unable to parse boolean value \"${value}\"`);\n    }\n};\nexport const expectBoolean = (value) => {\n    if (value === null || value === undefined) {\n        return undefined;\n    }\n    if (typeof value === \"number\") {\n        if (value === 0 || value === 1) {\n            logger.warn(stackTraceWarning(`Expected boolean, got ${typeof value}: ${value}`));\n        }\n        if (value === 0) {\n            return false;\n        }\n        if (value === 1) {\n            return true;\n        }\n    }\n    if (typeof value === \"string\") {\n        const lower = value.toLowerCase();\n        if (lower === \"false\" || lower === \"true\") {\n            logger.warn(stackTraceWarning(`Expected boolean, got ${typeof value}: ${value}`));\n        }\n        if (lower === \"false\") {\n            return false;\n        }\n        if (lower === \"true\") {\n            return true;\n        }\n    }\n    if (typeof value === \"boolean\") {\n        return value;\n    }\n    throw new TypeError(`Expected boolean, got ${typeof value}: ${value}`);\n};\nexport const expectNumber = (value) => {\n    if (value === null || value === undefined) {\n        return undefined;\n    }\n    if (typeof value === \"string\") {\n        const parsed = parseFloat(value);\n        if (!Number.isNaN(parsed)) {\n            if (String(parsed) !== String(value)) {\n                logger.warn(stackTraceWarning(`Expected number but observed string: ${value}`));\n            }\n            return parsed;\n        }\n    }\n    if (typeof value === \"number\") {\n        return value;\n    }\n    throw new TypeError(`Expected number, got ${typeof value}: ${value}`);\n};\nconst MAX_FLOAT = Math.ceil(2 ** 127 * (2 - 2 ** -23));\nexport const expectFloat32 = (value) => {\n    const expected = expectNumber(value);\n    if (expected !== undefined && !Number.isNaN(expected) && expected !== Infinity && expected !== -Infinity) {\n        if (Math.abs(expected) > MAX_FLOAT) {\n            throw new TypeError(`Expected 32-bit float, got ${value}`);\n        }\n    }\n    return expected;\n};\nexport const expectLong = (value) => {\n    if (value === null || value === undefined) {\n        return undefined;\n    }\n    if (Number.isInteger(value) && !Number.isNaN(value)) {\n        return value;\n    }\n    throw new TypeError(`Expected integer, got ${typeof value}: ${value}`);\n};\nexport const expectInt = expectLong;\nexport const expectInt32 = (value) => expectSizedInt(value, 32);\nexport const expectShort = (value) => expectSizedInt(value, 16);\nexport const expectByte = (value) => expectSizedInt(value, 8);\nconst expectSizedInt = (value, size) => {\n    const expected = expectLong(value);\n    if (expected !== undefined && castInt(expected, size) !== expected) {\n        throw new TypeError(`Expected ${size}-bit integer, got ${value}`);\n    }\n    return expected;\n};\nconst castInt = (value, size) => {\n    switch (size) {\n        case 32:\n            return Int32Array.of(value)[0];\n        case 16:\n            return Int16Array.of(value)[0];\n        case 8:\n            return Int8Array.of(value)[0];\n    }\n};\nexport const expectNonNull = (value, location) => {\n    if (value === null || value === undefined) {\n        if (location) {\n            throw new TypeError(`Expected a non-null value for ${location}`);\n        }\n        throw new TypeError(\"Expected a non-null value\");\n    }\n    return value;\n};\nexport const expectObject = (value) => {\n    if (value === null || value === undefined) {\n        return undefined;\n    }\n    if (typeof value === \"object\" && !Array.isArray(value)) {\n        return value;\n    }\n    const receivedType = Array.isArray(value) ? \"array\" : typeof value;\n    throw new TypeError(`Expected object, got ${receivedType}: ${value}`);\n};\nexport const expectString = (value) => {\n    if (value === null || value === undefined) {\n        return undefined;\n    }\n    if (typeof value === \"string\") {\n        return value;\n    }\n    if ([\"boolean\", \"number\", \"bigint\"].includes(typeof value)) {\n        logger.warn(stackTraceWarning(`Expected string, got ${typeof value}: ${value}`));\n        return String(value);\n    }\n    throw new TypeError(`Expected string, got ${typeof value}: ${value}`);\n};\nexport const expectUnion = (value) => {\n    if (value === null || value === undefined) {\n        return undefined;\n    }\n    const asObject = expectObject(value);\n    const setKeys = Object.entries(asObject)\n        .filter(([, v]) => v != null)\n        .map(([k]) => k);\n    if (setKeys.length === 0) {\n        throw new TypeError(`Unions must have exactly one non-null member. None were found.`);\n    }\n    if (setKeys.length > 1) {\n        throw new TypeError(`Unions must have exactly one non-null member. Keys ${setKeys} were not null.`);\n    }\n    return asObject;\n};\nexport const strictParseDouble = (value) => {\n    if (typeof value == \"string\") {\n        return expectNumber(parseNumber(value));\n    }\n    return expectNumber(value);\n};\nexport const strictParseFloat = strictParseDouble;\nexport const strictParseFloat32 = (value) => {\n    if (typeof value == \"string\") {\n        return expectFloat32(parseNumber(value));\n    }\n    return expectFloat32(value);\n};\nconst NUMBER_REGEX = /(-?(?:0|[1-9]\\d*)(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)|(-?Infinity)|(NaN)/g;\nconst parseNumber = (value) => {\n    const matches = value.match(NUMBER_REGEX);\n    if (matches === null || matches[0].length !== value.length) {\n        throw new TypeError(`Expected real number, got implicit NaN`);\n    }\n    return parseFloat(value);\n};\nexport const limitedParseDouble = (value) => {\n    if (typeof value == \"string\") {\n        return parseFloatString(value);\n    }\n    return expectNumber(value);\n};\nexport const handleFloat = limitedParseDouble;\nexport const limitedParseFloat = limitedParseDouble;\nexport const limitedParseFloat32 = (value) => {\n    if (typeof value == \"string\") {\n        return parseFloatString(value);\n    }\n    return expectFloat32(value);\n};\nconst parseFloatString = (value) => {\n    switch (value) {\n        case \"NaN\":\n            return NaN;\n        case \"Infinity\":\n            return Infinity;\n        case \"-Infinity\":\n            return -Infinity;\n        default:\n            throw new Error(`Unable to parse float value: ${value}`);\n    }\n};\nexport const strictParseLong = (value) => {\n    if (typeof value === \"string\") {\n        return expectLong(parseNumber(value));\n    }\n    return expectLong(value);\n};\nexport const strictParseInt = strictParseLong;\nexport const strictParseInt32 = (value) => {\n    if (typeof value === \"string\") {\n        return expectInt32(parseNumber(value));\n    }\n    return expectInt32(value);\n};\nexport const strictParseShort = (value) => {\n    if (typeof value === \"string\") {\n        return expectShort(parseNumber(value));\n    }\n    return expectShort(value);\n};\nexport const strictParseByte = (value) => {\n    if (typeof value === \"string\") {\n        return expectByte(parseNumber(value));\n    }\n    return expectByte(value);\n};\nconst stackTraceWarning = (message) => {\n    return String(new TypeError(message).stack || message)\n        .split(\"\\n\")\n        .slice(0, 5)\n        .filter((s) => !s.includes(\"stackTraceWarning\"))\n        .join(\"\\n\");\n};\nexport const logger = {\n    warn: console.warn,\n};\n","import { strictParseByte, strictParseDouble, strictParseFloat32, strictParseShort } from \"./parse-utils\";\nconst DAYS = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\nconst MONTHS = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\nexport function dateToUtcString(date) {\n    const year = date.getUTCFullYear();\n    const month = date.getUTCMonth();\n    const dayOfWeek = date.getUTCDay();\n    const dayOfMonthInt = date.getUTCDate();\n    const hoursInt = date.getUTCHours();\n    const minutesInt = date.getUTCMinutes();\n    const secondsInt = date.getUTCSeconds();\n    const dayOfMonthString = dayOfMonthInt < 10 ? `0${dayOfMonthInt}` : `${dayOfMonthInt}`;\n    const hoursString = hoursInt < 10 ? `0${hoursInt}` : `${hoursInt}`;\n    const minutesString = minutesInt < 10 ? `0${minutesInt}` : `${minutesInt}`;\n    const secondsString = secondsInt < 10 ? `0${secondsInt}` : `${secondsInt}`;\n    return `${DAYS[dayOfWeek]}, ${dayOfMonthString} ${MONTHS[month]} ${year} ${hoursString}:${minutesString}:${secondsString} GMT`;\n}\nconst RFC3339 = new RegExp(/^(\\d{4})-(\\d{2})-(\\d{2})[tT](\\d{2}):(\\d{2}):(\\d{2})(?:\\.(\\d+))?[zZ]$/);\nexport const parseRfc3339DateTime = (value) => {\n    if (value === null || value === undefined) {\n        return undefined;\n    }\n    if (typeof value !== \"string\") {\n        throw new TypeError(\"RFC-3339 date-times must be expressed as strings\");\n    }\n    const match = RFC3339.exec(value);\n    if (!match) {\n        throw new TypeError(\"Invalid RFC-3339 date-time value\");\n    }\n    const [_, yearStr, monthStr, dayStr, hours, minutes, seconds, fractionalMilliseconds] = match;\n    const year = strictParseShort(stripLeadingZeroes(yearStr));\n    const month = parseDateValue(monthStr, \"month\", 1, 12);\n    const day = parseDateValue(dayStr, \"day\", 1, 31);\n    return buildDate(year, month, day, { hours, minutes, seconds, fractionalMilliseconds });\n};\nconst RFC3339_WITH_OFFSET = new RegExp(/^(\\d{4})-(\\d{2})-(\\d{2})[tT](\\d{2}):(\\d{2}):(\\d{2})(?:\\.(\\d+))?(([-+]\\d{2}\\:\\d{2})|[zZ])$/);\nexport const parseRfc3339DateTimeWithOffset = (value) => {\n    if (value === null || value === undefined) {\n        return undefined;\n    }\n    if (typeof value !== \"string\") {\n        throw new TypeError(\"RFC-3339 date-times must be expressed as strings\");\n    }\n    const match = RFC3339_WITH_OFFSET.exec(value);\n    if (!match) {\n        throw new TypeError(\"Invalid RFC-3339 date-time value\");\n    }\n    const [_, yearStr, monthStr, dayStr, hours, minutes, seconds, fractionalMilliseconds, offsetStr] = match;\n    const year = strictParseShort(stripLeadingZeroes(yearStr));\n    const month = parseDateValue(monthStr, \"month\", 1, 12);\n    const day = parseDateValue(dayStr, \"day\", 1, 31);\n    const date = buildDate(year, month, day, { hours, minutes, seconds, fractionalMilliseconds });\n    if (offsetStr.toUpperCase() != \"Z\") {\n        date.setTime(date.getTime() - parseOffsetToMilliseconds(offsetStr));\n    }\n    return date;\n};\nconst IMF_FIXDATE = new RegExp(/^(?:Mon|Tue|Wed|Thu|Fri|Sat|Sun), (\\d{2}) (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) (\\d{4}) (\\d{1,2}):(\\d{2}):(\\d{2})(?:\\.(\\d+))? GMT$/);\nconst RFC_850_DATE = new RegExp(/^(?:Monday|Tuesday|Wednesday|Thursday|Friday|Saturday|Sunday), (\\d{2})-(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)-(\\d{2}) (\\d{1,2}):(\\d{2}):(\\d{2})(?:\\.(\\d+))? GMT$/);\nconst ASC_TIME = new RegExp(/^(?:Mon|Tue|Wed|Thu|Fri|Sat|Sun) (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) ( [1-9]|\\d{2}) (\\d{1,2}):(\\d{2}):(\\d{2})(?:\\.(\\d+))? (\\d{4})$/);\nexport const parseRfc7231DateTime = (value) => {\n    if (value === null || value === undefined) {\n        return undefined;\n    }\n    if (typeof value !== \"string\") {\n        throw new TypeError(\"RFC-7231 date-times must be expressed as strings\");\n    }\n    let match = IMF_FIXDATE.exec(value);\n    if (match) {\n        const [_, dayStr, monthStr, yearStr, hours, minutes, seconds, fractionalMilliseconds] = match;\n        return buildDate(strictParseShort(stripLeadingZeroes(yearStr)), parseMonthByShortName(monthStr), parseDateValue(dayStr, \"day\", 1, 31), { hours, minutes, seconds, fractionalMilliseconds });\n    }\n    match = RFC_850_DATE.exec(value);\n    if (match) {\n        const [_, dayStr, monthStr, yearStr, hours, minutes, seconds, fractionalMilliseconds] = match;\n        return adjustRfc850Year(buildDate(parseTwoDigitYear(yearStr), parseMonthByShortName(monthStr), parseDateValue(dayStr, \"day\", 1, 31), {\n            hours,\n            minutes,\n            seconds,\n            fractionalMilliseconds,\n        }));\n    }\n    match = ASC_TIME.exec(value);\n    if (match) {\n        const [_, monthStr, dayStr, hours, minutes, seconds, fractionalMilliseconds, yearStr] = match;\n        return buildDate(strictParseShort(stripLeadingZeroes(yearStr)), parseMonthByShortName(monthStr), parseDateValue(dayStr.trimLeft(), \"day\", 1, 31), { hours, minutes, seconds, fractionalMilliseconds });\n    }\n    throw new TypeError(\"Invalid RFC-7231 date-time value\");\n};\nexport const parseEpochTimestamp = (value) => {\n    if (value === null || value === undefined) {\n        return undefined;\n    }\n    let valueAsDouble;\n    if (typeof value === \"number\") {\n        valueAsDouble = value;\n    }\n    else if (typeof value === \"string\") {\n        valueAsDouble = strictParseDouble(value);\n    }\n    else {\n        throw new TypeError(\"Epoch timestamps must be expressed as floating point numbers or their string representation\");\n    }\n    if (Number.isNaN(valueAsDouble) || valueAsDouble === Infinity || valueAsDouble === -Infinity) {\n        throw new TypeError(\"Epoch timestamps must be valid, non-Infinite, non-NaN numerics\");\n    }\n    return new Date(Math.round(valueAsDouble * 1000));\n};\nconst buildDate = (year, month, day, time) => {\n    const adjustedMonth = month - 1;\n    validateDayOfMonth(year, adjustedMonth, day);\n    return new Date(Date.UTC(year, adjustedMonth, day, parseDateValue(time.hours, \"hour\", 0, 23), parseDateValue(time.minutes, \"minute\", 0, 59), parseDateValue(time.seconds, \"seconds\", 0, 60), parseMilliseconds(time.fractionalMilliseconds)));\n};\nconst parseTwoDigitYear = (value) => {\n    const thisYear = new Date().getUTCFullYear();\n    const valueInThisCentury = Math.floor(thisYear / 100) * 100 + strictParseShort(stripLeadingZeroes(value));\n    if (valueInThisCentury < thisYear) {\n        return valueInThisCentury + 100;\n    }\n    return valueInThisCentury;\n};\nconst FIFTY_YEARS_IN_MILLIS = 50 * 365 * 24 * 60 * 60 * 1000;\nconst adjustRfc850Year = (input) => {\n    if (input.getTime() - new Date().getTime() > FIFTY_YEARS_IN_MILLIS) {\n        return new Date(Date.UTC(input.getUTCFullYear() - 100, input.getUTCMonth(), input.getUTCDate(), input.getUTCHours(), input.getUTCMinutes(), input.getUTCSeconds(), input.getUTCMilliseconds()));\n    }\n    return input;\n};\nconst parseMonthByShortName = (value) => {\n    const monthIdx = MONTHS.indexOf(value);\n    if (monthIdx < 0) {\n        throw new TypeError(`Invalid month: ${value}`);\n    }\n    return monthIdx + 1;\n};\nconst DAYS_IN_MONTH = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\nconst validateDayOfMonth = (year, month, day) => {\n    let maxDays = DAYS_IN_MONTH[month];\n    if (month === 1 && isLeapYear(year)) {\n        maxDays = 29;\n    }\n    if (day > maxDays) {\n        throw new TypeError(`Invalid day for ${MONTHS[month]} in ${year}: ${day}`);\n    }\n};\nconst isLeapYear = (year) => {\n    return year % 4 === 0 && (year % 100 !== 0 || year % 400 === 0);\n};\nconst parseDateValue = (value, type, lower, upper) => {\n    const dateVal = strictParseByte(stripLeadingZeroes(value));\n    if (dateVal < lower || dateVal > upper) {\n        throw new TypeError(`${type} must be between ${lower} and ${upper}, inclusive`);\n    }\n    return dateVal;\n};\nconst parseMilliseconds = (value) => {\n    if (value === null || value === undefined) {\n        return 0;\n    }\n    return strictParseFloat32(\"0.\" + value) * 1000;\n};\nconst parseOffsetToMilliseconds = (value) => {\n    const directionStr = value[0];\n    let direction = 1;\n    if (directionStr == \"+\") {\n        direction = 1;\n    }\n    else if (directionStr == \"-\") {\n        direction = -1;\n    }\n    else {\n        throw new TypeError(`Offset direction, ${directionStr}, must be \"+\" or \"-\"`);\n    }\n    const hour = Number(value.substring(1, 3));\n    const minute = Number(value.substring(4, 6));\n    return direction * (hour * 60 + minute) * 60 * 1000;\n};\nconst stripLeadingZeroes = (value) => {\n    let idx = 0;\n    while (idx < value.length - 1 && value.charAt(idx) === \"0\") {\n        idx++;\n    }\n    if (idx === 0) {\n        return value;\n    }\n    return value.slice(idx);\n};\n","export class ServiceException extends Error {\n    constructor(options) {\n        super(options.message);\n        Object.setPrototypeOf(this, ServiceException.prototype);\n        this.name = options.name;\n        this.$fault = options.$fault;\n        this.$metadata = options.$metadata;\n    }\n}\nexport const decorateServiceException = (exception, additions = {}) => {\n    Object.entries(additions)\n        .filter(([, v]) => v !== undefined)\n        .forEach(([k, v]) => {\n        if (exception[k] == undefined || exception[k] === \"\") {\n            exception[k] = v;\n        }\n    });\n    const message = exception.message || exception.Message || \"UnknownError\";\n    exception.message = message;\n    delete exception.Message;\n    return exception;\n};\n","import { decorateServiceException } from \"./exceptions\";\nexport const throwDefaultError = ({ output, parsedBody, exceptionCtor, errorCode }) => {\n    const $metadata = deserializeMetadata(output);\n    const statusCode = $metadata.httpStatusCode ? $metadata.httpStatusCode + \"\" : undefined;\n    const response = new exceptionCtor({\n        name: parsedBody?.code || parsedBody?.Code || errorCode || statusCode || \"UnknownError\",\n        $fault: \"client\",\n        $metadata,\n    });\n    throw decorateServiceException(response, parsedBody);\n};\nexport const withBaseException = (ExceptionCtor) => {\n    return ({ output, parsedBody, errorCode }) => {\n        throwDefaultError({ output, parsedBody, exceptionCtor: ExceptionCtor, errorCode });\n    };\n};\nconst deserializeMetadata = (output) => ({\n    httpStatusCode: output.statusCode,\n    requestId: output.headers[\"x-amzn-requestid\"] ?? output.headers[\"x-amzn-request-id\"] ?? output.headers[\"x-amz-request-id\"],\n    extendedRequestId: output.headers[\"x-amz-id-2\"],\n    cfId: output.headers[\"x-amz-cf-id\"],\n});\n","export const loadConfigsForDefaultMode = (mode) => {\n    switch (mode) {\n        case \"standard\":\n            return {\n                retryMode: \"standard\",\n                connectionTimeout: 3100,\n            };\n        case \"in-region\":\n            return {\n                retryMode: \"standard\",\n                connectionTimeout: 1100,\n            };\n        case \"cross-region\":\n            return {\n                retryMode: \"standard\",\n                connectionTimeout: 3100,\n            };\n        case \"mobile\":\n            return {\n                retryMode: \"standard\",\n                connectionTimeout: 30000,\n            };\n        default:\n            return {};\n    }\n};\n","let warningEmitted = false;\nexport const emitWarningIfUnsupportedVersion = (version) => {\n    if (version && !warningEmitted && parseInt(version.substring(1, version.indexOf(\".\"))) < 14) {\n        warningEmitted = true;\n    }\n};\n","export function extendedEncodeURIComponent(str) {\n    return encodeURIComponent(str).replace(/[!'()*]/g, function (c) {\n        return \"%\" + c.charCodeAt(0).toString(16).toUpperCase();\n    });\n}\n","export const getValueFromTextNode = (obj) => {\n    const textNodeName = \"#text\";\n    for (const key in obj) {\n        if (obj.hasOwnProperty(key) && obj[key][textNodeName] !== undefined) {\n            obj[key] = obj[key][textNodeName];\n        }\n        else if (typeof obj[key] === \"object\" && obj[key] !== null) {\n            obj[key] = getValueFromTextNode(obj[key]);\n        }\n    }\n    return obj;\n};\n","export const StringWrapper = function () {\n    const Class = Object.getPrototypeOf(this).constructor;\n    const Constructor = Function.bind.apply(String, [null, ...arguments]);\n    const instance = new Constructor();\n    Object.setPrototypeOf(instance, Class.prototype);\n    return instance;\n};\nStringWrapper.prototype = Object.create(String.prototype, {\n    constructor: {\n        value: StringWrapper,\n        enumerable: false,\n        writable: true,\n        configurable: true,\n    },\n});\nObject.setPrototypeOf(StringWrapper, String);\nexport class LazyJsonString extends StringWrapper {\n    deserializeJSON() {\n        return JSON.parse(super.toString());\n    }\n    toJSON() {\n        return super.toString();\n    }\n    static fromObject(object) {\n        if (object instanceof LazyJsonString) {\n            return object;\n        }\n        else if (object instanceof String || typeof object === \"string\") {\n            return new LazyJsonString(object);\n        }\n        return new LazyJsonString(JSON.stringify(object));\n    }\n}\n","export function map(arg0, arg1, arg2) {\n    let target;\n    let filter;\n    let instructions;\n    if (typeof arg1 === \"undefined\" && typeof arg2 === \"undefined\") {\n        target = {};\n        instructions = arg0;\n    }\n    else {\n        target = arg0;\n        if (typeof arg1 === \"function\") {\n            filter = arg1;\n            instructions = arg2;\n            return mapWithFilter(target, filter, instructions);\n        }\n        else {\n            instructions = arg1;\n        }\n    }\n    for (const key of Object.keys(instructions)) {\n        if (!Array.isArray(instructions[key])) {\n            target[key] = instructions[key];\n            continue;\n        }\n        applyInstruction(target, null, instructions, key);\n    }\n    return target;\n}\nexport const convertMap = (target) => {\n    const output = {};\n    for (const [k, v] of Object.entries(target || {})) {\n        output[k] = [, v];\n    }\n    return output;\n};\nexport const take = (source, instructions) => {\n    const out = {};\n    for (const key in instructions) {\n        applyInstruction(out, source, instructions, key);\n    }\n    return out;\n};\nconst mapWithFilter = (target, filter, instructions) => {\n    return map(target, Object.entries(instructions).reduce((_instructions, [key, value]) => {\n        if (Array.isArray(value)) {\n            _instructions[key] = value;\n        }\n        else {\n            if (typeof value === \"function\") {\n                _instructions[key] = [filter, value()];\n            }\n            else {\n                _instructions[key] = [filter, value];\n            }\n        }\n        return _instructions;\n    }, {}));\n};\nconst applyInstruction = (target, source, instructions, targetKey) => {\n    if (source !== null) {\n        let instruction = instructions[targetKey];\n        if (typeof instruction === \"function\") {\n            instruction = [, instruction];\n        }\n        const [filter = nonNullish, valueFn = pass, sourceKey = targetKey] = instruction;\n        if ((typeof filter === \"function\" && filter(source[sourceKey])) || (typeof filter !== \"function\" && !!filter)) {\n            target[targetKey] = valueFn(source[sourceKey]);\n        }\n        return;\n    }\n    let [filter, value] = instructions[targetKey];\n    if (typeof value === \"function\") {\n        let _value;\n        const defaultFilterPassed = filter === undefined && (_value = value()) != null;\n        const customFilterPassed = (typeof filter === \"function\" && !!filter(void 0)) || (typeof filter !== \"function\" && !!filter);\n        if (defaultFilterPassed) {\n            target[targetKey] = _value;\n        }\n        else if (customFilterPassed) {\n            target[targetKey] = value();\n        }\n    }\n    else {\n        const defaultFilterPassed = filter === undefined && value != null;\n        const customFilterPassed = (typeof filter === \"function\" && !!filter(value)) || (typeof filter !== \"function\" && !!filter);\n        if (defaultFilterPassed || customFilterPassed) {\n            target[targetKey] = value;\n        }\n    }\n};\nconst nonNullish = (_) => _ != null;\nconst pass = (_) => _;\n","export const _json = (obj) => {\n    if (obj == null) {\n        return {};\n    }\n    if (Array.isArray(obj)) {\n        return obj.filter((_) => _ != null);\n    }\n    if (typeof obj === \"object\") {\n        const target = {};\n        for (const key of Object.keys(obj)) {\n            if (obj[key] == null) {\n                continue;\n            }\n            target[key] = _json(obj[key]);\n        }\n        return target;\n    }\n    return obj;\n};\n","import { ServiceException as __ServiceException, } from \"@aws-sdk/smithy-client\";\nexport class DynamoDBServiceException extends __ServiceException {\n    constructor(options) {\n        super(options);\n        Object.setPrototypeOf(this, DynamoDBServiceException.prototype);\n    }\n}\n","import { DynamoDBServiceException as __BaseException } from \"./DynamoDBServiceException\";\nexport const AttributeAction = {\n    ADD: \"ADD\",\n    DELETE: \"DELETE\",\n    PUT: \"PUT\",\n};\nexport const ScalarAttributeType = {\n    B: \"B\",\n    N: \"N\",\n    S: \"S\",\n};\nexport const BackupStatus = {\n    AVAILABLE: \"AVAILABLE\",\n    CREATING: \"CREATING\",\n    DELETED: \"DELETED\",\n};\nexport const BackupType = {\n    AWS_BACKUP: \"AWS_BACKUP\",\n    SYSTEM: \"SYSTEM\",\n    USER: \"USER\",\n};\nexport const BillingMode = {\n    PAY_PER_REQUEST: \"PAY_PER_REQUEST\",\n    PROVISIONED: \"PROVISIONED\",\n};\nexport const KeyType = {\n    HASH: \"HASH\",\n    RANGE: \"RANGE\",\n};\nexport const ProjectionType = {\n    ALL: \"ALL\",\n    INCLUDE: \"INCLUDE\",\n    KEYS_ONLY: \"KEYS_ONLY\",\n};\nexport const SSEType = {\n    AES256: \"AES256\",\n    KMS: \"KMS\",\n};\nexport const SSEStatus = {\n    DISABLED: \"DISABLED\",\n    DISABLING: \"DISABLING\",\n    ENABLED: \"ENABLED\",\n    ENABLING: \"ENABLING\",\n    UPDATING: \"UPDATING\",\n};\nexport const StreamViewType = {\n    KEYS_ONLY: \"KEYS_ONLY\",\n    NEW_AND_OLD_IMAGES: \"NEW_AND_OLD_IMAGES\",\n    NEW_IMAGE: \"NEW_IMAGE\",\n    OLD_IMAGE: \"OLD_IMAGE\",\n};\nexport const TimeToLiveStatus = {\n    DISABLED: \"DISABLED\",\n    DISABLING: \"DISABLING\",\n    ENABLED: \"ENABLED\",\n    ENABLING: \"ENABLING\",\n};\nexport class BackupInUseException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"BackupInUseException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"BackupInUseException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, BackupInUseException.prototype);\n    }\n}\nexport class BackupNotFoundException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"BackupNotFoundException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"BackupNotFoundException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, BackupNotFoundException.prototype);\n    }\n}\nexport const BackupTypeFilter = {\n    ALL: \"ALL\",\n    AWS_BACKUP: \"AWS_BACKUP\",\n    SYSTEM: \"SYSTEM\",\n    USER: \"USER\",\n};\nexport const ReturnConsumedCapacity = {\n    INDEXES: \"INDEXES\",\n    NONE: \"NONE\",\n    TOTAL: \"TOTAL\",\n};\nexport const BatchStatementErrorCodeEnum = {\n    AccessDenied: \"AccessDenied\",\n    ConditionalCheckFailed: \"ConditionalCheckFailed\",\n    DuplicateItem: \"DuplicateItem\",\n    InternalServerError: \"InternalServerError\",\n    ItemCollectionSizeLimitExceeded: \"ItemCollectionSizeLimitExceeded\",\n    ProvisionedThroughputExceeded: \"ProvisionedThroughputExceeded\",\n    RequestLimitExceeded: \"RequestLimitExceeded\",\n    ResourceNotFound: \"ResourceNotFound\",\n    ThrottlingError: \"ThrottlingError\",\n    TransactionConflict: \"TransactionConflict\",\n    ValidationError: \"ValidationError\",\n};\nexport class InternalServerError extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"InternalServerError\",\n            $fault: \"server\",\n            ...opts,\n        });\n        this.name = \"InternalServerError\";\n        this.$fault = \"server\";\n        Object.setPrototypeOf(this, InternalServerError.prototype);\n    }\n}\nexport class RequestLimitExceeded extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"RequestLimitExceeded\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"RequestLimitExceeded\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, RequestLimitExceeded.prototype);\n    }\n}\nexport class InvalidEndpointException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"InvalidEndpointException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"InvalidEndpointException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidEndpointException.prototype);\n        this.Message = opts.Message;\n    }\n}\nexport class ProvisionedThroughputExceededException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"ProvisionedThroughputExceededException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"ProvisionedThroughputExceededException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, ProvisionedThroughputExceededException.prototype);\n    }\n}\nexport class ResourceNotFoundException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"ResourceNotFoundException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"ResourceNotFoundException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, ResourceNotFoundException.prototype);\n    }\n}\nexport const ReturnItemCollectionMetrics = {\n    NONE: \"NONE\",\n    SIZE: \"SIZE\",\n};\nexport class ItemCollectionSizeLimitExceededException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"ItemCollectionSizeLimitExceededException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"ItemCollectionSizeLimitExceededException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, ItemCollectionSizeLimitExceededException.prototype);\n    }\n}\nexport const ComparisonOperator = {\n    BEGINS_WITH: \"BEGINS_WITH\",\n    BETWEEN: \"BETWEEN\",\n    CONTAINS: \"CONTAINS\",\n    EQ: \"EQ\",\n    GE: \"GE\",\n    GT: \"GT\",\n    IN: \"IN\",\n    LE: \"LE\",\n    LT: \"LT\",\n    NE: \"NE\",\n    NOT_CONTAINS: \"NOT_CONTAINS\",\n    NOT_NULL: \"NOT_NULL\",\n    NULL: \"NULL\",\n};\nexport class ConditionalCheckFailedException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"ConditionalCheckFailedException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"ConditionalCheckFailedException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, ConditionalCheckFailedException.prototype);\n    }\n}\nexport const ConditionalOperator = {\n    AND: \"AND\",\n    OR: \"OR\",\n};\nexport const ReturnValuesOnConditionCheckFailure = {\n    ALL_OLD: \"ALL_OLD\",\n    NONE: \"NONE\",\n};\nexport const ContinuousBackupsStatus = {\n    DISABLED: \"DISABLED\",\n    ENABLED: \"ENABLED\",\n};\nexport const PointInTimeRecoveryStatus = {\n    DISABLED: \"DISABLED\",\n    ENABLED: \"ENABLED\",\n};\nexport class ContinuousBackupsUnavailableException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"ContinuousBackupsUnavailableException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"ContinuousBackupsUnavailableException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, ContinuousBackupsUnavailableException.prototype);\n    }\n}\nexport const ContributorInsightsAction = {\n    DISABLE: \"DISABLE\",\n    ENABLE: \"ENABLE\",\n};\nexport const ContributorInsightsStatus = {\n    DISABLED: \"DISABLED\",\n    DISABLING: \"DISABLING\",\n    ENABLED: \"ENABLED\",\n    ENABLING: \"ENABLING\",\n    FAILED: \"FAILED\",\n};\nexport class LimitExceededException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"LimitExceededException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"LimitExceededException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, LimitExceededException.prototype);\n    }\n}\nexport class TableInUseException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"TableInUseException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"TableInUseException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, TableInUseException.prototype);\n    }\n}\nexport class TableNotFoundException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"TableNotFoundException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"TableNotFoundException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, TableNotFoundException.prototype);\n    }\n}\nexport const GlobalTableStatus = {\n    ACTIVE: \"ACTIVE\",\n    CREATING: \"CREATING\",\n    DELETING: \"DELETING\",\n    UPDATING: \"UPDATING\",\n};\nexport const ReplicaStatus = {\n    ACTIVE: \"ACTIVE\",\n    CREATING: \"CREATING\",\n    CREATION_FAILED: \"CREATION_FAILED\",\n    DELETING: \"DELETING\",\n    INACCESSIBLE_ENCRYPTION_CREDENTIALS: \"INACCESSIBLE_ENCRYPTION_CREDENTIALS\",\n    REGION_DISABLED: \"REGION_DISABLED\",\n    UPDATING: \"UPDATING\",\n};\nexport const TableClass = {\n    STANDARD: \"STANDARD\",\n    STANDARD_INFREQUENT_ACCESS: \"STANDARD_INFREQUENT_ACCESS\",\n};\nexport class GlobalTableAlreadyExistsException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"GlobalTableAlreadyExistsException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"GlobalTableAlreadyExistsException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, GlobalTableAlreadyExistsException.prototype);\n    }\n}\nexport const IndexStatus = {\n    ACTIVE: \"ACTIVE\",\n    CREATING: \"CREATING\",\n    DELETING: \"DELETING\",\n    UPDATING: \"UPDATING\",\n};\nexport const TableStatus = {\n    ACTIVE: \"ACTIVE\",\n    ARCHIVED: \"ARCHIVED\",\n    ARCHIVING: \"ARCHIVING\",\n    CREATING: \"CREATING\",\n    DELETING: \"DELETING\",\n    INACCESSIBLE_ENCRYPTION_CREDENTIALS: \"INACCESSIBLE_ENCRYPTION_CREDENTIALS\",\n    UPDATING: \"UPDATING\",\n};\nexport class ResourceInUseException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"ResourceInUseException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"ResourceInUseException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, ResourceInUseException.prototype);\n    }\n}\nexport const ReturnValue = {\n    ALL_NEW: \"ALL_NEW\",\n    ALL_OLD: \"ALL_OLD\",\n    NONE: \"NONE\",\n    UPDATED_NEW: \"UPDATED_NEW\",\n    UPDATED_OLD: \"UPDATED_OLD\",\n};\nexport class TransactionConflictException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"TransactionConflictException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"TransactionConflictException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, TransactionConflictException.prototype);\n    }\n}\nexport const ExportFormat = {\n    DYNAMODB_JSON: \"DYNAMODB_JSON\",\n    ION: \"ION\",\n};\nexport const ExportStatus = {\n    COMPLETED: \"COMPLETED\",\n    FAILED: \"FAILED\",\n    IN_PROGRESS: \"IN_PROGRESS\",\n};\nexport const S3SseAlgorithm = {\n    AES256: \"AES256\",\n    KMS: \"KMS\",\n};\nexport class ExportNotFoundException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"ExportNotFoundException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"ExportNotFoundException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, ExportNotFoundException.prototype);\n    }\n}\nexport class GlobalTableNotFoundException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"GlobalTableNotFoundException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"GlobalTableNotFoundException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, GlobalTableNotFoundException.prototype);\n    }\n}\nexport const ImportStatus = {\n    CANCELLED: \"CANCELLED\",\n    CANCELLING: \"CANCELLING\",\n    COMPLETED: \"COMPLETED\",\n    FAILED: \"FAILED\",\n    IN_PROGRESS: \"IN_PROGRESS\",\n};\nexport const InputCompressionType = {\n    GZIP: \"GZIP\",\n    NONE: \"NONE\",\n    ZSTD: \"ZSTD\",\n};\nexport const InputFormat = {\n    CSV: \"CSV\",\n    DYNAMODB_JSON: \"DYNAMODB_JSON\",\n    ION: \"ION\",\n};\nexport class ImportNotFoundException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"ImportNotFoundException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"ImportNotFoundException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, ImportNotFoundException.prototype);\n    }\n}\nexport const DestinationStatus = {\n    ACTIVE: \"ACTIVE\",\n    DISABLED: \"DISABLED\",\n    DISABLING: \"DISABLING\",\n    ENABLE_FAILED: \"ENABLE_FAILED\",\n    ENABLING: \"ENABLING\",\n};\nexport class DuplicateItemException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"DuplicateItemException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"DuplicateItemException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, DuplicateItemException.prototype);\n    }\n}\nexport class IdempotentParameterMismatchException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"IdempotentParameterMismatchException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"IdempotentParameterMismatchException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, IdempotentParameterMismatchException.prototype);\n        this.Message = opts.Message;\n    }\n}\nexport class TransactionInProgressException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"TransactionInProgressException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"TransactionInProgressException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, TransactionInProgressException.prototype);\n        this.Message = opts.Message;\n    }\n}\nexport class ExportConflictException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"ExportConflictException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"ExportConflictException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, ExportConflictException.prototype);\n    }\n}\nexport class InvalidExportTimeException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"InvalidExportTimeException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"InvalidExportTimeException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidExportTimeException.prototype);\n    }\n}\nexport class PointInTimeRecoveryUnavailableException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"PointInTimeRecoveryUnavailableException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"PointInTimeRecoveryUnavailableException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, PointInTimeRecoveryUnavailableException.prototype);\n    }\n}\nexport class ImportConflictException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"ImportConflictException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"ImportConflictException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, ImportConflictException.prototype);\n    }\n}\nexport const Select = {\n    ALL_ATTRIBUTES: \"ALL_ATTRIBUTES\",\n    ALL_PROJECTED_ATTRIBUTES: \"ALL_PROJECTED_ATTRIBUTES\",\n    COUNT: \"COUNT\",\n    SPECIFIC_ATTRIBUTES: \"SPECIFIC_ATTRIBUTES\",\n};\nexport class TableAlreadyExistsException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"TableAlreadyExistsException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"TableAlreadyExistsException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, TableAlreadyExistsException.prototype);\n    }\n}\nexport class InvalidRestoreTimeException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"InvalidRestoreTimeException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"InvalidRestoreTimeException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidRestoreTimeException.prototype);\n    }\n}\nexport class ReplicaAlreadyExistsException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"ReplicaAlreadyExistsException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"ReplicaAlreadyExistsException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, ReplicaAlreadyExistsException.prototype);\n    }\n}\nexport class ReplicaNotFoundException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"ReplicaNotFoundException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"ReplicaNotFoundException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, ReplicaNotFoundException.prototype);\n    }\n}\nexport class IndexNotFoundException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"IndexNotFoundException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"IndexNotFoundException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, IndexNotFoundException.prototype);\n    }\n}\nexport var AttributeValue;\n(function (AttributeValue) {\n    AttributeValue.visit = (value, visitor) => {\n        if (value.S !== undefined)\n            return visitor.S(value.S);\n        if (value.N !== undefined)\n            return visitor.N(value.N);\n        if (value.B !== undefined)\n            return visitor.B(value.B);\n        if (value.SS !== undefined)\n            return visitor.SS(value.SS);\n        if (value.NS !== undefined)\n            return visitor.NS(value.NS);\n        if (value.BS !== undefined)\n            return visitor.BS(value.BS);\n        if (value.M !== undefined)\n            return visitor.M(value.M);\n        if (value.L !== undefined)\n            return visitor.L(value.L);\n        if (value.NULL !== undefined)\n            return visitor.NULL(value.NULL);\n        if (value.BOOL !== undefined)\n            return visitor.BOOL(value.BOOL);\n        return visitor._(value.$unknown[0], value.$unknown[1]);\n    };\n})(AttributeValue || (AttributeValue = {}));\nexport class TransactionCanceledException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"TransactionCanceledException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"TransactionCanceledException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, TransactionCanceledException.prototype);\n        this.Message = opts.Message;\n        this.CancellationReasons = opts.CancellationReasons;\n    }\n}\n","import { HttpRequest as __HttpRequest } from \"@aws-sdk/protocol-http\";\nimport { _json, decorateServiceException as __decorateServiceException, expectBoolean as __expectBoolean, expectInt32 as __expectInt32, expectLong as __expectLong, expectNonNull as __expectNonNull, expectNumber as __expectNumber, expectString as __expectString, expectUnion as __expectUnion, limitedParseDouble as __limitedParseDouble, parseEpochTimestamp as __parseEpochTimestamp, serializeFloat as __serializeFloat, take, withBaseException, } from \"@aws-sdk/smithy-client\";\nimport { v4 as generateIdempotencyToken } from \"uuid\";\nimport { DynamoDBServiceException as __BaseException } from \"../models/DynamoDBServiceException\";\nimport { AttributeValue, BackupInUseException, BackupNotFoundException, ConditionalCheckFailedException, ContinuousBackupsUnavailableException, DuplicateItemException, ExportConflictException, ExportNotFoundException, GlobalTableAlreadyExistsException, GlobalTableNotFoundException, IdempotentParameterMismatchException, ImportConflictException, ImportNotFoundException, IndexNotFoundException, InternalServerError, InvalidEndpointException, InvalidExportTimeException, InvalidRestoreTimeException, ItemCollectionSizeLimitExceededException, LimitExceededException, PointInTimeRecoveryUnavailableException, ProvisionedThroughputExceededException, ReplicaAlreadyExistsException, ReplicaNotFoundException, RequestLimitExceeded, ResourceInUseException, ResourceNotFoundException, TableAlreadyExistsException, TableInUseException, TableNotFoundException, TransactionCanceledException, TransactionConflictException, TransactionInProgressException, } from \"../models/models_0\";\nexport const se_BatchExecuteStatementCommand = async (input, context) => {\n    const headers = sharedHeaders(\"BatchExecuteStatement\");\n    let body;\n    body = JSON.stringify(se_BatchExecuteStatementInput(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_BatchGetItemCommand = async (input, context) => {\n    const headers = sharedHeaders(\"BatchGetItem\");\n    let body;\n    body = JSON.stringify(se_BatchGetItemInput(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_BatchWriteItemCommand = async (input, context) => {\n    const headers = sharedHeaders(\"BatchWriteItem\");\n    let body;\n    body = JSON.stringify(se_BatchWriteItemInput(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_CreateBackupCommand = async (input, context) => {\n    const headers = sharedHeaders(\"CreateBackup\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_CreateGlobalTableCommand = async (input, context) => {\n    const headers = sharedHeaders(\"CreateGlobalTable\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_CreateTableCommand = async (input, context) => {\n    const headers = sharedHeaders(\"CreateTable\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_DeleteBackupCommand = async (input, context) => {\n    const headers = sharedHeaders(\"DeleteBackup\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_DeleteItemCommand = async (input, context) => {\n    const headers = sharedHeaders(\"DeleteItem\");\n    let body;\n    body = JSON.stringify(se_DeleteItemInput(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_DeleteTableCommand = async (input, context) => {\n    const headers = sharedHeaders(\"DeleteTable\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_DescribeBackupCommand = async (input, context) => {\n    const headers = sharedHeaders(\"DescribeBackup\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_DescribeContinuousBackupsCommand = async (input, context) => {\n    const headers = sharedHeaders(\"DescribeContinuousBackups\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_DescribeContributorInsightsCommand = async (input, context) => {\n    const headers = sharedHeaders(\"DescribeContributorInsights\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_DescribeEndpointsCommand = async (input, context) => {\n    const headers = sharedHeaders(\"DescribeEndpoints\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_DescribeExportCommand = async (input, context) => {\n    const headers = sharedHeaders(\"DescribeExport\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_DescribeGlobalTableCommand = async (input, context) => {\n    const headers = sharedHeaders(\"DescribeGlobalTable\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_DescribeGlobalTableSettingsCommand = async (input, context) => {\n    const headers = sharedHeaders(\"DescribeGlobalTableSettings\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_DescribeImportCommand = async (input, context) => {\n    const headers = sharedHeaders(\"DescribeImport\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_DescribeKinesisStreamingDestinationCommand = async (input, context) => {\n    const headers = sharedHeaders(\"DescribeKinesisStreamingDestination\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_DescribeLimitsCommand = async (input, context) => {\n    const headers = sharedHeaders(\"DescribeLimits\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_DescribeTableCommand = async (input, context) => {\n    const headers = sharedHeaders(\"DescribeTable\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_DescribeTableReplicaAutoScalingCommand = async (input, context) => {\n    const headers = sharedHeaders(\"DescribeTableReplicaAutoScaling\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_DescribeTimeToLiveCommand = async (input, context) => {\n    const headers = sharedHeaders(\"DescribeTimeToLive\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_DisableKinesisStreamingDestinationCommand = async (input, context) => {\n    const headers = sharedHeaders(\"DisableKinesisStreamingDestination\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_EnableKinesisStreamingDestinationCommand = async (input, context) => {\n    const headers = sharedHeaders(\"EnableKinesisStreamingDestination\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_ExecuteStatementCommand = async (input, context) => {\n    const headers = sharedHeaders(\"ExecuteStatement\");\n    let body;\n    body = JSON.stringify(se_ExecuteStatementInput(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_ExecuteTransactionCommand = async (input, context) => {\n    const headers = sharedHeaders(\"ExecuteTransaction\");\n    let body;\n    body = JSON.stringify(se_ExecuteTransactionInput(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_ExportTableToPointInTimeCommand = async (input, context) => {\n    const headers = sharedHeaders(\"ExportTableToPointInTime\");\n    let body;\n    body = JSON.stringify(se_ExportTableToPointInTimeInput(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_GetItemCommand = async (input, context) => {\n    const headers = sharedHeaders(\"GetItem\");\n    let body;\n    body = JSON.stringify(se_GetItemInput(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_ImportTableCommand = async (input, context) => {\n    const headers = sharedHeaders(\"ImportTable\");\n    let body;\n    body = JSON.stringify(se_ImportTableInput(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_ListBackupsCommand = async (input, context) => {\n    const headers = sharedHeaders(\"ListBackups\");\n    let body;\n    body = JSON.stringify(se_ListBackupsInput(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_ListContributorInsightsCommand = async (input, context) => {\n    const headers = sharedHeaders(\"ListContributorInsights\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_ListExportsCommand = async (input, context) => {\n    const headers = sharedHeaders(\"ListExports\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_ListGlobalTablesCommand = async (input, context) => {\n    const headers = sharedHeaders(\"ListGlobalTables\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_ListImportsCommand = async (input, context) => {\n    const headers = sharedHeaders(\"ListImports\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_ListTablesCommand = async (input, context) => {\n    const headers = sharedHeaders(\"ListTables\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_ListTagsOfResourceCommand = async (input, context) => {\n    const headers = sharedHeaders(\"ListTagsOfResource\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_PutItemCommand = async (input, context) => {\n    const headers = sharedHeaders(\"PutItem\");\n    let body;\n    body = JSON.stringify(se_PutItemInput(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_QueryCommand = async (input, context) => {\n    const headers = sharedHeaders(\"Query\");\n    let body;\n    body = JSON.stringify(se_QueryInput(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_RestoreTableFromBackupCommand = async (input, context) => {\n    const headers = sharedHeaders(\"RestoreTableFromBackup\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_RestoreTableToPointInTimeCommand = async (input, context) => {\n    const headers = sharedHeaders(\"RestoreTableToPointInTime\");\n    let body;\n    body = JSON.stringify(se_RestoreTableToPointInTimeInput(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_ScanCommand = async (input, context) => {\n    const headers = sharedHeaders(\"Scan\");\n    let body;\n    body = JSON.stringify(se_ScanInput(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_TagResourceCommand = async (input, context) => {\n    const headers = sharedHeaders(\"TagResource\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_TransactGetItemsCommand = async (input, context) => {\n    const headers = sharedHeaders(\"TransactGetItems\");\n    let body;\n    body = JSON.stringify(se_TransactGetItemsInput(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_TransactWriteItemsCommand = async (input, context) => {\n    const headers = sharedHeaders(\"TransactWriteItems\");\n    let body;\n    body = JSON.stringify(se_TransactWriteItemsInput(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_UntagResourceCommand = async (input, context) => {\n    const headers = sharedHeaders(\"UntagResource\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_UpdateContinuousBackupsCommand = async (input, context) => {\n    const headers = sharedHeaders(\"UpdateContinuousBackups\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_UpdateContributorInsightsCommand = async (input, context) => {\n    const headers = sharedHeaders(\"UpdateContributorInsights\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_UpdateGlobalTableCommand = async (input, context) => {\n    const headers = sharedHeaders(\"UpdateGlobalTable\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_UpdateGlobalTableSettingsCommand = async (input, context) => {\n    const headers = sharedHeaders(\"UpdateGlobalTableSettings\");\n    let body;\n    body = JSON.stringify(se_UpdateGlobalTableSettingsInput(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_UpdateItemCommand = async (input, context) => {\n    const headers = sharedHeaders(\"UpdateItem\");\n    let body;\n    body = JSON.stringify(se_UpdateItemInput(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_UpdateTableCommand = async (input, context) => {\n    const headers = sharedHeaders(\"UpdateTable\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_UpdateTableReplicaAutoScalingCommand = async (input, context) => {\n    const headers = sharedHeaders(\"UpdateTableReplicaAutoScaling\");\n    let body;\n    body = JSON.stringify(se_UpdateTableReplicaAutoScalingInput(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_UpdateTimeToLiveCommand = async (input, context) => {\n    const headers = sharedHeaders(\"UpdateTimeToLive\");\n    let body;\n    body = JSON.stringify(_json(input));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const de_BatchExecuteStatementCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_BatchExecuteStatementCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_BatchExecuteStatementOutput(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_BatchExecuteStatementCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalServerError\":\n        case \"com.amazonaws.dynamodb#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"RequestLimitExceeded\":\n        case \"com.amazonaws.dynamodb#RequestLimitExceeded\":\n            throw await de_RequestLimitExceededRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_BatchGetItemCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_BatchGetItemCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_BatchGetItemOutput(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_BatchGetItemCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalServerError\":\n        case \"com.amazonaws.dynamodb#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidEndpointException\":\n        case \"com.amazonaws.dynamodb#InvalidEndpointException\":\n            throw await de_InvalidEndpointExceptionRes(parsedOutput, context);\n        case \"ProvisionedThroughputExceededException\":\n        case \"com.amazonaws.dynamodb#ProvisionedThroughputExceededException\":\n            throw await de_ProvisionedThroughputExceededExceptionRes(parsedOutput, context);\n        case \"RequestLimitExceeded\":\n        case \"com.amazonaws.dynamodb#RequestLimitExceeded\":\n            throw await de_RequestLimitExceededRes(parsedOutput, context);\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.dynamodb#ResourceNotFoundException\":\n            throw await de_ResourceNotFoundExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_BatchWriteItemCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_BatchWriteItemCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_BatchWriteItemOutput(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_BatchWriteItemCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalServerError\":\n        case \"com.amazonaws.dynamodb#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidEndpointException\":\n        case \"com.amazonaws.dynamodb#InvalidEndpointException\":\n            throw await de_InvalidEndpointExceptionRes(parsedOutput, context);\n        case \"ItemCollectionSizeLimitExceededException\":\n        case \"com.amazonaws.dynamodb#ItemCollectionSizeLimitExceededException\":\n            throw await de_ItemCollectionSizeLimitExceededExceptionRes(parsedOutput, context);\n        case \"ProvisionedThroughputExceededException\":\n        case \"com.amazonaws.dynamodb#ProvisionedThroughputExceededException\":\n            throw await de_ProvisionedThroughputExceededExceptionRes(parsedOutput, context);\n        case \"RequestLimitExceeded\":\n        case \"com.amazonaws.dynamodb#RequestLimitExceeded\":\n            throw await de_RequestLimitExceededRes(parsedOutput, context);\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.dynamodb#ResourceNotFoundException\":\n            throw await de_ResourceNotFoundExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_CreateBackupCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CreateBackupCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_CreateBackupOutput(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_CreateBackupCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"BackupInUseException\":\n        case \"com.amazonaws.dynamodb#BackupInUseException\":\n            throw await de_BackupInUseExceptionRes(parsedOutput, context);\n        case \"ContinuousBackupsUnavailableException\":\n        case \"com.amazonaws.dynamodb#ContinuousBackupsUnavailableException\":\n            throw await de_ContinuousBackupsUnavailableExceptionRes(parsedOutput, context);\n        case \"InternalServerError\":\n        case \"com.amazonaws.dynamodb#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidEndpointException\":\n        case \"com.amazonaws.dynamodb#InvalidEndpointException\":\n            throw await de_InvalidEndpointExceptionRes(parsedOutput, context);\n        case \"LimitExceededException\":\n        case \"com.amazonaws.dynamodb#LimitExceededException\":\n            throw await de_LimitExceededExceptionRes(parsedOutput, context);\n        case \"TableInUseException\":\n        case \"com.amazonaws.dynamodb#TableInUseException\":\n            throw await de_TableInUseExceptionRes(parsedOutput, context);\n        case \"TableNotFoundException\":\n        case \"com.amazonaws.dynamodb#TableNotFoundException\":\n            throw await de_TableNotFoundExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_CreateGlobalTableCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CreateGlobalTableCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_CreateGlobalTableOutput(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_CreateGlobalTableCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"GlobalTableAlreadyExistsException\":\n        case \"com.amazonaws.dynamodb#GlobalTableAlreadyExistsException\":\n            throw await de_GlobalTableAlreadyExistsExceptionRes(parsedOutput, context);\n        case \"InternalServerError\":\n        case \"com.amazonaws.dynamodb#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidEndpointException\":\n        case \"com.amazonaws.dynamodb#InvalidEndpointException\":\n            throw await de_InvalidEndpointExceptionRes(parsedOutput, context);\n        case \"LimitExceededException\":\n        case \"com.amazonaws.dynamodb#LimitExceededException\":\n            throw await de_LimitExceededExceptionRes(parsedOutput, context);\n        case \"TableNotFoundException\":\n        case \"com.amazonaws.dynamodb#TableNotFoundException\":\n            throw await de_TableNotFoundExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_CreateTableCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_CreateTableCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_CreateTableOutput(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_CreateTableCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalServerError\":\n        case \"com.amazonaws.dynamodb#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidEndpointException\":\n        case \"com.amazonaws.dynamodb#InvalidEndpointException\":\n            throw await de_InvalidEndpointExceptionRes(parsedOutput, context);\n        case \"LimitExceededException\":\n        case \"com.amazonaws.dynamodb#LimitExceededException\":\n            throw await de_LimitExceededExceptionRes(parsedOutput, context);\n        case \"ResourceInUseException\":\n        case \"com.amazonaws.dynamodb#ResourceInUseException\":\n            throw await de_ResourceInUseExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_DeleteBackupCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_DeleteBackupCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_DeleteBackupOutput(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_DeleteBackupCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"BackupInUseException\":\n        case \"com.amazonaws.dynamodb#BackupInUseException\":\n            throw await de_BackupInUseExceptionRes(parsedOutput, context);\n        case \"BackupNotFoundException\":\n        case \"com.amazonaws.dynamodb#BackupNotFoundException\":\n            throw await de_BackupNotFoundExceptionRes(parsedOutput, context);\n        case \"InternalServerError\":\n        case \"com.amazonaws.dynamodb#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidEndpointException\":\n        case \"com.amazonaws.dynamodb#InvalidEndpointException\":\n            throw await de_InvalidEndpointExceptionRes(parsedOutput, context);\n        case \"LimitExceededException\":\n        case \"com.amazonaws.dynamodb#LimitExceededException\":\n            throw await de_LimitExceededExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_DeleteItemCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_DeleteItemCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_DeleteItemOutput(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_DeleteItemCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"ConditionalCheckFailedException\":\n        case \"com.amazonaws.dynamodb#ConditionalCheckFailedException\":\n            throw await de_ConditionalCheckFailedExceptionRes(parsedOutput, context);\n        case \"InternalServerError\":\n        case \"com.amazonaws.dynamodb#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidEndpointException\":\n        case \"com.amazonaws.dynamodb#InvalidEndpointException\":\n            throw await de_InvalidEndpointExceptionRes(parsedOutput, context);\n        case \"ItemCollectionSizeLimitExceededException\":\n        case \"com.amazonaws.dynamodb#ItemCollectionSizeLimitExceededException\":\n            throw await de_ItemCollectionSizeLimitExceededExceptionRes(parsedOutput, context);\n        case \"ProvisionedThroughputExceededException\":\n        case \"com.amazonaws.dynamodb#ProvisionedThroughputExceededException\":\n            throw await de_ProvisionedThroughputExceededExceptionRes(parsedOutput, context);\n        case \"RequestLimitExceeded\":\n        case \"com.amazonaws.dynamodb#RequestLimitExceeded\":\n            throw await de_RequestLimitExceededRes(parsedOutput, context);\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.dynamodb#ResourceNotFoundException\":\n            throw await de_ResourceNotFoundExceptionRes(parsedOutput, context);\n        case \"TransactionConflictException\":\n        case \"com.amazonaws.dynamodb#TransactionConflictException\":\n            throw await de_TransactionConflictExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_DeleteTableCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_DeleteTableCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_DeleteTableOutput(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_DeleteTableCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalServerError\":\n        case \"com.amazonaws.dynamodb#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidEndpointException\":\n        case \"com.amazonaws.dynamodb#InvalidEndpointException\":\n            throw await de_InvalidEndpointExceptionRes(parsedOutput, context);\n        case \"LimitExceededException\":\n        case \"com.amazonaws.dynamodb#LimitExceededException\":\n            throw await de_LimitExceededExceptionRes(parsedOutput, context);\n        case \"ResourceInUseException\":\n        case \"com.amazonaws.dynamodb#ResourceInUseException\":\n            throw await de_ResourceInUseExceptionRes(parsedOutput, context);\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.dynamodb#ResourceNotFoundException\":\n            throw await de_ResourceNotFoundExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_DescribeBackupCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_DescribeBackupCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_DescribeBackupOutput(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_DescribeBackupCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"BackupNotFoundException\":\n        case \"com.amazonaws.dynamodb#BackupNotFoundException\":\n            throw await de_BackupNotFoundExceptionRes(parsedOutput, context);\n        case \"InternalServerError\":\n        case \"com.amazonaws.dynamodb#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidEndpointException\":\n        case \"com.amazonaws.dynamodb#InvalidEndpointException\":\n            throw await de_InvalidEndpointExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_DescribeContinuousBackupsCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_DescribeContinuousBackupsCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_DescribeContinuousBackupsOutput(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_DescribeContinuousBackupsCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalServerError\":\n        case \"com.amazonaws.dynamodb#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidEndpointException\":\n        case \"com.amazonaws.dynamodb#InvalidEndpointException\":\n            throw await de_InvalidEndpointExceptionRes(parsedOutput, context);\n        case \"TableNotFoundException\":\n        case \"com.amazonaws.dynamodb#TableNotFoundException\":\n            throw await de_TableNotFoundExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_DescribeContributorInsightsCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_DescribeContributorInsightsCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_DescribeContributorInsightsOutput(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_DescribeContributorInsightsCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalServerError\":\n        case \"com.amazonaws.dynamodb#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.dynamodb#ResourceNotFoundException\":\n            throw await de_ResourceNotFoundExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_DescribeEndpointsCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_DescribeEndpointsCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = _json(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_DescribeEndpointsCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    const parsedBody = parsedOutput.body;\n    return throwDefaultError({\n        output,\n        parsedBody,\n        errorCode,\n    });\n};\nexport const de_DescribeExportCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_DescribeExportCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_DescribeExportOutput(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_DescribeExportCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"ExportNotFoundException\":\n        case \"com.amazonaws.dynamodb#ExportNotFoundException\":\n            throw await de_ExportNotFoundExceptionRes(parsedOutput, context);\n        case \"InternalServerError\":\n        case \"com.amazonaws.dynamodb#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"LimitExceededException\":\n        case \"com.amazonaws.dynamodb#LimitExceededException\":\n            throw await de_LimitExceededExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_DescribeGlobalTableCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_DescribeGlobalTableCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_DescribeGlobalTableOutput(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_DescribeGlobalTableCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"GlobalTableNotFoundException\":\n        case \"com.amazonaws.dynamodb#GlobalTableNotFoundException\":\n            throw await de_GlobalTableNotFoundExceptionRes(parsedOutput, context);\n        case \"InternalServerError\":\n        case \"com.amazonaws.dynamodb#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidEndpointException\":\n        case \"com.amazonaws.dynamodb#InvalidEndpointException\":\n            throw await de_InvalidEndpointExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_DescribeGlobalTableSettingsCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_DescribeGlobalTableSettingsCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_DescribeGlobalTableSettingsOutput(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_DescribeGlobalTableSettingsCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"GlobalTableNotFoundException\":\n        case \"com.amazonaws.dynamodb#GlobalTableNotFoundException\":\n            throw await de_GlobalTableNotFoundExceptionRes(parsedOutput, context);\n        case \"InternalServerError\":\n        case \"com.amazonaws.dynamodb#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidEndpointException\":\n        case \"com.amazonaws.dynamodb#InvalidEndpointException\":\n            throw await de_InvalidEndpointExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_DescribeImportCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_DescribeImportCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_DescribeImportOutput(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_DescribeImportCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"ImportNotFoundException\":\n        case \"com.amazonaws.dynamodb#ImportNotFoundException\":\n            throw await de_ImportNotFoundExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_DescribeKinesisStreamingDestinationCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_DescribeKinesisStreamingDestinationCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = _json(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_DescribeKinesisStreamingDestinationCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalServerError\":\n        case \"com.amazonaws.dynamodb#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidEndpointException\":\n        case \"com.amazonaws.dynamodb#InvalidEndpointException\":\n            throw await de_InvalidEndpointExceptionRes(parsedOutput, context);\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.dynamodb#ResourceNotFoundException\":\n            throw await de_ResourceNotFoundExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_DescribeLimitsCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_DescribeLimitsCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = _json(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_DescribeLimitsCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalServerError\":\n        case \"com.amazonaws.dynamodb#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidEndpointException\":\n        case \"com.amazonaws.dynamodb#InvalidEndpointException\":\n            throw await de_InvalidEndpointExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_DescribeTableCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_DescribeTableCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_DescribeTableOutput(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_DescribeTableCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalServerError\":\n        case \"com.amazonaws.dynamodb#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidEndpointException\":\n        case \"com.amazonaws.dynamodb#InvalidEndpointException\":\n            throw await de_InvalidEndpointExceptionRes(parsedOutput, context);\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.dynamodb#ResourceNotFoundException\":\n            throw await de_ResourceNotFoundExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_DescribeTableReplicaAutoScalingCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_DescribeTableReplicaAutoScalingCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_DescribeTableReplicaAutoScalingOutput(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_DescribeTableReplicaAutoScalingCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalServerError\":\n        case \"com.amazonaws.dynamodb#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.dynamodb#ResourceNotFoundException\":\n            throw await de_ResourceNotFoundExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_DescribeTimeToLiveCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_DescribeTimeToLiveCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = _json(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_DescribeTimeToLiveCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalServerError\":\n        case \"com.amazonaws.dynamodb#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidEndpointException\":\n        case \"com.amazonaws.dynamodb#InvalidEndpointException\":\n            throw await de_InvalidEndpointExceptionRes(parsedOutput, context);\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.dynamodb#ResourceNotFoundException\":\n            throw await de_ResourceNotFoundExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_DisableKinesisStreamingDestinationCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_DisableKinesisStreamingDestinationCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = _json(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_DisableKinesisStreamingDestinationCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalServerError\":\n        case \"com.amazonaws.dynamodb#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidEndpointException\":\n        case \"com.amazonaws.dynamodb#InvalidEndpointException\":\n            throw await de_InvalidEndpointExceptionRes(parsedOutput, context);\n        case \"LimitExceededException\":\n        case \"com.amazonaws.dynamodb#LimitExceededException\":\n            throw await de_LimitExceededExceptionRes(parsedOutput, context);\n        case \"ResourceInUseException\":\n        case \"com.amazonaws.dynamodb#ResourceInUseException\":\n            throw await de_ResourceInUseExceptionRes(parsedOutput, context);\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.dynamodb#ResourceNotFoundException\":\n            throw await de_ResourceNotFoundExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_EnableKinesisStreamingDestinationCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_EnableKinesisStreamingDestinationCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = _json(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_EnableKinesisStreamingDestinationCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalServerError\":\n        case \"com.amazonaws.dynamodb#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidEndpointException\":\n        case \"com.amazonaws.dynamodb#InvalidEndpointException\":\n            throw await de_InvalidEndpointExceptionRes(parsedOutput, context);\n        case \"LimitExceededException\":\n        case \"com.amazonaws.dynamodb#LimitExceededException\":\n            throw await de_LimitExceededExceptionRes(parsedOutput, context);\n        case \"ResourceInUseException\":\n        case \"com.amazonaws.dynamodb#ResourceInUseException\":\n            throw await de_ResourceInUseExceptionRes(parsedOutput, context);\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.dynamodb#ResourceNotFoundException\":\n            throw await de_ResourceNotFoundExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_ExecuteStatementCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_ExecuteStatementCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_ExecuteStatementOutput(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_ExecuteStatementCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"ConditionalCheckFailedException\":\n        case \"com.amazonaws.dynamodb#ConditionalCheckFailedException\":\n            throw await de_ConditionalCheckFailedExceptionRes(parsedOutput, context);\n        case \"DuplicateItemException\":\n        case \"com.amazonaws.dynamodb#DuplicateItemException\":\n            throw await de_DuplicateItemExceptionRes(parsedOutput, context);\n        case \"InternalServerError\":\n        case \"com.amazonaws.dynamodb#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"ItemCollectionSizeLimitExceededException\":\n        case \"com.amazonaws.dynamodb#ItemCollectionSizeLimitExceededException\":\n            throw await de_ItemCollectionSizeLimitExceededExceptionRes(parsedOutput, context);\n        case \"ProvisionedThroughputExceededException\":\n        case \"com.amazonaws.dynamodb#ProvisionedThroughputExceededException\":\n            throw await de_ProvisionedThroughputExceededExceptionRes(parsedOutput, context);\n        case \"RequestLimitExceeded\":\n        case \"com.amazonaws.dynamodb#RequestLimitExceeded\":\n            throw await de_RequestLimitExceededRes(parsedOutput, context);\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.dynamodb#ResourceNotFoundException\":\n            throw await de_ResourceNotFoundExceptionRes(parsedOutput, context);\n        case \"TransactionConflictException\":\n        case \"com.amazonaws.dynamodb#TransactionConflictException\":\n            throw await de_TransactionConflictExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_ExecuteTransactionCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_ExecuteTransactionCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_ExecuteTransactionOutput(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_ExecuteTransactionCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"IdempotentParameterMismatchException\":\n        case \"com.amazonaws.dynamodb#IdempotentParameterMismatchException\":\n            throw await de_IdempotentParameterMismatchExceptionRes(parsedOutput, context);\n        case \"InternalServerError\":\n        case \"com.amazonaws.dynamodb#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"ProvisionedThroughputExceededException\":\n        case \"com.amazonaws.dynamodb#ProvisionedThroughputExceededException\":\n            throw await de_ProvisionedThroughputExceededExceptionRes(parsedOutput, context);\n        case \"RequestLimitExceeded\":\n        case \"com.amazonaws.dynamodb#RequestLimitExceeded\":\n            throw await de_RequestLimitExceededRes(parsedOutput, context);\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.dynamodb#ResourceNotFoundException\":\n            throw await de_ResourceNotFoundExceptionRes(parsedOutput, context);\n        case \"TransactionCanceledException\":\n        case \"com.amazonaws.dynamodb#TransactionCanceledException\":\n            throw await de_TransactionCanceledExceptionRes(parsedOutput, context);\n        case \"TransactionInProgressException\":\n        case \"com.amazonaws.dynamodb#TransactionInProgressException\":\n            throw await de_TransactionInProgressExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_ExportTableToPointInTimeCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_ExportTableToPointInTimeCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_ExportTableToPointInTimeOutput(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_ExportTableToPointInTimeCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"ExportConflictException\":\n        case \"com.amazonaws.dynamodb#ExportConflictException\":\n            throw await de_ExportConflictExceptionRes(parsedOutput, context);\n        case \"InternalServerError\":\n        case \"com.amazonaws.dynamodb#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidExportTimeException\":\n        case \"com.amazonaws.dynamodb#InvalidExportTimeException\":\n            throw await de_InvalidExportTimeExceptionRes(parsedOutput, context);\n        case \"LimitExceededException\":\n        case \"com.amazonaws.dynamodb#LimitExceededException\":\n            throw await de_LimitExceededExceptionRes(parsedOutput, context);\n        case \"PointInTimeRecoveryUnavailableException\":\n        case \"com.amazonaws.dynamodb#PointInTimeRecoveryUnavailableException\":\n            throw await de_PointInTimeRecoveryUnavailableExceptionRes(parsedOutput, context);\n        case \"TableNotFoundException\":\n        case \"com.amazonaws.dynamodb#TableNotFoundException\":\n            throw await de_TableNotFoundExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_GetItemCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_GetItemCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_GetItemOutput(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_GetItemCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalServerError\":\n        case \"com.amazonaws.dynamodb#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidEndpointException\":\n        case \"com.amazonaws.dynamodb#InvalidEndpointException\":\n            throw await de_InvalidEndpointExceptionRes(parsedOutput, context);\n        case \"ProvisionedThroughputExceededException\":\n        case \"com.amazonaws.dynamodb#ProvisionedThroughputExceededException\":\n            throw await de_ProvisionedThroughputExceededExceptionRes(parsedOutput, context);\n        case \"RequestLimitExceeded\":\n        case \"com.amazonaws.dynamodb#RequestLimitExceeded\":\n            throw await de_RequestLimitExceededRes(parsedOutput, context);\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.dynamodb#ResourceNotFoundException\":\n            throw await de_ResourceNotFoundExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_ImportTableCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_ImportTableCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_ImportTableOutput(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_ImportTableCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"ImportConflictException\":\n        case \"com.amazonaws.dynamodb#ImportConflictException\":\n            throw await de_ImportConflictExceptionRes(parsedOutput, context);\n        case \"LimitExceededException\":\n        case \"com.amazonaws.dynamodb#LimitExceededException\":\n            throw await de_LimitExceededExceptionRes(parsedOutput, context);\n        case \"ResourceInUseException\":\n        case \"com.amazonaws.dynamodb#ResourceInUseException\":\n            throw await de_ResourceInUseExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_ListBackupsCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_ListBackupsCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_ListBackupsOutput(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_ListBackupsCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalServerError\":\n        case \"com.amazonaws.dynamodb#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidEndpointException\":\n        case \"com.amazonaws.dynamodb#InvalidEndpointException\":\n            throw await de_InvalidEndpointExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_ListContributorInsightsCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_ListContributorInsightsCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = _json(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_ListContributorInsightsCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalServerError\":\n        case \"com.amazonaws.dynamodb#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.dynamodb#ResourceNotFoundException\":\n            throw await de_ResourceNotFoundExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_ListExportsCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_ListExportsCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = _json(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_ListExportsCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalServerError\":\n        case \"com.amazonaws.dynamodb#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"LimitExceededException\":\n        case \"com.amazonaws.dynamodb#LimitExceededException\":\n            throw await de_LimitExceededExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_ListGlobalTablesCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_ListGlobalTablesCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = _json(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_ListGlobalTablesCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalServerError\":\n        case \"com.amazonaws.dynamodb#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidEndpointException\":\n        case \"com.amazonaws.dynamodb#InvalidEndpointException\":\n            throw await de_InvalidEndpointExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_ListImportsCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_ListImportsCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_ListImportsOutput(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_ListImportsCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"LimitExceededException\":\n        case \"com.amazonaws.dynamodb#LimitExceededException\":\n            throw await de_LimitExceededExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_ListTablesCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_ListTablesCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = _json(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_ListTablesCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalServerError\":\n        case \"com.amazonaws.dynamodb#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidEndpointException\":\n        case \"com.amazonaws.dynamodb#InvalidEndpointException\":\n            throw await de_InvalidEndpointExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_ListTagsOfResourceCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_ListTagsOfResourceCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = _json(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_ListTagsOfResourceCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalServerError\":\n        case \"com.amazonaws.dynamodb#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidEndpointException\":\n        case \"com.amazonaws.dynamodb#InvalidEndpointException\":\n            throw await de_InvalidEndpointExceptionRes(parsedOutput, context);\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.dynamodb#ResourceNotFoundException\":\n            throw await de_ResourceNotFoundExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_PutItemCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_PutItemCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_PutItemOutput(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_PutItemCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"ConditionalCheckFailedException\":\n        case \"com.amazonaws.dynamodb#ConditionalCheckFailedException\":\n            throw await de_ConditionalCheckFailedExceptionRes(parsedOutput, context);\n        case \"InternalServerError\":\n        case \"com.amazonaws.dynamodb#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidEndpointException\":\n        case \"com.amazonaws.dynamodb#InvalidEndpointException\":\n            throw await de_InvalidEndpointExceptionRes(parsedOutput, context);\n        case \"ItemCollectionSizeLimitExceededException\":\n        case \"com.amazonaws.dynamodb#ItemCollectionSizeLimitExceededException\":\n            throw await de_ItemCollectionSizeLimitExceededExceptionRes(parsedOutput, context);\n        case \"ProvisionedThroughputExceededException\":\n        case \"com.amazonaws.dynamodb#ProvisionedThroughputExceededException\":\n            throw await de_ProvisionedThroughputExceededExceptionRes(parsedOutput, context);\n        case \"RequestLimitExceeded\":\n        case \"com.amazonaws.dynamodb#RequestLimitExceeded\":\n            throw await de_RequestLimitExceededRes(parsedOutput, context);\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.dynamodb#ResourceNotFoundException\":\n            throw await de_ResourceNotFoundExceptionRes(parsedOutput, context);\n        case \"TransactionConflictException\":\n        case \"com.amazonaws.dynamodb#TransactionConflictException\":\n            throw await de_TransactionConflictExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_QueryCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_QueryCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_QueryOutput(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_QueryCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalServerError\":\n        case \"com.amazonaws.dynamodb#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidEndpointException\":\n        case \"com.amazonaws.dynamodb#InvalidEndpointException\":\n            throw await de_InvalidEndpointExceptionRes(parsedOutput, context);\n        case \"ProvisionedThroughputExceededException\":\n        case \"com.amazonaws.dynamodb#ProvisionedThroughputExceededException\":\n            throw await de_ProvisionedThroughputExceededExceptionRes(parsedOutput, context);\n        case \"RequestLimitExceeded\":\n        case \"com.amazonaws.dynamodb#RequestLimitExceeded\":\n            throw await de_RequestLimitExceededRes(parsedOutput, context);\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.dynamodb#ResourceNotFoundException\":\n            throw await de_ResourceNotFoundExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_RestoreTableFromBackupCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_RestoreTableFromBackupCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_RestoreTableFromBackupOutput(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_RestoreTableFromBackupCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"BackupInUseException\":\n        case \"com.amazonaws.dynamodb#BackupInUseException\":\n            throw await de_BackupInUseExceptionRes(parsedOutput, context);\n        case \"BackupNotFoundException\":\n        case \"com.amazonaws.dynamodb#BackupNotFoundException\":\n            throw await de_BackupNotFoundExceptionRes(parsedOutput, context);\n        case \"InternalServerError\":\n        case \"com.amazonaws.dynamodb#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidEndpointException\":\n        case \"com.amazonaws.dynamodb#InvalidEndpointException\":\n            throw await de_InvalidEndpointExceptionRes(parsedOutput, context);\n        case \"LimitExceededException\":\n        case \"com.amazonaws.dynamodb#LimitExceededException\":\n            throw await de_LimitExceededExceptionRes(parsedOutput, context);\n        case \"TableAlreadyExistsException\":\n        case \"com.amazonaws.dynamodb#TableAlreadyExistsException\":\n            throw await de_TableAlreadyExistsExceptionRes(parsedOutput, context);\n        case \"TableInUseException\":\n        case \"com.amazonaws.dynamodb#TableInUseException\":\n            throw await de_TableInUseExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_RestoreTableToPointInTimeCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_RestoreTableToPointInTimeCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_RestoreTableToPointInTimeOutput(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_RestoreTableToPointInTimeCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalServerError\":\n        case \"com.amazonaws.dynamodb#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidEndpointException\":\n        case \"com.amazonaws.dynamodb#InvalidEndpointException\":\n            throw await de_InvalidEndpointExceptionRes(parsedOutput, context);\n        case \"InvalidRestoreTimeException\":\n        case \"com.amazonaws.dynamodb#InvalidRestoreTimeException\":\n            throw await de_InvalidRestoreTimeExceptionRes(parsedOutput, context);\n        case \"LimitExceededException\":\n        case \"com.amazonaws.dynamodb#LimitExceededException\":\n            throw await de_LimitExceededExceptionRes(parsedOutput, context);\n        case \"PointInTimeRecoveryUnavailableException\":\n        case \"com.amazonaws.dynamodb#PointInTimeRecoveryUnavailableException\":\n            throw await de_PointInTimeRecoveryUnavailableExceptionRes(parsedOutput, context);\n        case \"TableAlreadyExistsException\":\n        case \"com.amazonaws.dynamodb#TableAlreadyExistsException\":\n            throw await de_TableAlreadyExistsExceptionRes(parsedOutput, context);\n        case \"TableInUseException\":\n        case \"com.amazonaws.dynamodb#TableInUseException\":\n            throw await de_TableInUseExceptionRes(parsedOutput, context);\n        case \"TableNotFoundException\":\n        case \"com.amazonaws.dynamodb#TableNotFoundException\":\n            throw await de_TableNotFoundExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_ScanCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_ScanCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_ScanOutput(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_ScanCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalServerError\":\n        case \"com.amazonaws.dynamodb#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidEndpointException\":\n        case \"com.amazonaws.dynamodb#InvalidEndpointException\":\n            throw await de_InvalidEndpointExceptionRes(parsedOutput, context);\n        case \"ProvisionedThroughputExceededException\":\n        case \"com.amazonaws.dynamodb#ProvisionedThroughputExceededException\":\n            throw await de_ProvisionedThroughputExceededExceptionRes(parsedOutput, context);\n        case \"RequestLimitExceeded\":\n        case \"com.amazonaws.dynamodb#RequestLimitExceeded\":\n            throw await de_RequestLimitExceededRes(parsedOutput, context);\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.dynamodb#ResourceNotFoundException\":\n            throw await de_ResourceNotFoundExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_TagResourceCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_TagResourceCommandError(output, context);\n    }\n    await collectBody(output.body, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n    };\n    return response;\n};\nconst de_TagResourceCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalServerError\":\n        case \"com.amazonaws.dynamodb#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidEndpointException\":\n        case \"com.amazonaws.dynamodb#InvalidEndpointException\":\n            throw await de_InvalidEndpointExceptionRes(parsedOutput, context);\n        case \"LimitExceededException\":\n        case \"com.amazonaws.dynamodb#LimitExceededException\":\n            throw await de_LimitExceededExceptionRes(parsedOutput, context);\n        case \"ResourceInUseException\":\n        case \"com.amazonaws.dynamodb#ResourceInUseException\":\n            throw await de_ResourceInUseExceptionRes(parsedOutput, context);\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.dynamodb#ResourceNotFoundException\":\n            throw await de_ResourceNotFoundExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_TransactGetItemsCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_TransactGetItemsCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_TransactGetItemsOutput(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_TransactGetItemsCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalServerError\":\n        case \"com.amazonaws.dynamodb#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidEndpointException\":\n        case \"com.amazonaws.dynamodb#InvalidEndpointException\":\n            throw await de_InvalidEndpointExceptionRes(parsedOutput, context);\n        case \"ProvisionedThroughputExceededException\":\n        case \"com.amazonaws.dynamodb#ProvisionedThroughputExceededException\":\n            throw await de_ProvisionedThroughputExceededExceptionRes(parsedOutput, context);\n        case \"RequestLimitExceeded\":\n        case \"com.amazonaws.dynamodb#RequestLimitExceeded\":\n            throw await de_RequestLimitExceededRes(parsedOutput, context);\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.dynamodb#ResourceNotFoundException\":\n            throw await de_ResourceNotFoundExceptionRes(parsedOutput, context);\n        case \"TransactionCanceledException\":\n        case \"com.amazonaws.dynamodb#TransactionCanceledException\":\n            throw await de_TransactionCanceledExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_TransactWriteItemsCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_TransactWriteItemsCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_TransactWriteItemsOutput(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_TransactWriteItemsCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"IdempotentParameterMismatchException\":\n        case \"com.amazonaws.dynamodb#IdempotentParameterMismatchException\":\n            throw await de_IdempotentParameterMismatchExceptionRes(parsedOutput, context);\n        case \"InternalServerError\":\n        case \"com.amazonaws.dynamodb#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidEndpointException\":\n        case \"com.amazonaws.dynamodb#InvalidEndpointException\":\n            throw await de_InvalidEndpointExceptionRes(parsedOutput, context);\n        case \"ProvisionedThroughputExceededException\":\n        case \"com.amazonaws.dynamodb#ProvisionedThroughputExceededException\":\n            throw await de_ProvisionedThroughputExceededExceptionRes(parsedOutput, context);\n        case \"RequestLimitExceeded\":\n        case \"com.amazonaws.dynamodb#RequestLimitExceeded\":\n            throw await de_RequestLimitExceededRes(parsedOutput, context);\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.dynamodb#ResourceNotFoundException\":\n            throw await de_ResourceNotFoundExceptionRes(parsedOutput, context);\n        case \"TransactionCanceledException\":\n        case \"com.amazonaws.dynamodb#TransactionCanceledException\":\n            throw await de_TransactionCanceledExceptionRes(parsedOutput, context);\n        case \"TransactionInProgressException\":\n        case \"com.amazonaws.dynamodb#TransactionInProgressException\":\n            throw await de_TransactionInProgressExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_UntagResourceCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_UntagResourceCommandError(output, context);\n    }\n    await collectBody(output.body, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n    };\n    return response;\n};\nconst de_UntagResourceCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalServerError\":\n        case \"com.amazonaws.dynamodb#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidEndpointException\":\n        case \"com.amazonaws.dynamodb#InvalidEndpointException\":\n            throw await de_InvalidEndpointExceptionRes(parsedOutput, context);\n        case \"LimitExceededException\":\n        case \"com.amazonaws.dynamodb#LimitExceededException\":\n            throw await de_LimitExceededExceptionRes(parsedOutput, context);\n        case \"ResourceInUseException\":\n        case \"com.amazonaws.dynamodb#ResourceInUseException\":\n            throw await de_ResourceInUseExceptionRes(parsedOutput, context);\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.dynamodb#ResourceNotFoundException\":\n            throw await de_ResourceNotFoundExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_UpdateContinuousBackupsCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_UpdateContinuousBackupsCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_UpdateContinuousBackupsOutput(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_UpdateContinuousBackupsCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"ContinuousBackupsUnavailableException\":\n        case \"com.amazonaws.dynamodb#ContinuousBackupsUnavailableException\":\n            throw await de_ContinuousBackupsUnavailableExceptionRes(parsedOutput, context);\n        case \"InternalServerError\":\n        case \"com.amazonaws.dynamodb#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidEndpointException\":\n        case \"com.amazonaws.dynamodb#InvalidEndpointException\":\n            throw await de_InvalidEndpointExceptionRes(parsedOutput, context);\n        case \"TableNotFoundException\":\n        case \"com.amazonaws.dynamodb#TableNotFoundException\":\n            throw await de_TableNotFoundExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_UpdateContributorInsightsCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_UpdateContributorInsightsCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = _json(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_UpdateContributorInsightsCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalServerError\":\n        case \"com.amazonaws.dynamodb#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.dynamodb#ResourceNotFoundException\":\n            throw await de_ResourceNotFoundExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_UpdateGlobalTableCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_UpdateGlobalTableCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_UpdateGlobalTableOutput(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_UpdateGlobalTableCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"GlobalTableNotFoundException\":\n        case \"com.amazonaws.dynamodb#GlobalTableNotFoundException\":\n            throw await de_GlobalTableNotFoundExceptionRes(parsedOutput, context);\n        case \"InternalServerError\":\n        case \"com.amazonaws.dynamodb#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidEndpointException\":\n        case \"com.amazonaws.dynamodb#InvalidEndpointException\":\n            throw await de_InvalidEndpointExceptionRes(parsedOutput, context);\n        case \"ReplicaAlreadyExistsException\":\n        case \"com.amazonaws.dynamodb#ReplicaAlreadyExistsException\":\n            throw await de_ReplicaAlreadyExistsExceptionRes(parsedOutput, context);\n        case \"ReplicaNotFoundException\":\n        case \"com.amazonaws.dynamodb#ReplicaNotFoundException\":\n            throw await de_ReplicaNotFoundExceptionRes(parsedOutput, context);\n        case \"TableNotFoundException\":\n        case \"com.amazonaws.dynamodb#TableNotFoundException\":\n            throw await de_TableNotFoundExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_UpdateGlobalTableSettingsCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_UpdateGlobalTableSettingsCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_UpdateGlobalTableSettingsOutput(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_UpdateGlobalTableSettingsCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"GlobalTableNotFoundException\":\n        case \"com.amazonaws.dynamodb#GlobalTableNotFoundException\":\n            throw await de_GlobalTableNotFoundExceptionRes(parsedOutput, context);\n        case \"IndexNotFoundException\":\n        case \"com.amazonaws.dynamodb#IndexNotFoundException\":\n            throw await de_IndexNotFoundExceptionRes(parsedOutput, context);\n        case \"InternalServerError\":\n        case \"com.amazonaws.dynamodb#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidEndpointException\":\n        case \"com.amazonaws.dynamodb#InvalidEndpointException\":\n            throw await de_InvalidEndpointExceptionRes(parsedOutput, context);\n        case \"LimitExceededException\":\n        case \"com.amazonaws.dynamodb#LimitExceededException\":\n            throw await de_LimitExceededExceptionRes(parsedOutput, context);\n        case \"ReplicaNotFoundException\":\n        case \"com.amazonaws.dynamodb#ReplicaNotFoundException\":\n            throw await de_ReplicaNotFoundExceptionRes(parsedOutput, context);\n        case \"ResourceInUseException\":\n        case \"com.amazonaws.dynamodb#ResourceInUseException\":\n            throw await de_ResourceInUseExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_UpdateItemCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_UpdateItemCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_UpdateItemOutput(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_UpdateItemCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"ConditionalCheckFailedException\":\n        case \"com.amazonaws.dynamodb#ConditionalCheckFailedException\":\n            throw await de_ConditionalCheckFailedExceptionRes(parsedOutput, context);\n        case \"InternalServerError\":\n        case \"com.amazonaws.dynamodb#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidEndpointException\":\n        case \"com.amazonaws.dynamodb#InvalidEndpointException\":\n            throw await de_InvalidEndpointExceptionRes(parsedOutput, context);\n        case \"ItemCollectionSizeLimitExceededException\":\n        case \"com.amazonaws.dynamodb#ItemCollectionSizeLimitExceededException\":\n            throw await de_ItemCollectionSizeLimitExceededExceptionRes(parsedOutput, context);\n        case \"ProvisionedThroughputExceededException\":\n        case \"com.amazonaws.dynamodb#ProvisionedThroughputExceededException\":\n            throw await de_ProvisionedThroughputExceededExceptionRes(parsedOutput, context);\n        case \"RequestLimitExceeded\":\n        case \"com.amazonaws.dynamodb#RequestLimitExceeded\":\n            throw await de_RequestLimitExceededRes(parsedOutput, context);\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.dynamodb#ResourceNotFoundException\":\n            throw await de_ResourceNotFoundExceptionRes(parsedOutput, context);\n        case \"TransactionConflictException\":\n        case \"com.amazonaws.dynamodb#TransactionConflictException\":\n            throw await de_TransactionConflictExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_UpdateTableCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_UpdateTableCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_UpdateTableOutput(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_UpdateTableCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalServerError\":\n        case \"com.amazonaws.dynamodb#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidEndpointException\":\n        case \"com.amazonaws.dynamodb#InvalidEndpointException\":\n            throw await de_InvalidEndpointExceptionRes(parsedOutput, context);\n        case \"LimitExceededException\":\n        case \"com.amazonaws.dynamodb#LimitExceededException\":\n            throw await de_LimitExceededExceptionRes(parsedOutput, context);\n        case \"ResourceInUseException\":\n        case \"com.amazonaws.dynamodb#ResourceInUseException\":\n            throw await de_ResourceInUseExceptionRes(parsedOutput, context);\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.dynamodb#ResourceNotFoundException\":\n            throw await de_ResourceNotFoundExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_UpdateTableReplicaAutoScalingCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_UpdateTableReplicaAutoScalingCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_UpdateTableReplicaAutoScalingOutput(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_UpdateTableReplicaAutoScalingCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalServerError\":\n        case \"com.amazonaws.dynamodb#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"LimitExceededException\":\n        case \"com.amazonaws.dynamodb#LimitExceededException\":\n            throw await de_LimitExceededExceptionRes(parsedOutput, context);\n        case \"ResourceInUseException\":\n        case \"com.amazonaws.dynamodb#ResourceInUseException\":\n            throw await de_ResourceInUseExceptionRes(parsedOutput, context);\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.dynamodb#ResourceNotFoundException\":\n            throw await de_ResourceNotFoundExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_UpdateTimeToLiveCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_UpdateTimeToLiveCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = _json(data);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_UpdateTimeToLiveCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalServerError\":\n        case \"com.amazonaws.dynamodb#InternalServerError\":\n            throw await de_InternalServerErrorRes(parsedOutput, context);\n        case \"InvalidEndpointException\":\n        case \"com.amazonaws.dynamodb#InvalidEndpointException\":\n            throw await de_InvalidEndpointExceptionRes(parsedOutput, context);\n        case \"LimitExceededException\":\n        case \"com.amazonaws.dynamodb#LimitExceededException\":\n            throw await de_LimitExceededExceptionRes(parsedOutput, context);\n        case \"ResourceInUseException\":\n        case \"com.amazonaws.dynamodb#ResourceInUseException\":\n            throw await de_ResourceInUseExceptionRes(parsedOutput, context);\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.dynamodb#ResourceNotFoundException\":\n            throw await de_ResourceNotFoundExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nconst de_BackupInUseExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new BackupInUseException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_BackupNotFoundExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new BackupNotFoundException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_ConditionalCheckFailedExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new ConditionalCheckFailedException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_ContinuousBackupsUnavailableExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new ContinuousBackupsUnavailableException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_DuplicateItemExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new DuplicateItemException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_ExportConflictExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new ExportConflictException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_ExportNotFoundExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new ExportNotFoundException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_GlobalTableAlreadyExistsExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new GlobalTableAlreadyExistsException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_GlobalTableNotFoundExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new GlobalTableNotFoundException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_IdempotentParameterMismatchExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new IdempotentParameterMismatchException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_ImportConflictExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new ImportConflictException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_ImportNotFoundExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new ImportNotFoundException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_IndexNotFoundExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new IndexNotFoundException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_InternalServerErrorRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new InternalServerError({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_InvalidEndpointExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new InvalidEndpointException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_InvalidExportTimeExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new InvalidExportTimeException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_InvalidRestoreTimeExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new InvalidRestoreTimeException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_ItemCollectionSizeLimitExceededExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new ItemCollectionSizeLimitExceededException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_LimitExceededExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new LimitExceededException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_PointInTimeRecoveryUnavailableExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new PointInTimeRecoveryUnavailableException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_ProvisionedThroughputExceededExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new ProvisionedThroughputExceededException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_ReplicaAlreadyExistsExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new ReplicaAlreadyExistsException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_ReplicaNotFoundExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new ReplicaNotFoundException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_RequestLimitExceededRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new RequestLimitExceeded({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_ResourceInUseExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new ResourceInUseException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_ResourceNotFoundExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new ResourceNotFoundException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_TableAlreadyExistsExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new TableAlreadyExistsException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_TableInUseExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new TableInUseException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_TableNotFoundExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new TableNotFoundException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_TransactionCanceledExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = de_TransactionCanceledException(body, context);\n    const exception = new TransactionCanceledException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_TransactionConflictExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new TransactionConflictException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_TransactionInProgressExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = _json(body);\n    const exception = new TransactionInProgressException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst se_AttributeUpdates = (input, context) => {\n    return Object.entries(input).reduce((acc, [key, value]) => {\n        if (value === null) {\n            return acc;\n        }\n        acc[key] = se_AttributeValueUpdate(value, context);\n        return acc;\n    }, {});\n};\nconst se_AttributeValue = (input, context) => {\n    return AttributeValue.visit(input, {\n        B: (value) => ({ B: context.base64Encoder(value) }),\n        BOOL: (value) => ({ BOOL: value }),\n        BS: (value) => ({ BS: se_BinarySetAttributeValue(value, context) }),\n        L: (value) => ({ L: se_ListAttributeValue(value, context) }),\n        M: (value) => ({ M: se_MapAttributeValue(value, context) }),\n        N: (value) => ({ N: value }),\n        NS: (value) => ({ NS: _json(value) }),\n        NULL: (value) => ({ NULL: value }),\n        S: (value) => ({ S: value }),\n        SS: (value) => ({ SS: _json(value) }),\n        _: (name, value) => ({ name: value }),\n    });\n};\nconst se_AttributeValueList = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        return se_AttributeValue(entry, context);\n    });\n};\nconst se_AttributeValueUpdate = (input, context) => {\n    return take(input, {\n        Action: [],\n        Value: (_) => se_AttributeValue(_, context),\n    });\n};\nconst se_AutoScalingPolicyUpdate = (input, context) => {\n    return take(input, {\n        PolicyName: [],\n        TargetTrackingScalingPolicyConfiguration: (_) => se_AutoScalingTargetTrackingScalingPolicyConfigurationUpdate(_, context),\n    });\n};\nconst se_AutoScalingSettingsUpdate = (input, context) => {\n    return take(input, {\n        AutoScalingDisabled: [],\n        AutoScalingRoleArn: [],\n        MaximumUnits: [],\n        MinimumUnits: [],\n        ScalingPolicyUpdate: (_) => se_AutoScalingPolicyUpdate(_, context),\n    });\n};\nconst se_AutoScalingTargetTrackingScalingPolicyConfigurationUpdate = (input, context) => {\n    return take(input, {\n        DisableScaleIn: [],\n        ScaleInCooldown: [],\n        ScaleOutCooldown: [],\n        TargetValue: __serializeFloat,\n    });\n};\nconst se_BatchExecuteStatementInput = (input, context) => {\n    return take(input, {\n        ReturnConsumedCapacity: [],\n        Statements: (_) => se_PartiQLBatchRequest(_, context),\n    });\n};\nconst se_BatchGetItemInput = (input, context) => {\n    return take(input, {\n        RequestItems: (_) => se_BatchGetRequestMap(_, context),\n        ReturnConsumedCapacity: [],\n    });\n};\nconst se_BatchGetRequestMap = (input, context) => {\n    return Object.entries(input).reduce((acc, [key, value]) => {\n        if (value === null) {\n            return acc;\n        }\n        acc[key] = se_KeysAndAttributes(value, context);\n        return acc;\n    }, {});\n};\nconst se_BatchStatementRequest = (input, context) => {\n    return take(input, {\n        ConsistentRead: [],\n        Parameters: (_) => se_PreparedStatementParameters(_, context),\n        Statement: [],\n    });\n};\nconst se_BatchWriteItemInput = (input, context) => {\n    return take(input, {\n        RequestItems: (_) => se_BatchWriteItemRequestMap(_, context),\n        ReturnConsumedCapacity: [],\n        ReturnItemCollectionMetrics: [],\n    });\n};\nconst se_BatchWriteItemRequestMap = (input, context) => {\n    return Object.entries(input).reduce((acc, [key, value]) => {\n        if (value === null) {\n            return acc;\n        }\n        acc[key] = se_WriteRequests(value, context);\n        return acc;\n    }, {});\n};\nconst se_BinarySetAttributeValue = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        return context.base64Encoder(entry);\n    });\n};\nconst se_Condition = (input, context) => {\n    return take(input, {\n        AttributeValueList: (_) => se_AttributeValueList(_, context),\n        ComparisonOperator: [],\n    });\n};\nconst se_ConditionCheck = (input, context) => {\n    return take(input, {\n        ConditionExpression: [],\n        ExpressionAttributeNames: _json,\n        ExpressionAttributeValues: (_) => se_ExpressionAttributeValueMap(_, context),\n        Key: (_) => se_Key(_, context),\n        ReturnValuesOnConditionCheckFailure: [],\n        TableName: [],\n    });\n};\nconst se_Delete = (input, context) => {\n    return take(input, {\n        ConditionExpression: [],\n        ExpressionAttributeNames: _json,\n        ExpressionAttributeValues: (_) => se_ExpressionAttributeValueMap(_, context),\n        Key: (_) => se_Key(_, context),\n        ReturnValuesOnConditionCheckFailure: [],\n        TableName: [],\n    });\n};\nconst se_DeleteItemInput = (input, context) => {\n    return take(input, {\n        ConditionExpression: [],\n        ConditionalOperator: [],\n        Expected: (_) => se_ExpectedAttributeMap(_, context),\n        ExpressionAttributeNames: _json,\n        ExpressionAttributeValues: (_) => se_ExpressionAttributeValueMap(_, context),\n        Key: (_) => se_Key(_, context),\n        ReturnConsumedCapacity: [],\n        ReturnItemCollectionMetrics: [],\n        ReturnValues: [],\n        TableName: [],\n    });\n};\nconst se_DeleteRequest = (input, context) => {\n    return take(input, {\n        Key: (_) => se_Key(_, context),\n    });\n};\nconst se_ExecuteStatementInput = (input, context) => {\n    return take(input, {\n        ConsistentRead: [],\n        Limit: [],\n        NextToken: [],\n        Parameters: (_) => se_PreparedStatementParameters(_, context),\n        ReturnConsumedCapacity: [],\n        Statement: [],\n    });\n};\nconst se_ExecuteTransactionInput = (input, context) => {\n    return take(input, {\n        ClientRequestToken: [true, (_) => _ ?? generateIdempotencyToken()],\n        ReturnConsumedCapacity: [],\n        TransactStatements: (_) => se_ParameterizedStatements(_, context),\n    });\n};\nconst se_ExpectedAttributeMap = (input, context) => {\n    return Object.entries(input).reduce((acc, [key, value]) => {\n        if (value === null) {\n            return acc;\n        }\n        acc[key] = se_ExpectedAttributeValue(value, context);\n        return acc;\n    }, {});\n};\nconst se_ExpectedAttributeValue = (input, context) => {\n    return take(input, {\n        AttributeValueList: (_) => se_AttributeValueList(_, context),\n        ComparisonOperator: [],\n        Exists: [],\n        Value: (_) => se_AttributeValue(_, context),\n    });\n};\nconst se_ExportTableToPointInTimeInput = (input, context) => {\n    return take(input, {\n        ClientToken: [true, (_) => _ ?? generateIdempotencyToken()],\n        ExportFormat: [],\n        ExportTime: (_) => Math.round(_.getTime() / 1000),\n        S3Bucket: [],\n        S3BucketOwner: [],\n        S3Prefix: [],\n        S3SseAlgorithm: [],\n        S3SseKmsKeyId: [],\n        TableArn: [],\n    });\n};\nconst se_ExpressionAttributeValueMap = (input, context) => {\n    return Object.entries(input).reduce((acc, [key, value]) => {\n        if (value === null) {\n            return acc;\n        }\n        acc[key] = se_AttributeValue(value, context);\n        return acc;\n    }, {});\n};\nconst se_FilterConditionMap = (input, context) => {\n    return Object.entries(input).reduce((acc, [key, value]) => {\n        if (value === null) {\n            return acc;\n        }\n        acc[key] = se_Condition(value, context);\n        return acc;\n    }, {});\n};\nconst se_Get = (input, context) => {\n    return take(input, {\n        ExpressionAttributeNames: _json,\n        Key: (_) => se_Key(_, context),\n        ProjectionExpression: [],\n        TableName: [],\n    });\n};\nconst se_GetItemInput = (input, context) => {\n    return take(input, {\n        AttributesToGet: _json,\n        ConsistentRead: [],\n        ExpressionAttributeNames: _json,\n        Key: (_) => se_Key(_, context),\n        ProjectionExpression: [],\n        ReturnConsumedCapacity: [],\n        TableName: [],\n    });\n};\nconst se_GlobalSecondaryIndexAutoScalingUpdate = (input, context) => {\n    return take(input, {\n        IndexName: [],\n        ProvisionedWriteCapacityAutoScalingUpdate: (_) => se_AutoScalingSettingsUpdate(_, context),\n    });\n};\nconst se_GlobalSecondaryIndexAutoScalingUpdateList = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        return se_GlobalSecondaryIndexAutoScalingUpdate(entry, context);\n    });\n};\nconst se_GlobalTableGlobalSecondaryIndexSettingsUpdate = (input, context) => {\n    return take(input, {\n        IndexName: [],\n        ProvisionedWriteCapacityAutoScalingSettingsUpdate: (_) => se_AutoScalingSettingsUpdate(_, context),\n        ProvisionedWriteCapacityUnits: [],\n    });\n};\nconst se_GlobalTableGlobalSecondaryIndexSettingsUpdateList = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        return se_GlobalTableGlobalSecondaryIndexSettingsUpdate(entry, context);\n    });\n};\nconst se_ImportTableInput = (input, context) => {\n    return take(input, {\n        ClientToken: [true, (_) => _ ?? generateIdempotencyToken()],\n        InputCompressionType: [],\n        InputFormat: [],\n        InputFormatOptions: _json,\n        S3BucketSource: _json,\n        TableCreationParameters: _json,\n    });\n};\nconst se_Key = (input, context) => {\n    return Object.entries(input).reduce((acc, [key, value]) => {\n        if (value === null) {\n            return acc;\n        }\n        acc[key] = se_AttributeValue(value, context);\n        return acc;\n    }, {});\n};\nconst se_KeyConditions = (input, context) => {\n    return Object.entries(input).reduce((acc, [key, value]) => {\n        if (value === null) {\n            return acc;\n        }\n        acc[key] = se_Condition(value, context);\n        return acc;\n    }, {});\n};\nconst se_KeyList = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        return se_Key(entry, context);\n    });\n};\nconst se_KeysAndAttributes = (input, context) => {\n    return take(input, {\n        AttributesToGet: _json,\n        ConsistentRead: [],\n        ExpressionAttributeNames: _json,\n        Keys: (_) => se_KeyList(_, context),\n        ProjectionExpression: [],\n    });\n};\nconst se_ListAttributeValue = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        return se_AttributeValue(entry, context);\n    });\n};\nconst se_ListBackupsInput = (input, context) => {\n    return take(input, {\n        BackupType: [],\n        ExclusiveStartBackupArn: [],\n        Limit: [],\n        TableName: [],\n        TimeRangeLowerBound: (_) => Math.round(_.getTime() / 1000),\n        TimeRangeUpperBound: (_) => Math.round(_.getTime() / 1000),\n    });\n};\nconst se_MapAttributeValue = (input, context) => {\n    return Object.entries(input).reduce((acc, [key, value]) => {\n        if (value === null) {\n            return acc;\n        }\n        acc[key] = se_AttributeValue(value, context);\n        return acc;\n    }, {});\n};\nconst se_ParameterizedStatement = (input, context) => {\n    return take(input, {\n        Parameters: (_) => se_PreparedStatementParameters(_, context),\n        Statement: [],\n    });\n};\nconst se_ParameterizedStatements = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        return se_ParameterizedStatement(entry, context);\n    });\n};\nconst se_PartiQLBatchRequest = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        return se_BatchStatementRequest(entry, context);\n    });\n};\nconst se_PreparedStatementParameters = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        return se_AttributeValue(entry, context);\n    });\n};\nconst se_Put = (input, context) => {\n    return take(input, {\n        ConditionExpression: [],\n        ExpressionAttributeNames: _json,\n        ExpressionAttributeValues: (_) => se_ExpressionAttributeValueMap(_, context),\n        Item: (_) => se_PutItemInputAttributeMap(_, context),\n        ReturnValuesOnConditionCheckFailure: [],\n        TableName: [],\n    });\n};\nconst se_PutItemInput = (input, context) => {\n    return take(input, {\n        ConditionExpression: [],\n        ConditionalOperator: [],\n        Expected: (_) => se_ExpectedAttributeMap(_, context),\n        ExpressionAttributeNames: _json,\n        ExpressionAttributeValues: (_) => se_ExpressionAttributeValueMap(_, context),\n        Item: (_) => se_PutItemInputAttributeMap(_, context),\n        ReturnConsumedCapacity: [],\n        ReturnItemCollectionMetrics: [],\n        ReturnValues: [],\n        TableName: [],\n    });\n};\nconst se_PutItemInputAttributeMap = (input, context) => {\n    return Object.entries(input).reduce((acc, [key, value]) => {\n        if (value === null) {\n            return acc;\n        }\n        acc[key] = se_AttributeValue(value, context);\n        return acc;\n    }, {});\n};\nconst se_PutRequest = (input, context) => {\n    return take(input, {\n        Item: (_) => se_PutItemInputAttributeMap(_, context),\n    });\n};\nconst se_QueryInput = (input, context) => {\n    return take(input, {\n        AttributesToGet: _json,\n        ConditionalOperator: [],\n        ConsistentRead: [],\n        ExclusiveStartKey: (_) => se_Key(_, context),\n        ExpressionAttributeNames: _json,\n        ExpressionAttributeValues: (_) => se_ExpressionAttributeValueMap(_, context),\n        FilterExpression: [],\n        IndexName: [],\n        KeyConditionExpression: [],\n        KeyConditions: (_) => se_KeyConditions(_, context),\n        Limit: [],\n        ProjectionExpression: [],\n        QueryFilter: (_) => se_FilterConditionMap(_, context),\n        ReturnConsumedCapacity: [],\n        ScanIndexForward: [],\n        Select: [],\n        TableName: [],\n    });\n};\nconst se_ReplicaAutoScalingUpdate = (input, context) => {\n    return take(input, {\n        RegionName: [],\n        ReplicaGlobalSecondaryIndexUpdates: (_) => se_ReplicaGlobalSecondaryIndexAutoScalingUpdateList(_, context),\n        ReplicaProvisionedReadCapacityAutoScalingUpdate: (_) => se_AutoScalingSettingsUpdate(_, context),\n    });\n};\nconst se_ReplicaAutoScalingUpdateList = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        return se_ReplicaAutoScalingUpdate(entry, context);\n    });\n};\nconst se_ReplicaGlobalSecondaryIndexAutoScalingUpdate = (input, context) => {\n    return take(input, {\n        IndexName: [],\n        ProvisionedReadCapacityAutoScalingUpdate: (_) => se_AutoScalingSettingsUpdate(_, context),\n    });\n};\nconst se_ReplicaGlobalSecondaryIndexAutoScalingUpdateList = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        return se_ReplicaGlobalSecondaryIndexAutoScalingUpdate(entry, context);\n    });\n};\nconst se_ReplicaGlobalSecondaryIndexSettingsUpdate = (input, context) => {\n    return take(input, {\n        IndexName: [],\n        ProvisionedReadCapacityAutoScalingSettingsUpdate: (_) => se_AutoScalingSettingsUpdate(_, context),\n        ProvisionedReadCapacityUnits: [],\n    });\n};\nconst se_ReplicaGlobalSecondaryIndexSettingsUpdateList = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        return se_ReplicaGlobalSecondaryIndexSettingsUpdate(entry, context);\n    });\n};\nconst se_ReplicaSettingsUpdate = (input, context) => {\n    return take(input, {\n        RegionName: [],\n        ReplicaGlobalSecondaryIndexSettingsUpdate: (_) => se_ReplicaGlobalSecondaryIndexSettingsUpdateList(_, context),\n        ReplicaProvisionedReadCapacityAutoScalingSettingsUpdate: (_) => se_AutoScalingSettingsUpdate(_, context),\n        ReplicaProvisionedReadCapacityUnits: [],\n        ReplicaTableClass: [],\n    });\n};\nconst se_ReplicaSettingsUpdateList = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        return se_ReplicaSettingsUpdate(entry, context);\n    });\n};\nconst se_RestoreTableToPointInTimeInput = (input, context) => {\n    return take(input, {\n        BillingModeOverride: [],\n        GlobalSecondaryIndexOverride: _json,\n        LocalSecondaryIndexOverride: _json,\n        ProvisionedThroughputOverride: _json,\n        RestoreDateTime: (_) => Math.round(_.getTime() / 1000),\n        SSESpecificationOverride: _json,\n        SourceTableArn: [],\n        SourceTableName: [],\n        TargetTableName: [],\n        UseLatestRestorableTime: [],\n    });\n};\nconst se_ScanInput = (input, context) => {\n    return take(input, {\n        AttributesToGet: _json,\n        ConditionalOperator: [],\n        ConsistentRead: [],\n        ExclusiveStartKey: (_) => se_Key(_, context),\n        ExpressionAttributeNames: _json,\n        ExpressionAttributeValues: (_) => se_ExpressionAttributeValueMap(_, context),\n        FilterExpression: [],\n        IndexName: [],\n        Limit: [],\n        ProjectionExpression: [],\n        ReturnConsumedCapacity: [],\n        ScanFilter: (_) => se_FilterConditionMap(_, context),\n        Segment: [],\n        Select: [],\n        TableName: [],\n        TotalSegments: [],\n    });\n};\nconst se_TransactGetItem = (input, context) => {\n    return take(input, {\n        Get: (_) => se_Get(_, context),\n    });\n};\nconst se_TransactGetItemList = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        return se_TransactGetItem(entry, context);\n    });\n};\nconst se_TransactGetItemsInput = (input, context) => {\n    return take(input, {\n        ReturnConsumedCapacity: [],\n        TransactItems: (_) => se_TransactGetItemList(_, context),\n    });\n};\nconst se_TransactWriteItem = (input, context) => {\n    return take(input, {\n        ConditionCheck: (_) => se_ConditionCheck(_, context),\n        Delete: (_) => se_Delete(_, context),\n        Put: (_) => se_Put(_, context),\n        Update: (_) => se_Update(_, context),\n    });\n};\nconst se_TransactWriteItemList = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        return se_TransactWriteItem(entry, context);\n    });\n};\nconst se_TransactWriteItemsInput = (input, context) => {\n    return take(input, {\n        ClientRequestToken: [true, (_) => _ ?? generateIdempotencyToken()],\n        ReturnConsumedCapacity: [],\n        ReturnItemCollectionMetrics: [],\n        TransactItems: (_) => se_TransactWriteItemList(_, context),\n    });\n};\nconst se_Update = (input, context) => {\n    return take(input, {\n        ConditionExpression: [],\n        ExpressionAttributeNames: _json,\n        ExpressionAttributeValues: (_) => se_ExpressionAttributeValueMap(_, context),\n        Key: (_) => se_Key(_, context),\n        ReturnValuesOnConditionCheckFailure: [],\n        TableName: [],\n        UpdateExpression: [],\n    });\n};\nconst se_UpdateGlobalTableSettingsInput = (input, context) => {\n    return take(input, {\n        GlobalTableBillingMode: [],\n        GlobalTableGlobalSecondaryIndexSettingsUpdate: (_) => se_GlobalTableGlobalSecondaryIndexSettingsUpdateList(_, context),\n        GlobalTableName: [],\n        GlobalTableProvisionedWriteCapacityAutoScalingSettingsUpdate: (_) => se_AutoScalingSettingsUpdate(_, context),\n        GlobalTableProvisionedWriteCapacityUnits: [],\n        ReplicaSettingsUpdate: (_) => se_ReplicaSettingsUpdateList(_, context),\n    });\n};\nconst se_UpdateItemInput = (input, context) => {\n    return take(input, {\n        AttributeUpdates: (_) => se_AttributeUpdates(_, context),\n        ConditionExpression: [],\n        ConditionalOperator: [],\n        Expected: (_) => se_ExpectedAttributeMap(_, context),\n        ExpressionAttributeNames: _json,\n        ExpressionAttributeValues: (_) => se_ExpressionAttributeValueMap(_, context),\n        Key: (_) => se_Key(_, context),\n        ReturnConsumedCapacity: [],\n        ReturnItemCollectionMetrics: [],\n        ReturnValues: [],\n        TableName: [],\n        UpdateExpression: [],\n    });\n};\nconst se_UpdateTableReplicaAutoScalingInput = (input, context) => {\n    return take(input, {\n        GlobalSecondaryIndexUpdates: (_) => se_GlobalSecondaryIndexAutoScalingUpdateList(_, context),\n        ProvisionedWriteCapacityAutoScalingUpdate: (_) => se_AutoScalingSettingsUpdate(_, context),\n        ReplicaUpdates: (_) => se_ReplicaAutoScalingUpdateList(_, context),\n        TableName: [],\n    });\n};\nconst se_WriteRequest = (input, context) => {\n    return take(input, {\n        DeleteRequest: (_) => se_DeleteRequest(_, context),\n        PutRequest: (_) => se_PutRequest(_, context),\n    });\n};\nconst se_WriteRequests = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        return se_WriteRequest(entry, context);\n    });\n};\nconst de_ArchivalSummary = (output, context) => {\n    return take(output, {\n        ArchivalBackupArn: __expectString,\n        ArchivalDateTime: (_) => __expectNonNull(__parseEpochTimestamp(__expectNumber(_))),\n        ArchivalReason: __expectString,\n    });\n};\nconst de_AttributeMap = (output, context) => {\n    return Object.entries(output).reduce((acc, [key, value]) => {\n        if (value === null) {\n            return acc;\n        }\n        acc[key] = de_AttributeValue(__expectUnion(value), context);\n        return acc;\n    }, {});\n};\nconst de_AttributeValue = (output, context) => {\n    if (output.B != null) {\n        return {\n            B: context.base64Decoder(output.B),\n        };\n    }\n    if (__expectBoolean(output.BOOL) !== undefined) {\n        return { BOOL: __expectBoolean(output.BOOL) };\n    }\n    if (output.BS != null) {\n        return {\n            BS: de_BinarySetAttributeValue(output.BS, context),\n        };\n    }\n    if (output.L != null) {\n        return {\n            L: de_ListAttributeValue(output.L, context),\n        };\n    }\n    if (output.M != null) {\n        return {\n            M: de_MapAttributeValue(output.M, context),\n        };\n    }\n    if (__expectString(output.N) !== undefined) {\n        return { N: __expectString(output.N) };\n    }\n    if (output.NS != null) {\n        return {\n            NS: _json(output.NS),\n        };\n    }\n    if (__expectBoolean(output.NULL) !== undefined) {\n        return { NULL: __expectBoolean(output.NULL) };\n    }\n    if (__expectString(output.S) !== undefined) {\n        return { S: __expectString(output.S) };\n    }\n    if (output.SS != null) {\n        return {\n            SS: _json(output.SS),\n        };\n    }\n    return { $unknown: Object.entries(output)[0] };\n};\nconst de_AutoScalingPolicyDescription = (output, context) => {\n    return take(output, {\n        PolicyName: __expectString,\n        TargetTrackingScalingPolicyConfiguration: (_) => de_AutoScalingTargetTrackingScalingPolicyConfigurationDescription(_, context),\n    });\n};\nconst de_AutoScalingPolicyDescriptionList = (output, context) => {\n    const retVal = (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_AutoScalingPolicyDescription(entry, context);\n    });\n    return retVal;\n};\nconst de_AutoScalingSettingsDescription = (output, context) => {\n    return take(output, {\n        AutoScalingDisabled: __expectBoolean,\n        AutoScalingRoleArn: __expectString,\n        MaximumUnits: __expectLong,\n        MinimumUnits: __expectLong,\n        ScalingPolicies: (_) => de_AutoScalingPolicyDescriptionList(_, context),\n    });\n};\nconst de_AutoScalingTargetTrackingScalingPolicyConfigurationDescription = (output, context) => {\n    return take(output, {\n        DisableScaleIn: __expectBoolean,\n        ScaleInCooldown: __expectInt32,\n        ScaleOutCooldown: __expectInt32,\n        TargetValue: __limitedParseDouble,\n    });\n};\nconst de_BackupDescription = (output, context) => {\n    return take(output, {\n        BackupDetails: (_) => de_BackupDetails(_, context),\n        SourceTableDetails: (_) => de_SourceTableDetails(_, context),\n        SourceTableFeatureDetails: (_) => de_SourceTableFeatureDetails(_, context),\n    });\n};\nconst de_BackupDetails = (output, context) => {\n    return take(output, {\n        BackupArn: __expectString,\n        BackupCreationDateTime: (_) => __expectNonNull(__parseEpochTimestamp(__expectNumber(_))),\n        BackupExpiryDateTime: (_) => __expectNonNull(__parseEpochTimestamp(__expectNumber(_))),\n        BackupName: __expectString,\n        BackupSizeBytes: __expectLong,\n        BackupStatus: __expectString,\n        BackupType: __expectString,\n    });\n};\nconst de_BackupSummaries = (output, context) => {\n    const retVal = (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_BackupSummary(entry, context);\n    });\n    return retVal;\n};\nconst de_BackupSummary = (output, context) => {\n    return take(output, {\n        BackupArn: __expectString,\n        BackupCreationDateTime: (_) => __expectNonNull(__parseEpochTimestamp(__expectNumber(_))),\n        BackupExpiryDateTime: (_) => __expectNonNull(__parseEpochTimestamp(__expectNumber(_))),\n        BackupName: __expectString,\n        BackupSizeBytes: __expectLong,\n        BackupStatus: __expectString,\n        BackupType: __expectString,\n        TableArn: __expectString,\n        TableId: __expectString,\n        TableName: __expectString,\n    });\n};\nconst de_BatchExecuteStatementOutput = (output, context) => {\n    return take(output, {\n        ConsumedCapacity: (_) => de_ConsumedCapacityMultiple(_, context),\n        Responses: (_) => de_PartiQLBatchResponse(_, context),\n    });\n};\nconst de_BatchGetItemOutput = (output, context) => {\n    return take(output, {\n        ConsumedCapacity: (_) => de_ConsumedCapacityMultiple(_, context),\n        Responses: (_) => de_BatchGetResponseMap(_, context),\n        UnprocessedKeys: (_) => de_BatchGetRequestMap(_, context),\n    });\n};\nconst de_BatchGetRequestMap = (output, context) => {\n    return Object.entries(output).reduce((acc, [key, value]) => {\n        if (value === null) {\n            return acc;\n        }\n        acc[key] = de_KeysAndAttributes(value, context);\n        return acc;\n    }, {});\n};\nconst de_BatchGetResponseMap = (output, context) => {\n    return Object.entries(output).reduce((acc, [key, value]) => {\n        if (value === null) {\n            return acc;\n        }\n        acc[key] = de_ItemList(value, context);\n        return acc;\n    }, {});\n};\nconst de_BatchStatementResponse = (output, context) => {\n    return take(output, {\n        Error: _json,\n        Item: (_) => de_AttributeMap(_, context),\n        TableName: __expectString,\n    });\n};\nconst de_BatchWriteItemOutput = (output, context) => {\n    return take(output, {\n        ConsumedCapacity: (_) => de_ConsumedCapacityMultiple(_, context),\n        ItemCollectionMetrics: (_) => de_ItemCollectionMetricsPerTable(_, context),\n        UnprocessedItems: (_) => de_BatchWriteItemRequestMap(_, context),\n    });\n};\nconst de_BatchWriteItemRequestMap = (output, context) => {\n    return Object.entries(output).reduce((acc, [key, value]) => {\n        if (value === null) {\n            return acc;\n        }\n        acc[key] = de_WriteRequests(value, context);\n        return acc;\n    }, {});\n};\nconst de_BillingModeSummary = (output, context) => {\n    return take(output, {\n        BillingMode: __expectString,\n        LastUpdateToPayPerRequestDateTime: (_) => __expectNonNull(__parseEpochTimestamp(__expectNumber(_))),\n    });\n};\nconst de_BinarySetAttributeValue = (output, context) => {\n    const retVal = (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return context.base64Decoder(entry);\n    });\n    return retVal;\n};\nconst de_CancellationReason = (output, context) => {\n    return take(output, {\n        Code: __expectString,\n        Item: (_) => de_AttributeMap(_, context),\n        Message: __expectString,\n    });\n};\nconst de_CancellationReasonList = (output, context) => {\n    const retVal = (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_CancellationReason(entry, context);\n    });\n    return retVal;\n};\nconst de_Capacity = (output, context) => {\n    return take(output, {\n        CapacityUnits: __limitedParseDouble,\n        ReadCapacityUnits: __limitedParseDouble,\n        WriteCapacityUnits: __limitedParseDouble,\n    });\n};\nconst de_ConsumedCapacity = (output, context) => {\n    return take(output, {\n        CapacityUnits: __limitedParseDouble,\n        GlobalSecondaryIndexes: (_) => de_SecondaryIndexesCapacityMap(_, context),\n        LocalSecondaryIndexes: (_) => de_SecondaryIndexesCapacityMap(_, context),\n        ReadCapacityUnits: __limitedParseDouble,\n        Table: (_) => de_Capacity(_, context),\n        TableName: __expectString,\n        WriteCapacityUnits: __limitedParseDouble,\n    });\n};\nconst de_ConsumedCapacityMultiple = (output, context) => {\n    const retVal = (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_ConsumedCapacity(entry, context);\n    });\n    return retVal;\n};\nconst de_ContinuousBackupsDescription = (output, context) => {\n    return take(output, {\n        ContinuousBackupsStatus: __expectString,\n        PointInTimeRecoveryDescription: (_) => de_PointInTimeRecoveryDescription(_, context),\n    });\n};\nconst de_CreateBackupOutput = (output, context) => {\n    return take(output, {\n        BackupDetails: (_) => de_BackupDetails(_, context),\n    });\n};\nconst de_CreateGlobalTableOutput = (output, context) => {\n    return take(output, {\n        GlobalTableDescription: (_) => de_GlobalTableDescription(_, context),\n    });\n};\nconst de_CreateTableOutput = (output, context) => {\n    return take(output, {\n        TableDescription: (_) => de_TableDescription(_, context),\n    });\n};\nconst de_DeleteBackupOutput = (output, context) => {\n    return take(output, {\n        BackupDescription: (_) => de_BackupDescription(_, context),\n    });\n};\nconst de_DeleteItemOutput = (output, context) => {\n    return take(output, {\n        Attributes: (_) => de_AttributeMap(_, context),\n        ConsumedCapacity: (_) => de_ConsumedCapacity(_, context),\n        ItemCollectionMetrics: (_) => de_ItemCollectionMetrics(_, context),\n    });\n};\nconst de_DeleteRequest = (output, context) => {\n    return take(output, {\n        Key: (_) => de_Key(_, context),\n    });\n};\nconst de_DeleteTableOutput = (output, context) => {\n    return take(output, {\n        TableDescription: (_) => de_TableDescription(_, context),\n    });\n};\nconst de_DescribeBackupOutput = (output, context) => {\n    return take(output, {\n        BackupDescription: (_) => de_BackupDescription(_, context),\n    });\n};\nconst de_DescribeContinuousBackupsOutput = (output, context) => {\n    return take(output, {\n        ContinuousBackupsDescription: (_) => de_ContinuousBackupsDescription(_, context),\n    });\n};\nconst de_DescribeContributorInsightsOutput = (output, context) => {\n    return take(output, {\n        ContributorInsightsRuleList: _json,\n        ContributorInsightsStatus: __expectString,\n        FailureException: _json,\n        IndexName: __expectString,\n        LastUpdateDateTime: (_) => __expectNonNull(__parseEpochTimestamp(__expectNumber(_))),\n        TableName: __expectString,\n    });\n};\nconst de_DescribeExportOutput = (output, context) => {\n    return take(output, {\n        ExportDescription: (_) => de_ExportDescription(_, context),\n    });\n};\nconst de_DescribeGlobalTableOutput = (output, context) => {\n    return take(output, {\n        GlobalTableDescription: (_) => de_GlobalTableDescription(_, context),\n    });\n};\nconst de_DescribeGlobalTableSettingsOutput = (output, context) => {\n    return take(output, {\n        GlobalTableName: __expectString,\n        ReplicaSettings: (_) => de_ReplicaSettingsDescriptionList(_, context),\n    });\n};\nconst de_DescribeImportOutput = (output, context) => {\n    return take(output, {\n        ImportTableDescription: (_) => de_ImportTableDescription(_, context),\n    });\n};\nconst de_DescribeTableOutput = (output, context) => {\n    return take(output, {\n        Table: (_) => de_TableDescription(_, context),\n    });\n};\nconst de_DescribeTableReplicaAutoScalingOutput = (output, context) => {\n    return take(output, {\n        TableAutoScalingDescription: (_) => de_TableAutoScalingDescription(_, context),\n    });\n};\nconst de_ExecuteStatementOutput = (output, context) => {\n    return take(output, {\n        ConsumedCapacity: (_) => de_ConsumedCapacity(_, context),\n        Items: (_) => de_ItemList(_, context),\n        LastEvaluatedKey: (_) => de_Key(_, context),\n        NextToken: __expectString,\n    });\n};\nconst de_ExecuteTransactionOutput = (output, context) => {\n    return take(output, {\n        ConsumedCapacity: (_) => de_ConsumedCapacityMultiple(_, context),\n        Responses: (_) => de_ItemResponseList(_, context),\n    });\n};\nconst de_ExportDescription = (output, context) => {\n    return take(output, {\n        BilledSizeBytes: __expectLong,\n        ClientToken: __expectString,\n        EndTime: (_) => __expectNonNull(__parseEpochTimestamp(__expectNumber(_))),\n        ExportArn: __expectString,\n        ExportFormat: __expectString,\n        ExportManifest: __expectString,\n        ExportStatus: __expectString,\n        ExportTime: (_) => __expectNonNull(__parseEpochTimestamp(__expectNumber(_))),\n        FailureCode: __expectString,\n        FailureMessage: __expectString,\n        ItemCount: __expectLong,\n        S3Bucket: __expectString,\n        S3BucketOwner: __expectString,\n        S3Prefix: __expectString,\n        S3SseAlgorithm: __expectString,\n        S3SseKmsKeyId: __expectString,\n        StartTime: (_) => __expectNonNull(__parseEpochTimestamp(__expectNumber(_))),\n        TableArn: __expectString,\n        TableId: __expectString,\n    });\n};\nconst de_ExportTableToPointInTimeOutput = (output, context) => {\n    return take(output, {\n        ExportDescription: (_) => de_ExportDescription(_, context),\n    });\n};\nconst de_GetItemOutput = (output, context) => {\n    return take(output, {\n        ConsumedCapacity: (_) => de_ConsumedCapacity(_, context),\n        Item: (_) => de_AttributeMap(_, context),\n    });\n};\nconst de_GlobalSecondaryIndexDescription = (output, context) => {\n    return take(output, {\n        Backfilling: __expectBoolean,\n        IndexArn: __expectString,\n        IndexName: __expectString,\n        IndexSizeBytes: __expectLong,\n        IndexStatus: __expectString,\n        ItemCount: __expectLong,\n        KeySchema: _json,\n        Projection: _json,\n        ProvisionedThroughput: (_) => de_ProvisionedThroughputDescription(_, context),\n    });\n};\nconst de_GlobalSecondaryIndexDescriptionList = (output, context) => {\n    const retVal = (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_GlobalSecondaryIndexDescription(entry, context);\n    });\n    return retVal;\n};\nconst de_GlobalTableDescription = (output, context) => {\n    return take(output, {\n        CreationDateTime: (_) => __expectNonNull(__parseEpochTimestamp(__expectNumber(_))),\n        GlobalTableArn: __expectString,\n        GlobalTableName: __expectString,\n        GlobalTableStatus: __expectString,\n        ReplicationGroup: (_) => de_ReplicaDescriptionList(_, context),\n    });\n};\nconst de_ImportSummary = (output, context) => {\n    return take(output, {\n        CloudWatchLogGroupArn: __expectString,\n        EndTime: (_) => __expectNonNull(__parseEpochTimestamp(__expectNumber(_))),\n        ImportArn: __expectString,\n        ImportStatus: __expectString,\n        InputFormat: __expectString,\n        S3BucketSource: _json,\n        StartTime: (_) => __expectNonNull(__parseEpochTimestamp(__expectNumber(_))),\n        TableArn: __expectString,\n    });\n};\nconst de_ImportSummaryList = (output, context) => {\n    const retVal = (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_ImportSummary(entry, context);\n    });\n    return retVal;\n};\nconst de_ImportTableDescription = (output, context) => {\n    return take(output, {\n        ClientToken: __expectString,\n        CloudWatchLogGroupArn: __expectString,\n        EndTime: (_) => __expectNonNull(__parseEpochTimestamp(__expectNumber(_))),\n        ErrorCount: __expectLong,\n        FailureCode: __expectString,\n        FailureMessage: __expectString,\n        ImportArn: __expectString,\n        ImportStatus: __expectString,\n        ImportedItemCount: __expectLong,\n        InputCompressionType: __expectString,\n        InputFormat: __expectString,\n        InputFormatOptions: _json,\n        ProcessedItemCount: __expectLong,\n        ProcessedSizeBytes: __expectLong,\n        S3BucketSource: _json,\n        StartTime: (_) => __expectNonNull(__parseEpochTimestamp(__expectNumber(_))),\n        TableArn: __expectString,\n        TableCreationParameters: _json,\n        TableId: __expectString,\n    });\n};\nconst de_ImportTableOutput = (output, context) => {\n    return take(output, {\n        ImportTableDescription: (_) => de_ImportTableDescription(_, context),\n    });\n};\nconst de_ItemCollectionKeyAttributeMap = (output, context) => {\n    return Object.entries(output).reduce((acc, [key, value]) => {\n        if (value === null) {\n            return acc;\n        }\n        acc[key] = de_AttributeValue(__expectUnion(value), context);\n        return acc;\n    }, {});\n};\nconst de_ItemCollectionMetrics = (output, context) => {\n    return take(output, {\n        ItemCollectionKey: (_) => de_ItemCollectionKeyAttributeMap(_, context),\n        SizeEstimateRangeGB: (_) => de_ItemCollectionSizeEstimateRange(_, context),\n    });\n};\nconst de_ItemCollectionMetricsMultiple = (output, context) => {\n    const retVal = (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_ItemCollectionMetrics(entry, context);\n    });\n    return retVal;\n};\nconst de_ItemCollectionMetricsPerTable = (output, context) => {\n    return Object.entries(output).reduce((acc, [key, value]) => {\n        if (value === null) {\n            return acc;\n        }\n        acc[key] = de_ItemCollectionMetricsMultiple(value, context);\n        return acc;\n    }, {});\n};\nconst de_ItemCollectionSizeEstimateRange = (output, context) => {\n    const retVal = (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return __limitedParseDouble(entry);\n    });\n    return retVal;\n};\nconst de_ItemList = (output, context) => {\n    const retVal = (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_AttributeMap(entry, context);\n    });\n    return retVal;\n};\nconst de_ItemResponse = (output, context) => {\n    return take(output, {\n        Item: (_) => de_AttributeMap(_, context),\n    });\n};\nconst de_ItemResponseList = (output, context) => {\n    const retVal = (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_ItemResponse(entry, context);\n    });\n    return retVal;\n};\nconst de_Key = (output, context) => {\n    return Object.entries(output).reduce((acc, [key, value]) => {\n        if (value === null) {\n            return acc;\n        }\n        acc[key] = de_AttributeValue(__expectUnion(value), context);\n        return acc;\n    }, {});\n};\nconst de_KeyList = (output, context) => {\n    const retVal = (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_Key(entry, context);\n    });\n    return retVal;\n};\nconst de_KeysAndAttributes = (output, context) => {\n    return take(output, {\n        AttributesToGet: _json,\n        ConsistentRead: __expectBoolean,\n        ExpressionAttributeNames: _json,\n        Keys: (_) => de_KeyList(_, context),\n        ProjectionExpression: __expectString,\n    });\n};\nconst de_ListAttributeValue = (output, context) => {\n    const retVal = (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_AttributeValue(__expectUnion(entry), context);\n    });\n    return retVal;\n};\nconst de_ListBackupsOutput = (output, context) => {\n    return take(output, {\n        BackupSummaries: (_) => de_BackupSummaries(_, context),\n        LastEvaluatedBackupArn: __expectString,\n    });\n};\nconst de_ListImportsOutput = (output, context) => {\n    return take(output, {\n        ImportSummaryList: (_) => de_ImportSummaryList(_, context),\n        NextToken: __expectString,\n    });\n};\nconst de_MapAttributeValue = (output, context) => {\n    return Object.entries(output).reduce((acc, [key, value]) => {\n        if (value === null) {\n            return acc;\n        }\n        acc[key] = de_AttributeValue(__expectUnion(value), context);\n        return acc;\n    }, {});\n};\nconst de_PartiQLBatchResponse = (output, context) => {\n    const retVal = (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_BatchStatementResponse(entry, context);\n    });\n    return retVal;\n};\nconst de_PointInTimeRecoveryDescription = (output, context) => {\n    return take(output, {\n        EarliestRestorableDateTime: (_) => __expectNonNull(__parseEpochTimestamp(__expectNumber(_))),\n        LatestRestorableDateTime: (_) => __expectNonNull(__parseEpochTimestamp(__expectNumber(_))),\n        PointInTimeRecoveryStatus: __expectString,\n    });\n};\nconst de_ProvisionedThroughputDescription = (output, context) => {\n    return take(output, {\n        LastDecreaseDateTime: (_) => __expectNonNull(__parseEpochTimestamp(__expectNumber(_))),\n        LastIncreaseDateTime: (_) => __expectNonNull(__parseEpochTimestamp(__expectNumber(_))),\n        NumberOfDecreasesToday: __expectLong,\n        ReadCapacityUnits: __expectLong,\n        WriteCapacityUnits: __expectLong,\n    });\n};\nconst de_PutItemInputAttributeMap = (output, context) => {\n    return Object.entries(output).reduce((acc, [key, value]) => {\n        if (value === null) {\n            return acc;\n        }\n        acc[key] = de_AttributeValue(__expectUnion(value), context);\n        return acc;\n    }, {});\n};\nconst de_PutItemOutput = (output, context) => {\n    return take(output, {\n        Attributes: (_) => de_AttributeMap(_, context),\n        ConsumedCapacity: (_) => de_ConsumedCapacity(_, context),\n        ItemCollectionMetrics: (_) => de_ItemCollectionMetrics(_, context),\n    });\n};\nconst de_PutRequest = (output, context) => {\n    return take(output, {\n        Item: (_) => de_PutItemInputAttributeMap(_, context),\n    });\n};\nconst de_QueryOutput = (output, context) => {\n    return take(output, {\n        ConsumedCapacity: (_) => de_ConsumedCapacity(_, context),\n        Count: __expectInt32,\n        Items: (_) => de_ItemList(_, context),\n        LastEvaluatedKey: (_) => de_Key(_, context),\n        ScannedCount: __expectInt32,\n    });\n};\nconst de_ReplicaAutoScalingDescription = (output, context) => {\n    return take(output, {\n        GlobalSecondaryIndexes: (_) => de_ReplicaGlobalSecondaryIndexAutoScalingDescriptionList(_, context),\n        RegionName: __expectString,\n        ReplicaProvisionedReadCapacityAutoScalingSettings: (_) => de_AutoScalingSettingsDescription(_, context),\n        ReplicaProvisionedWriteCapacityAutoScalingSettings: (_) => de_AutoScalingSettingsDescription(_, context),\n        ReplicaStatus: __expectString,\n    });\n};\nconst de_ReplicaAutoScalingDescriptionList = (output, context) => {\n    const retVal = (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_ReplicaAutoScalingDescription(entry, context);\n    });\n    return retVal;\n};\nconst de_ReplicaDescription = (output, context) => {\n    return take(output, {\n        GlobalSecondaryIndexes: _json,\n        KMSMasterKeyId: __expectString,\n        ProvisionedThroughputOverride: _json,\n        RegionName: __expectString,\n        ReplicaInaccessibleDateTime: (_) => __expectNonNull(__parseEpochTimestamp(__expectNumber(_))),\n        ReplicaStatus: __expectString,\n        ReplicaStatusDescription: __expectString,\n        ReplicaStatusPercentProgress: __expectString,\n        ReplicaTableClassSummary: (_) => de_TableClassSummary(_, context),\n    });\n};\nconst de_ReplicaDescriptionList = (output, context) => {\n    const retVal = (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_ReplicaDescription(entry, context);\n    });\n    return retVal;\n};\nconst de_ReplicaGlobalSecondaryIndexAutoScalingDescription = (output, context) => {\n    return take(output, {\n        IndexName: __expectString,\n        IndexStatus: __expectString,\n        ProvisionedReadCapacityAutoScalingSettings: (_) => de_AutoScalingSettingsDescription(_, context),\n        ProvisionedWriteCapacityAutoScalingSettings: (_) => de_AutoScalingSettingsDescription(_, context),\n    });\n};\nconst de_ReplicaGlobalSecondaryIndexAutoScalingDescriptionList = (output, context) => {\n    const retVal = (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_ReplicaGlobalSecondaryIndexAutoScalingDescription(entry, context);\n    });\n    return retVal;\n};\nconst de_ReplicaGlobalSecondaryIndexSettingsDescription = (output, context) => {\n    return take(output, {\n        IndexName: __expectString,\n        IndexStatus: __expectString,\n        ProvisionedReadCapacityAutoScalingSettings: (_) => de_AutoScalingSettingsDescription(_, context),\n        ProvisionedReadCapacityUnits: __expectLong,\n        ProvisionedWriteCapacityAutoScalingSettings: (_) => de_AutoScalingSettingsDescription(_, context),\n        ProvisionedWriteCapacityUnits: __expectLong,\n    });\n};\nconst de_ReplicaGlobalSecondaryIndexSettingsDescriptionList = (output, context) => {\n    const retVal = (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_ReplicaGlobalSecondaryIndexSettingsDescription(entry, context);\n    });\n    return retVal;\n};\nconst de_ReplicaSettingsDescription = (output, context) => {\n    return take(output, {\n        RegionName: __expectString,\n        ReplicaBillingModeSummary: (_) => de_BillingModeSummary(_, context),\n        ReplicaGlobalSecondaryIndexSettings: (_) => de_ReplicaGlobalSecondaryIndexSettingsDescriptionList(_, context),\n        ReplicaProvisionedReadCapacityAutoScalingSettings: (_) => de_AutoScalingSettingsDescription(_, context),\n        ReplicaProvisionedReadCapacityUnits: __expectLong,\n        ReplicaProvisionedWriteCapacityAutoScalingSettings: (_) => de_AutoScalingSettingsDescription(_, context),\n        ReplicaProvisionedWriteCapacityUnits: __expectLong,\n        ReplicaStatus: __expectString,\n        ReplicaTableClassSummary: (_) => de_TableClassSummary(_, context),\n    });\n};\nconst de_ReplicaSettingsDescriptionList = (output, context) => {\n    const retVal = (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_ReplicaSettingsDescription(entry, context);\n    });\n    return retVal;\n};\nconst de_RestoreSummary = (output, context) => {\n    return take(output, {\n        RestoreDateTime: (_) => __expectNonNull(__parseEpochTimestamp(__expectNumber(_))),\n        RestoreInProgress: __expectBoolean,\n        SourceBackupArn: __expectString,\n        SourceTableArn: __expectString,\n    });\n};\nconst de_RestoreTableFromBackupOutput = (output, context) => {\n    return take(output, {\n        TableDescription: (_) => de_TableDescription(_, context),\n    });\n};\nconst de_RestoreTableToPointInTimeOutput = (output, context) => {\n    return take(output, {\n        TableDescription: (_) => de_TableDescription(_, context),\n    });\n};\nconst de_ScanOutput = (output, context) => {\n    return take(output, {\n        ConsumedCapacity: (_) => de_ConsumedCapacity(_, context),\n        Count: __expectInt32,\n        Items: (_) => de_ItemList(_, context),\n        LastEvaluatedKey: (_) => de_Key(_, context),\n        ScannedCount: __expectInt32,\n    });\n};\nconst de_SecondaryIndexesCapacityMap = (output, context) => {\n    return Object.entries(output).reduce((acc, [key, value]) => {\n        if (value === null) {\n            return acc;\n        }\n        acc[key] = de_Capacity(value, context);\n        return acc;\n    }, {});\n};\nconst de_SourceTableDetails = (output, context) => {\n    return take(output, {\n        BillingMode: __expectString,\n        ItemCount: __expectLong,\n        KeySchema: _json,\n        ProvisionedThroughput: _json,\n        TableArn: __expectString,\n        TableCreationDateTime: (_) => __expectNonNull(__parseEpochTimestamp(__expectNumber(_))),\n        TableId: __expectString,\n        TableName: __expectString,\n        TableSizeBytes: __expectLong,\n    });\n};\nconst de_SourceTableFeatureDetails = (output, context) => {\n    return take(output, {\n        GlobalSecondaryIndexes: _json,\n        LocalSecondaryIndexes: _json,\n        SSEDescription: (_) => de_SSEDescription(_, context),\n        StreamDescription: _json,\n        TimeToLiveDescription: _json,\n    });\n};\nconst de_SSEDescription = (output, context) => {\n    return take(output, {\n        InaccessibleEncryptionDateTime: (_) => __expectNonNull(__parseEpochTimestamp(__expectNumber(_))),\n        KMSMasterKeyArn: __expectString,\n        SSEType: __expectString,\n        Status: __expectString,\n    });\n};\nconst de_TableAutoScalingDescription = (output, context) => {\n    return take(output, {\n        Replicas: (_) => de_ReplicaAutoScalingDescriptionList(_, context),\n        TableName: __expectString,\n        TableStatus: __expectString,\n    });\n};\nconst de_TableClassSummary = (output, context) => {\n    return take(output, {\n        LastUpdateDateTime: (_) => __expectNonNull(__parseEpochTimestamp(__expectNumber(_))),\n        TableClass: __expectString,\n    });\n};\nconst de_TableDescription = (output, context) => {\n    return take(output, {\n        ArchivalSummary: (_) => de_ArchivalSummary(_, context),\n        AttributeDefinitions: _json,\n        BillingModeSummary: (_) => de_BillingModeSummary(_, context),\n        CreationDateTime: (_) => __expectNonNull(__parseEpochTimestamp(__expectNumber(_))),\n        DeletionProtectionEnabled: __expectBoolean,\n        GlobalSecondaryIndexes: (_) => de_GlobalSecondaryIndexDescriptionList(_, context),\n        GlobalTableVersion: __expectString,\n        ItemCount: __expectLong,\n        KeySchema: _json,\n        LatestStreamArn: __expectString,\n        LatestStreamLabel: __expectString,\n        LocalSecondaryIndexes: _json,\n        ProvisionedThroughput: (_) => de_ProvisionedThroughputDescription(_, context),\n        Replicas: (_) => de_ReplicaDescriptionList(_, context),\n        RestoreSummary: (_) => de_RestoreSummary(_, context),\n        SSEDescription: (_) => de_SSEDescription(_, context),\n        StreamSpecification: _json,\n        TableArn: __expectString,\n        TableClassSummary: (_) => de_TableClassSummary(_, context),\n        TableId: __expectString,\n        TableName: __expectString,\n        TableSizeBytes: __expectLong,\n        TableStatus: __expectString,\n    });\n};\nconst de_TransactGetItemsOutput = (output, context) => {\n    return take(output, {\n        ConsumedCapacity: (_) => de_ConsumedCapacityMultiple(_, context),\n        Responses: (_) => de_ItemResponseList(_, context),\n    });\n};\nconst de_TransactionCanceledException = (output, context) => {\n    return take(output, {\n        CancellationReasons: (_) => de_CancellationReasonList(_, context),\n        Message: __expectString,\n    });\n};\nconst de_TransactWriteItemsOutput = (output, context) => {\n    return take(output, {\n        ConsumedCapacity: (_) => de_ConsumedCapacityMultiple(_, context),\n        ItemCollectionMetrics: (_) => de_ItemCollectionMetricsPerTable(_, context),\n    });\n};\nconst de_UpdateContinuousBackupsOutput = (output, context) => {\n    return take(output, {\n        ContinuousBackupsDescription: (_) => de_ContinuousBackupsDescription(_, context),\n    });\n};\nconst de_UpdateGlobalTableOutput = (output, context) => {\n    return take(output, {\n        GlobalTableDescription: (_) => de_GlobalTableDescription(_, context),\n    });\n};\nconst de_UpdateGlobalTableSettingsOutput = (output, context) => {\n    return take(output, {\n        GlobalTableName: __expectString,\n        ReplicaSettings: (_) => de_ReplicaSettingsDescriptionList(_, context),\n    });\n};\nconst de_UpdateItemOutput = (output, context) => {\n    return take(output, {\n        Attributes: (_) => de_AttributeMap(_, context),\n        ConsumedCapacity: (_) => de_ConsumedCapacity(_, context),\n        ItemCollectionMetrics: (_) => de_ItemCollectionMetrics(_, context),\n    });\n};\nconst de_UpdateTableOutput = (output, context) => {\n    return take(output, {\n        TableDescription: (_) => de_TableDescription(_, context),\n    });\n};\nconst de_UpdateTableReplicaAutoScalingOutput = (output, context) => {\n    return take(output, {\n        TableAutoScalingDescription: (_) => de_TableAutoScalingDescription(_, context),\n    });\n};\nconst de_WriteRequest = (output, context) => {\n    return take(output, {\n        DeleteRequest: (_) => de_DeleteRequest(_, context),\n        PutRequest: (_) => de_PutRequest(_, context),\n    });\n};\nconst de_WriteRequests = (output, context) => {\n    const retVal = (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        return de_WriteRequest(entry, context);\n    });\n    return retVal;\n};\nconst deserializeMetadata = (output) => ({\n    httpStatusCode: output.statusCode,\n    requestId: output.headers[\"x-amzn-requestid\"] ?? output.headers[\"x-amzn-request-id\"] ?? output.headers[\"x-amz-request-id\"],\n    extendedRequestId: output.headers[\"x-amz-id-2\"],\n    cfId: output.headers[\"x-amz-cf-id\"],\n});\nconst collectBody = (streamBody = new Uint8Array(), context) => {\n    if (streamBody instanceof Uint8Array) {\n        return Promise.resolve(streamBody);\n    }\n    return context.streamCollector(streamBody) || Promise.resolve(new Uint8Array());\n};\nconst collectBodyString = (streamBody, context) => collectBody(streamBody, context).then((body) => context.utf8Encoder(body));\nconst throwDefaultError = withBaseException(__BaseException);\nconst buildHttpRpcRequest = async (context, headers, path, resolvedHostname, body) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const contents = {\n        protocol,\n        hostname,\n        port,\n        method: \"POST\",\n        path: basePath.endsWith(\"/\") ? basePath.slice(0, -1) + path : basePath + path,\n        headers,\n    };\n    if (resolvedHostname !== undefined) {\n        contents.hostname = resolvedHostname;\n    }\n    if (body !== undefined) {\n        contents.body = body;\n    }\n    return new __HttpRequest(contents);\n};\nfunction sharedHeaders(operation) {\n    return {\n        \"content-type\": \"application/x-amz-json-1.0\",\n        \"x-amz-target\": `DynamoDB_20120810.${operation}`,\n    };\n}\nconst parseBody = (streamBody, context) => collectBodyString(streamBody, context).then((encoded) => {\n    if (encoded.length) {\n        return JSON.parse(encoded);\n    }\n    return {};\n});\nconst parseErrorBody = async (errorBody, context) => {\n    const value = await parseBody(errorBody, context);\n    value.message = value.message ?? value.Message;\n    return value;\n};\nconst loadRestJsonErrorCode = (output, data) => {\n    const findKey = (object, key) => Object.keys(object).find((k) => k.toLowerCase() === key.toLowerCase());\n    const sanitizeErrorCode = (rawValue) => {\n        let cleanValue = rawValue;\n        if (typeof cleanValue === \"number\") {\n            cleanValue = cleanValue.toString();\n        }\n        if (cleanValue.indexOf(\",\") >= 0) {\n            cleanValue = cleanValue.split(\",\")[0];\n        }\n        if (cleanValue.indexOf(\":\") >= 0) {\n            cleanValue = cleanValue.split(\":\")[0];\n        }\n        if (cleanValue.indexOf(\"#\") >= 0) {\n            cleanValue = cleanValue.split(\"#\")[1];\n        }\n        return cleanValue;\n    };\n    const headerKey = findKey(output.headers, \"x-amzn-errortype\");\n    if (headerKey !== undefined) {\n        return sanitizeErrorCode(output.headers[headerKey]);\n    }\n    if (data.code !== undefined) {\n        return sanitizeErrorCode(data.code);\n    }\n    if (data[\"__type\"] !== undefined) {\n        return sanitizeErrorCode(data[\"__type\"]);\n    }\n};\n","import { getEndpointPlugin } from \"@aws-sdk/middleware-endpoint\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\nimport { de_DescribeEndpointsCommand, se_DescribeEndpointsCommand } from \"../protocols/Aws_json1_0\";\nexport class DescribeEndpointsCommand extends $Command {\n    static getEndpointParameterInstructions() {\n        return {\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use(getEndpointPlugin(configuration, DescribeEndpointsCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"DynamoDBClient\";\n        const commandName = \"DescribeEndpointsCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: (_) => _,\n            outputFilterSensitiveLog: (_) => _,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return se_DescribeEndpointsCommand(input, context);\n    }\n    deserialize(output, context) {\n        return de_DescribeEndpointsCommand(output, context);\n    }\n}\n","export const resolveClientEndpointParameters = (options) => {\n    return {\n        ...options,\n        useDualstackEndpoint: options.useDualstackEndpoint ?? false,\n        useFipsEndpoint: options.useFipsEndpoint ?? false,\n        defaultSigningName: \"dynamodb\",\n    };\n};\n","import { ServiceException as __ServiceException, } from \"@aws-sdk/smithy-client\";\nexport class STSServiceException extends __ServiceException {\n    constructor(options) {\n        super(options);\n        Object.setPrototypeOf(this, STSServiceException.prototype);\n    }\n}\n","import { STSServiceException as __BaseException } from \"./STSServiceException\";\nexport class ExpiredTokenException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"ExpiredTokenException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"ExpiredTokenException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, ExpiredTokenException.prototype);\n    }\n}\nexport class MalformedPolicyDocumentException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"MalformedPolicyDocumentException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"MalformedPolicyDocumentException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, MalformedPolicyDocumentException.prototype);\n    }\n}\nexport class PackedPolicyTooLargeException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"PackedPolicyTooLargeException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"PackedPolicyTooLargeException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, PackedPolicyTooLargeException.prototype);\n    }\n}\nexport class RegionDisabledException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"RegionDisabledException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"RegionDisabledException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, RegionDisabledException.prototype);\n    }\n}\nexport class IDPRejectedClaimException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"IDPRejectedClaimException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"IDPRejectedClaimException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, IDPRejectedClaimException.prototype);\n    }\n}\nexport class InvalidIdentityTokenException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"InvalidIdentityTokenException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"InvalidIdentityTokenException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidIdentityTokenException.prototype);\n    }\n}\nexport class IDPCommunicationErrorException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"IDPCommunicationErrorException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"IDPCommunicationErrorException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, IDPCommunicationErrorException.prototype);\n    }\n}\nexport class InvalidAuthorizationMessageException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"InvalidAuthorizationMessageException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"InvalidAuthorizationMessageException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidAuthorizationMessageException.prototype);\n    }\n}\n","import { HttpRequest as __HttpRequest } from \"@aws-sdk/protocol-http\";\nimport { decorateServiceException as __decorateServiceException, expectNonNull as __expectNonNull, expectString as __expectString, extendedEncodeURIComponent as __extendedEncodeURIComponent, getValueFromTextNode as __getValueFromTextNode, parseRfc3339DateTimeWithOffset as __parseRfc3339DateTimeWithOffset, strictParseInt32 as __strictParseInt32, withBaseException, } from \"@aws-sdk/smithy-client\";\nimport { XMLParser } from \"fast-xml-parser\";\nimport { ExpiredTokenException, IDPCommunicationErrorException, IDPRejectedClaimException, InvalidAuthorizationMessageException, InvalidIdentityTokenException, MalformedPolicyDocumentException, PackedPolicyTooLargeException, RegionDisabledException, } from \"../models/models_0\";\nimport { STSServiceException as __BaseException } from \"../models/STSServiceException\";\nexport const se_AssumeRoleCommand = async (input, context) => {\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_AssumeRoleRequest(input, context),\n        Action: \"AssumeRole\",\n        Version: \"2011-06-15\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_AssumeRoleWithSAMLCommand = async (input, context) => {\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_AssumeRoleWithSAMLRequest(input, context),\n        Action: \"AssumeRoleWithSAML\",\n        Version: \"2011-06-15\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_AssumeRoleWithWebIdentityCommand = async (input, context) => {\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_AssumeRoleWithWebIdentityRequest(input, context),\n        Action: \"AssumeRoleWithWebIdentity\",\n        Version: \"2011-06-15\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_DecodeAuthorizationMessageCommand = async (input, context) => {\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_DecodeAuthorizationMessageRequest(input, context),\n        Action: \"DecodeAuthorizationMessage\",\n        Version: \"2011-06-15\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_GetAccessKeyInfoCommand = async (input, context) => {\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_GetAccessKeyInfoRequest(input, context),\n        Action: \"GetAccessKeyInfo\",\n        Version: \"2011-06-15\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_GetCallerIdentityCommand = async (input, context) => {\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_GetCallerIdentityRequest(input, context),\n        Action: \"GetCallerIdentity\",\n        Version: \"2011-06-15\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_GetFederationTokenCommand = async (input, context) => {\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_GetFederationTokenRequest(input, context),\n        Action: \"GetFederationToken\",\n        Version: \"2011-06-15\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const se_GetSessionTokenCommand = async (input, context) => {\n    const headers = SHARED_HEADERS;\n    let body;\n    body = buildFormUrlencodedString({\n        ...se_GetSessionTokenRequest(input, context),\n        Action: \"GetSessionToken\",\n        Version: \"2011-06-15\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const de_AssumeRoleCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_AssumeRoleCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_AssumeRoleResponse(data.AssumeRoleResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_AssumeRoleCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"ExpiredTokenException\":\n        case \"com.amazonaws.sts#ExpiredTokenException\":\n            throw await de_ExpiredTokenExceptionRes(parsedOutput, context);\n        case \"MalformedPolicyDocument\":\n        case \"com.amazonaws.sts#MalformedPolicyDocumentException\":\n            throw await de_MalformedPolicyDocumentExceptionRes(parsedOutput, context);\n        case \"PackedPolicyTooLarge\":\n        case \"com.amazonaws.sts#PackedPolicyTooLargeException\":\n            throw await de_PackedPolicyTooLargeExceptionRes(parsedOutput, context);\n        case \"RegionDisabledException\":\n        case \"com.amazonaws.sts#RegionDisabledException\":\n            throw await de_RegionDisabledExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody: parsedBody.Error,\n                errorCode,\n            });\n    }\n};\nexport const de_AssumeRoleWithSAMLCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_AssumeRoleWithSAMLCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_AssumeRoleWithSAMLResponse(data.AssumeRoleWithSAMLResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_AssumeRoleWithSAMLCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"ExpiredTokenException\":\n        case \"com.amazonaws.sts#ExpiredTokenException\":\n            throw await de_ExpiredTokenExceptionRes(parsedOutput, context);\n        case \"IDPRejectedClaim\":\n        case \"com.amazonaws.sts#IDPRejectedClaimException\":\n            throw await de_IDPRejectedClaimExceptionRes(parsedOutput, context);\n        case \"InvalidIdentityToken\":\n        case \"com.amazonaws.sts#InvalidIdentityTokenException\":\n            throw await de_InvalidIdentityTokenExceptionRes(parsedOutput, context);\n        case \"MalformedPolicyDocument\":\n        case \"com.amazonaws.sts#MalformedPolicyDocumentException\":\n            throw await de_MalformedPolicyDocumentExceptionRes(parsedOutput, context);\n        case \"PackedPolicyTooLarge\":\n        case \"com.amazonaws.sts#PackedPolicyTooLargeException\":\n            throw await de_PackedPolicyTooLargeExceptionRes(parsedOutput, context);\n        case \"RegionDisabledException\":\n        case \"com.amazonaws.sts#RegionDisabledException\":\n            throw await de_RegionDisabledExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody: parsedBody.Error,\n                errorCode,\n            });\n    }\n};\nexport const de_AssumeRoleWithWebIdentityCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_AssumeRoleWithWebIdentityCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_AssumeRoleWithWebIdentityResponse(data.AssumeRoleWithWebIdentityResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_AssumeRoleWithWebIdentityCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"ExpiredTokenException\":\n        case \"com.amazonaws.sts#ExpiredTokenException\":\n            throw await de_ExpiredTokenExceptionRes(parsedOutput, context);\n        case \"IDPCommunicationError\":\n        case \"com.amazonaws.sts#IDPCommunicationErrorException\":\n            throw await de_IDPCommunicationErrorExceptionRes(parsedOutput, context);\n        case \"IDPRejectedClaim\":\n        case \"com.amazonaws.sts#IDPRejectedClaimException\":\n            throw await de_IDPRejectedClaimExceptionRes(parsedOutput, context);\n        case \"InvalidIdentityToken\":\n        case \"com.amazonaws.sts#InvalidIdentityTokenException\":\n            throw await de_InvalidIdentityTokenExceptionRes(parsedOutput, context);\n        case \"MalformedPolicyDocument\":\n        case \"com.amazonaws.sts#MalformedPolicyDocumentException\":\n            throw await de_MalformedPolicyDocumentExceptionRes(parsedOutput, context);\n        case \"PackedPolicyTooLarge\":\n        case \"com.amazonaws.sts#PackedPolicyTooLargeException\":\n            throw await de_PackedPolicyTooLargeExceptionRes(parsedOutput, context);\n        case \"RegionDisabledException\":\n        case \"com.amazonaws.sts#RegionDisabledException\":\n            throw await de_RegionDisabledExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody: parsedBody.Error,\n                errorCode,\n            });\n    }\n};\nexport const de_DecodeAuthorizationMessageCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_DecodeAuthorizationMessageCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_DecodeAuthorizationMessageResponse(data.DecodeAuthorizationMessageResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_DecodeAuthorizationMessageCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InvalidAuthorizationMessageException\":\n        case \"com.amazonaws.sts#InvalidAuthorizationMessageException\":\n            throw await de_InvalidAuthorizationMessageExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody: parsedBody.Error,\n                errorCode,\n            });\n    }\n};\nexport const de_GetAccessKeyInfoCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_GetAccessKeyInfoCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_GetAccessKeyInfoResponse(data.GetAccessKeyInfoResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_GetAccessKeyInfoCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    const parsedBody = parsedOutput.body;\n    return throwDefaultError({\n        output,\n        parsedBody: parsedBody.Error,\n        errorCode,\n    });\n};\nexport const de_GetCallerIdentityCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_GetCallerIdentityCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_GetCallerIdentityResponse(data.GetCallerIdentityResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_GetCallerIdentityCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    const parsedBody = parsedOutput.body;\n    return throwDefaultError({\n        output,\n        parsedBody: parsedBody.Error,\n        errorCode,\n    });\n};\nexport const de_GetFederationTokenCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_GetFederationTokenCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_GetFederationTokenResponse(data.GetFederationTokenResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_GetFederationTokenCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"MalformedPolicyDocument\":\n        case \"com.amazonaws.sts#MalformedPolicyDocumentException\":\n            throw await de_MalformedPolicyDocumentExceptionRes(parsedOutput, context);\n        case \"PackedPolicyTooLarge\":\n        case \"com.amazonaws.sts#PackedPolicyTooLargeException\":\n            throw await de_PackedPolicyTooLargeExceptionRes(parsedOutput, context);\n        case \"RegionDisabledException\":\n        case \"com.amazonaws.sts#RegionDisabledException\":\n            throw await de_RegionDisabledExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody: parsedBody.Error,\n                errorCode,\n            });\n    }\n};\nexport const de_GetSessionTokenCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return de_GetSessionTokenCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = de_GetSessionTokenResponse(data.GetSessionTokenResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return response;\n};\nconst de_GetSessionTokenCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"RegionDisabledException\":\n        case \"com.amazonaws.sts#RegionDisabledException\":\n            throw await de_RegionDisabledExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody: parsedBody.Error,\n                errorCode,\n            });\n    }\n};\nconst de_ExpiredTokenExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = de_ExpiredTokenException(body.Error, context);\n    const exception = new ExpiredTokenException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_IDPCommunicationErrorExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = de_IDPCommunicationErrorException(body.Error, context);\n    const exception = new IDPCommunicationErrorException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_IDPRejectedClaimExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = de_IDPRejectedClaimException(body.Error, context);\n    const exception = new IDPRejectedClaimException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_InvalidAuthorizationMessageExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = de_InvalidAuthorizationMessageException(body.Error, context);\n    const exception = new InvalidAuthorizationMessageException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_InvalidIdentityTokenExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = de_InvalidIdentityTokenException(body.Error, context);\n    const exception = new InvalidIdentityTokenException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_MalformedPolicyDocumentExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = de_MalformedPolicyDocumentException(body.Error, context);\n    const exception = new MalformedPolicyDocumentException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_PackedPolicyTooLargeExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = de_PackedPolicyTooLargeException(body.Error, context);\n    const exception = new PackedPolicyTooLargeException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst de_RegionDisabledExceptionRes = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = de_RegionDisabledException(body.Error, context);\n    const exception = new RegionDisabledException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst se_AssumeRoleRequest = (input, context) => {\n    const entries = {};\n    if (input.RoleArn != null) {\n        entries[\"RoleArn\"] = input.RoleArn;\n    }\n    if (input.RoleSessionName != null) {\n        entries[\"RoleSessionName\"] = input.RoleSessionName;\n    }\n    if (input.PolicyArns != null) {\n        const memberEntries = se_policyDescriptorListType(input.PolicyArns, context);\n        if (input.PolicyArns?.length === 0) {\n            entries.PolicyArns = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `PolicyArns.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input.Policy != null) {\n        entries[\"Policy\"] = input.Policy;\n    }\n    if (input.DurationSeconds != null) {\n        entries[\"DurationSeconds\"] = input.DurationSeconds;\n    }\n    if (input.Tags != null) {\n        const memberEntries = se_tagListType(input.Tags, context);\n        if (input.Tags?.length === 0) {\n            entries.Tags = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `Tags.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input.TransitiveTagKeys != null) {\n        const memberEntries = se_tagKeyListType(input.TransitiveTagKeys, context);\n        if (input.TransitiveTagKeys?.length === 0) {\n            entries.TransitiveTagKeys = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `TransitiveTagKeys.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input.ExternalId != null) {\n        entries[\"ExternalId\"] = input.ExternalId;\n    }\n    if (input.SerialNumber != null) {\n        entries[\"SerialNumber\"] = input.SerialNumber;\n    }\n    if (input.TokenCode != null) {\n        entries[\"TokenCode\"] = input.TokenCode;\n    }\n    if (input.SourceIdentity != null) {\n        entries[\"SourceIdentity\"] = input.SourceIdentity;\n    }\n    return entries;\n};\nconst se_AssumeRoleWithSAMLRequest = (input, context) => {\n    const entries = {};\n    if (input.RoleArn != null) {\n        entries[\"RoleArn\"] = input.RoleArn;\n    }\n    if (input.PrincipalArn != null) {\n        entries[\"PrincipalArn\"] = input.PrincipalArn;\n    }\n    if (input.SAMLAssertion != null) {\n        entries[\"SAMLAssertion\"] = input.SAMLAssertion;\n    }\n    if (input.PolicyArns != null) {\n        const memberEntries = se_policyDescriptorListType(input.PolicyArns, context);\n        if (input.PolicyArns?.length === 0) {\n            entries.PolicyArns = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `PolicyArns.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input.Policy != null) {\n        entries[\"Policy\"] = input.Policy;\n    }\n    if (input.DurationSeconds != null) {\n        entries[\"DurationSeconds\"] = input.DurationSeconds;\n    }\n    return entries;\n};\nconst se_AssumeRoleWithWebIdentityRequest = (input, context) => {\n    const entries = {};\n    if (input.RoleArn != null) {\n        entries[\"RoleArn\"] = input.RoleArn;\n    }\n    if (input.RoleSessionName != null) {\n        entries[\"RoleSessionName\"] = input.RoleSessionName;\n    }\n    if (input.WebIdentityToken != null) {\n        entries[\"WebIdentityToken\"] = input.WebIdentityToken;\n    }\n    if (input.ProviderId != null) {\n        entries[\"ProviderId\"] = input.ProviderId;\n    }\n    if (input.PolicyArns != null) {\n        const memberEntries = se_policyDescriptorListType(input.PolicyArns, context);\n        if (input.PolicyArns?.length === 0) {\n            entries.PolicyArns = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `PolicyArns.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input.Policy != null) {\n        entries[\"Policy\"] = input.Policy;\n    }\n    if (input.DurationSeconds != null) {\n        entries[\"DurationSeconds\"] = input.DurationSeconds;\n    }\n    return entries;\n};\nconst se_DecodeAuthorizationMessageRequest = (input, context) => {\n    const entries = {};\n    if (input.EncodedMessage != null) {\n        entries[\"EncodedMessage\"] = input.EncodedMessage;\n    }\n    return entries;\n};\nconst se_GetAccessKeyInfoRequest = (input, context) => {\n    const entries = {};\n    if (input.AccessKeyId != null) {\n        entries[\"AccessKeyId\"] = input.AccessKeyId;\n    }\n    return entries;\n};\nconst se_GetCallerIdentityRequest = (input, context) => {\n    const entries = {};\n    return entries;\n};\nconst se_GetFederationTokenRequest = (input, context) => {\n    const entries = {};\n    if (input.Name != null) {\n        entries[\"Name\"] = input.Name;\n    }\n    if (input.Policy != null) {\n        entries[\"Policy\"] = input.Policy;\n    }\n    if (input.PolicyArns != null) {\n        const memberEntries = se_policyDescriptorListType(input.PolicyArns, context);\n        if (input.PolicyArns?.length === 0) {\n            entries.PolicyArns = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `PolicyArns.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input.DurationSeconds != null) {\n        entries[\"DurationSeconds\"] = input.DurationSeconds;\n    }\n    if (input.Tags != null) {\n        const memberEntries = se_tagListType(input.Tags, context);\n        if (input.Tags?.length === 0) {\n            entries.Tags = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `Tags.${key}`;\n            entries[loc] = value;\n        });\n    }\n    return entries;\n};\nconst se_GetSessionTokenRequest = (input, context) => {\n    const entries = {};\n    if (input.DurationSeconds != null) {\n        entries[\"DurationSeconds\"] = input.DurationSeconds;\n    }\n    if (input.SerialNumber != null) {\n        entries[\"SerialNumber\"] = input.SerialNumber;\n    }\n    if (input.TokenCode != null) {\n        entries[\"TokenCode\"] = input.TokenCode;\n    }\n    return entries;\n};\nconst se_policyDescriptorListType = (input, context) => {\n    const entries = {};\n    let counter = 1;\n    for (const entry of input) {\n        if (entry === null) {\n            continue;\n        }\n        const memberEntries = se_PolicyDescriptorType(entry, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            entries[`member.${counter}.${key}`] = value;\n        });\n        counter++;\n    }\n    return entries;\n};\nconst se_PolicyDescriptorType = (input, context) => {\n    const entries = {};\n    if (input.arn != null) {\n        entries[\"arn\"] = input.arn;\n    }\n    return entries;\n};\nconst se_Tag = (input, context) => {\n    const entries = {};\n    if (input.Key != null) {\n        entries[\"Key\"] = input.Key;\n    }\n    if (input.Value != null) {\n        entries[\"Value\"] = input.Value;\n    }\n    return entries;\n};\nconst se_tagKeyListType = (input, context) => {\n    const entries = {};\n    let counter = 1;\n    for (const entry of input) {\n        if (entry === null) {\n            continue;\n        }\n        entries[`member.${counter}`] = entry;\n        counter++;\n    }\n    return entries;\n};\nconst se_tagListType = (input, context) => {\n    const entries = {};\n    let counter = 1;\n    for (const entry of input) {\n        if (entry === null) {\n            continue;\n        }\n        const memberEntries = se_Tag(entry, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            entries[`member.${counter}.${key}`] = value;\n        });\n        counter++;\n    }\n    return entries;\n};\nconst de_AssumedRoleUser = (output, context) => {\n    const contents = {};\n    if (output[\"AssumedRoleId\"] !== undefined) {\n        contents.AssumedRoleId = __expectString(output[\"AssumedRoleId\"]);\n    }\n    if (output[\"Arn\"] !== undefined) {\n        contents.Arn = __expectString(output[\"Arn\"]);\n    }\n    return contents;\n};\nconst de_AssumeRoleResponse = (output, context) => {\n    const contents = {};\n    if (output[\"Credentials\"] !== undefined) {\n        contents.Credentials = de_Credentials(output[\"Credentials\"], context);\n    }\n    if (output[\"AssumedRoleUser\"] !== undefined) {\n        contents.AssumedRoleUser = de_AssumedRoleUser(output[\"AssumedRoleUser\"], context);\n    }\n    if (output[\"PackedPolicySize\"] !== undefined) {\n        contents.PackedPolicySize = __strictParseInt32(output[\"PackedPolicySize\"]);\n    }\n    if (output[\"SourceIdentity\"] !== undefined) {\n        contents.SourceIdentity = __expectString(output[\"SourceIdentity\"]);\n    }\n    return contents;\n};\nconst de_AssumeRoleWithSAMLResponse = (output, context) => {\n    const contents = {};\n    if (output[\"Credentials\"] !== undefined) {\n        contents.Credentials = de_Credentials(output[\"Credentials\"], context);\n    }\n    if (output[\"AssumedRoleUser\"] !== undefined) {\n        contents.AssumedRoleUser = de_AssumedRoleUser(output[\"AssumedRoleUser\"], context);\n    }\n    if (output[\"PackedPolicySize\"] !== undefined) {\n        contents.PackedPolicySize = __strictParseInt32(output[\"PackedPolicySize\"]);\n    }\n    if (output[\"Subject\"] !== undefined) {\n        contents.Subject = __expectString(output[\"Subject\"]);\n    }\n    if (output[\"SubjectType\"] !== undefined) {\n        contents.SubjectType = __expectString(output[\"SubjectType\"]);\n    }\n    if (output[\"Issuer\"] !== undefined) {\n        contents.Issuer = __expectString(output[\"Issuer\"]);\n    }\n    if (output[\"Audience\"] !== undefined) {\n        contents.Audience = __expectString(output[\"Audience\"]);\n    }\n    if (output[\"NameQualifier\"] !== undefined) {\n        contents.NameQualifier = __expectString(output[\"NameQualifier\"]);\n    }\n    if (output[\"SourceIdentity\"] !== undefined) {\n        contents.SourceIdentity = __expectString(output[\"SourceIdentity\"]);\n    }\n    return contents;\n};\nconst de_AssumeRoleWithWebIdentityResponse = (output, context) => {\n    const contents = {};\n    if (output[\"Credentials\"] !== undefined) {\n        contents.Credentials = de_Credentials(output[\"Credentials\"], context);\n    }\n    if (output[\"SubjectFromWebIdentityToken\"] !== undefined) {\n        contents.SubjectFromWebIdentityToken = __expectString(output[\"SubjectFromWebIdentityToken\"]);\n    }\n    if (output[\"AssumedRoleUser\"] !== undefined) {\n        contents.AssumedRoleUser = de_AssumedRoleUser(output[\"AssumedRoleUser\"], context);\n    }\n    if (output[\"PackedPolicySize\"] !== undefined) {\n        contents.PackedPolicySize = __strictParseInt32(output[\"PackedPolicySize\"]);\n    }\n    if (output[\"Provider\"] !== undefined) {\n        contents.Provider = __expectString(output[\"Provider\"]);\n    }\n    if (output[\"Audience\"] !== undefined) {\n        contents.Audience = __expectString(output[\"Audience\"]);\n    }\n    if (output[\"SourceIdentity\"] !== undefined) {\n        contents.SourceIdentity = __expectString(output[\"SourceIdentity\"]);\n    }\n    return contents;\n};\nconst de_Credentials = (output, context) => {\n    const contents = {};\n    if (output[\"AccessKeyId\"] !== undefined) {\n        contents.AccessKeyId = __expectString(output[\"AccessKeyId\"]);\n    }\n    if (output[\"SecretAccessKey\"] !== undefined) {\n        contents.SecretAccessKey = __expectString(output[\"SecretAccessKey\"]);\n    }\n    if (output[\"SessionToken\"] !== undefined) {\n        contents.SessionToken = __expectString(output[\"SessionToken\"]);\n    }\n    if (output[\"Expiration\"] !== undefined) {\n        contents.Expiration = __expectNonNull(__parseRfc3339DateTimeWithOffset(output[\"Expiration\"]));\n    }\n    return contents;\n};\nconst de_DecodeAuthorizationMessageResponse = (output, context) => {\n    const contents = {};\n    if (output[\"DecodedMessage\"] !== undefined) {\n        contents.DecodedMessage = __expectString(output[\"DecodedMessage\"]);\n    }\n    return contents;\n};\nconst de_ExpiredTokenException = (output, context) => {\n    const contents = {};\n    if (output[\"message\"] !== undefined) {\n        contents.message = __expectString(output[\"message\"]);\n    }\n    return contents;\n};\nconst de_FederatedUser = (output, context) => {\n    const contents = {};\n    if (output[\"FederatedUserId\"] !== undefined) {\n        contents.FederatedUserId = __expectString(output[\"FederatedUserId\"]);\n    }\n    if (output[\"Arn\"] !== undefined) {\n        contents.Arn = __expectString(output[\"Arn\"]);\n    }\n    return contents;\n};\nconst de_GetAccessKeyInfoResponse = (output, context) => {\n    const contents = {};\n    if (output[\"Account\"] !== undefined) {\n        contents.Account = __expectString(output[\"Account\"]);\n    }\n    return contents;\n};\nconst de_GetCallerIdentityResponse = (output, context) => {\n    const contents = {};\n    if (output[\"UserId\"] !== undefined) {\n        contents.UserId = __expectString(output[\"UserId\"]);\n    }\n    if (output[\"Account\"] !== undefined) {\n        contents.Account = __expectString(output[\"Account\"]);\n    }\n    if (output[\"Arn\"] !== undefined) {\n        contents.Arn = __expectString(output[\"Arn\"]);\n    }\n    return contents;\n};\nconst de_GetFederationTokenResponse = (output, context) => {\n    const contents = {};\n    if (output[\"Credentials\"] !== undefined) {\n        contents.Credentials = de_Credentials(output[\"Credentials\"], context);\n    }\n    if (output[\"FederatedUser\"] !== undefined) {\n        contents.FederatedUser = de_FederatedUser(output[\"FederatedUser\"], context);\n    }\n    if (output[\"PackedPolicySize\"] !== undefined) {\n        contents.PackedPolicySize = __strictParseInt32(output[\"PackedPolicySize\"]);\n    }\n    return contents;\n};\nconst de_GetSessionTokenResponse = (output, context) => {\n    const contents = {};\n    if (output[\"Credentials\"] !== undefined) {\n        contents.Credentials = de_Credentials(output[\"Credentials\"], context);\n    }\n    return contents;\n};\nconst de_IDPCommunicationErrorException = (output, context) => {\n    const contents = {};\n    if (output[\"message\"] !== undefined) {\n        contents.message = __expectString(output[\"message\"]);\n    }\n    return contents;\n};\nconst de_IDPRejectedClaimException = (output, context) => {\n    const contents = {};\n    if (output[\"message\"] !== undefined) {\n        contents.message = __expectString(output[\"message\"]);\n    }\n    return contents;\n};\nconst de_InvalidAuthorizationMessageException = (output, context) => {\n    const contents = {};\n    if (output[\"message\"] !== undefined) {\n        contents.message = __expectString(output[\"message\"]);\n    }\n    return contents;\n};\nconst de_InvalidIdentityTokenException = (output, context) => {\n    const contents = {};\n    if (output[\"message\"] !== undefined) {\n        contents.message = __expectString(output[\"message\"]);\n    }\n    return contents;\n};\nconst de_MalformedPolicyDocumentException = (output, context) => {\n    const contents = {};\n    if (output[\"message\"] !== undefined) {\n        contents.message = __expectString(output[\"message\"]);\n    }\n    return contents;\n};\nconst de_PackedPolicyTooLargeException = (output, context) => {\n    const contents = {};\n    if (output[\"message\"] !== undefined) {\n        contents.message = __expectString(output[\"message\"]);\n    }\n    return contents;\n};\nconst de_RegionDisabledException = (output, context) => {\n    const contents = {};\n    if (output[\"message\"] !== undefined) {\n        contents.message = __expectString(output[\"message\"]);\n    }\n    return contents;\n};\nconst deserializeMetadata = (output) => ({\n    httpStatusCode: output.statusCode,\n    requestId: output.headers[\"x-amzn-requestid\"] ?? output.headers[\"x-amzn-request-id\"] ?? output.headers[\"x-amz-request-id\"],\n    extendedRequestId: output.headers[\"x-amz-id-2\"],\n    cfId: output.headers[\"x-amz-cf-id\"],\n});\nconst collectBody = (streamBody = new Uint8Array(), context) => {\n    if (streamBody instanceof Uint8Array) {\n        return Promise.resolve(streamBody);\n    }\n    return context.streamCollector(streamBody) || Promise.resolve(new Uint8Array());\n};\nconst collectBodyString = (streamBody, context) => collectBody(streamBody, context).then((body) => context.utf8Encoder(body));\nconst throwDefaultError = withBaseException(__BaseException);\nconst buildHttpRpcRequest = async (context, headers, path, resolvedHostname, body) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const contents = {\n        protocol,\n        hostname,\n        port,\n        method: \"POST\",\n        path: basePath.endsWith(\"/\") ? basePath.slice(0, -1) + path : basePath + path,\n        headers,\n    };\n    if (resolvedHostname !== undefined) {\n        contents.hostname = resolvedHostname;\n    }\n    if (body !== undefined) {\n        contents.body = body;\n    }\n    return new __HttpRequest(contents);\n};\nconst SHARED_HEADERS = {\n    \"content-type\": \"application/x-www-form-urlencoded\",\n};\nconst parseBody = (streamBody, context) => collectBodyString(streamBody, context).then((encoded) => {\n    if (encoded.length) {\n        const parser = new XMLParser({\n            attributeNamePrefix: \"\",\n            htmlEntities: true,\n            ignoreAttributes: false,\n            ignoreDeclaration: true,\n            parseTagValue: false,\n            trimValues: false,\n            tagValueProcessor: (_, val) => (val.trim() === \"\" && val.includes(\"\\n\") ? \"\" : undefined),\n        });\n        parser.addEntity(\"#xD\", \"\\r\");\n        parser.addEntity(\"#10\", \"\\n\");\n        const parsedObj = parser.parse(encoded);\n        const textNodeName = \"#text\";\n        const key = Object.keys(parsedObj)[0];\n        const parsedObjToReturn = parsedObj[key];\n        if (parsedObjToReturn[textNodeName]) {\n            parsedObjToReturn[key] = parsedObjToReturn[textNodeName];\n            delete parsedObjToReturn[textNodeName];\n        }\n        return __getValueFromTextNode(parsedObjToReturn);\n    }\n    return {};\n});\nconst parseErrorBody = async (errorBody, context) => {\n    const value = await parseBody(errorBody, context);\n    if (value.Error) {\n        value.Error.message = value.Error.message ?? value.Error.Message;\n    }\n    return value;\n};\nconst buildFormUrlencodedString = (formEntries) => Object.entries(formEntries)\n    .map(([key, value]) => __extendedEncodeURIComponent(key) + \"=\" + __extendedEncodeURIComponent(value))\n    .join(\"&\");\nconst loadQueryErrorCode = (output, data) => {\n    if (data.Error?.Code !== undefined) {\n        return data.Error.Code;\n    }\n    if (output.statusCode == 404) {\n        return \"NotFound\";\n    }\n};\n","import { getEndpointPlugin } from \"@aws-sdk/middleware-endpoint\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { getAwsAuthPlugin } from \"@aws-sdk/middleware-signing\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\nimport { de_AssumeRoleCommand, se_AssumeRoleCommand } from \"../protocols/Aws_query\";\nexport class AssumeRoleCommand extends $Command {\n    static getEndpointParameterInstructions() {\n        return {\n            UseGlobalEndpoint: { type: \"builtInParams\", name: \"useGlobalEndpoint\" },\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use(getEndpointPlugin(configuration, AssumeRoleCommand.getEndpointParameterInstructions()));\n        this.middlewareStack.use(getAwsAuthPlugin(configuration));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"STSClient\";\n        const commandName = \"AssumeRoleCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: (_) => _,\n            outputFilterSensitiveLog: (_) => _,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return se_AssumeRoleCommand(input, context);\n    }\n    deserialize(output, context) {\n        return de_AssumeRoleCommand(output, context);\n    }\n}\n","import { getEndpointPlugin } from \"@aws-sdk/middleware-endpoint\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\nimport { de_AssumeRoleWithWebIdentityCommand, se_AssumeRoleWithWebIdentityCommand } from \"../protocols/Aws_query\";\nexport class AssumeRoleWithWebIdentityCommand extends $Command {\n    static getEndpointParameterInstructions() {\n        return {\n            UseGlobalEndpoint: { type: \"builtInParams\", name: \"useGlobalEndpoint\" },\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use(getEndpointPlugin(configuration, AssumeRoleWithWebIdentityCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"STSClient\";\n        const commandName = \"AssumeRoleWithWebIdentityCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: (_) => _,\n            outputFilterSensitiveLog: (_) => _,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return se_AssumeRoleWithWebIdentityCommand(input, context);\n    }\n    deserialize(output, context) {\n        return de_AssumeRoleWithWebIdentityCommand(output, context);\n    }\n}\n","import { AssumeRoleCommand } from \"./commands/AssumeRoleCommand\";\nimport { AssumeRoleWithWebIdentityCommand, } from \"./commands/AssumeRoleWithWebIdentityCommand\";\nconst ASSUME_ROLE_DEFAULT_REGION = \"us-east-1\";\nconst decorateDefaultRegion = (region) => {\n    if (typeof region !== \"function\") {\n        return region === undefined ? ASSUME_ROLE_DEFAULT_REGION : region;\n    }\n    return async () => {\n        try {\n            return await region();\n        }\n        catch (e) {\n            return ASSUME_ROLE_DEFAULT_REGION;\n        }\n    };\n};\nexport const getDefaultRoleAssumer = (stsOptions, stsClientCtor) => {\n    let stsClient;\n    let closureSourceCreds;\n    return async (sourceCreds, params) => {\n        closureSourceCreds = sourceCreds;\n        if (!stsClient) {\n            const { logger, region, requestHandler } = stsOptions;\n            stsClient = new stsClientCtor({\n                logger,\n                credentialDefaultProvider: () => async () => closureSourceCreds,\n                region: decorateDefaultRegion(region || stsOptions.region),\n                ...(requestHandler ? { requestHandler } : {}),\n            });\n        }\n        const { Credentials } = await stsClient.send(new AssumeRoleCommand(params));\n        if (!Credentials || !Credentials.AccessKeyId || !Credentials.SecretAccessKey) {\n            throw new Error(`Invalid response from STS.assumeRole call with role ${params.RoleArn}`);\n        }\n        return {\n            accessKeyId: Credentials.AccessKeyId,\n            secretAccessKey: Credentials.SecretAccessKey,\n            sessionToken: Credentials.SessionToken,\n            expiration: Credentials.Expiration,\n        };\n    };\n};\nexport const getDefaultRoleAssumerWithWebIdentity = (stsOptions, stsClientCtor) => {\n    let stsClient;\n    return async (params) => {\n        if (!stsClient) {\n            const { logger, region, requestHandler } = stsOptions;\n            stsClient = new stsClientCtor({\n                logger,\n                region: decorateDefaultRegion(region || stsOptions.region),\n                ...(requestHandler ? { requestHandler } : {}),\n            });\n        }\n        const { Credentials } = await stsClient.send(new AssumeRoleWithWebIdentityCommand(params));\n        if (!Credentials || !Credentials.AccessKeyId || !Credentials.SecretAccessKey) {\n            throw new Error(`Invalid response from STS.assumeRoleWithWebIdentity call with role ${params.RoleArn}`);\n        }\n        return {\n            accessKeyId: Credentials.AccessKeyId,\n            secretAccessKey: Credentials.SecretAccessKey,\n            sessionToken: Credentials.SessionToken,\n            expiration: Credentials.Expiration,\n        };\n    };\n};\nexport const decorateDefaultCredentialProvider = (provider) => (input) => provider({\n    roleAssumer: getDefaultRoleAssumer(input, input.stsClientCtor),\n    roleAssumerWithWebIdentity: getDefaultRoleAssumerWithWebIdentity(input, input.stsClientCtor),\n    ...input,\n});\n","import { CredentialsProviderError } from \"@aws-sdk/property-provider\";\nexport const ENV_KEY = \"AWS_ACCESS_KEY_ID\";\nexport const ENV_SECRET = \"AWS_SECRET_ACCESS_KEY\";\nexport const ENV_SESSION = \"AWS_SESSION_TOKEN\";\nexport const ENV_EXPIRATION = \"AWS_CREDENTIAL_EXPIRATION\";\nexport const fromEnv = () => async () => {\n    const accessKeyId = process.env[ENV_KEY];\n    const secretAccessKey = process.env[ENV_SECRET];\n    const sessionToken = process.env[ENV_SESSION];\n    const expiry = process.env[ENV_EXPIRATION];\n    if (accessKeyId && secretAccessKey) {\n        return {\n            accessKeyId,\n            secretAccessKey,\n            ...(sessionToken && { sessionToken }),\n            ...(expiry && { expiration: new Date(expiry) }),\n        };\n    }\n    throw new CredentialsProviderError(\"Unable to find environment variable credentials.\");\n};\n","import { homedir } from \"os\";\nimport { sep } from \"path\";\nexport const getHomeDir = () => {\n    const { HOME, USERPROFILE, HOMEPATH, HOMEDRIVE = `C:${sep}` } = process.env;\n    if (HOME)\n        return HOME;\n    if (USERPROFILE)\n        return USERPROFILE;\n    if (HOMEPATH)\n        return `${HOMEDRIVE}${HOMEPATH}`;\n    return homedir();\n};\n","export const ENV_PROFILE = \"AWS_PROFILE\";\nexport const DEFAULT_PROFILE = \"default\";\nexport const getProfileName = (init) => init.profile || process.env[ENV_PROFILE] || DEFAULT_PROFILE;\n","import { createHash } from \"crypto\";\nimport { join } from \"path\";\nimport { getHomeDir } from \"./getHomeDir\";\nexport const getSSOTokenFilepath = (id) => {\n    const hasher = createHash(\"sha1\");\n    const cacheName = hasher.update(id).digest(\"hex\");\n    return join(getHomeDir(), \".aws\", \"sso\", \"cache\", `${cacheName}.json`);\n};\n","import { promises as fsPromises } from \"fs\";\nimport { getSSOTokenFilepath } from \"./getSSOTokenFilepath\";\nconst { readFile } = fsPromises;\nexport const getSSOTokenFromFile = async (id) => {\n    const ssoTokenFilepath = getSSOTokenFilepath(id);\n    const ssoTokenText = await readFile(ssoTokenFilepath, \"utf8\");\n    return JSON.parse(ssoTokenText);\n};\n","import { join } from \"path\";\nimport { getHomeDir } from \"./getHomeDir\";\nexport const ENV_CONFIG_PATH = \"AWS_CONFIG_FILE\";\nexport const getConfigFilepath = () => process.env[ENV_CONFIG_PATH] || join(getHomeDir(), \".aws\", \"config\");\n","import { join } from \"path\";\nimport { getHomeDir } from \"./getHomeDir\";\nexport const ENV_CREDENTIALS_PATH = \"AWS_SHARED_CREDENTIALS_FILE\";\nexport const getCredentialsFilepath = () => process.env[ENV_CREDENTIALS_PATH] || join(getHomeDir(), \".aws\", \"credentials\");\n","const profileKeyRegex = /^profile\\s([\"'])?([^\\1]+)\\1$/;\nexport const getProfileData = (data) => Object.entries(data)\n    .filter(([key]) => profileKeyRegex.test(key))\n    .reduce((acc, [key, value]) => ({ ...acc, [profileKeyRegex.exec(key)[2]]: value }), {\n    ...(data.default && { default: data.default }),\n});\n","const profileNameBlockList = [\"__proto__\", \"profile __proto__\"];\nexport const parseIni = (iniData) => {\n    const map = {};\n    let currentSection;\n    for (let line of iniData.split(/\\r?\\n/)) {\n        line = line.split(/(^|\\s)[;#]/)[0].trim();\n        const isSection = line[0] === \"[\" && line[line.length - 1] === \"]\";\n        if (isSection) {\n            currentSection = line.substring(1, line.length - 1);\n            if (profileNameBlockList.includes(currentSection)) {\n                throw new Error(`Found invalid profile name \"${currentSection}\"`);\n            }\n        }\n        else if (currentSection) {\n            const indexOfEqualsSign = line.indexOf(\"=\");\n            const start = 0;\n            const end = line.length - 1;\n            const isAssignment = indexOfEqualsSign !== -1 && indexOfEqualsSign !== start && indexOfEqualsSign !== end;\n            if (isAssignment) {\n                const [name, value] = [\n                    line.substring(0, indexOfEqualsSign).trim(),\n                    line.substring(indexOfEqualsSign + 1).trim(),\n                ];\n                map[currentSection] = map[currentSection] || {};\n                map[currentSection][name] = value;\n            }\n        }\n    }\n    return map;\n};\n","import { promises as fsPromises } from \"fs\";\nconst { readFile } = fsPromises;\nconst filePromisesHash = {};\nexport const slurpFile = (path, options) => {\n    if (!filePromisesHash[path] || options?.ignoreCache) {\n        filePromisesHash[path] = readFile(path, \"utf8\");\n    }\n    return filePromisesHash[path];\n};\n","import { getConfigFilepath } from \"./getConfigFilepath\";\nimport { getCredentialsFilepath } from \"./getCredentialsFilepath\";\nimport { getProfileData } from \"./getProfileData\";\nimport { parseIni } from \"./parseIni\";\nimport { slurpFile } from \"./slurpFile\";\nconst swallowError = () => ({});\nexport const loadSharedConfigFiles = async (init = {}) => {\n    const { filepath = getCredentialsFilepath(), configFilepath = getConfigFilepath() } = init;\n    const parsedFiles = await Promise.all([\n        slurpFile(configFilepath, {\n            ignoreCache: init.ignoreCache,\n        })\n            .then(parseIni)\n            .then(getProfileData)\n            .catch(swallowError),\n        slurpFile(filepath, {\n            ignoreCache: init.ignoreCache,\n        })\n            .then(parseIni)\n            .catch(swallowError),\n    ]);\n    return {\n        configFile: parsedFiles[0],\n        credentialsFile: parsedFiles[1],\n    };\n};\n","const ssoSessionKeyRegex = /^sso-session\\s([\"'])?([^\\1]+)\\1$/;\nexport const getSsoSessionData = (data) => Object.entries(data)\n    .filter(([key]) => ssoSessionKeyRegex.test(key))\n    .reduce((acc, [key, value]) => ({ ...acc, [ssoSessionKeyRegex.exec(key)[2]]: value }), {});\n","import { getConfigFilepath } from \"./getConfigFilepath\";\nimport { getSsoSessionData } from \"./getSsoSessionData\";\nimport { parseIni } from \"./parseIni\";\nimport { slurpFile } from \"./slurpFile\";\nconst swallowError = () => ({});\nexport const loadSsoSessionData = async (init = {}) => slurpFile(init.configFilepath ?? getConfigFilepath())\n    .then(parseIni)\n    .then(getSsoSessionData)\n    .catch(swallowError);\n","import { loadSharedConfigFiles } from \"./loadSharedConfigFiles\";\nimport { mergeConfigFiles } from \"./mergeConfigFiles\";\nexport const parseKnownFiles = async (init) => {\n    const parsedFiles = await loadSharedConfigFiles(init);\n    return mergeConfigFiles(parsedFiles.configFile, parsedFiles.credentialsFile);\n};\n","export const mergeConfigFiles = (...files) => {\n    const merged = {};\n    for (const file of files) {\n        for (const [key, values] of Object.entries(file)) {\n            if (merged[key] !== undefined) {\n                Object.assign(merged[key], values);\n            }\n            else {\n                merged[key] = values;\n            }\n        }\n    }\n    return merged;\n};\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"url\");","import { ProviderError } from \"@aws-sdk/property-provider\";\nimport { Buffer } from \"buffer\";\nimport { request } from \"http\";\nexport function httpRequest(options) {\n    return new Promise((resolve, reject) => {\n        const req = request({\n            method: \"GET\",\n            ...options,\n            hostname: options.hostname?.replace(/^\\[(.+)\\]$/, \"$1\"),\n        });\n        req.on(\"error\", (err) => {\n            reject(Object.assign(new ProviderError(\"Unable to connect to instance metadata service\"), err));\n            req.destroy();\n        });\n        req.on(\"timeout\", () => {\n            reject(new ProviderError(\"TimeoutError from instance metadata service\"));\n            req.destroy();\n        });\n        req.on(\"response\", (res) => {\n            const { statusCode = 400 } = res;\n            if (statusCode < 200 || 300 <= statusCode) {\n                reject(Object.assign(new ProviderError(\"Error response received from instance metadata service\"), { statusCode }));\n                req.destroy();\n            }\n            const chunks = [];\n            res.on(\"data\", (chunk) => {\n                chunks.push(chunk);\n            });\n            res.on(\"end\", () => {\n                resolve(Buffer.concat(chunks));\n                req.destroy();\n            });\n        });\n        req.end();\n    });\n}\n","export const isImdsCredentials = (arg) => Boolean(arg) &&\n    typeof arg === \"object\" &&\n    typeof arg.AccessKeyId === \"string\" &&\n    typeof arg.SecretAccessKey === \"string\" &&\n    typeof arg.Token === \"string\" &&\n    typeof arg.Expiration === \"string\";\nexport const fromImdsCredentials = (creds) => ({\n    accessKeyId: creds.AccessKeyId,\n    secretAccessKey: creds.SecretAccessKey,\n    sessionToken: creds.Token,\n    expiration: new Date(creds.Expiration),\n});\n","export const DEFAULT_TIMEOUT = 1000;\nexport const DEFAULT_MAX_RETRIES = 0;\nexport const providerConfigFromInit = ({ maxRetries = DEFAULT_MAX_RETRIES, timeout = DEFAULT_TIMEOUT, }) => ({ maxRetries, timeout });\n","export const retry = (toRetry, maxRetries) => {\n    let promise = toRetry();\n    for (let i = 0; i < maxRetries; i++) {\n        promise = promise.catch(toRetry);\n    }\n    return promise;\n};\n","import { CredentialsProviderError } from \"@aws-sdk/property-provider\";\nimport { parse } from \"url\";\nimport { httpRequest } from \"./remoteProvider/httpRequest\";\nimport { fromImdsCredentials, isImdsCredentials } from \"./remoteProvider/ImdsCredentials\";\nimport { providerConfigFromInit } from \"./remoteProvider/RemoteProviderInit\";\nimport { retry } from \"./remoteProvider/retry\";\nexport const ENV_CMDS_FULL_URI = \"AWS_CONTAINER_CREDENTIALS_FULL_URI\";\nexport const ENV_CMDS_RELATIVE_URI = \"AWS_CONTAINER_CREDENTIALS_RELATIVE_URI\";\nexport const ENV_CMDS_AUTH_TOKEN = \"AWS_CONTAINER_AUTHORIZATION_TOKEN\";\nexport const fromContainerMetadata = (init = {}) => {\n    const { timeout, maxRetries } = providerConfigFromInit(init);\n    return () => retry(async () => {\n        const requestOptions = await getCmdsUri();\n        const credsResponse = JSON.parse(await requestFromEcsImds(timeout, requestOptions));\n        if (!isImdsCredentials(credsResponse)) {\n            throw new CredentialsProviderError(\"Invalid response received from instance metadata service.\");\n        }\n        return fromImdsCredentials(credsResponse);\n    }, maxRetries);\n};\nconst requestFromEcsImds = async (timeout, options) => {\n    if (process.env[ENV_CMDS_AUTH_TOKEN]) {\n        options.headers = {\n            ...options.headers,\n            Authorization: process.env[ENV_CMDS_AUTH_TOKEN],\n        };\n    }\n    const buffer = await httpRequest({\n        ...options,\n        timeout,\n    });\n    return buffer.toString();\n};\nconst CMDS_IP = \"169.254.170.2\";\nconst GREENGRASS_HOSTS = {\n    localhost: true,\n    \"127.0.0.1\": true,\n};\nconst GREENGRASS_PROTOCOLS = {\n    \"http:\": true,\n    \"https:\": true,\n};\nconst getCmdsUri = async () => {\n    if (process.env[ENV_CMDS_RELATIVE_URI]) {\n        return {\n            hostname: CMDS_IP,\n            path: process.env[ENV_CMDS_RELATIVE_URI],\n        };\n    }\n    if (process.env[ENV_CMDS_FULL_URI]) {\n        const parsed = parse(process.env[ENV_CMDS_FULL_URI]);\n        if (!parsed.hostname || !(parsed.hostname in GREENGRASS_HOSTS)) {\n            throw new CredentialsProviderError(`${parsed.hostname} is not a valid container metadata service hostname`, false);\n        }\n        if (!parsed.protocol || !(parsed.protocol in GREENGRASS_PROTOCOLS)) {\n            throw new CredentialsProviderError(`${parsed.protocol} is not a valid container metadata service protocol`, false);\n        }\n        return {\n            ...parsed,\n            port: parsed.port ? parseInt(parsed.port, 10) : undefined,\n        };\n    }\n    throw new CredentialsProviderError(\"The container metadata credential provider cannot be used unless\" +\n        ` the ${ENV_CMDS_RELATIVE_URI} or ${ENV_CMDS_FULL_URI} environment` +\n        \" variable is set\", false);\n};\n","import { fromStatic as convertToProvider } from \"@aws-sdk/property-provider\";\nconst isFunction = (func) => typeof func === \"function\";\nexport const fromStatic = (defaultValue) => isFunction(defaultValue) ? async () => await defaultValue() : convertToProvider(defaultValue);\n","import { chain, memoize } from \"@aws-sdk/property-provider\";\nimport { fromEnv } from \"./fromEnv\";\nimport { fromSharedConfigFiles } from \"./fromSharedConfigFiles\";\nimport { fromStatic } from \"./fromStatic\";\nexport const loadConfig = ({ environmentVariableSelector, configFileSelector, default: defaultValue }, configuration = {}) => memoize(chain(fromEnv(environmentVariableSelector), fromSharedConfigFiles(configFileSelector, configuration), fromStatic(defaultValue)));\n","import { CredentialsProviderError } from \"@aws-sdk/property-provider\";\nexport const fromEnv = (envVarSelector) => async () => {\n    try {\n        const config = envVarSelector(process.env);\n        if (config === undefined) {\n            throw new Error();\n        }\n        return config;\n    }\n    catch (e) {\n        throw new CredentialsProviderError(e.message || `Cannot load config from environment variables with getter: ${envVarSelector}`);\n    }\n};\n","import { CredentialsProviderError } from \"@aws-sdk/property-provider\";\nimport { getProfileName, loadSharedConfigFiles } from \"@aws-sdk/shared-ini-file-loader\";\nexport const fromSharedConfigFiles = (configSelector, { preferredFile = \"config\", ...init } = {}) => async () => {\n    const profile = getProfileName(init);\n    const { configFile, credentialsFile } = await loadSharedConfigFiles(init);\n    const profileFromCredentials = credentialsFile[profile] || {};\n    const profileFromConfig = configFile[profile] || {};\n    const mergedProfile = preferredFile === \"config\"\n        ? { ...profileFromCredentials, ...profileFromConfig }\n        : { ...profileFromConfig, ...profileFromCredentials };\n    try {\n        const configValue = configSelector(mergedProfile);\n        if (configValue === undefined) {\n            throw new Error();\n        }\n        return configValue;\n    }\n    catch (e) {\n        throw new CredentialsProviderError(e.message ||\n            `Cannot load config for profile ${profile} in SDK configuration files with getter: ${configSelector}`);\n    }\n};\n","export var Endpoint;\n(function (Endpoint) {\n    Endpoint[\"IPv4\"] = \"http://169.254.169.254\";\n    Endpoint[\"IPv6\"] = \"http://[fd00:ec2::254]\";\n})(Endpoint || (Endpoint = {}));\n","export const ENV_ENDPOINT_NAME = \"AWS_EC2_METADATA_SERVICE_ENDPOINT\";\nexport const CONFIG_ENDPOINT_NAME = \"ec2_metadata_service_endpoint\";\nexport const ENDPOINT_CONFIG_OPTIONS = {\n    environmentVariableSelector: (env) => env[ENV_ENDPOINT_NAME],\n    configFileSelector: (profile) => profile[CONFIG_ENDPOINT_NAME],\n    default: undefined,\n};\n","export var EndpointMode;\n(function (EndpointMode) {\n    EndpointMode[\"IPv4\"] = \"IPv4\";\n    EndpointMode[\"IPv6\"] = \"IPv6\";\n})(EndpointMode || (EndpointMode = {}));\n","import { EndpointMode } from \"./EndpointMode\";\nexport const ENV_ENDPOINT_MODE_NAME = \"AWS_EC2_METADATA_SERVICE_ENDPOINT_MODE\";\nexport const CONFIG_ENDPOINT_MODE_NAME = \"ec2_metadata_service_endpoint_mode\";\nexport const ENDPOINT_MODE_CONFIG_OPTIONS = {\n    environmentVariableSelector: (env) => env[ENV_ENDPOINT_MODE_NAME],\n    configFileSelector: (profile) => profile[CONFIG_ENDPOINT_MODE_NAME],\n    default: EndpointMode.IPv4,\n};\n","import { loadConfig } from \"@aws-sdk/node-config-provider\";\nimport { parseUrl } from \"@aws-sdk/url-parser\";\nimport { Endpoint as InstanceMetadataEndpoint } from \"../config/Endpoint\";\nimport { ENDPOINT_CONFIG_OPTIONS } from \"../config/EndpointConfigOptions\";\nimport { EndpointMode } from \"../config/EndpointMode\";\nimport { ENDPOINT_MODE_CONFIG_OPTIONS, } from \"../config/EndpointModeConfigOptions\";\nexport const getInstanceMetadataEndpoint = async () => parseUrl((await getFromEndpointConfig()) || (await getFromEndpointModeConfig()));\nconst getFromEndpointConfig = async () => loadConfig(ENDPOINT_CONFIG_OPTIONS)();\nconst getFromEndpointModeConfig = async () => {\n    const endpointMode = await loadConfig(ENDPOINT_MODE_CONFIG_OPTIONS)();\n    switch (endpointMode) {\n        case EndpointMode.IPv4:\n            return InstanceMetadataEndpoint.IPv4;\n        case EndpointMode.IPv6:\n            return InstanceMetadataEndpoint.IPv6;\n        default:\n            throw new Error(`Unsupported endpoint mode: ${endpointMode}.` + ` Select from ${Object.values(EndpointMode)}`);\n    }\n};\n","const STATIC_STABILITY_REFRESH_INTERVAL_SECONDS = 5 * 60;\nconst STATIC_STABILITY_REFRESH_INTERVAL_JITTER_WINDOW_SECONDS = 5 * 60;\nconst STATIC_STABILITY_DOC_URL = \"https://docs.aws.amazon.com/sdkref/latest/guide/feature-static-credentials.html\";\nexport const getExtendedInstanceMetadataCredentials = (credentials, logger) => {\n    const refreshInterval = STATIC_STABILITY_REFRESH_INTERVAL_SECONDS +\n        Math.floor(Math.random() * STATIC_STABILITY_REFRESH_INTERVAL_JITTER_WINDOW_SECONDS);\n    const newExpiration = new Date(Date.now() + refreshInterval * 1000);\n    logger.warn(\"Attempting credential expiration extension due to a credential service availability issue. A refresh of these \" +\n        \"credentials will be attempted after ${new Date(newExpiration)}.\\nFor more information, please visit: \" +\n        STATIC_STABILITY_DOC_URL);\n    const originalExpiration = credentials.originalExpiration ?? credentials.expiration;\n    return {\n        ...credentials,\n        ...(originalExpiration ? { originalExpiration } : {}),\n        expiration: newExpiration,\n    };\n};\n","import { CredentialsProviderError } from \"@aws-sdk/property-provider\";\nimport { httpRequest } from \"./remoteProvider/httpRequest\";\nimport { fromImdsCredentials, isImdsCredentials } from \"./remoteProvider/ImdsCredentials\";\nimport { providerConfigFromInit } from \"./remoteProvider/RemoteProviderInit\";\nimport { retry } from \"./remoteProvider/retry\";\nimport { getInstanceMetadataEndpoint } from \"./utils/getInstanceMetadataEndpoint\";\nimport { staticStabilityProvider } from \"./utils/staticStabilityProvider\";\nconst IMDS_PATH = \"/latest/meta-data/iam/security-credentials/\";\nconst IMDS_TOKEN_PATH = \"/latest/api/token\";\nexport const fromInstanceMetadata = (init = {}) => staticStabilityProvider(getInstanceImdsProvider(init), { logger: init.logger });\nconst getInstanceImdsProvider = (init) => {\n    let disableFetchToken = false;\n    const { timeout, maxRetries } = providerConfigFromInit(init);\n    const getCredentials = async (maxRetries, options) => {\n        const profile = (await retry(async () => {\n            let profile;\n            try {\n                profile = await getProfile(options);\n            }\n            catch (err) {\n                if (err.statusCode === 401) {\n                    disableFetchToken = false;\n                }\n                throw err;\n            }\n            return profile;\n        }, maxRetries)).trim();\n        return retry(async () => {\n            let creds;\n            try {\n                creds = await getCredentialsFromProfile(profile, options);\n            }\n            catch (err) {\n                if (err.statusCode === 401) {\n                    disableFetchToken = false;\n                }\n                throw err;\n            }\n            return creds;\n        }, maxRetries);\n    };\n    return async () => {\n        const endpoint = await getInstanceMetadataEndpoint();\n        if (disableFetchToken) {\n            return getCredentials(maxRetries, { ...endpoint, timeout });\n        }\n        else {\n            let token;\n            try {\n                token = (await getMetadataToken({ ...endpoint, timeout })).toString();\n            }\n            catch (error) {\n                if (error?.statusCode === 400) {\n                    throw Object.assign(error, {\n                        message: \"EC2 Metadata token request returned error\",\n                    });\n                }\n                else if (error.message === \"TimeoutError\" || [403, 404, 405].includes(error.statusCode)) {\n                    disableFetchToken = true;\n                }\n                return getCredentials(maxRetries, { ...endpoint, timeout });\n            }\n            return getCredentials(maxRetries, {\n                ...endpoint,\n                headers: {\n                    \"x-aws-ec2-metadata-token\": token,\n                },\n                timeout,\n            });\n        }\n    };\n};\nconst getMetadataToken = async (options) => httpRequest({\n    ...options,\n    path: IMDS_TOKEN_PATH,\n    method: \"PUT\",\n    headers: {\n        \"x-aws-ec2-metadata-token-ttl-seconds\": \"21600\",\n    },\n});\nconst getProfile = async (options) => (await httpRequest({ ...options, path: IMDS_PATH })).toString();\nconst getCredentialsFromProfile = async (profile, options) => {\n    const credsResponse = JSON.parse((await httpRequest({\n        ...options,\n        path: IMDS_PATH + profile,\n    })).toString());\n    if (!isImdsCredentials(credsResponse)) {\n        throw new CredentialsProviderError(\"Invalid response received from instance metadata service.\");\n    }\n    return fromImdsCredentials(credsResponse);\n};\n","import { getExtendedInstanceMetadataCredentials } from \"./getExtendedInstanceMetadataCredentials\";\nexport const staticStabilityProvider = (provider, options = {}) => {\n    const logger = options?.logger || console;\n    let pastCredentials;\n    return async () => {\n        let credentials;\n        try {\n            credentials = await provider();\n            if (credentials.expiration && credentials.expiration.getTime() < Date.now()) {\n                credentials = getExtendedInstanceMetadataCredentials(credentials, logger);\n            }\n        }\n        catch (e) {\n            if (pastCredentials) {\n                logger.warn(\"Credential renew failed: \", e);\n                credentials = getExtendedInstanceMetadataCredentials(pastCredentials, logger);\n            }\n            else {\n                throw e;\n            }\n        }\n        pastCredentials = credentials;\n        return credentials;\n    };\n};\n","import { CredentialsProviderError } from \"@aws-sdk/property-provider\";\nimport { getProfileName } from \"@aws-sdk/shared-ini-file-loader\";\nimport { resolveCredentialSource } from \"./resolveCredentialSource\";\nimport { resolveProfileData } from \"./resolveProfileData\";\nexport const isAssumeRoleProfile = (arg) => Boolean(arg) &&\n    typeof arg === \"object\" &&\n    typeof arg.role_arn === \"string\" &&\n    [\"undefined\", \"string\"].indexOf(typeof arg.role_session_name) > -1 &&\n    [\"undefined\", \"string\"].indexOf(typeof arg.external_id) > -1 &&\n    [\"undefined\", \"string\"].indexOf(typeof arg.mfa_serial) > -1 &&\n    (isAssumeRoleWithSourceProfile(arg) || isAssumeRoleWithProviderProfile(arg));\nconst isAssumeRoleWithSourceProfile = (arg) => typeof arg.source_profile === \"string\" && typeof arg.credential_source === \"undefined\";\nconst isAssumeRoleWithProviderProfile = (arg) => typeof arg.credential_source === \"string\" && typeof arg.source_profile === \"undefined\";\nexport const resolveAssumeRoleCredentials = async (profileName, profiles, options, visitedProfiles = {}) => {\n    const data = profiles[profileName];\n    if (!options.roleAssumer) {\n        throw new CredentialsProviderError(`Profile ${profileName} requires a role to be assumed, but no role assumption callback was provided.`, false);\n    }\n    const { source_profile } = data;\n    if (source_profile && source_profile in visitedProfiles) {\n        throw new CredentialsProviderError(`Detected a cycle attempting to resolve credentials for profile` +\n            ` ${getProfileName(options)}. Profiles visited: ` +\n            Object.keys(visitedProfiles).join(\", \"), false);\n    }\n    const sourceCredsProvider = source_profile\n        ? resolveProfileData(source_profile, profiles, options, {\n            ...visitedProfiles,\n            [source_profile]: true,\n        })\n        : resolveCredentialSource(data.credential_source, profileName)();\n    const params = {\n        RoleArn: data.role_arn,\n        RoleSessionName: data.role_session_name || `aws-sdk-js-${Date.now()}`,\n        ExternalId: data.external_id,\n    };\n    const { mfa_serial } = data;\n    if (mfa_serial) {\n        if (!options.mfaCodeProvider) {\n            throw new CredentialsProviderError(`Profile ${profileName} requires multi-factor authentication, but no MFA code callback was provided.`, false);\n        }\n        params.SerialNumber = mfa_serial;\n        params.TokenCode = await options.mfaCodeProvider(mfa_serial);\n    }\n    const sourceCreds = await sourceCredsProvider;\n    return options.roleAssumer(sourceCreds, params);\n};\n","import { fromEnv } from \"@aws-sdk/credential-provider-env\";\nimport { fromContainerMetadata, fromInstanceMetadata } from \"@aws-sdk/credential-provider-imds\";\nimport { CredentialsProviderError } from \"@aws-sdk/property-provider\";\nexport const resolveCredentialSource = (credentialSource, profileName) => {\n    const sourceProvidersMap = {\n        EcsContainer: fromContainerMetadata,\n        Ec2InstanceMetadata: fromInstanceMetadata,\n        Environment: fromEnv,\n    };\n    if (credentialSource in sourceProvidersMap) {\n        return sourceProvidersMap[credentialSource]();\n    }\n    else {\n        throw new CredentialsProviderError(`Unsupported credential source in profile ${profileName}. Got ${credentialSource}, ` +\n            `expected EcsContainer or Ec2InstanceMetadata or Environment.`);\n    }\n};\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"child_process\");","export const getValidatedProcessCredentials = (profileName, data) => {\n    if (data.Version !== 1) {\n        throw Error(`Profile ${profileName} credential_process did not return Version 1.`);\n    }\n    if (data.AccessKeyId === undefined || data.SecretAccessKey === undefined) {\n        throw Error(`Profile ${profileName} credential_process returned invalid credentials.`);\n    }\n    if (data.Expiration) {\n        const currentTime = new Date();\n        const expireTime = new Date(data.Expiration);\n        if (expireTime < currentTime) {\n            throw Error(`Profile ${profileName} credential_process returned expired credentials.`);\n        }\n    }\n    return {\n        accessKeyId: data.AccessKeyId,\n        secretAccessKey: data.SecretAccessKey,\n        ...(data.SessionToken && { sessionToken: data.SessionToken }),\n        ...(data.Expiration && { expiration: new Date(data.Expiration) }),\n    };\n};\n","import { CredentialsProviderError } from \"@aws-sdk/property-provider\";\nimport { exec } from \"child_process\";\nimport { promisify } from \"util\";\nimport { getValidatedProcessCredentials } from \"./getValidatedProcessCredentials\";\nexport const resolveProcessCredentials = async (profileName, profiles) => {\n    const profile = profiles[profileName];\n    if (profiles[profileName]) {\n        const credentialProcess = profile[\"credential_process\"];\n        if (credentialProcess !== undefined) {\n            const execPromise = promisify(exec);\n            try {\n                const { stdout } = await execPromise(credentialProcess);\n                let data;\n                try {\n                    data = JSON.parse(stdout.trim());\n                }\n                catch {\n                    throw Error(`Profile ${profileName} credential_process returned invalid JSON.`);\n                }\n                return getValidatedProcessCredentials(profileName, data);\n            }\n            catch (error) {\n                throw new CredentialsProviderError(error.message);\n            }\n        }\n        else {\n            throw new CredentialsProviderError(`Profile ${profileName} did not contain credential_process.`);\n        }\n    }\n    else {\n        throw new CredentialsProviderError(`Profile ${profileName} could not be found in shared credentials file.`);\n    }\n};\n","import { getProfileName, parseKnownFiles } from \"@aws-sdk/shared-ini-file-loader\";\nimport { resolveProcessCredentials } from \"./resolveProcessCredentials\";\nexport const fromProcess = (init = {}) => async () => {\n    const profiles = await parseKnownFiles(init);\n    return resolveProcessCredentials(getProfileName(init), profiles);\n};\n","export const isSsoProfile = (arg) => arg &&\n    (typeof arg.sso_start_url === \"string\" ||\n        typeof arg.sso_account_id === \"string\" ||\n        typeof arg.sso_session === \"string\" ||\n        typeof arg.sso_region === \"string\" ||\n        typeof arg.sso_role_name === \"string\");\n","import { fromArrayBuffer, fromString } from \"@aws-sdk/util-buffer-from\";\nimport { toUint8Array } from \"@aws-sdk/util-utf8\";\nimport { Buffer } from \"buffer\";\nimport { createHash, createHmac } from \"crypto\";\nexport class Hash {\n    constructor(algorithmIdentifier, secret) {\n        this.algorithmIdentifier = algorithmIdentifier;\n        this.secret = secret;\n        this.reset();\n    }\n    update(toHash, encoding) {\n        this.hash.update(toUint8Array(castSourceData(toHash, encoding)));\n    }\n    digest() {\n        return Promise.resolve(this.hash.digest());\n    }\n    reset() {\n        this.hash = this.secret\n            ? createHmac(this.algorithmIdentifier, castSourceData(this.secret))\n            : createHash(this.algorithmIdentifier);\n    }\n}\nfunction castSourceData(toCast, encoding) {\n    if (Buffer.isBuffer(toCast)) {\n        return toCast;\n    }\n    if (typeof toCast === \"string\") {\n        return fromString(toCast, encoding);\n    }\n    if (ArrayBuffer.isView(toCast)) {\n        return fromArrayBuffer(toCast.buffer, toCast.byteOffset, toCast.byteLength);\n    }\n    return fromArrayBuffer(toCast);\n}\n","export const NODEJS_TIMEOUT_ERROR_CODES = [\"ECONNRESET\", \"EPIPE\", \"ETIMEDOUT\"];\n","const getTransformedHeaders = (headers) => {\n    const transformedHeaders = {};\n    for (const name of Object.keys(headers)) {\n        const headerValues = headers[name];\n        transformedHeaders[name] = Array.isArray(headerValues) ? headerValues.join(\",\") : headerValues;\n    }\n    return transformedHeaders;\n};\nexport { getTransformedHeaders };\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"stream\");","import { Readable } from \"stream\";\nexport function writeRequestBody(httpRequest, request) {\n    const expect = request.headers[\"Expect\"] || request.headers[\"expect\"];\n    if (expect === \"100-continue\") {\n        httpRequest.on(\"continue\", () => {\n            writeBody(httpRequest, request.body);\n        });\n    }\n    else {\n        writeBody(httpRequest, request.body);\n    }\n}\nfunction writeBody(httpRequest, body) {\n    if (body instanceof Readable) {\n        body.pipe(httpRequest);\n    }\n    else if (body) {\n        httpRequest.end(Buffer.from(body));\n    }\n    else {\n        httpRequest.end();\n    }\n}\n","import { HttpResponse } from \"@aws-sdk/protocol-http\";\nimport { buildQueryString } from \"@aws-sdk/querystring-builder\";\nimport { Agent as hAgent, request as hRequest } from \"http\";\nimport { Agent as hsAgent, request as hsRequest } from \"https\";\nimport { NODEJS_TIMEOUT_ERROR_CODES } from \"./constants\";\nimport { getTransformedHeaders } from \"./get-transformed-headers\";\nimport { setConnectionTimeout } from \"./set-connection-timeout\";\nimport { setSocketTimeout } from \"./set-socket-timeout\";\nimport { writeRequestBody } from \"./write-request-body\";\nimport { setSocketKeepAlive } from \"./set-socket-keep-alive\";\nexport const DEFAULT_REQUEST_TIMEOUT = 0;\nexport class NodeHttpHandler {\n    constructor(options) {\n        this.metadata = { handlerProtocol: \"http/1.1\" };\n        this.configProvider = new Promise((resolve, reject) => {\n            if (typeof options === \"function\") {\n                options()\n                    .then((_options) => {\n                    resolve(this.resolveDefaultConfig(_options));\n                })\n                    .catch(reject);\n            }\n            else {\n                resolve(this.resolveDefaultConfig(options));\n            }\n        });\n    }\n    resolveDefaultConfig(options) {\n        const { requestTimeout, connectionTimeout, socketTimeout, httpAgent, httpsAgent } = options || {};\n        const keepAlive = true;\n        const maxSockets = 50;\n        return {\n            connectionTimeout,\n            requestTimeout: requestTimeout ?? socketTimeout,\n            httpAgent: httpAgent || new hAgent({ keepAlive, maxSockets }),\n            httpsAgent: httpsAgent || new hsAgent({ keepAlive, maxSockets }),\n        };\n    }\n    destroy() {\n        this.config?.httpAgent?.destroy();\n        this.config?.httpsAgent?.destroy();\n    }\n    async handle(request, { abortSignal } = {}) {\n        if (!this.config) {\n            this.config = await this.configProvider;\n        }\n        return new Promise((resolve, reject) => {\n            if (!this.config) {\n                throw new Error(\"Node HTTP request handler config is not resolved\");\n            }\n            if (abortSignal?.aborted) {\n                const abortError = new Error(\"Request aborted\");\n                abortError.name = \"AbortError\";\n                reject(abortError);\n                return;\n            }\n            const isSSL = request.protocol === \"https:\";\n            const queryString = buildQueryString(request.query || {});\n            const nodeHttpsOptions = {\n                headers: request.headers,\n                host: request.hostname,\n                method: request.method,\n                path: queryString ? `${request.path}?${queryString}` : request.path,\n                port: request.port,\n                agent: isSSL ? this.config.httpsAgent : this.config.httpAgent,\n            };\n            const requestFunc = isSSL ? hsRequest : hRequest;\n            const req = requestFunc(nodeHttpsOptions, (res) => {\n                const httpResponse = new HttpResponse({\n                    statusCode: res.statusCode || -1,\n                    headers: getTransformedHeaders(res.headers),\n                    body: res,\n                });\n                resolve({ response: httpResponse });\n            });\n            req.on(\"error\", (err) => {\n                if (NODEJS_TIMEOUT_ERROR_CODES.includes(err.code)) {\n                    reject(Object.assign(err, { name: \"TimeoutError\" }));\n                }\n                else {\n                    reject(err);\n                }\n            });\n            setConnectionTimeout(req, reject, this.config.connectionTimeout);\n            setSocketTimeout(req, reject, this.config.requestTimeout);\n            if (abortSignal) {\n                abortSignal.onabort = () => {\n                    req.abort();\n                    const abortError = new Error(\"Request aborted\");\n                    abortError.name = \"AbortError\";\n                    reject(abortError);\n                };\n            }\n            const httpAgent = nodeHttpsOptions.agent;\n            if (typeof httpAgent === \"object\" && \"keepAlive\" in httpAgent) {\n                setSocketKeepAlive(req, {\n                    keepAlive: httpAgent.keepAlive,\n                    keepAliveMsecs: httpAgent.keepAliveMsecs,\n                });\n            }\n            writeRequestBody(req, request);\n        });\n    }\n}\n","import { escapeUri } from \"@aws-sdk/util-uri-escape\";\nexport function buildQueryString(query) {\n    const parts = [];\n    for (let key of Object.keys(query).sort()) {\n        const value = query[key];\n        key = escapeUri(key);\n        if (Array.isArray(value)) {\n            for (let i = 0, iLen = value.length; i < iLen; i++) {\n                parts.push(`${key}=${escapeUri(value[i])}`);\n            }\n        }\n        else {\n            let qsEntry = key;\n            if (value || typeof value === \"string\") {\n                qsEntry += `=${escapeUri(value)}`;\n            }\n            parts.push(qsEntry);\n        }\n    }\n    return parts.join(\"&\");\n}\n","export const setConnectionTimeout = (request, reject, timeoutInMs = 0) => {\n    if (!timeoutInMs) {\n        return;\n    }\n    request.on(\"socket\", (socket) => {\n        if (socket.connecting) {\n            const timeoutId = setTimeout(() => {\n                request.destroy();\n                reject(Object.assign(new Error(`Socket timed out without establishing a connection within ${timeoutInMs} ms`), {\n                    name: \"TimeoutError\",\n                }));\n            }, timeoutInMs);\n            socket.on(\"connect\", () => {\n                clearTimeout(timeoutId);\n            });\n        }\n    });\n};\n","export const setSocketTimeout = (request, reject, timeoutInMs = 0) => {\n    request.setTimeout(timeoutInMs, () => {\n        request.destroy();\n        reject(Object.assign(new Error(`Connection timed out after ${timeoutInMs} ms`), { name: \"TimeoutError\" }));\n    });\n};\n","export const setSocketKeepAlive = (request, { keepAlive, keepAliveMsecs }) => {\n    if (keepAlive !== true) {\n        return;\n    }\n    request.on(\"socket\", (socket) => {\n        socket.setKeepAlive(keepAlive, keepAliveMsecs || 0);\n    });\n};\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"http2\");","export class NodeHttp2ConnectionPool {\n    constructor(sessions) {\n        this.sessions = [];\n        this.sessions = sessions ?? [];\n    }\n    poll() {\n        if (this.sessions.length > 0) {\n            return this.sessions.shift();\n        }\n    }\n    offerLast(session) {\n        this.sessions.push(session);\n    }\n    contains(session) {\n        return this.sessions.includes(session);\n    }\n    remove(session) {\n        this.sessions = this.sessions.filter((s) => s !== session);\n    }\n    [Symbol.iterator]() {\n        return this.sessions[Symbol.iterator]();\n    }\n    destroy(connection) {\n        for (const session of this.sessions) {\n            if (session === connection) {\n                if (!session.destroyed) {\n                    session.destroy();\n                }\n            }\n        }\n    }\n}\n","import { Writable } from \"stream\";\nexport class Collector extends Writable {\n    constructor() {\n        super(...arguments);\n        this.bufferedBytes = [];\n    }\n    _write(chunk, encoding, callback) {\n        this.bufferedBytes.push(chunk);\n        callback();\n    }\n}\n","import { Collector } from \"./collector\";\nexport const streamCollector = (stream) => new Promise((resolve, reject) => {\n    const collector = new Collector();\n    stream.pipe(collector);\n    stream.on(\"error\", (err) => {\n        collector.end();\n        reject(err);\n    });\n    collector.on(\"error\", reject);\n    collector.on(\"finish\", function () {\n        const bytes = new Uint8Array(Buffer.concat(this.bufferedBytes));\n        resolve(bytes);\n    });\n});\n","import { fstatSync, lstatSync } from \"fs\";\nexport const calculateBodyLength = (body) => {\n    if (!body) {\n        return 0;\n    }\n    if (typeof body === \"string\") {\n        return Buffer.from(body).length;\n    }\n    else if (typeof body.byteLength === \"number\") {\n        return body.byteLength;\n    }\n    else if (typeof body.size === \"number\") {\n        return body.size;\n    }\n    else if (typeof body.path === \"string\" || Buffer.isBuffer(body.path)) {\n        return lstatSync(body.path).size;\n    }\n    else if (typeof body.fd === \"number\") {\n        return fstatSync(body.fd).size;\n    }\n    throw new Error(`Body Length computation failed for ${body}`);\n};\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"process\");","import { loadConfig } from \"@aws-sdk/node-config-provider\";\nimport { platform, release } from \"os\";\nimport { env, versions } from \"process\";\nimport { isCrtAvailable } from \"./is-crt-available\";\nexport const UA_APP_ID_ENV_NAME = \"AWS_SDK_UA_APP_ID\";\nexport const UA_APP_ID_INI_NAME = \"sdk-ua-app-id\";\nexport const defaultUserAgent = ({ serviceId, clientVersion }) => {\n    const sections = [\n        [\"aws-sdk-js\", clientVersion],\n        [`os/${platform()}`, release()],\n        [\"lang/js\"],\n        [\"md/nodejs\", `${versions.node}`],\n    ];\n    const crtAvailable = isCrtAvailable();\n    if (crtAvailable) {\n        sections.push(crtAvailable);\n    }\n    if (serviceId) {\n        sections.push([`api/${serviceId}`, clientVersion]);\n    }\n    if (env.AWS_EXECUTION_ENV) {\n        sections.push([`exec-env/${env.AWS_EXECUTION_ENV}`]);\n    }\n    const appIdPromise = loadConfig({\n        environmentVariableSelector: (env) => env[UA_APP_ID_ENV_NAME],\n        configFileSelector: (profile) => profile[UA_APP_ID_INI_NAME],\n        default: undefined,\n    })();\n    let resolvedUserAgent = undefined;\n    return async () => {\n        if (!resolvedUserAgent) {\n            const appId = await appIdPromise;\n            resolvedUserAgent = appId ? [...sections, [`app/${appId}`]] : [...sections];\n        }\n        return resolvedUserAgent;\n    };\n};\n","export const isCrtAvailable = () => {\n    try {\n        if (typeof require === \"function\" && typeof module !== \"undefined\" && require(\"aws-crt\")) {\n            return [\"md/crt-avail\"];\n        }\n        return null;\n    }\n    catch (e) {\n        return null;\n    }\n};\n","import { fromString } from \"@aws-sdk/util-buffer-from\";\nconst BASE64_REGEX = /^[A-Za-z0-9+/]*={0,2}$/;\nexport const fromBase64 = (input) => {\n    if ((input.length * 3) % 4 !== 0) {\n        throw new TypeError(`Incorrect padding on base64 string.`);\n    }\n    if (!BASE64_REGEX.exec(input)) {\n        throw new TypeError(`Invalid base64 string.`);\n    }\n    const buffer = fromString(input, \"base64\");\n    return new Uint8Array(buffer.buffer, buffer.byteOffset, buffer.byteLength);\n};\n","import { fromArrayBuffer } from \"@aws-sdk/util-buffer-from\";\nexport const toBase64 = (input) => fromArrayBuffer(input.buffer, input.byteOffset, input.byteLength).toString(\"base64\");\n","const p = \"required\", q = \"fn\", r = \"argv\", s = \"ref\";\nconst a = \"PartitionResult\", b = \"tree\", c = \"error\", d = \"endpoint\", e = { [p]: false, \"type\": \"String\" }, f = { [p]: true, \"default\": false, \"type\": \"Boolean\" }, g = { [s]: \"Endpoint\" }, h = { [q]: \"booleanEquals\", [r]: [{ [s]: \"UseFIPS\" }, true] }, i = { [q]: \"booleanEquals\", [r]: [{ [s]: \"UseDualStack\" }, true] }, j = {}, k = { [q]: \"booleanEquals\", [r]: [true, { [q]: \"getAttr\", [r]: [{ [s]: a }, \"supportsFIPS\"] }] }, l = { [q]: \"booleanEquals\", [r]: [true, { [q]: \"getAttr\", [r]: [{ [s]: a }, \"supportsDualStack\"] }] }, m = [g], n = [h], o = [i];\nconst _data = { version: \"1.0\", parameters: { Region: e, UseDualStack: f, UseFIPS: f, Endpoint: e }, rules: [{ conditions: [{ [q]: \"aws.partition\", [r]: [{ [s]: \"Region\" }], assign: a }], type: b, rules: [{ conditions: [{ [q]: \"isSet\", [r]: m }, { [q]: \"parseURL\", [r]: m, assign: \"url\" }], type: b, rules: [{ conditions: n, error: \"Invalid Configuration: FIPS and custom endpoint are not supported\", type: c }, { type: b, rules: [{ conditions: o, error: \"Invalid Configuration: Dualstack and custom endpoint are not supported\", type: c }, { endpoint: { url: g, properties: j, headers: j }, type: d }] }] }, { conditions: [h, i], type: b, rules: [{ conditions: [k, l], type: b, rules: [{ endpoint: { url: \"https://portal.sso-fips.{Region}.{PartitionResult#dualStackDnsSuffix}\", properties: j, headers: j }, type: d }] }, { error: \"FIPS and DualStack are enabled, but this partition does not support one or both\", type: c }] }, { conditions: n, type: b, rules: [{ conditions: [k], type: b, rules: [{ type: b, rules: [{ endpoint: { url: \"https://portal.sso-fips.{Region}.{PartitionResult#dnsSuffix}\", properties: j, headers: j }, type: d }] }] }, { error: \"FIPS is enabled but this partition does not support FIPS\", type: c }] }, { conditions: o, type: b, rules: [{ conditions: [l], type: b, rules: [{ endpoint: { url: \"https://portal.sso.{Region}.{PartitionResult#dualStackDnsSuffix}\", properties: j, headers: j }, type: d }] }, { error: \"DualStack is enabled but this partition does not support DualStack\", type: c }] }, { endpoint: { url: \"https://portal.sso.{Region}.{PartitionResult#dnsSuffix}\", properties: j, headers: j }, type: d }] }] };\nexport const ruleSet = _data;\n","import { resolveEndpoint } from \"@aws-sdk/util-endpoints\";\nimport { ruleSet } from \"./ruleset\";\nexport const defaultEndpointResolver = (endpointParams, context = {}) => {\n    return resolveEndpoint(ruleSet, {\n        endpointParams: endpointParams,\n        logger: context.logger,\n    });\n};\n","export const AWS_EXECUTION_ENV = \"AWS_EXECUTION_ENV\";\nexport const AWS_REGION_ENV = \"AWS_REGION\";\nexport const AWS_DEFAULT_REGION_ENV = \"AWS_DEFAULT_REGION\";\nexport const ENV_IMDS_DISABLED = \"AWS_EC2_METADATA_DISABLED\";\nexport const DEFAULTS_MODE_OPTIONS = [\"in-region\", \"cross-region\", \"mobile\", \"standard\", \"legacy\"];\nexport const IMDS_REGION_PATH = \"/latest/meta-data/placement/region\";\n","const AWS_DEFAULTS_MODE_ENV = \"AWS_DEFAULTS_MODE\";\nconst AWS_DEFAULTS_MODE_CONFIG = \"defaults_mode\";\nexport const NODE_DEFAULTS_MODE_CONFIG_OPTIONS = {\n    environmentVariableSelector: (env) => {\n        return env[AWS_DEFAULTS_MODE_ENV];\n    },\n    configFileSelector: (profile) => {\n        return profile[AWS_DEFAULTS_MODE_CONFIG];\n    },\n    default: \"legacy\",\n};\n","import { NODE_REGION_CONFIG_OPTIONS } from \"@aws-sdk/config-resolver\";\nimport { getInstanceMetadataEndpoint, httpRequest } from \"@aws-sdk/credential-provider-imds\";\nimport { loadConfig } from \"@aws-sdk/node-config-provider\";\nimport { memoize } from \"@aws-sdk/property-provider\";\nimport { AWS_DEFAULT_REGION_ENV, AWS_EXECUTION_ENV, AWS_REGION_ENV, DEFAULTS_MODE_OPTIONS, ENV_IMDS_DISABLED, IMDS_REGION_PATH, } from \"./constants\";\nimport { NODE_DEFAULTS_MODE_CONFIG_OPTIONS } from \"./defaultsModeConfig\";\nexport const resolveDefaultsModeConfig = ({ region = loadConfig(NODE_REGION_CONFIG_OPTIONS), defaultsMode = loadConfig(NODE_DEFAULTS_MODE_CONFIG_OPTIONS), } = {}) => memoize(async () => {\n    const mode = typeof defaultsMode === \"function\" ? await defaultsMode() : defaultsMode;\n    switch (mode?.toLowerCase()) {\n        case \"auto\":\n            return resolveNodeDefaultsModeAuto(region);\n        case \"in-region\":\n        case \"cross-region\":\n        case \"mobile\":\n        case \"standard\":\n        case \"legacy\":\n            return Promise.resolve(mode?.toLocaleLowerCase());\n        case undefined:\n            return Promise.resolve(\"legacy\");\n        default:\n            throw new Error(`Invalid parameter for \"defaultsMode\", expect ${DEFAULTS_MODE_OPTIONS.join(\", \")}, got ${mode}`);\n    }\n});\nconst resolveNodeDefaultsModeAuto = async (clientRegion) => {\n    if (clientRegion) {\n        const resolvedRegion = typeof clientRegion === \"function\" ? await clientRegion() : clientRegion;\n        const inferredRegion = await inferPhysicalRegion();\n        if (!inferredRegion) {\n            return \"standard\";\n        }\n        if (resolvedRegion === inferredRegion) {\n            return \"in-region\";\n        }\n        else {\n            return \"cross-region\";\n        }\n    }\n    return \"standard\";\n};\nconst inferPhysicalRegion = async () => {\n    if (process.env[AWS_EXECUTION_ENV] && (process.env[AWS_REGION_ENV] || process.env[AWS_DEFAULT_REGION_ENV])) {\n        return process.env[AWS_REGION_ENV] ?? process.env[AWS_DEFAULT_REGION_ENV];\n    }\n    if (!process.env[ENV_IMDS_DISABLED]) {\n        try {\n            const endpoint = await getInstanceMetadataEndpoint();\n            return (await httpRequest({ ...endpoint, path: IMDS_REGION_PATH })).toString();\n        }\n        catch (e) {\n        }\n    }\n};\n","import packageInfo from \"../package.json\";\nimport { NODE_REGION_CONFIG_FILE_OPTIONS, NODE_REGION_CONFIG_OPTIONS, NODE_USE_DUALSTACK_ENDPOINT_CONFIG_OPTIONS, NODE_USE_FIPS_ENDPOINT_CONFIG_OPTIONS, } from \"@aws-sdk/config-resolver\";\nimport { Hash } from \"@aws-sdk/hash-node\";\nimport { NODE_MAX_ATTEMPT_CONFIG_OPTIONS, NODE_RETRY_MODE_CONFIG_OPTIONS } from \"@aws-sdk/middleware-retry\";\nimport { loadConfig as loadNodeConfig } from \"@aws-sdk/node-config-provider\";\nimport { NodeHttpHandler as RequestHandler, streamCollector } from \"@aws-sdk/node-http-handler\";\nimport { calculateBodyLength } from \"@aws-sdk/util-body-length-node\";\nimport { DEFAULT_RETRY_MODE } from \"@aws-sdk/util-retry\";\nimport { defaultUserAgent } from \"@aws-sdk/util-user-agent-node\";\nimport { getRuntimeConfig as getSharedRuntimeConfig } from \"./runtimeConfig.shared\";\nimport { loadConfigsForDefaultMode } from \"@aws-sdk/smithy-client\";\nimport { resolveDefaultsModeConfig } from \"@aws-sdk/util-defaults-mode-node\";\nimport { emitWarningIfUnsupportedVersion } from \"@aws-sdk/smithy-client\";\nexport const getRuntimeConfig = (config) => {\n    emitWarningIfUnsupportedVersion(process.version);\n    const defaultsMode = resolveDefaultsModeConfig(config);\n    const defaultConfigProvider = () => defaultsMode().then(loadConfigsForDefaultMode);\n    const clientSharedValues = getSharedRuntimeConfig(config);\n    return {\n        ...clientSharedValues,\n        ...config,\n        runtime: \"node\",\n        defaultsMode,\n        bodyLengthChecker: config?.bodyLengthChecker ?? calculateBodyLength,\n        defaultUserAgentProvider: config?.defaultUserAgentProvider ??\n            defaultUserAgent({ serviceId: clientSharedValues.serviceId, clientVersion: packageInfo.version }),\n        maxAttempts: config?.maxAttempts ?? loadNodeConfig(NODE_MAX_ATTEMPT_CONFIG_OPTIONS),\n        region: config?.region ?? loadNodeConfig(NODE_REGION_CONFIG_OPTIONS, NODE_REGION_CONFIG_FILE_OPTIONS),\n        requestHandler: config?.requestHandler ?? new RequestHandler(defaultConfigProvider),\n        retryMode: config?.retryMode ??\n            loadNodeConfig({\n                ...NODE_RETRY_MODE_CONFIG_OPTIONS,\n                default: async () => (await defaultConfigProvider()).retryMode || DEFAULT_RETRY_MODE,\n            }),\n        sha256: config?.sha256 ?? Hash.bind(null, \"sha256\"),\n        streamCollector: config?.streamCollector ?? streamCollector,\n        useDualstackEndpoint: config?.useDualstackEndpoint ?? loadNodeConfig(NODE_USE_DUALSTACK_ENDPOINT_CONFIG_OPTIONS),\n        useFipsEndpoint: config?.useFipsEndpoint ?? loadNodeConfig(NODE_USE_FIPS_ENDPOINT_CONFIG_OPTIONS),\n    };\n};\n","import { NoOpLogger } from \"@aws-sdk/smithy-client\";\nimport { parseUrl } from \"@aws-sdk/url-parser\";\nimport { fromBase64, toBase64 } from \"@aws-sdk/util-base64\";\nimport { fromUtf8, toUtf8 } from \"@aws-sdk/util-utf8\";\nimport { defaultEndpointResolver } from \"./endpoint/endpointResolver\";\nexport const getRuntimeConfig = (config) => ({\n    apiVersion: \"2019-06-10\",\n    base64Decoder: config?.base64Decoder ?? fromBase64,\n    base64Encoder: config?.base64Encoder ?? toBase64,\n    disableHostPrefix: config?.disableHostPrefix ?? false,\n    endpointProvider: config?.endpointProvider ?? defaultEndpointResolver,\n    logger: config?.logger ?? new NoOpLogger(),\n    serviceId: config?.serviceId ?? \"SSO\",\n    urlParser: config?.urlParser ?? parseUrl,\n    utf8Decoder: config?.utf8Decoder ?? fromUtf8,\n    utf8Encoder: config?.utf8Encoder ?? toUtf8,\n});\n","import { resolveRegionConfig } from \"@aws-sdk/config-resolver\";\nimport { getContentLengthPlugin } from \"@aws-sdk/middleware-content-length\";\nimport { resolveEndpointConfig } from \"@aws-sdk/middleware-endpoint\";\nimport { getHostHeaderPlugin, resolveHostHeaderConfig, } from \"@aws-sdk/middleware-host-header\";\nimport { getLoggerPlugin } from \"@aws-sdk/middleware-logger\";\nimport { getRecursionDetectionPlugin } from \"@aws-sdk/middleware-recursion-detection\";\nimport { getRetryPlugin, resolveRetryConfig } from \"@aws-sdk/middleware-retry\";\nimport { getUserAgentPlugin, resolveUserAgentConfig, } from \"@aws-sdk/middleware-user-agent\";\nimport { Client as __Client, } from \"@aws-sdk/smithy-client\";\nimport { resolveClientEndpointParameters, } from \"./endpoint/EndpointParameters\";\nimport { getRuntimeConfig as __getRuntimeConfig } from \"./runtimeConfig\";\nexport class SSOClient extends __Client {\n    constructor(configuration) {\n        const _config_0 = __getRuntimeConfig(configuration);\n        const _config_1 = resolveClientEndpointParameters(_config_0);\n        const _config_2 = resolveRegionConfig(_config_1);\n        const _config_3 = resolveEndpointConfig(_config_2);\n        const _config_4 = resolveRetryConfig(_config_3);\n        const _config_5 = resolveHostHeaderConfig(_config_4);\n        const _config_6 = resolveUserAgentConfig(_config_5);\n        super(_config_6);\n        this.config = _config_6;\n        this.middlewareStack.use(getRetryPlugin(this.config));\n        this.middlewareStack.use(getContentLengthPlugin(this.config));\n        this.middlewareStack.use(getHostHeaderPlugin(this.config));\n        this.middlewareStack.use(getLoggerPlugin(this.config));\n        this.middlewareStack.use(getRecursionDetectionPlugin(this.config));\n        this.middlewareStack.use(getUserAgentPlugin(this.config));\n    }\n    destroy() {\n        super.destroy();\n    }\n}\n","export const resolveClientEndpointParameters = (options) => {\n    return {\n        ...options,\n        useDualstackEndpoint: options.useDualstackEndpoint ?? false,\n        useFipsEndpoint: options.useFipsEndpoint ?? false,\n        defaultSigningName: \"awsssoportal\",\n    };\n};\n","import { ServiceException as __ServiceException, } from \"@aws-sdk/smithy-client\";\nexport class SSOServiceException extends __ServiceException {\n    constructor(options) {\n        super(options);\n        Object.setPrototypeOf(this, SSOServiceException.prototype);\n    }\n}\n","import { SENSITIVE_STRING } from \"@aws-sdk/smithy-client\";\nimport { SSOServiceException as __BaseException } from \"./SSOServiceException\";\nexport class InvalidRequestException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"InvalidRequestException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"InvalidRequestException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidRequestException.prototype);\n    }\n}\nexport class ResourceNotFoundException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"ResourceNotFoundException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"ResourceNotFoundException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, ResourceNotFoundException.prototype);\n    }\n}\nexport class TooManyRequestsException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"TooManyRequestsException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"TooManyRequestsException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, TooManyRequestsException.prototype);\n    }\n}\nexport class UnauthorizedException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"UnauthorizedException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"UnauthorizedException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, UnauthorizedException.prototype);\n    }\n}\nexport const GetRoleCredentialsRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.accessToken && { accessToken: SENSITIVE_STRING }),\n});\nexport const RoleCredentialsFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.secretAccessKey && { secretAccessKey: SENSITIVE_STRING }),\n    ...(obj.sessionToken && { sessionToken: SENSITIVE_STRING }),\n});\nexport const GetRoleCredentialsResponseFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.roleCredentials && { roleCredentials: RoleCredentialsFilterSensitiveLog(obj.roleCredentials) }),\n});\nexport const ListAccountRolesRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.accessToken && { accessToken: SENSITIVE_STRING }),\n});\nexport const ListAccountsRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.accessToken && { accessToken: SENSITIVE_STRING }),\n});\nexport const LogoutRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.accessToken && { accessToken: SENSITIVE_STRING }),\n});\n","import { HttpRequest as __HttpRequest } from \"@aws-sdk/protocol-http\";\nimport { _json, decorateServiceException as __decorateServiceException, expectNonNull as __expectNonNull, expectObject as __expectObject, expectString as __expectString, map, take, withBaseException, } from \"@aws-sdk/smithy-client\";\nimport { InvalidRequestException, ResourceNotFoundException, TooManyRequestsException, UnauthorizedException, } from \"../models/models_0\";\nimport { SSOServiceException as __BaseException } from \"../models/SSOServiceException\";\nexport const se_GetRoleCredentialsCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = map({}, isSerializableHeaderValue, {\n        \"x-amz-sso_bearer_token\": input.accessToken,\n    });\n    const resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/federation/credentials\";\n    const query = map({\n        role_name: [, __expectNonNull(input.roleName, `roleName`)],\n        account_id: [, __expectNonNull(input.accountId, `accountId`)],\n    });\n    let body;\n    return new __HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexport const se_ListAccountRolesCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = map({}, isSerializableHeaderValue, {\n        \"x-amz-sso_bearer_token\": input.accessToken,\n    });\n    const resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/assignment/roles\";\n    const query = map({\n        next_token: [, input.nextToken],\n        max_result: [() => input.maxResults !== void 0, () => input.maxResults.toString()],\n        account_id: [, __expectNonNull(input.accountId, `accountId`)],\n    });\n    let body;\n    return new __HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexport const se_ListAccountsCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = map({}, isSerializableHeaderValue, {\n        \"x-amz-sso_bearer_token\": input.accessToken,\n    });\n    const resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/assignment/accounts\";\n    const query = map({\n        next_token: [, input.nextToken],\n        max_result: [() => input.maxResults !== void 0, () => input.maxResults.toString()],\n    });\n    let body;\n    return new __HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexport const se_LogoutCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = map({}, isSerializableHeaderValue, {\n        \"x-amz-sso_bearer_token\": input.accessToken,\n    });\n    const resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/logout\";\n    let body;\n    return new __HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"POST\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexport const de_GetRoleCredentialsCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_GetRoleCredentialsCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n    const doc = take(data, {\n        roleCredentials: _json,\n    });\n    Object.assign(contents, doc);\n    return contents;\n};\nconst de_GetRoleCredentialsCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InvalidRequestException\":\n        case \"com.amazonaws.sso#InvalidRequestException\":\n            throw await de_InvalidRequestExceptionRes(parsedOutput, context);\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.sso#ResourceNotFoundException\":\n            throw await de_ResourceNotFoundExceptionRes(parsedOutput, context);\n        case \"TooManyRequestsException\":\n        case \"com.amazonaws.sso#TooManyRequestsException\":\n            throw await de_TooManyRequestsExceptionRes(parsedOutput, context);\n        case \"UnauthorizedException\":\n        case \"com.amazonaws.sso#UnauthorizedException\":\n            throw await de_UnauthorizedExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_ListAccountRolesCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_ListAccountRolesCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n    const doc = take(data, {\n        nextToken: __expectString,\n        roleList: _json,\n    });\n    Object.assign(contents, doc);\n    return contents;\n};\nconst de_ListAccountRolesCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InvalidRequestException\":\n        case \"com.amazonaws.sso#InvalidRequestException\":\n            throw await de_InvalidRequestExceptionRes(parsedOutput, context);\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.sso#ResourceNotFoundException\":\n            throw await de_ResourceNotFoundExceptionRes(parsedOutput, context);\n        case \"TooManyRequestsException\":\n        case \"com.amazonaws.sso#TooManyRequestsException\":\n            throw await de_TooManyRequestsExceptionRes(parsedOutput, context);\n        case \"UnauthorizedException\":\n        case \"com.amazonaws.sso#UnauthorizedException\":\n            throw await de_UnauthorizedExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_ListAccountsCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_ListAccountsCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n    const doc = take(data, {\n        accountList: _json,\n        nextToken: __expectString,\n    });\n    Object.assign(contents, doc);\n    return contents;\n};\nconst de_ListAccountsCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InvalidRequestException\":\n        case \"com.amazonaws.sso#InvalidRequestException\":\n            throw await de_InvalidRequestExceptionRes(parsedOutput, context);\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.sso#ResourceNotFoundException\":\n            throw await de_ResourceNotFoundExceptionRes(parsedOutput, context);\n        case \"TooManyRequestsException\":\n        case \"com.amazonaws.sso#TooManyRequestsException\":\n            throw await de_TooManyRequestsExceptionRes(parsedOutput, context);\n        case \"UnauthorizedException\":\n        case \"com.amazonaws.sso#UnauthorizedException\":\n            throw await de_UnauthorizedExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_LogoutCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_LogoutCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    await collectBody(output.body, context);\n    return contents;\n};\nconst de_LogoutCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InvalidRequestException\":\n        case \"com.amazonaws.sso#InvalidRequestException\":\n            throw await de_InvalidRequestExceptionRes(parsedOutput, context);\n        case \"TooManyRequestsException\":\n        case \"com.amazonaws.sso#TooManyRequestsException\":\n            throw await de_TooManyRequestsExceptionRes(parsedOutput, context);\n        case \"UnauthorizedException\":\n        case \"com.amazonaws.sso#UnauthorizedException\":\n            throw await de_UnauthorizedExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nconst throwDefaultError = withBaseException(__BaseException);\nconst de_InvalidRequestExceptionRes = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body;\n    const doc = take(data, {\n        message: __expectString,\n    });\n    Object.assign(contents, doc);\n    const exception = new InvalidRequestException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return __decorateServiceException(exception, parsedOutput.body);\n};\nconst de_ResourceNotFoundExceptionRes = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body;\n    const doc = take(data, {\n        message: __expectString,\n    });\n    Object.assign(contents, doc);\n    const exception = new ResourceNotFoundException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return __decorateServiceException(exception, parsedOutput.body);\n};\nconst de_TooManyRequestsExceptionRes = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body;\n    const doc = take(data, {\n        message: __expectString,\n    });\n    Object.assign(contents, doc);\n    const exception = new TooManyRequestsException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return __decorateServiceException(exception, parsedOutput.body);\n};\nconst de_UnauthorizedExceptionRes = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body;\n    const doc = take(data, {\n        message: __expectString,\n    });\n    Object.assign(contents, doc);\n    const exception = new UnauthorizedException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return __decorateServiceException(exception, parsedOutput.body);\n};\nconst deserializeMetadata = (output) => ({\n    httpStatusCode: output.statusCode,\n    requestId: output.headers[\"x-amzn-requestid\"] ?? output.headers[\"x-amzn-request-id\"] ?? output.headers[\"x-amz-request-id\"],\n    extendedRequestId: output.headers[\"x-amz-id-2\"],\n    cfId: output.headers[\"x-amz-cf-id\"],\n});\nconst collectBody = (streamBody = new Uint8Array(), context) => {\n    if (streamBody instanceof Uint8Array) {\n        return Promise.resolve(streamBody);\n    }\n    return context.streamCollector(streamBody) || Promise.resolve(new Uint8Array());\n};\nconst collectBodyString = (streamBody, context) => collectBody(streamBody, context).then((body) => context.utf8Encoder(body));\nconst isSerializableHeaderValue = (value) => value !== undefined &&\n    value !== null &&\n    value !== \"\" &&\n    (!Object.getOwnPropertyNames(value).includes(\"length\") || value.length != 0) &&\n    (!Object.getOwnPropertyNames(value).includes(\"size\") || value.size != 0);\nconst parseBody = (streamBody, context) => collectBodyString(streamBody, context).then((encoded) => {\n    if (encoded.length) {\n        return JSON.parse(encoded);\n    }\n    return {};\n});\nconst parseErrorBody = async (errorBody, context) => {\n    const value = await parseBody(errorBody, context);\n    value.message = value.message ?? value.Message;\n    return value;\n};\nconst loadRestJsonErrorCode = (output, data) => {\n    const findKey = (object, key) => Object.keys(object).find((k) => k.toLowerCase() === key.toLowerCase());\n    const sanitizeErrorCode = (rawValue) => {\n        let cleanValue = rawValue;\n        if (typeof cleanValue === \"number\") {\n            cleanValue = cleanValue.toString();\n        }\n        if (cleanValue.indexOf(\",\") >= 0) {\n            cleanValue = cleanValue.split(\",\")[0];\n        }\n        if (cleanValue.indexOf(\":\") >= 0) {\n            cleanValue = cleanValue.split(\":\")[0];\n        }\n        if (cleanValue.indexOf(\"#\") >= 0) {\n            cleanValue = cleanValue.split(\"#\")[1];\n        }\n        return cleanValue;\n    };\n    const headerKey = findKey(output.headers, \"x-amzn-errortype\");\n    if (headerKey !== undefined) {\n        return sanitizeErrorCode(output.headers[headerKey]);\n    }\n    if (data.code !== undefined) {\n        return sanitizeErrorCode(data.code);\n    }\n    if (data[\"__type\"] !== undefined) {\n        return sanitizeErrorCode(data[\"__type\"]);\n    }\n};\n","import { getEndpointPlugin } from \"@aws-sdk/middleware-endpoint\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\nimport { GetRoleCredentialsRequestFilterSensitiveLog, GetRoleCredentialsResponseFilterSensitiveLog, } from \"../models/models_0\";\nimport { de_GetRoleCredentialsCommand, se_GetRoleCredentialsCommand } from \"../protocols/Aws_restJson1\";\nexport class GetRoleCredentialsCommand extends $Command {\n    static getEndpointParameterInstructions() {\n        return {\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use(getEndpointPlugin(configuration, GetRoleCredentialsCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"SSOClient\";\n        const commandName = \"GetRoleCredentialsCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: GetRoleCredentialsRequestFilterSensitiveLog,\n            outputFilterSensitiveLog: GetRoleCredentialsResponseFilterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return se_GetRoleCredentialsCommand(input, context);\n    }\n    deserialize(output, context) {\n        return de_GetRoleCredentialsCommand(output, context);\n    }\n}\n","export const EXPIRE_WINDOW_MS = 5 * 60 * 1000;\nexport const REFRESH_MESSAGE = `To refresh this SSO session run 'aws sso login' with the corresponding profile.`;\n","import { ServiceException as __ServiceException, } from \"@aws-sdk/smithy-client\";\nexport class SSOOIDCServiceException extends __ServiceException {\n    constructor(options) {\n        super(options);\n        Object.setPrototypeOf(this, SSOOIDCServiceException.prototype);\n    }\n}\n","import { SSOOIDCServiceException as __BaseException } from \"./SSOOIDCServiceException\";\nexport class AccessDeniedException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"AccessDeniedException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"AccessDeniedException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, AccessDeniedException.prototype);\n        this.error = opts.error;\n        this.error_description = opts.error_description;\n    }\n}\nexport class AuthorizationPendingException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"AuthorizationPendingException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"AuthorizationPendingException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, AuthorizationPendingException.prototype);\n        this.error = opts.error;\n        this.error_description = opts.error_description;\n    }\n}\nexport class ExpiredTokenException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"ExpiredTokenException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"ExpiredTokenException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, ExpiredTokenException.prototype);\n        this.error = opts.error;\n        this.error_description = opts.error_description;\n    }\n}\nexport class InternalServerException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"InternalServerException\",\n            $fault: \"server\",\n            ...opts,\n        });\n        this.name = \"InternalServerException\";\n        this.$fault = \"server\";\n        Object.setPrototypeOf(this, InternalServerException.prototype);\n        this.error = opts.error;\n        this.error_description = opts.error_description;\n    }\n}\nexport class InvalidClientException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"InvalidClientException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"InvalidClientException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidClientException.prototype);\n        this.error = opts.error;\n        this.error_description = opts.error_description;\n    }\n}\nexport class InvalidGrantException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"InvalidGrantException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"InvalidGrantException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidGrantException.prototype);\n        this.error = opts.error;\n        this.error_description = opts.error_description;\n    }\n}\nexport class InvalidRequestException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"InvalidRequestException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"InvalidRequestException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidRequestException.prototype);\n        this.error = opts.error;\n        this.error_description = opts.error_description;\n    }\n}\nexport class InvalidScopeException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"InvalidScopeException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"InvalidScopeException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidScopeException.prototype);\n        this.error = opts.error;\n        this.error_description = opts.error_description;\n    }\n}\nexport class SlowDownException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"SlowDownException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"SlowDownException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, SlowDownException.prototype);\n        this.error = opts.error;\n        this.error_description = opts.error_description;\n    }\n}\nexport class UnauthorizedClientException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"UnauthorizedClientException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"UnauthorizedClientException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, UnauthorizedClientException.prototype);\n        this.error = opts.error;\n        this.error_description = opts.error_description;\n    }\n}\nexport class UnsupportedGrantTypeException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"UnsupportedGrantTypeException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"UnsupportedGrantTypeException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, UnsupportedGrantTypeException.prototype);\n        this.error = opts.error;\n        this.error_description = opts.error_description;\n    }\n}\nexport class InvalidClientMetadataException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"InvalidClientMetadataException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"InvalidClientMetadataException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidClientMetadataException.prototype);\n        this.error = opts.error;\n        this.error_description = opts.error_description;\n    }\n}\n","import { HttpRequest as __HttpRequest } from \"@aws-sdk/protocol-http\";\nimport { _json, decorateServiceException as __decorateServiceException, expectInt32 as __expectInt32, expectLong as __expectLong, expectNonNull as __expectNonNull, expectObject as __expectObject, expectString as __expectString, map, take, withBaseException, } from \"@aws-sdk/smithy-client\";\nimport { AccessDeniedException, AuthorizationPendingException, ExpiredTokenException, InternalServerException, InvalidClientException, InvalidClientMetadataException, InvalidGrantException, InvalidRequestException, InvalidScopeException, SlowDownException, UnauthorizedClientException, UnsupportedGrantTypeException, } from \"../models/models_0\";\nimport { SSOOIDCServiceException as __BaseException } from \"../models/SSOOIDCServiceException\";\nexport const se_CreateTokenCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {\n        \"content-type\": \"application/json\",\n    };\n    const resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/token\";\n    let body;\n    body = JSON.stringify(take(input, {\n        clientId: [],\n        clientSecret: [],\n        code: [],\n        deviceCode: [],\n        grantType: [],\n        redirectUri: [],\n        refreshToken: [],\n        scope: (_) => _json(_),\n    }));\n    return new __HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"POST\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexport const se_RegisterClientCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {\n        \"content-type\": \"application/json\",\n    };\n    const resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/client/register\";\n    let body;\n    body = JSON.stringify(take(input, {\n        clientName: [],\n        clientType: [],\n        scopes: (_) => _json(_),\n    }));\n    return new __HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"POST\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexport const se_StartDeviceAuthorizationCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {\n        \"content-type\": \"application/json\",\n    };\n    const resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/device_authorization\";\n    let body;\n    body = JSON.stringify(take(input, {\n        clientId: [],\n        clientSecret: [],\n        startUrl: [],\n    }));\n    return new __HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"POST\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexport const de_CreateTokenCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_CreateTokenCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n    const doc = take(data, {\n        accessToken: __expectString,\n        expiresIn: __expectInt32,\n        idToken: __expectString,\n        refreshToken: __expectString,\n        tokenType: __expectString,\n    });\n    Object.assign(contents, doc);\n    return contents;\n};\nconst de_CreateTokenCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AccessDeniedException\":\n        case \"com.amazonaws.ssooidc#AccessDeniedException\":\n            throw await de_AccessDeniedExceptionRes(parsedOutput, context);\n        case \"AuthorizationPendingException\":\n        case \"com.amazonaws.ssooidc#AuthorizationPendingException\":\n            throw await de_AuthorizationPendingExceptionRes(parsedOutput, context);\n        case \"ExpiredTokenException\":\n        case \"com.amazonaws.ssooidc#ExpiredTokenException\":\n            throw await de_ExpiredTokenExceptionRes(parsedOutput, context);\n        case \"InternalServerException\":\n        case \"com.amazonaws.ssooidc#InternalServerException\":\n            throw await de_InternalServerExceptionRes(parsedOutput, context);\n        case \"InvalidClientException\":\n        case \"com.amazonaws.ssooidc#InvalidClientException\":\n            throw await de_InvalidClientExceptionRes(parsedOutput, context);\n        case \"InvalidGrantException\":\n        case \"com.amazonaws.ssooidc#InvalidGrantException\":\n            throw await de_InvalidGrantExceptionRes(parsedOutput, context);\n        case \"InvalidRequestException\":\n        case \"com.amazonaws.ssooidc#InvalidRequestException\":\n            throw await de_InvalidRequestExceptionRes(parsedOutput, context);\n        case \"InvalidScopeException\":\n        case \"com.amazonaws.ssooidc#InvalidScopeException\":\n            throw await de_InvalidScopeExceptionRes(parsedOutput, context);\n        case \"SlowDownException\":\n        case \"com.amazonaws.ssooidc#SlowDownException\":\n            throw await de_SlowDownExceptionRes(parsedOutput, context);\n        case \"UnauthorizedClientException\":\n        case \"com.amazonaws.ssooidc#UnauthorizedClientException\":\n            throw await de_UnauthorizedClientExceptionRes(parsedOutput, context);\n        case \"UnsupportedGrantTypeException\":\n        case \"com.amazonaws.ssooidc#UnsupportedGrantTypeException\":\n            throw await de_UnsupportedGrantTypeExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_RegisterClientCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_RegisterClientCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n    const doc = take(data, {\n        authorizationEndpoint: __expectString,\n        clientId: __expectString,\n        clientIdIssuedAt: __expectLong,\n        clientSecret: __expectString,\n        clientSecretExpiresAt: __expectLong,\n        tokenEndpoint: __expectString,\n    });\n    Object.assign(contents, doc);\n    return contents;\n};\nconst de_RegisterClientCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalServerException\":\n        case \"com.amazonaws.ssooidc#InternalServerException\":\n            throw await de_InternalServerExceptionRes(parsedOutput, context);\n        case \"InvalidClientMetadataException\":\n        case \"com.amazonaws.ssooidc#InvalidClientMetadataException\":\n            throw await de_InvalidClientMetadataExceptionRes(parsedOutput, context);\n        case \"InvalidRequestException\":\n        case \"com.amazonaws.ssooidc#InvalidRequestException\":\n            throw await de_InvalidRequestExceptionRes(parsedOutput, context);\n        case \"InvalidScopeException\":\n        case \"com.amazonaws.ssooidc#InvalidScopeException\":\n            throw await de_InvalidScopeExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nexport const de_StartDeviceAuthorizationCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return de_StartDeviceAuthorizationCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n    const doc = take(data, {\n        deviceCode: __expectString,\n        expiresIn: __expectInt32,\n        interval: __expectInt32,\n        userCode: __expectString,\n        verificationUri: __expectString,\n        verificationUriComplete: __expectString,\n    });\n    Object.assign(contents, doc);\n    return contents;\n};\nconst de_StartDeviceAuthorizationCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalServerException\":\n        case \"com.amazonaws.ssooidc#InternalServerException\":\n            throw await de_InternalServerExceptionRes(parsedOutput, context);\n        case \"InvalidClientException\":\n        case \"com.amazonaws.ssooidc#InvalidClientException\":\n            throw await de_InvalidClientExceptionRes(parsedOutput, context);\n        case \"InvalidRequestException\":\n        case \"com.amazonaws.ssooidc#InvalidRequestException\":\n            throw await de_InvalidRequestExceptionRes(parsedOutput, context);\n        case \"SlowDownException\":\n        case \"com.amazonaws.ssooidc#SlowDownException\":\n            throw await de_SlowDownExceptionRes(parsedOutput, context);\n        case \"UnauthorizedClientException\":\n        case \"com.amazonaws.ssooidc#UnauthorizedClientException\":\n            throw await de_UnauthorizedClientExceptionRes(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            return throwDefaultError({\n                output,\n                parsedBody,\n                errorCode,\n            });\n    }\n};\nconst throwDefaultError = withBaseException(__BaseException);\nconst de_AccessDeniedExceptionRes = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body;\n    const doc = take(data, {\n        error: __expectString,\n        error_description: __expectString,\n    });\n    Object.assign(contents, doc);\n    const exception = new AccessDeniedException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return __decorateServiceException(exception, parsedOutput.body);\n};\nconst de_AuthorizationPendingExceptionRes = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body;\n    const doc = take(data, {\n        error: __expectString,\n        error_description: __expectString,\n    });\n    Object.assign(contents, doc);\n    const exception = new AuthorizationPendingException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return __decorateServiceException(exception, parsedOutput.body);\n};\nconst de_ExpiredTokenExceptionRes = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body;\n    const doc = take(data, {\n        error: __expectString,\n        error_description: __expectString,\n    });\n    Object.assign(contents, doc);\n    const exception = new ExpiredTokenException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return __decorateServiceException(exception, parsedOutput.body);\n};\nconst de_InternalServerExceptionRes = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body;\n    const doc = take(data, {\n        error: __expectString,\n        error_description: __expectString,\n    });\n    Object.assign(contents, doc);\n    const exception = new InternalServerException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return __decorateServiceException(exception, parsedOutput.body);\n};\nconst de_InvalidClientExceptionRes = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body;\n    const doc = take(data, {\n        error: __expectString,\n        error_description: __expectString,\n    });\n    Object.assign(contents, doc);\n    const exception = new InvalidClientException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return __decorateServiceException(exception, parsedOutput.body);\n};\nconst de_InvalidClientMetadataExceptionRes = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body;\n    const doc = take(data, {\n        error: __expectString,\n        error_description: __expectString,\n    });\n    Object.assign(contents, doc);\n    const exception = new InvalidClientMetadataException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return __decorateServiceException(exception, parsedOutput.body);\n};\nconst de_InvalidGrantExceptionRes = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body;\n    const doc = take(data, {\n        error: __expectString,\n        error_description: __expectString,\n    });\n    Object.assign(contents, doc);\n    const exception = new InvalidGrantException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return __decorateServiceException(exception, parsedOutput.body);\n};\nconst de_InvalidRequestExceptionRes = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body;\n    const doc = take(data, {\n        error: __expectString,\n        error_description: __expectString,\n    });\n    Object.assign(contents, doc);\n    const exception = new InvalidRequestException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return __decorateServiceException(exception, parsedOutput.body);\n};\nconst de_InvalidScopeExceptionRes = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body;\n    const doc = take(data, {\n        error: __expectString,\n        error_description: __expectString,\n    });\n    Object.assign(contents, doc);\n    const exception = new InvalidScopeException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return __decorateServiceException(exception, parsedOutput.body);\n};\nconst de_SlowDownExceptionRes = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body;\n    const doc = take(data, {\n        error: __expectString,\n        error_description: __expectString,\n    });\n    Object.assign(contents, doc);\n    const exception = new SlowDownException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return __decorateServiceException(exception, parsedOutput.body);\n};\nconst de_UnauthorizedClientExceptionRes = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body;\n    const doc = take(data, {\n        error: __expectString,\n        error_description: __expectString,\n    });\n    Object.assign(contents, doc);\n    const exception = new UnauthorizedClientException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return __decorateServiceException(exception, parsedOutput.body);\n};\nconst de_UnsupportedGrantTypeExceptionRes = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body;\n    const doc = take(data, {\n        error: __expectString,\n        error_description: __expectString,\n    });\n    Object.assign(contents, doc);\n    const exception = new UnsupportedGrantTypeException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return __decorateServiceException(exception, parsedOutput.body);\n};\nconst deserializeMetadata = (output) => ({\n    httpStatusCode: output.statusCode,\n    requestId: output.headers[\"x-amzn-requestid\"] ?? output.headers[\"x-amzn-request-id\"] ?? output.headers[\"x-amz-request-id\"],\n    extendedRequestId: output.headers[\"x-amz-id-2\"],\n    cfId: output.headers[\"x-amz-cf-id\"],\n});\nconst collectBody = (streamBody = new Uint8Array(), context) => {\n    if (streamBody instanceof Uint8Array) {\n        return Promise.resolve(streamBody);\n    }\n    return context.streamCollector(streamBody) || Promise.resolve(new Uint8Array());\n};\nconst collectBodyString = (streamBody, context) => collectBody(streamBody, context).then((body) => context.utf8Encoder(body));\nconst isSerializableHeaderValue = (value) => value !== undefined &&\n    value !== null &&\n    value !== \"\" &&\n    (!Object.getOwnPropertyNames(value).includes(\"length\") || value.length != 0) &&\n    (!Object.getOwnPropertyNames(value).includes(\"size\") || value.size != 0);\nconst parseBody = (streamBody, context) => collectBodyString(streamBody, context).then((encoded) => {\n    if (encoded.length) {\n        return JSON.parse(encoded);\n    }\n    return {};\n});\nconst parseErrorBody = async (errorBody, context) => {\n    const value = await parseBody(errorBody, context);\n    value.message = value.message ?? value.Message;\n    return value;\n};\nconst loadRestJsonErrorCode = (output, data) => {\n    const findKey = (object, key) => Object.keys(object).find((k) => k.toLowerCase() === key.toLowerCase());\n    const sanitizeErrorCode = (rawValue) => {\n        let cleanValue = rawValue;\n        if (typeof cleanValue === \"number\") {\n            cleanValue = cleanValue.toString();\n        }\n        if (cleanValue.indexOf(\",\") >= 0) {\n            cleanValue = cleanValue.split(\",\")[0];\n        }\n        if (cleanValue.indexOf(\":\") >= 0) {\n            cleanValue = cleanValue.split(\":\")[0];\n        }\n        if (cleanValue.indexOf(\"#\") >= 0) {\n            cleanValue = cleanValue.split(\"#\")[1];\n        }\n        return cleanValue;\n    };\n    const headerKey = findKey(output.headers, \"x-amzn-errortype\");\n    if (headerKey !== undefined) {\n        return sanitizeErrorCode(output.headers[headerKey]);\n    }\n    if (data.code !== undefined) {\n        return sanitizeErrorCode(data.code);\n    }\n    if (data[\"__type\"] !== undefined) {\n        return sanitizeErrorCode(data[\"__type\"]);\n    }\n};\n","import { getEndpointPlugin } from \"@aws-sdk/middleware-endpoint\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\nimport { de_CreateTokenCommand, se_CreateTokenCommand } from \"../protocols/Aws_restJson1\";\nexport class CreateTokenCommand extends $Command {\n    static getEndpointParameterInstructions() {\n        return {\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use(getEndpointPlugin(configuration, CreateTokenCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"SSOOIDCClient\";\n        const commandName = \"CreateTokenCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: (_) => _,\n            outputFilterSensitiveLog: (_) => _,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return se_CreateTokenCommand(input, context);\n    }\n    deserialize(output, context) {\n        return de_CreateTokenCommand(output, context);\n    }\n}\n","export const resolveClientEndpointParameters = (options) => {\n    return {\n        ...options,\n        useDualstackEndpoint: options.useDualstackEndpoint ?? false,\n        useFipsEndpoint: options.useFipsEndpoint ?? false,\n        defaultSigningName: \"awsssooidc\",\n    };\n};\n","const p = \"required\", q = \"fn\", r = \"argv\", s = \"ref\";\nconst a = \"PartitionResult\", b = \"tree\", c = \"error\", d = \"endpoint\", e = { [p]: false, \"type\": \"String\" }, f = { [p]: true, \"default\": false, \"type\": \"Boolean\" }, g = { [s]: \"Endpoint\" }, h = { [q]: \"booleanEquals\", [r]: [{ [s]: \"UseFIPS\" }, true] }, i = { [q]: \"booleanEquals\", [r]: [{ [s]: \"UseDualStack\" }, true] }, j = {}, k = { [q]: \"booleanEquals\", [r]: [true, { [q]: \"getAttr\", [r]: [{ [s]: a }, \"supportsFIPS\"] }] }, l = { [q]: \"booleanEquals\", [r]: [true, { [q]: \"getAttr\", [r]: [{ [s]: a }, \"supportsDualStack\"] }] }, m = [g], n = [h], o = [i];\nconst _data = { version: \"1.0\", parameters: { Region: e, UseDualStack: f, UseFIPS: f, Endpoint: e }, rules: [{ conditions: [{ [q]: \"aws.partition\", [r]: [{ [s]: \"Region\" }], assign: a }], type: b, rules: [{ conditions: [{ [q]: \"isSet\", [r]: m }, { [q]: \"parseURL\", [r]: m, assign: \"url\" }], type: b, rules: [{ conditions: n, error: \"Invalid Configuration: FIPS and custom endpoint are not supported\", type: c }, { type: b, rules: [{ conditions: o, error: \"Invalid Configuration: Dualstack and custom endpoint are not supported\", type: c }, { endpoint: { url: g, properties: j, headers: j }, type: d }] }] }, { conditions: [h, i], type: b, rules: [{ conditions: [k, l], type: b, rules: [{ endpoint: { url: \"https://oidc-fips.{Region}.{PartitionResult#dualStackDnsSuffix}\", properties: j, headers: j }, type: d }] }, { error: \"FIPS and DualStack are enabled, but this partition does not support one or both\", type: c }] }, { conditions: n, type: b, rules: [{ conditions: [k], type: b, rules: [{ type: b, rules: [{ endpoint: { url: \"https://oidc-fips.{Region}.{PartitionResult#dnsSuffix}\", properties: j, headers: j }, type: d }] }] }, { error: \"FIPS is enabled but this partition does not support FIPS\", type: c }] }, { conditions: o, type: b, rules: [{ conditions: [l], type: b, rules: [{ endpoint: { url: \"https://oidc.{Region}.{PartitionResult#dualStackDnsSuffix}\", properties: j, headers: j }, type: d }] }, { error: \"DualStack is enabled but this partition does not support DualStack\", type: c }] }, { endpoint: { url: \"https://oidc.{Region}.{PartitionResult#dnsSuffix}\", properties: j, headers: j }, type: d }] }] };\nexport const ruleSet = _data;\n","import { resolveEndpoint } from \"@aws-sdk/util-endpoints\";\nimport { ruleSet } from \"./ruleset\";\nexport const defaultEndpointResolver = (endpointParams, context = {}) => {\n    return resolveEndpoint(ruleSet, {\n        endpointParams: endpointParams,\n        logger: context.logger,\n    });\n};\n","import packageInfo from \"../package.json\";\nimport { NODE_REGION_CONFIG_FILE_OPTIONS, NODE_REGION_CONFIG_OPTIONS, NODE_USE_DUALSTACK_ENDPOINT_CONFIG_OPTIONS, NODE_USE_FIPS_ENDPOINT_CONFIG_OPTIONS, } from \"@aws-sdk/config-resolver\";\nimport { Hash } from \"@aws-sdk/hash-node\";\nimport { NODE_MAX_ATTEMPT_CONFIG_OPTIONS, NODE_RETRY_MODE_CONFIG_OPTIONS } from \"@aws-sdk/middleware-retry\";\nimport { loadConfig as loadNodeConfig } from \"@aws-sdk/node-config-provider\";\nimport { NodeHttpHandler as RequestHandler, streamCollector } from \"@aws-sdk/node-http-handler\";\nimport { calculateBodyLength } from \"@aws-sdk/util-body-length-node\";\nimport { DEFAULT_RETRY_MODE } from \"@aws-sdk/util-retry\";\nimport { defaultUserAgent } from \"@aws-sdk/util-user-agent-node\";\nimport { getRuntimeConfig as getSharedRuntimeConfig } from \"./runtimeConfig.shared\";\nimport { loadConfigsForDefaultMode } from \"@aws-sdk/smithy-client\";\nimport { resolveDefaultsModeConfig } from \"@aws-sdk/util-defaults-mode-node\";\nimport { emitWarningIfUnsupportedVersion } from \"@aws-sdk/smithy-client\";\nexport const getRuntimeConfig = (config) => {\n    emitWarningIfUnsupportedVersion(process.version);\n    const defaultsMode = resolveDefaultsModeConfig(config);\n    const defaultConfigProvider = () => defaultsMode().then(loadConfigsForDefaultMode);\n    const clientSharedValues = getSharedRuntimeConfig(config);\n    return {\n        ...clientSharedValues,\n        ...config,\n        runtime: \"node\",\n        defaultsMode,\n        bodyLengthChecker: config?.bodyLengthChecker ?? calculateBodyLength,\n        defaultUserAgentProvider: config?.defaultUserAgentProvider ??\n            defaultUserAgent({ serviceId: clientSharedValues.serviceId, clientVersion: packageInfo.version }),\n        maxAttempts: config?.maxAttempts ?? loadNodeConfig(NODE_MAX_ATTEMPT_CONFIG_OPTIONS),\n        region: config?.region ?? loadNodeConfig(NODE_REGION_CONFIG_OPTIONS, NODE_REGION_CONFIG_FILE_OPTIONS),\n        requestHandler: config?.requestHandler ?? new RequestHandler(defaultConfigProvider),\n        retryMode: config?.retryMode ??\n            loadNodeConfig({\n                ...NODE_RETRY_MODE_CONFIG_OPTIONS,\n                default: async () => (await defaultConfigProvider()).retryMode || DEFAULT_RETRY_MODE,\n            }),\n        sha256: config?.sha256 ?? Hash.bind(null, \"sha256\"),\n        streamCollector: config?.streamCollector ?? streamCollector,\n        useDualstackEndpoint: config?.useDualstackEndpoint ?? loadNodeConfig(NODE_USE_DUALSTACK_ENDPOINT_CONFIG_OPTIONS),\n        useFipsEndpoint: config?.useFipsEndpoint ?? loadNodeConfig(NODE_USE_FIPS_ENDPOINT_CONFIG_OPTIONS),\n    };\n};\n","import { NoOpLogger } from \"@aws-sdk/smithy-client\";\nimport { parseUrl } from \"@aws-sdk/url-parser\";\nimport { fromBase64, toBase64 } from \"@aws-sdk/util-base64\";\nimport { fromUtf8, toUtf8 } from \"@aws-sdk/util-utf8\";\nimport { defaultEndpointResolver } from \"./endpoint/endpointResolver\";\nexport const getRuntimeConfig = (config) => ({\n    apiVersion: \"2019-06-10\",\n    base64Decoder: config?.base64Decoder ?? fromBase64,\n    base64Encoder: config?.base64Encoder ?? toBase64,\n    disableHostPrefix: config?.disableHostPrefix ?? false,\n    endpointProvider: config?.endpointProvider ?? defaultEndpointResolver,\n    logger: config?.logger ?? new NoOpLogger(),\n    serviceId: config?.serviceId ?? \"SSO OIDC\",\n    urlParser: config?.urlParser ?? parseUrl,\n    utf8Decoder: config?.utf8Decoder ?? fromUtf8,\n    utf8Encoder: config?.utf8Encoder ?? toUtf8,\n});\n","import { resolveRegionConfig } from \"@aws-sdk/config-resolver\";\nimport { getContentLengthPlugin } from \"@aws-sdk/middleware-content-length\";\nimport { resolveEndpointConfig } from \"@aws-sdk/middleware-endpoint\";\nimport { getHostHeaderPlugin, resolveHostHeaderConfig, } from \"@aws-sdk/middleware-host-header\";\nimport { getLoggerPlugin } from \"@aws-sdk/middleware-logger\";\nimport { getRecursionDetectionPlugin } from \"@aws-sdk/middleware-recursion-detection\";\nimport { getRetryPlugin, resolveRetryConfig } from \"@aws-sdk/middleware-retry\";\nimport { getUserAgentPlugin, resolveUserAgentConfig, } from \"@aws-sdk/middleware-user-agent\";\nimport { Client as __Client, } from \"@aws-sdk/smithy-client\";\nimport { resolveClientEndpointParameters, } from \"./endpoint/EndpointParameters\";\nimport { getRuntimeConfig as __getRuntimeConfig } from \"./runtimeConfig\";\nexport class SSOOIDCClient extends __Client {\n    constructor(configuration) {\n        const _config_0 = __getRuntimeConfig(configuration);\n        const _config_1 = resolveClientEndpointParameters(_config_0);\n        const _config_2 = resolveRegionConfig(_config_1);\n        const _config_3 = resolveEndpointConfig(_config_2);\n        const _config_4 = resolveRetryConfig(_config_3);\n        const _config_5 = resolveHostHeaderConfig(_config_4);\n        const _config_6 = resolveUserAgentConfig(_config_5);\n        super(_config_6);\n        this.config = _config_6;\n        this.middlewareStack.use(getRetryPlugin(this.config));\n        this.middlewareStack.use(getContentLengthPlugin(this.config));\n        this.middlewareStack.use(getHostHeaderPlugin(this.config));\n        this.middlewareStack.use(getLoggerPlugin(this.config));\n        this.middlewareStack.use(getRecursionDetectionPlugin(this.config));\n        this.middlewareStack.use(getUserAgentPlugin(this.config));\n    }\n    destroy() {\n        super.destroy();\n    }\n}\n","import { SSOOIDCClient } from \"@aws-sdk/client-sso-oidc\";\nconst ssoOidcClientsHash = {};\nexport const getSsoOidcClient = (ssoRegion) => {\n    if (ssoOidcClientsHash[ssoRegion]) {\n        return ssoOidcClientsHash[ssoRegion];\n    }\n    const ssoOidcClient = new SSOOIDCClient({ region: ssoRegion });\n    ssoOidcClientsHash[ssoRegion] = ssoOidcClient;\n    return ssoOidcClient;\n};\n","import { CreateTokenCommand } from \"@aws-sdk/client-sso-oidc\";\nimport { getSsoOidcClient } from \"./getSsoOidcClient\";\nexport const getNewSsoOidcToken = (ssoToken, ssoRegion) => {\n    const ssoOidcClient = getSsoOidcClient(ssoRegion);\n    return ssoOidcClient.send(new CreateTokenCommand({\n        clientId: ssoToken.clientId,\n        clientSecret: ssoToken.clientSecret,\n        refreshToken: ssoToken.refreshToken,\n        grantType: \"refresh_token\",\n    }));\n};\n","import { TokenProviderError } from \"@aws-sdk/property-provider\";\nimport { REFRESH_MESSAGE } from \"./constants\";\nexport const validateTokenExpiry = (token) => {\n    if (token.expiration && token.expiration.getTime() < Date.now()) {\n        throw new TokenProviderError(`Token is expired. ${REFRESH_MESSAGE}`, false);\n    }\n};\n","import { TokenProviderError } from \"@aws-sdk/property-provider\";\nimport { REFRESH_MESSAGE } from \"./constants\";\nexport const validateTokenKey = (key, value, forRefresh = false) => {\n    if (typeof value === \"undefined\") {\n        throw new TokenProviderError(`Value not present for '${key}' in SSO Token${forRefresh ? \". Cannot refresh\" : \"\"}. ${REFRESH_MESSAGE}`, false);\n    }\n};\n","import { getSSOTokenFilepath } from \"@aws-sdk/shared-ini-file-loader\";\nimport { promises as fsPromises } from \"fs\";\nconst { writeFile } = fsPromises;\nexport const writeSSOTokenToFile = (id, ssoToken) => {\n    const tokenFilepath = getSSOTokenFilepath(id);\n    const tokenString = JSON.stringify(ssoToken, null, 2);\n    return writeFile(tokenFilepath, tokenString);\n};\n","import { TokenProviderError } from \"@aws-sdk/property-provider\";\nimport { getProfileName, getSSOTokenFromFile, loadSsoSessionData, parseKnownFiles, } from \"@aws-sdk/shared-ini-file-loader\";\nimport { EXPIRE_WINDOW_MS, REFRESH_MESSAGE } from \"./constants\";\nimport { getNewSsoOidcToken } from \"./getNewSsoOidcToken\";\nimport { validateTokenExpiry } from \"./validateTokenExpiry\";\nimport { validateTokenKey } from \"./validateTokenKey\";\nimport { writeSSOTokenToFile } from \"./writeSSOTokenToFile\";\nconst lastRefreshAttemptTime = new Date(0);\nexport const fromSso = (init = {}) => async () => {\n    const profiles = await parseKnownFiles(init);\n    const profileName = getProfileName(init);\n    const profile = profiles[profileName];\n    if (!profile) {\n        throw new TokenProviderError(`Profile '${profileName}' could not be found in shared credentials file.`, false);\n    }\n    else if (!profile[\"sso_session\"]) {\n        throw new TokenProviderError(`Profile '${profileName}' is missing required property 'sso_session'.`);\n    }\n    const ssoSessionName = profile[\"sso_session\"];\n    const ssoSessions = await loadSsoSessionData(init);\n    const ssoSession = ssoSessions[ssoSessionName];\n    if (!ssoSession) {\n        throw new TokenProviderError(`Sso session '${ssoSessionName}' could not be found in shared credentials file.`, false);\n    }\n    for (const ssoSessionRequiredKey of [\"sso_start_url\", \"sso_region\"]) {\n        if (!ssoSession[ssoSessionRequiredKey]) {\n            throw new TokenProviderError(`Sso session '${ssoSessionName}' is missing required property '${ssoSessionRequiredKey}'.`, false);\n        }\n    }\n    const ssoStartUrl = ssoSession[\"sso_start_url\"];\n    const ssoRegion = ssoSession[\"sso_region\"];\n    let ssoToken;\n    try {\n        ssoToken = await getSSOTokenFromFile(ssoSessionName);\n    }\n    catch (e) {\n        throw new TokenProviderError(`The SSO session token associated with profile=${profileName} was not found or is invalid. ${REFRESH_MESSAGE}`, false);\n    }\n    validateTokenKey(\"accessToken\", ssoToken.accessToken);\n    validateTokenKey(\"expiresAt\", ssoToken.expiresAt);\n    const { accessToken, expiresAt } = ssoToken;\n    const existingToken = { token: accessToken, expiration: new Date(expiresAt) };\n    if (existingToken.expiration.getTime() - Date.now() > EXPIRE_WINDOW_MS) {\n        return existingToken;\n    }\n    if (Date.now() - lastRefreshAttemptTime.getTime() < 30 * 1000) {\n        validateTokenExpiry(existingToken);\n        return existingToken;\n    }\n    validateTokenKey(\"clientId\", ssoToken.clientId, true);\n    validateTokenKey(\"clientSecret\", ssoToken.clientSecret, true);\n    validateTokenKey(\"refreshToken\", ssoToken.refreshToken, true);\n    try {\n        lastRefreshAttemptTime.setTime(Date.now());\n        const newSsoOidcToken = await getNewSsoOidcToken(ssoToken, ssoRegion);\n        validateTokenKey(\"accessToken\", newSsoOidcToken.accessToken);\n        validateTokenKey(\"expiresIn\", newSsoOidcToken.expiresIn);\n        const newTokenExpiration = new Date(Date.now() + newSsoOidcToken.expiresIn * 1000);\n        try {\n            await writeSSOTokenToFile(ssoSessionName, {\n                ...ssoToken,\n                accessToken: newSsoOidcToken.accessToken,\n                expiresAt: newTokenExpiration.toISOString(),\n                refreshToken: newSsoOidcToken.refreshToken,\n            });\n        }\n        catch (error) {\n        }\n        return {\n            token: newSsoOidcToken.accessToken,\n            expiration: newTokenExpiration,\n        };\n    }\n    catch (error) {\n        validateTokenExpiry(existingToken);\n        return existingToken;\n    }\n};\n","import { GetRoleCredentialsCommand, SSOClient } from \"@aws-sdk/client-sso\";\nimport { CredentialsProviderError } from \"@aws-sdk/property-provider\";\nimport { getSSOTokenFromFile } from \"@aws-sdk/shared-ini-file-loader\";\nimport { fromSso as getSsoTokenProvider } from \"@aws-sdk/token-providers\";\nconst EXPIRE_WINDOW_MS = 15 * 60 * 1000;\nconst SHOULD_FAIL_CREDENTIAL_CHAIN = false;\nexport const resolveSSOCredentials = async ({ ssoStartUrl, ssoSession, ssoAccountId, ssoRegion, ssoRoleName, ssoClient, profile, }) => {\n    let token;\n    const refreshMessage = `To refresh this SSO session run aws sso login with the corresponding profile.`;\n    if (ssoSession) {\n        try {\n            const _token = await getSsoTokenProvider({ profile })();\n            token = {\n                accessToken: _token.token,\n                expiresAt: new Date(_token.expiration).toISOString(),\n            };\n        }\n        catch (e) {\n            throw new CredentialsProviderError(e.message, SHOULD_FAIL_CREDENTIAL_CHAIN);\n        }\n    }\n    else {\n        try {\n            token = await getSSOTokenFromFile(ssoStartUrl);\n        }\n        catch (e) {\n            throw new CredentialsProviderError(`The SSO session associated with this profile is invalid. ${refreshMessage}`, SHOULD_FAIL_CREDENTIAL_CHAIN);\n        }\n    }\n    if (new Date(token.expiresAt).getTime() - Date.now() <= EXPIRE_WINDOW_MS) {\n        throw new CredentialsProviderError(`The SSO session associated with this profile has expired. ${refreshMessage}`, SHOULD_FAIL_CREDENTIAL_CHAIN);\n    }\n    const { accessToken } = token;\n    const sso = ssoClient || new SSOClient({ region: ssoRegion });\n    let ssoResp;\n    try {\n        ssoResp = await sso.send(new GetRoleCredentialsCommand({\n            accountId: ssoAccountId,\n            roleName: ssoRoleName,\n            accessToken,\n        }));\n    }\n    catch (e) {\n        throw CredentialsProviderError.from(e, SHOULD_FAIL_CREDENTIAL_CHAIN);\n    }\n    const { roleCredentials: { accessKeyId, secretAccessKey, sessionToken, expiration } = {} } = ssoResp;\n    if (!accessKeyId || !secretAccessKey || !sessionToken || !expiration) {\n        throw new CredentialsProviderError(\"SSO returns an invalid temporary credential.\", SHOULD_FAIL_CREDENTIAL_CHAIN);\n    }\n    return { accessKeyId, secretAccessKey, sessionToken, expiration: new Date(expiration) };\n};\n","import { CredentialsProviderError } from \"@aws-sdk/property-provider\";\nexport const validateSsoProfile = (profile) => {\n    const { sso_start_url, sso_account_id, sso_region, sso_role_name } = profile;\n    if (!sso_start_url || !sso_account_id || !sso_region || !sso_role_name) {\n        throw new CredentialsProviderError(`Profile is configured with invalid SSO credentials. Required parameters \"sso_account_id\", ` +\n            `\"sso_region\", \"sso_role_name\", \"sso_start_url\". Got ${Object.keys(profile).join(\", \")}\\nReference: https://docs.aws.amazon.com/cli/latest/userguide/cli-configure-sso.html`, false);\n    }\n    return profile;\n};\n","import { CredentialsProviderError } from \"@aws-sdk/property-provider\";\nimport { getProfileName, loadSsoSessionData, parseKnownFiles, } from \"@aws-sdk/shared-ini-file-loader\";\nimport { isSsoProfile } from \"./isSsoProfile\";\nimport { resolveSSOCredentials } from \"./resolveSSOCredentials\";\nimport { validateSsoProfile } from \"./validateSsoProfile\";\nexport const fromSSO = (init = {}) => async () => {\n    const { ssoStartUrl, ssoAccountId, ssoRegion, ssoRoleName, ssoClient, ssoSession } = init;\n    const profileName = getProfileName(init);\n    if (!ssoStartUrl && !ssoAccountId && !ssoRegion && !ssoRoleName && !ssoSession) {\n        const profiles = await parseKnownFiles(init);\n        const profile = profiles[profileName];\n        if (!profile) {\n            throw new CredentialsProviderError(`Profile ${profileName} was not found.`);\n        }\n        if (!isSsoProfile(profile)) {\n            throw new CredentialsProviderError(`Profile ${profileName} is not configured with SSO credentials.`);\n        }\n        if (profile?.sso_session) {\n            const ssoSessions = await loadSsoSessionData(init);\n            const session = ssoSessions[profile.sso_session];\n            const conflictMsg = ` configurations in profile ${profileName} and sso-session ${profile.sso_session}`;\n            if (ssoRegion && ssoRegion !== session.sso_region) {\n                throw new CredentialsProviderError(`Conflicting SSO region` + conflictMsg, false);\n            }\n            if (ssoStartUrl && ssoStartUrl !== session.sso_start_url) {\n                throw new CredentialsProviderError(`Conflicting SSO start_url` + conflictMsg, false);\n            }\n            profile.sso_region = session.sso_region;\n            profile.sso_start_url = session.sso_start_url;\n        }\n        const { sso_start_url, sso_account_id, sso_region, sso_role_name, sso_session } = validateSsoProfile(profile);\n        return resolveSSOCredentials({\n            ssoStartUrl: sso_start_url,\n            ssoSession: sso_session,\n            ssoAccountId: sso_account_id,\n            ssoRegion: sso_region,\n            ssoRoleName: sso_role_name,\n            ssoClient: ssoClient,\n            profile: profileName,\n        });\n    }\n    else if (!ssoStartUrl || !ssoAccountId || !ssoRegion || !ssoRoleName) {\n        throw new CredentialsProviderError(\"Incomplete configuration. The fromSSO() argument hash must include \" +\n            '\"ssoStartUrl\", \"ssoAccountId\", \"ssoRegion\", \"ssoRoleName\"');\n    }\n    else {\n        return resolveSSOCredentials({\n            ssoStartUrl,\n            ssoSession,\n            ssoAccountId,\n            ssoRegion,\n            ssoRoleName,\n            ssoClient,\n            profile: profileName,\n        });\n    }\n};\n","export const isStaticCredsProfile = (arg) => Boolean(arg) &&\n    typeof arg === \"object\" &&\n    typeof arg.aws_access_key_id === \"string\" &&\n    typeof arg.aws_secret_access_key === \"string\" &&\n    [\"undefined\", \"string\"].indexOf(typeof arg.aws_session_token) > -1;\nexport const resolveStaticCredentials = (profile) => Promise.resolve({\n    accessKeyId: profile.aws_access_key_id,\n    secretAccessKey: profile.aws_secret_access_key,\n    sessionToken: profile.aws_session_token,\n});\n","import { CredentialsProviderError } from \"@aws-sdk/property-provider\";\nimport { readFileSync } from \"fs\";\nimport { fromWebToken } from \"./fromWebToken\";\nconst ENV_TOKEN_FILE = \"AWS_WEB_IDENTITY_TOKEN_FILE\";\nconst ENV_ROLE_ARN = \"AWS_ROLE_ARN\";\nconst ENV_ROLE_SESSION_NAME = \"AWS_ROLE_SESSION_NAME\";\nexport const fromTokenFile = (init = {}) => async () => {\n    return resolveTokenFile(init);\n};\nconst resolveTokenFile = (init) => {\n    const webIdentityTokenFile = init?.webIdentityTokenFile ?? process.env[ENV_TOKEN_FILE];\n    const roleArn = init?.roleArn ?? process.env[ENV_ROLE_ARN];\n    const roleSessionName = init?.roleSessionName ?? process.env[ENV_ROLE_SESSION_NAME];\n    if (!webIdentityTokenFile || !roleArn) {\n        throw new CredentialsProviderError(\"Web identity configuration not specified\");\n    }\n    return fromWebToken({\n        ...init,\n        webIdentityToken: readFileSync(webIdentityTokenFile, { encoding: \"ascii\" }),\n        roleArn,\n        roleSessionName,\n    })();\n};\n","import { CredentialsProviderError } from \"@aws-sdk/property-provider\";\nexport const fromWebToken = (init) => () => {\n    const { roleArn, roleSessionName, webIdentityToken, providerId, policyArns, policy, durationSeconds, roleAssumerWithWebIdentity, } = init;\n    if (!roleAssumerWithWebIdentity) {\n        throw new CredentialsProviderError(`Role Arn '${roleArn}' needs to be assumed with web identity,` +\n            ` but no role assumption callback was provided.`, false);\n    }\n    return roleAssumerWithWebIdentity({\n        RoleArn: roleArn,\n        RoleSessionName: roleSessionName ?? `aws-sdk-js-session-${Date.now()}`,\n        WebIdentityToken: webIdentityToken,\n        ProviderId: providerId,\n        PolicyArns: policyArns,\n        Policy: policy,\n        DurationSeconds: durationSeconds,\n    });\n};\n","import { CredentialsProviderError } from \"@aws-sdk/property-provider\";\nimport { isAssumeRoleProfile, resolveAssumeRoleCredentials } from \"./resolveAssumeRoleCredentials\";\nimport { isProcessProfile, resolveProcessCredentials } from \"./resolveProcessCredentials\";\nimport { isSsoProfile, resolveSsoCredentials } from \"./resolveSsoCredentials\";\nimport { isStaticCredsProfile, resolveStaticCredentials } from \"./resolveStaticCredentials\";\nimport { isWebIdentityProfile, resolveWebIdentityCredentials } from \"./resolveWebIdentityCredentials\";\nexport const resolveProfileData = async (profileName, profiles, options, visitedProfiles = {}) => {\n    const data = profiles[profileName];\n    if (Object.keys(visitedProfiles).length > 0 && isStaticCredsProfile(data)) {\n        return resolveStaticCredentials(data);\n    }\n    if (isAssumeRoleProfile(data)) {\n        return resolveAssumeRoleCredentials(profileName, profiles, options, visitedProfiles);\n    }\n    if (isStaticCredsProfile(data)) {\n        return resolveStaticCredentials(data);\n    }\n    if (isWebIdentityProfile(data)) {\n        return resolveWebIdentityCredentials(data, options);\n    }\n    if (isProcessProfile(data)) {\n        return resolveProcessCredentials(options, profileName);\n    }\n    if (isSsoProfile(data)) {\n        return resolveSsoCredentials(data);\n    }\n    throw new CredentialsProviderError(`Profile ${profileName} could not be found or parsed in shared credentials file.`);\n};\n","import { fromTokenFile } from \"@aws-sdk/credential-provider-web-identity\";\nexport const isWebIdentityProfile = (arg) => Boolean(arg) &&\n    typeof arg === \"object\" &&\n    typeof arg.web_identity_token_file === \"string\" &&\n    typeof arg.role_arn === \"string\" &&\n    [\"undefined\", \"string\"].indexOf(typeof arg.role_session_name) > -1;\nexport const resolveWebIdentityCredentials = async (profile, options) => fromTokenFile({\n    webIdentityTokenFile: profile.web_identity_token_file,\n    roleArn: profile.role_arn,\n    roleSessionName: profile.role_session_name,\n    roleAssumerWithWebIdentity: options.roleAssumerWithWebIdentity,\n})();\n","import { fromProcess } from \"@aws-sdk/credential-provider-process\";\nexport const isProcessProfile = (arg) => Boolean(arg) && typeof arg === \"object\" && typeof arg.credential_process === \"string\";\nexport const resolveProcessCredentials = async (options, profile) => fromProcess({\n    ...options,\n    profile,\n})();\n","import { fromSSO, validateSsoProfile } from \"@aws-sdk/credential-provider-sso\";\nexport { isSsoProfile } from \"@aws-sdk/credential-provider-sso\";\nexport const resolveSsoCredentials = (data) => {\n    const { sso_start_url, sso_account_id, sso_session, sso_region, sso_role_name } = validateSsoProfile(data);\n    return fromSSO({\n        ssoStartUrl: sso_start_url,\n        ssoAccountId: sso_account_id,\n        ssoSession: sso_session,\n        ssoRegion: sso_region,\n        ssoRoleName: sso_role_name,\n    })();\n};\n","import { fromEnv } from \"@aws-sdk/credential-provider-env\";\nimport { fromIni } from \"@aws-sdk/credential-provider-ini\";\nimport { fromProcess } from \"@aws-sdk/credential-provider-process\";\nimport { fromSSO } from \"@aws-sdk/credential-provider-sso\";\nimport { fromTokenFile } from \"@aws-sdk/credential-provider-web-identity\";\nimport { chain, CredentialsProviderError, memoize } from \"@aws-sdk/property-provider\";\nimport { ENV_PROFILE } from \"@aws-sdk/shared-ini-file-loader\";\nimport { remoteProvider } from \"./remoteProvider\";\nexport const defaultProvider = (init = {}) => memoize(chain(...(init.profile || process.env[ENV_PROFILE] ? [] : [fromEnv()]), fromSSO(init), fromIni(init), fromProcess(init), fromTokenFile(init), remoteProvider(init), async () => {\n    throw new CredentialsProviderError(\"Could not load credentials from any providers\", false);\n}), (credentials) => credentials.expiration !== undefined && credentials.expiration.getTime() - Date.now() < 300000, (credentials) => credentials.expiration !== undefined);\n","import { getProfileName, parseKnownFiles } from \"@aws-sdk/shared-ini-file-loader\";\nimport { resolveProfileData } from \"./resolveProfileData\";\nexport const fromIni = (init = {}) => async () => {\n    const profiles = await parseKnownFiles(init);\n    return resolveProfileData(getProfileName(init), profiles, init);\n};\n","import { ENV_CMDS_FULL_URI, ENV_CMDS_RELATIVE_URI, fromContainerMetadata, fromInstanceMetadata, } from \"@aws-sdk/credential-provider-imds\";\nimport { CredentialsProviderError } from \"@aws-sdk/property-provider\";\nexport const ENV_IMDS_DISABLED = \"AWS_EC2_METADATA_DISABLED\";\nexport const remoteProvider = (init) => {\n    if (process.env[ENV_CMDS_RELATIVE_URI] || process.env[ENV_CMDS_FULL_URI]) {\n        return fromContainerMetadata(init);\n    }\n    if (process.env[ENV_IMDS_DISABLED]) {\n        return async () => {\n            throw new CredentialsProviderError(\"EC2 Instance Metadata Service access disabled\");\n        };\n    }\n    return fromInstanceMetadata(init);\n};\n","const F = \"required\", G = \"type\", H = \"fn\", I = \"argv\", J = \"ref\";\nconst a = false, b = true, c = \"booleanEquals\", d = \"tree\", e = \"stringEquals\", f = \"sigv4\", g = \"sts\", h = \"us-east-1\", i = \"endpoint\", j = \"https://sts.{Region}.{PartitionResult#dnsSuffix}\", k = \"error\", l = \"getAttr\", m = { [F]: false, [G]: \"String\" }, n = { [F]: true, \"default\": false, [G]: \"Boolean\" }, o = { [J]: \"Endpoint\" }, p = { [H]: \"isSet\", [I]: [{ [J]: \"Region\" }] }, q = { [J]: \"Region\" }, r = { [H]: \"aws.partition\", [I]: [q], \"assign\": \"PartitionResult\" }, s = { [J]: \"UseFIPS\" }, t = { [J]: \"UseDualStack\" }, u = { \"url\": \"https://sts.amazonaws.com\", \"properties\": { \"authSchemes\": [{ \"name\": f, \"signingName\": g, \"signingRegion\": h }] }, \"headers\": {} }, v = {}, w = { \"conditions\": [{ [H]: e, [I]: [q, \"aws-global\"] }], [i]: u, [G]: i }, x = { [H]: c, [I]: [s, true] }, y = { [H]: c, [I]: [t, true] }, z = { [H]: c, [I]: [true, { [H]: l, [I]: [{ [J]: \"PartitionResult\" }, \"supportsFIPS\"] }] }, A = { [J]: \"PartitionResult\" }, B = { [H]: c, [I]: [true, { [H]: l, [I]: [A, \"supportsDualStack\"] }] }, C = [{ [H]: \"isSet\", [I]: [o] }], D = [x], E = [y];\nconst _data = { version: \"1.0\", parameters: { Region: m, UseDualStack: n, UseFIPS: n, Endpoint: m, UseGlobalEndpoint: n }, rules: [{ conditions: [{ [H]: c, [I]: [{ [J]: \"UseGlobalEndpoint\" }, b] }, { [H]: \"not\", [I]: C }, p, r, { [H]: c, [I]: [s, a] }, { [H]: c, [I]: [t, a] }], [G]: d, rules: [{ conditions: [{ [H]: e, [I]: [q, \"ap-northeast-1\"] }], endpoint: u, [G]: i }, { conditions: [{ [H]: e, [I]: [q, \"ap-south-1\"] }], endpoint: u, [G]: i }, { conditions: [{ [H]: e, [I]: [q, \"ap-southeast-1\"] }], endpoint: u, [G]: i }, { conditions: [{ [H]: e, [I]: [q, \"ap-southeast-2\"] }], endpoint: u, [G]: i }, w, { conditions: [{ [H]: e, [I]: [q, \"ca-central-1\"] }], endpoint: u, [G]: i }, { conditions: [{ [H]: e, [I]: [q, \"eu-central-1\"] }], endpoint: u, [G]: i }, { conditions: [{ [H]: e, [I]: [q, \"eu-north-1\"] }], endpoint: u, [G]: i }, { conditions: [{ [H]: e, [I]: [q, \"eu-west-1\"] }], endpoint: u, [G]: i }, { conditions: [{ [H]: e, [I]: [q, \"eu-west-2\"] }], endpoint: u, [G]: i }, { conditions: [{ [H]: e, [I]: [q, \"eu-west-3\"] }], endpoint: u, [G]: i }, { conditions: [{ [H]: e, [I]: [q, \"sa-east-1\"] }], endpoint: u, [G]: i }, { conditions: [{ [H]: e, [I]: [q, h] }], endpoint: u, [G]: i }, { conditions: [{ [H]: e, [I]: [q, \"us-east-2\"] }], endpoint: u, [G]: i }, { conditions: [{ [H]: e, [I]: [q, \"us-west-1\"] }], endpoint: u, [G]: i }, { conditions: [{ [H]: e, [I]: [q, \"us-west-2\"] }], endpoint: u, [G]: i }, { endpoint: { url: j, properties: { authSchemes: [{ name: f, signingName: g, signingRegion: \"{Region}\" }] }, headers: v }, [G]: i }] }, { conditions: C, [G]: d, rules: [{ conditions: D, error: \"Invalid Configuration: FIPS and custom endpoint are not supported\", [G]: k }, { [G]: d, rules: [{ conditions: E, error: \"Invalid Configuration: Dualstack and custom endpoint are not supported\", [G]: k }, { endpoint: { url: o, properties: v, headers: v }, [G]: i }] }] }, { [G]: d, rules: [{ conditions: [p], [G]: d, rules: [{ conditions: [r], [G]: d, rules: [{ conditions: [x, y], [G]: d, rules: [{ conditions: [z, B], [G]: d, rules: [{ [G]: d, rules: [{ endpoint: { url: \"https://sts-fips.{Region}.{PartitionResult#dualStackDnsSuffix}\", properties: v, headers: v }, [G]: i }] }] }, { error: \"FIPS and DualStack are enabled, but this partition does not support one or both\", [G]: k }] }, { conditions: D, [G]: d, rules: [{ conditions: [z], [G]: d, rules: [{ [G]: d, rules: [{ conditions: [{ [H]: e, [I]: [\"aws-us-gov\", { [H]: l, [I]: [A, \"name\"] }] }], endpoint: { url: \"https://sts.{Region}.amazonaws.com\", properties: v, headers: v }, [G]: i }, { endpoint: { url: \"https://sts-fips.{Region}.{PartitionResult#dnsSuffix}\", properties: v, headers: v }, [G]: i }] }] }, { error: \"FIPS is enabled but this partition does not support FIPS\", [G]: k }] }, { conditions: E, [G]: d, rules: [{ conditions: [B], [G]: d, rules: [{ [G]: d, rules: [{ endpoint: { url: \"https://sts.{Region}.{PartitionResult#dualStackDnsSuffix}\", properties: v, headers: v }, [G]: i }] }] }, { error: \"DualStack is enabled but this partition does not support DualStack\", [G]: k }] }, { [G]: d, rules: [w, { endpoint: { url: j, properties: v, headers: v }, [G]: i }] }] }] }, { error: \"Invalid Configuration: Missing Region\", [G]: k }] }] };\nexport const ruleSet = _data;\n","import { resolveEndpoint } from \"@aws-sdk/util-endpoints\";\nimport { ruleSet } from \"./ruleset\";\nexport const defaultEndpointResolver = (endpointParams, context = {}) => {\n    return resolveEndpoint(ruleSet, {\n        endpointParams: endpointParams,\n        logger: context.logger,\n    });\n};\n","import packageInfo from \"../package.json\";\nimport { decorateDefaultCredentialProvider } from \"./defaultStsRoleAssumers\";\nimport { NODE_REGION_CONFIG_FILE_OPTIONS, NODE_REGION_CONFIG_OPTIONS, NODE_USE_DUALSTACK_ENDPOINT_CONFIG_OPTIONS, NODE_USE_FIPS_ENDPOINT_CONFIG_OPTIONS, } from \"@aws-sdk/config-resolver\";\nimport { defaultProvider as credentialDefaultProvider } from \"@aws-sdk/credential-provider-node\";\nimport { Hash } from \"@aws-sdk/hash-node\";\nimport { NODE_MAX_ATTEMPT_CONFIG_OPTIONS, NODE_RETRY_MODE_CONFIG_OPTIONS } from \"@aws-sdk/middleware-retry\";\nimport { loadConfig as loadNodeConfig } from \"@aws-sdk/node-config-provider\";\nimport { NodeHttpHandler as RequestHandler, streamCollector } from \"@aws-sdk/node-http-handler\";\nimport { calculateBodyLength } from \"@aws-sdk/util-body-length-node\";\nimport { DEFAULT_RETRY_MODE } from \"@aws-sdk/util-retry\";\nimport { defaultUserAgent } from \"@aws-sdk/util-user-agent-node\";\nimport { getRuntimeConfig as getSharedRuntimeConfig } from \"./runtimeConfig.shared\";\nimport { loadConfigsForDefaultMode } from \"@aws-sdk/smithy-client\";\nimport { resolveDefaultsModeConfig } from \"@aws-sdk/util-defaults-mode-node\";\nimport { emitWarningIfUnsupportedVersion } from \"@aws-sdk/smithy-client\";\nexport const getRuntimeConfig = (config) => {\n    emitWarningIfUnsupportedVersion(process.version);\n    const defaultsMode = resolveDefaultsModeConfig(config);\n    const defaultConfigProvider = () => defaultsMode().then(loadConfigsForDefaultMode);\n    const clientSharedValues = getSharedRuntimeConfig(config);\n    return {\n        ...clientSharedValues,\n        ...config,\n        runtime: \"node\",\n        defaultsMode,\n        bodyLengthChecker: config?.bodyLengthChecker ?? calculateBodyLength,\n        credentialDefaultProvider: config?.credentialDefaultProvider ?? decorateDefaultCredentialProvider(credentialDefaultProvider),\n        defaultUserAgentProvider: config?.defaultUserAgentProvider ??\n            defaultUserAgent({ serviceId: clientSharedValues.serviceId, clientVersion: packageInfo.version }),\n        maxAttempts: config?.maxAttempts ?? loadNodeConfig(NODE_MAX_ATTEMPT_CONFIG_OPTIONS),\n        region: config?.region ?? loadNodeConfig(NODE_REGION_CONFIG_OPTIONS, NODE_REGION_CONFIG_FILE_OPTIONS),\n        requestHandler: config?.requestHandler ?? new RequestHandler(defaultConfigProvider),\n        retryMode: config?.retryMode ??\n            loadNodeConfig({\n                ...NODE_RETRY_MODE_CONFIG_OPTIONS,\n                default: async () => (await defaultConfigProvider()).retryMode || DEFAULT_RETRY_MODE,\n            }),\n        sha256: config?.sha256 ?? Hash.bind(null, \"sha256\"),\n        streamCollector: config?.streamCollector ?? streamCollector,\n        useDualstackEndpoint: config?.useDualstackEndpoint ?? loadNodeConfig(NODE_USE_DUALSTACK_ENDPOINT_CONFIG_OPTIONS),\n        useFipsEndpoint: config?.useFipsEndpoint ?? loadNodeConfig(NODE_USE_FIPS_ENDPOINT_CONFIG_OPTIONS),\n    };\n};\n","import { NoOpLogger } from \"@aws-sdk/smithy-client\";\nimport { parseUrl } from \"@aws-sdk/url-parser\";\nimport { fromBase64, toBase64 } from \"@aws-sdk/util-base64\";\nimport { fromUtf8, toUtf8 } from \"@aws-sdk/util-utf8\";\nimport { defaultEndpointResolver } from \"./endpoint/endpointResolver\";\nexport const getRuntimeConfig = (config) => ({\n    apiVersion: \"2011-06-15\",\n    base64Decoder: config?.base64Decoder ?? fromBase64,\n    base64Encoder: config?.base64Encoder ?? toBase64,\n    disableHostPrefix: config?.disableHostPrefix ?? false,\n    endpointProvider: config?.endpointProvider ?? defaultEndpointResolver,\n    logger: config?.logger ?? new NoOpLogger(),\n    serviceId: config?.serviceId ?? \"STS\",\n    urlParser: config?.urlParser ?? parseUrl,\n    utf8Decoder: config?.utf8Decoder ?? fromUtf8,\n    utf8Encoder: config?.utf8Encoder ?? toUtf8,\n});\n","import { resolveRegionConfig } from \"@aws-sdk/config-resolver\";\nimport { getContentLengthPlugin } from \"@aws-sdk/middleware-content-length\";\nimport { resolveEndpointConfig } from \"@aws-sdk/middleware-endpoint\";\nimport { getHostHeaderPlugin, resolveHostHeaderConfig, } from \"@aws-sdk/middleware-host-header\";\nimport { getLoggerPlugin } from \"@aws-sdk/middleware-logger\";\nimport { getRecursionDetectionPlugin } from \"@aws-sdk/middleware-recursion-detection\";\nimport { getRetryPlugin, resolveRetryConfig } from \"@aws-sdk/middleware-retry\";\nimport { resolveStsAuthConfig } from \"@aws-sdk/middleware-sdk-sts\";\nimport { getUserAgentPlugin, resolveUserAgentConfig, } from \"@aws-sdk/middleware-user-agent\";\nimport { Client as __Client, } from \"@aws-sdk/smithy-client\";\nimport { resolveClientEndpointParameters, } from \"./endpoint/EndpointParameters\";\nimport { getRuntimeConfig as __getRuntimeConfig } from \"./runtimeConfig\";\nexport class STSClient extends __Client {\n    constructor(configuration) {\n        const _config_0 = __getRuntimeConfig(configuration);\n        const _config_1 = resolveClientEndpointParameters(_config_0);\n        const _config_2 = resolveRegionConfig(_config_1);\n        const _config_3 = resolveEndpointConfig(_config_2);\n        const _config_4 = resolveRetryConfig(_config_3);\n        const _config_5 = resolveHostHeaderConfig(_config_4);\n        const _config_6 = resolveStsAuthConfig(_config_5, { stsClientCtor: STSClient });\n        const _config_7 = resolveUserAgentConfig(_config_6);\n        super(_config_7);\n        this.config = _config_7;\n        this.middlewareStack.use(getRetryPlugin(this.config));\n        this.middlewareStack.use(getContentLengthPlugin(this.config));\n        this.middlewareStack.use(getHostHeaderPlugin(this.config));\n        this.middlewareStack.use(getLoggerPlugin(this.config));\n        this.middlewareStack.use(getRecursionDetectionPlugin(this.config));\n        this.middlewareStack.use(getUserAgentPlugin(this.config));\n    }\n    destroy() {\n        super.destroy();\n    }\n}\n","export const resolveClientEndpointParameters = (options) => {\n    return {\n        ...options,\n        useDualstackEndpoint: options.useDualstackEndpoint ?? false,\n        useFipsEndpoint: options.useFipsEndpoint ?? false,\n        useGlobalEndpoint: options.useGlobalEndpoint ?? false,\n        defaultSigningName: \"sts\",\n    };\n};\n","import { resolveAwsAuthConfig } from \"@aws-sdk/middleware-signing\";\nexport const resolveStsAuthConfig = (input, { stsClientCtor }) => resolveAwsAuthConfig({\n    ...input,\n    stsClientCtor,\n});\n","import { getDefaultRoleAssumer as StsGetDefaultRoleAssumer, getDefaultRoleAssumerWithWebIdentity as StsGetDefaultRoleAssumerWithWebIdentity, } from \"./defaultStsRoleAssumers\";\nimport { STSClient } from \"./STSClient\";\nconst getCustomizableStsClientCtor = (baseCtor, customizations) => {\n    if (!customizations)\n        return baseCtor;\n    else\n        return class CustomizableSTSClient extends baseCtor {\n            constructor(config) {\n                super(config);\n                for (const customization of customizations) {\n                    this.middlewareStack.use(customization);\n                }\n            }\n        };\n};\nexport const getDefaultRoleAssumer = (stsOptions = {}, stsPlugins) => StsGetDefaultRoleAssumer(stsOptions, getCustomizableStsClientCtor(STSClient, stsPlugins));\nexport const getDefaultRoleAssumerWithWebIdentity = (stsOptions = {}, stsPlugins) => StsGetDefaultRoleAssumerWithWebIdentity(stsOptions, getCustomizableStsClientCtor(STSClient, stsPlugins));\nexport const decorateDefaultCredentialProvider = (provider) => (input) => provider({\n    roleAssumer: getDefaultRoleAssumer(input),\n    roleAssumerWithWebIdentity: getDefaultRoleAssumerWithWebIdentity(input),\n    ...input,\n});\n","const u = \"required\", v = \"fn\", w = \"argv\", x = \"ref\";\nconst a = \"isSet\", b = \"tree\", c = \"error\", d = \"endpoint\", e = \"PartitionResult\", f = \"getAttr\", g = \"stringEquals\", h = { [u]: false, \"type\": \"String\" }, i = { [u]: true, \"default\": false, \"type\": \"Boolean\" }, j = { [x]: \"Endpoint\" }, k = { [v]: \"booleanEquals\", [w]: [{ [x]: \"UseFIPS\" }, true] }, l = { [v]: \"booleanEquals\", [w]: [{ [x]: \"UseDualStack\" }, true] }, m = {}, n = { [x]: \"Region\" }, o = { [v]: \"booleanEquals\", [w]: [true, { [v]: f, [w]: [{ [x]: e }, \"supportsFIPS\"] }] }, p = { [x]: e }, q = { [v]: \"booleanEquals\", [w]: [true, { [v]: f, [w]: [p, \"supportsDualStack\"] }] }, r = [k], s = [l], t = [n];\nconst _data = { version: \"1.0\", parameters: { Region: h, UseDualStack: i, UseFIPS: i, Endpoint: h }, rules: [{ conditions: [{ [v]: a, [w]: [j] }], type: b, rules: [{ conditions: r, error: \"Invalid Configuration: FIPS and custom endpoint are not supported\", type: c }, { type: b, rules: [{ conditions: s, error: \"Invalid Configuration: Dualstack and custom endpoint are not supported\", type: c }, { endpoint: { url: j, properties: m, headers: m }, type: d }] }] }, { type: b, rules: [{ conditions: [{ [v]: a, [w]: t }], type: b, rules: [{ conditions: [{ [v]: \"aws.partition\", [w]: t, assign: e }], type: b, rules: [{ conditions: [k, l], type: b, rules: [{ conditions: [o, q], type: b, rules: [{ type: b, rules: [{ endpoint: { url: \"https://dynamodb-fips.{Region}.{PartitionResult#dualStackDnsSuffix}\", properties: m, headers: m }, type: d }] }] }, { error: \"FIPS and DualStack are enabled, but this partition does not support one or both\", type: c }] }, { conditions: r, type: b, rules: [{ conditions: [o], type: b, rules: [{ type: b, rules: [{ conditions: [{ [v]: g, [w]: [\"aws-us-gov\", { [v]: f, [w]: [p, \"name\"] }] }], endpoint: { url: \"https://dynamodb.{Region}.amazonaws.com\", properties: m, headers: m }, type: d }, { endpoint: { url: \"https://dynamodb-fips.{Region}.{PartitionResult#dnsSuffix}\", properties: m, headers: m }, type: d }] }] }, { error: \"FIPS is enabled but this partition does not support FIPS\", type: c }] }, { conditions: s, type: b, rules: [{ conditions: [q], type: b, rules: [{ type: b, rules: [{ endpoint: { url: \"https://dynamodb.{Region}.{PartitionResult#dualStackDnsSuffix}\", properties: m, headers: m }, type: d }] }] }, { error: \"DualStack is enabled but this partition does not support DualStack\", type: c }] }, { type: b, rules: [{ conditions: [{ [v]: g, [w]: [n, \"local\"] }], endpoint: { url: \"http://localhost:8000\", properties: { authSchemes: [{ name: \"sigv4\", signingName: \"dynamodb\", signingRegion: \"us-east-1\" }] }, headers: m }, type: d }, { endpoint: { url: \"https://dynamodb.{Region}.{PartitionResult#dnsSuffix}\", properties: m, headers: m }, type: d }] }] }] }, { error: \"Invalid Configuration: Missing Region\", type: c }] }] };\nexport const ruleSet = _data;\n","import { resolveEndpoint } from \"@aws-sdk/util-endpoints\";\nimport { ruleSet } from \"./ruleset\";\nexport const defaultEndpointResolver = (endpointParams, context = {}) => {\n    return resolveEndpoint(ruleSet, {\n        endpointParams: endpointParams,\n        logger: context.logger,\n    });\n};\n","import packageInfo from \"../package.json\";\nimport { decorateDefaultCredentialProvider } from \"@aws-sdk/client-sts\";\nimport { NODE_REGION_CONFIG_FILE_OPTIONS, NODE_REGION_CONFIG_OPTIONS, NODE_USE_DUALSTACK_ENDPOINT_CONFIG_OPTIONS, NODE_USE_FIPS_ENDPOINT_CONFIG_OPTIONS, } from \"@aws-sdk/config-resolver\";\nimport { defaultProvider as credentialDefaultProvider } from \"@aws-sdk/credential-provider-node\";\nimport { Hash } from \"@aws-sdk/hash-node\";\nimport { NODE_ENDPOINT_DISCOVERY_CONFIG_OPTIONS } from \"@aws-sdk/middleware-endpoint-discovery\";\nimport { NODE_MAX_ATTEMPT_CONFIG_OPTIONS, NODE_RETRY_MODE_CONFIG_OPTIONS } from \"@aws-sdk/middleware-retry\";\nimport { loadConfig as loadNodeConfig } from \"@aws-sdk/node-config-provider\";\nimport { NodeHttpHandler as RequestHandler, streamCollector } from \"@aws-sdk/node-http-handler\";\nimport { calculateBodyLength } from \"@aws-sdk/util-body-length-node\";\nimport { DEFAULT_RETRY_MODE } from \"@aws-sdk/util-retry\";\nimport { defaultUserAgent } from \"@aws-sdk/util-user-agent-node\";\nimport { getRuntimeConfig as getSharedRuntimeConfig } from \"./runtimeConfig.shared\";\nimport { loadConfigsForDefaultMode } from \"@aws-sdk/smithy-client\";\nimport { resolveDefaultsModeConfig } from \"@aws-sdk/util-defaults-mode-node\";\nimport { emitWarningIfUnsupportedVersion } from \"@aws-sdk/smithy-client\";\nexport const getRuntimeConfig = (config) => {\n    emitWarningIfUnsupportedVersion(process.version);\n    const defaultsMode = resolveDefaultsModeConfig(config);\n    const defaultConfigProvider = () => defaultsMode().then(loadConfigsForDefaultMode);\n    const clientSharedValues = getSharedRuntimeConfig(config);\n    return {\n        ...clientSharedValues,\n        ...config,\n        runtime: \"node\",\n        defaultsMode,\n        bodyLengthChecker: config?.bodyLengthChecker ?? calculateBodyLength,\n        credentialDefaultProvider: config?.credentialDefaultProvider ?? decorateDefaultCredentialProvider(credentialDefaultProvider),\n        defaultUserAgentProvider: config?.defaultUserAgentProvider ??\n            defaultUserAgent({ serviceId: clientSharedValues.serviceId, clientVersion: packageInfo.version }),\n        endpointDiscoveryEnabledProvider: config?.endpointDiscoveryEnabledProvider ?? loadNodeConfig(NODE_ENDPOINT_DISCOVERY_CONFIG_OPTIONS),\n        maxAttempts: config?.maxAttempts ?? loadNodeConfig(NODE_MAX_ATTEMPT_CONFIG_OPTIONS),\n        region: config?.region ?? loadNodeConfig(NODE_REGION_CONFIG_OPTIONS, NODE_REGION_CONFIG_FILE_OPTIONS),\n        requestHandler: config?.requestHandler ?? new RequestHandler(defaultConfigProvider),\n        retryMode: config?.retryMode ??\n            loadNodeConfig({\n                ...NODE_RETRY_MODE_CONFIG_OPTIONS,\n                default: async () => (await defaultConfigProvider()).retryMode || DEFAULT_RETRY_MODE,\n            }),\n        sha256: config?.sha256 ?? Hash.bind(null, \"sha256\"),\n        streamCollector: config?.streamCollector ?? streamCollector,\n        useDualstackEndpoint: config?.useDualstackEndpoint ?? loadNodeConfig(NODE_USE_DUALSTACK_ENDPOINT_CONFIG_OPTIONS),\n        useFipsEndpoint: config?.useFipsEndpoint ?? loadNodeConfig(NODE_USE_FIPS_ENDPOINT_CONFIG_OPTIONS),\n    };\n};\n","import { NoOpLogger } from \"@aws-sdk/smithy-client\";\nimport { parseUrl } from \"@aws-sdk/url-parser\";\nimport { fromBase64, toBase64 } from \"@aws-sdk/util-base64\";\nimport { fromUtf8, toUtf8 } from \"@aws-sdk/util-utf8\";\nimport { defaultEndpointResolver } from \"./endpoint/endpointResolver\";\nexport const getRuntimeConfig = (config) => ({\n    apiVersion: \"2012-08-10\",\n    base64Decoder: config?.base64Decoder ?? fromBase64,\n    base64Encoder: config?.base64Encoder ?? toBase64,\n    disableHostPrefix: config?.disableHostPrefix ?? false,\n    endpointProvider: config?.endpointProvider ?? defaultEndpointResolver,\n    logger: config?.logger ?? new NoOpLogger(),\n    serviceId: config?.serviceId ?? \"DynamoDB\",\n    urlParser: config?.urlParser ?? parseUrl,\n    utf8Decoder: config?.utf8Decoder ?? fromUtf8,\n    utf8Encoder: config?.utf8Encoder ?? toUtf8,\n});\n","import { resolveRegionConfig } from \"@aws-sdk/config-resolver\";\nimport { getContentLengthPlugin } from \"@aws-sdk/middleware-content-length\";\nimport { resolveEndpointConfig } from \"@aws-sdk/middleware-endpoint\";\nimport { resolveEndpointDiscoveryConfig, } from \"@aws-sdk/middleware-endpoint-discovery\";\nimport { getHostHeaderPlugin, resolveHostHeaderConfig, } from \"@aws-sdk/middleware-host-header\";\nimport { getLoggerPlugin } from \"@aws-sdk/middleware-logger\";\nimport { getRecursionDetectionPlugin } from \"@aws-sdk/middleware-recursion-detection\";\nimport { getRetryPlugin, resolveRetryConfig } from \"@aws-sdk/middleware-retry\";\nimport { getAwsAuthPlugin, resolveAwsAuthConfig, } from \"@aws-sdk/middleware-signing\";\nimport { getUserAgentPlugin, resolveUserAgentConfig, } from \"@aws-sdk/middleware-user-agent\";\nimport { Client as __Client, } from \"@aws-sdk/smithy-client\";\nimport { DescribeEndpointsCommand, } from \"./commands/DescribeEndpointsCommand\";\nimport { resolveClientEndpointParameters, } from \"./endpoint/EndpointParameters\";\nimport { getRuntimeConfig as __getRuntimeConfig } from \"./runtimeConfig\";\nexport class DynamoDBClient extends __Client {\n    constructor(configuration) {\n        const _config_0 = __getRuntimeConfig(configuration);\n        const _config_1 = resolveClientEndpointParameters(_config_0);\n        const _config_2 = resolveRegionConfig(_config_1);\n        const _config_3 = resolveEndpointConfig(_config_2);\n        const _config_4 = resolveRetryConfig(_config_3);\n        const _config_5 = resolveHostHeaderConfig(_config_4);\n        const _config_6 = resolveAwsAuthConfig(_config_5);\n        const _config_7 = resolveUserAgentConfig(_config_6);\n        const _config_8 = resolveEndpointDiscoveryConfig(_config_7, {\n            endpointDiscoveryCommandCtor: DescribeEndpointsCommand,\n        });\n        super(_config_8);\n        this.config = _config_8;\n        this.middlewareStack.use(getRetryPlugin(this.config));\n        this.middlewareStack.use(getContentLengthPlugin(this.config));\n        this.middlewareStack.use(getHostHeaderPlugin(this.config));\n        this.middlewareStack.use(getLoggerPlugin(this.config));\n        this.middlewareStack.use(getRecursionDetectionPlugin(this.config));\n        this.middlewareStack.use(getAwsAuthPlugin(this.config));\n        this.middlewareStack.use(getUserAgentPlugin(this.config));\n    }\n    destroy() {\n        super.destroy();\n    }\n}\n","import { EndpointCache } from \"@aws-sdk/endpoint-cache\";\nexport const resolveEndpointDiscoveryConfig = (input, { endpointDiscoveryCommandCtor }) => ({\n    ...input,\n    endpointDiscoveryCommandCtor,\n    endpointCache: new EndpointCache(input.endpointCacheSize ?? 1000),\n    endpointDiscoveryEnabled: input.endpointDiscoveryEnabled !== undefined\n        ? () => Promise.resolve(input.endpointDiscoveryEnabled)\n        : input.endpointDiscoveryEnabledProvider,\n    isClientEndpointDiscoveryEnabled: input.endpointDiscoveryEnabled !== undefined,\n});\n","import { getEndpointPlugin } from \"@aws-sdk/middleware-endpoint\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\nimport { de_UpdateItemCommand, se_UpdateItemCommand } from \"../protocols/Aws_json1_0\";\nexport class UpdateItemCommand extends $Command {\n    static getEndpointParameterInstructions() {\n        return {\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use(getEndpointPlugin(configuration, UpdateItemCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"DynamoDBClient\";\n        const commandName = \"UpdateItemCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: (_) => _,\n            outputFilterSensitiveLog: (_) => _,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return se_UpdateItemCommand(input, context);\n    }\n    deserialize(output, context) {\n        return de_UpdateItemCommand(output, context);\n    }\n}\n","import {\n  ECSClient,\n  paginateListServices,\n  DescribeServicesCommand,\n  DescribeTaskDefinitionCommand,\n  RegisterTaskDefinitionCommand,\n  TaskDefinitionField,\n  UpdateServiceCommand\n} from '@aws-sdk/client-ecs'\n\nimport {\n  SSMClient,\n  paginateGetParametersByPath,\n  ListTagsForResourceCommand\n} from '@aws-sdk/client-ssm'\n\nimport {\n  DynamoDBClient,\n  UpdateItemCommand\n} from '@aws-sdk/client-dynamodb'\n\nimport {\n  EventBridgeClient,\n  ListRulesCommand,\n  ListTargetsByRuleCommand,\n  PutTargetsCommand\n} from '@aws-sdk/client-eventbridge'\n\nconst tagReducer = (previousValue, currentValue) => {\n  previousValue[currentValue.Key] = currentValue.Value\n  return previousValue\n}\n\nconst chunk = (arr, size) => arr.reduce((acc, _, i) => (i % size) ? acc : [...acc, arr.slice(i, i + size)], [])\nconst RETRY_CONFIG = {maxAttempts: 5, retryMode: 'standard'}\n\nexport async function ecsListServices (regexp, cluster) {\n  const client = new ECSClient({...RETRY_CONFIG})\n  const serviceArns = []\n  for await (const page of paginateListServices({ client, pageSize: 50 }, { cluster })) {\n    serviceArns.push(...page.serviceArns)\n  }\n  return serviceArns.filter(arn => regexp.test(arn))\n}\n\nexport async function ecsServiceTaskDefinitions (serviceArns, cluster) {\n  const client = new ECSClient({...RETRY_CONFIG})\n  const services = []\n  for (const arns of chunk(serviceArns, 10)) {\n    const result = await client.send(new DescribeServicesCommand({ cluster, services: arns }))\n    services.push(...result.services)\n  }\n  return await services.reduce(async (acc, key) => {\n    try {\n      const taskDef = await ecsDescribeTaskDefinition(key.taskDefinition)\n      return { ...await acc, [key.serviceArn]: taskDef.taskDefinition }\n    } catch (error) {\n      return { ...await acc, [key.serviceArn]: { error } }\n    }\n  }, {})\n}\n\nexport async function ecsDescribeTaskDefinition (taskDefinition) {\n  const client = new ECSClient({...RETRY_CONFIG})\n  return client.send(new DescribeTaskDefinitionCommand({ taskDefinition, include: [TaskDefinitionField.TAGS] }))\n}\n\nexport async function ecsRegisterTaskDefinition (taskDefinition) {\n  const client = new ECSClient({...RETRY_CONFIG})\n  const response = await client.send(new RegisterTaskDefinitionCommand(taskDefinition))\n  return response.taskDefinition.taskDefinitionArn\n}\n\nexport async function ecsUpdateService (service, cluster, taskDefinition) {\n  const client = new ECSClient({...RETRY_CONFIG})\n  const response = await client.send(new UpdateServiceCommand({ service, cluster, taskDefinition }))\n  return response.service\n}\n\nexport async function ssmParameters (prefix, decrypt = true) {\n  const client = new SSMClient({ region: 'us-east-1', ...RETRY_CONFIG })\n  const params = []\n  for await (const page of paginateGetParametersByPath({ client, pageSize: 10 }, {\n    Path: prefix,\n    WithDecryption: decrypt\n  })) {\n    params.push(...page.Parameters)\n  }\n  return await Promise.all(params.map(async (param) => {\n    const tags = (await client.send(new ListTagsForResourceCommand({\n      ResourceType: 'Parameter',\n      ResourceId: param.Name\n    }))).TagList\n    return {\n      name: param.Name,\n      value: param.Value,\n      tags: tags.reduce(tagReducer, {})\n    }\n  }))\n}\n\nexport async function ecsBuildNumber (projectName) {\n  const client = new DynamoDBClient({...RETRY_CONFIG})\n  return (await client.send(new UpdateItemCommand({\n    TableName: 'ECSBuildNumbers',\n    Key: { ProjectName: { 'S': projectName } },\n    ExpressionAttributeNames: { '#buildNumber': 'BuildNumber' },\n    ExpressionAttributeValues: { ':num': { 'N': '1' }, ':base': { 'N': '10000' } },\n    UpdateExpression: 'SET #buildNumber = if_not_exists(#buildNumber, :base) + :num',\n    ReturnValues: 'UPDATED_NEW'\n  }))).Attributes.BuildNumber.N\n}\n\nexport async function eventBridgeListRules (prefix) {\n  const client = new EventBridgeClient({...RETRY_CONFIG})\n  const rules = []\n  let NextToken = undefined\n\n  do {\n    const command = new ListRulesCommand({ NamePrefix: prefix, Limit: 10, NextToken })\n    const response = await client.send(command)\n    rules.push(...response.Rules)\n    NextToken = response.NextToken\n  } while (NextToken)\n  return rules\n}\n\nexport async function eventBridgeListTargets (ruleName) {\n  const client = new EventBridgeClient({...RETRY_CONFIG})\n  const targets = []\n  let NextToken = undefined\n\n  do {\n    const command = new ListTargetsByRuleCommand({ Rule: ruleName, Limit: 10, NextToken })\n    const response = await client.send(command)\n    targets.push(...response.Targets)\n    NextToken = response.NextToken\n  } while (NextToken)\n  return targets\n}\n\nexport async function eventBridgeUpdateTarget(ruleName, target) {\n  const client = new EventBridgeClient({...RETRY_CONFIG})\n  const command = new PutTargetsCommand({Rule: ruleName, Targets: [target]})\n  return await client.send(command)\n}\n","import * as core from '@actions/core'\nimport { ecsBuildNumber } from './aws'\n\nasync function run () {\n  try {\n    const projectName = core.getInput('project-name', { required: false }) || process.env.PROJECT_NAME\n    const buildNumber = parseInt(await ecsBuildNumber(projectName))\n\n    core.setOutput('build-number', buildNumber)\n    core.exportVariable('BUILD_NUMBER', buildNumber)\n  } catch (error) {\n    core.setFailed(error.message)\n  }\n}\n\nrun()\n"],"names":["__createBinding","this","Object","create","o","m","k","k2","undefined","defineProperty","enumerable","get","__setModuleDefault","v","value","__importStar","mod","__esModule","result","hasOwnProperty","call","exports","issue","issueCommand","os","utils_1","command","properties","message","cmd","Command","process","stdout","write","toString","EOL","name","constructor","cmdStr","keys","length","first","key","val","s","toCommandValue","replace","escapeData","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","step","next","e","rejected","done","then","apply","getIDToken","getState","saveState","group","endGroup","startGroup","info","notice","warning","error","debug","isDebug","setFailed","setCommandEcho","setOutput","getBooleanInput","getMultilineInput","getInput","addPath","setSecret","exportVariable","ExitCode","command_1","file_command_1","path","oidc_utils_1","options","env","toUpperCase","required","Error","trimWhitespace","trim","toCommandProperties","convertedVal","issueFileCommand","prepareKeyValueMessage","secret","inputPath","delimiter","inputs","split","filter","x","map","input","includes","TypeError","enabled","exitCode","Failure","fn","aud","OidcClient","summary_1","summary","summary_2","markdownSummary","path_utils_1","toPosixPath","toWin32Path","toPlatformPath","fs","uuid_1","filePath","existsSync","appendFileSync","encoding","v4","convertedValue","http_client_1","auth_1","core_1","static","allowRetry","maxRetry","requestOptions","allowRetries","maxRetries","HttpClient","BearerCredentialHandler","getRequestToken","token","runtimeUrl","id_token_url","_a","httpclient","createHttpClient","res","getJson","catch","statusCode","id_token","audience","getIDTokenUrl","encodeURIComponent","getCall","pth","sep","SUMMARY_DOCS_URL","SUMMARY_ENV_VAR","os_1","fs_1","access","appendFile","writeFile","promises","_summary","_buffer","_filePath","pathFromEnv","constants","R_OK","W_OK","wrap","tag","content","attrs","htmlAttrs","entries","join","overwrite","writeFunc","emptyBuffer","clear","stringify","isEmptyBuffer","addRaw","text","addEOL","addCodeBlock","code","lang","assign","element","addList","items","ordered","listItems","item","addTable","rows","tableBody","row","cells","cell","header","data","colspan","rowspan","addDetails","label","addImage","src","alt","width","height","addHeading","level","allowedTag","addSeparator","addBreak","addQuote","cite","addLink","href","String","JSON","annotationProperties","title","file","line","startLine","endLine","col","startColumn","endColumn","PersonalAccessTokenCredentialHandler","BasicCredentialHandler","username","password","prepareRequest","headers","Buffer","from","canHandleAuthentication","handleAuthentication","isHttps","HttpClientResponse","HttpClientError","getProxyUrl","MediaTypes","Headers","HttpCodes","http","https","pm","tunnel","serverUrl","proxyUrl","URL","HttpRedirectCodes","MovedPermanently","ResourceMoved","SeeOther","TemporaryRedirect","PermanentRedirect","HttpResponseRetryCodes","BadGateway","ServiceUnavailable","GatewayTimeout","RetryableHttpVerbs","super","setPrototypeOf","prototype","readBody","output","alloc","on","chunk","concat","requestUrl","protocol","userAgent","handlers","_ignoreSslError","_allowRedirects","_allowRedirectDowngrade","_maxRedirects","_allowRetries","_maxRetries","_keepAlive","_disposed","ignoreSslError","_socketTimeout","socketTimeout","allowRedirects","allowRedirectDowngrade","maxRedirects","Math","max","keepAlive","additionalHeaders","request","del","post","patch","put","head","sendStream","verb","stream","Accept","_getExistingOrDefaultHeader","ApplicationJson","_processResponse","postJson","obj","ContentType","putJson","patchJson","parsedUrl","_prepareRequest","maxTries","response","numTries","requestRaw","Unauthorized","authenticationHandler","handler","redirectsRemaining","redirectUrl","parsedRedirectUrl","hostname","toLowerCase","_performExponentialBackoff","dispose","_agent","destroy","requestRawWithCallback","err","onResult","byteLength","callbackCalled","handleResult","req","httpModule","msg","socket","sock","setTimeout","end","pipe","getAgent","_getAgent","method","usingSsl","defaultPort","host","port","parseInt","pathname","search","_mergeHeaders","agent","lowercaseKeys","_default","clientHeader","useProxy","_proxyAgent","maxSockets","globalAgent","agentOptions","proxy","proxyAuth","tunnelAgent","overHttps","httpsOverHttps","httpsOverHttp","httpOverHttps","httpOverHttp","Agent","rejectUnauthorized","retryNumber","min","ms","pow","contents","NotFound","deserializeDates","parse","a","Date","isNaN","valueOf","reduce","c","checkBypass","reqUrl","noProxy","reqPort","Number","upperReqHosts","push","upperNoProxyItem","some","proxyVar","validator","XMLParser","XMLBuilder","module","XMLValidator","nameStartChar","nameRegexp","regexName","RegExp","isExist","isEmptyObject","merge","target","arrayMode","len","i","getValue","isName","string","match","exec","getAllMatches","regex","matches","allmatches","startIndex","lastIndex","index","util","defaultOptions","allowBooleanAttributes","unpairedTags","isWhiteSpace","char","readPI","xmlData","start","tagname","substr","getErrorObject","getLineNumberForPosition","readCommentAndCDATA","angleBracketsCount","validate","tags","tagFound","reachedRoot","tagStartPos","closingTag","tagName","substring","readAttributeStr","attrStr","attrStrStart","isValid","validateAttributeString","tagClosed","otg","pop","openPos","indexOf","afterAmp","validateAmpersand","t","doubleQuote","singleQuote","startChar","validAttrStrRegxp","attrNames","getPositionFromMatch","attrName","validateAttrName","re","validateNumberAmpersand","count","lineNumber","lines","buildFromOrderedJs","attributeNamePrefix","attributesGroupName","textNodeName","ignoreAttributes","cdataPropName","format","indentBy","suppressEmptyNode","suppressUnpairedNode","suppressBooleanAttributes","tagValueProcessor","attributeValueProcessor","preserveOrder","commentPropName","entities","processEntities","stopNodes","Builder","isAttribute","attrPrefixLen","processTextOrObjNode","indentate","tagEndChar","newLine","object","j2x","buildTextValNode","buildObjectNode","repeat","startsWith","build","jObj","Array","isArray","arrayNodeName","attr","buildAttrPairStr","newval","replaceEntitiesValue","arrLen","j","Ks","L","closeTag","tagEndExp","piClosingChar","textValue","entity","arrToStr","arr","jPath","indentation","xmlStr","isPreviousElementTag","tagObj","propName","newJPath","tagText","isStopNode","attStr","attr_to_str","tempInd","piTextNodeName","newIdentation","tagStart","tagValue","endsWith","attrMap","attrVal","lastIndexOf","jArray","entityRegex","parseEntityExp","exp","regx","hasBody","comment","removeNSPrefix","parseTagValue","parseAttributeValue","trimValues","numberParseOptions","hex","leadingZeros","eNotation","alwaysCreateTextNode","htmlEntities","ignoreDeclaration","ignorePiTags","transformTagName","transformAttributeName","buildOptions","xmlNode","readDocType","toNumber","addExternalEntities","externalEntities","entKeys","ent","lastEntities","parseTextData","dontTrim","hasAttributes","isLeafNode","escapeEntities","parseValue","resolveNameSpace","prefix","charAt","attrsRegx","buildAttributesMap","oldVal","aName","newVal","attrCollection","parseXml","xmlObj","currentNode","textData","closeIndex","findClosingIndex","colonIndex","saveTextToParentTag","tagsNodeStack","tagData","readTagExp","childNode","add","tagExp","attrExpPresent","addChild","endIndex","docTypeEntities","lastTag","isItStopNode","tagContent","readStopNodeData","child","entityName","ampEntity","currentTagName","allNodesExp","stopNodePath","stopNodeExp","str","errMsg","closingIndex","closingChar","attrBoundary","ch","tagExpWithClosingIndex","separatorIndex","openTagCount","shouldParse","OrderedObjParser","prettify","validationOption","orderedObjParser","orderedResult","addEntity","compress","compressedObj","property","newJpath","isLeaf","isLeafTag","assignAttributes","jpath","atrrName","propCount","node","Iterator","forEach","typed","iterables","LRUCache","Keys","Values","capacity","arguments","PointerArray","getPointerArray","forward","backward","K","V","size","tail","splayOnTop","pointer","oldHead","previous","set","setpop","oldValue","oldKey","evicted","has","peek","callback","scope","l","values","Symbol","iterator","inspect","Map","for","iterable","guessLength","cache","isArrayLike","isTypedArray","toArray","array","toArrayWithIndices","IndexArray","indices","MAX_8BIT_INTEGER","MAX_16BIT_INTEGER","MAX_32BIT_INTEGER","MAX_SIGNED_8BIT_INTEGER","MAX_SIGNED_16BIT_INTEGER","MAX_SIGNED_32BIT_INTEGER","maxIndex","Uint8Array","Uint16Array","Uint32Array","Float64Array","getSignedPointerArray","Int8Array","Int16Array","Int32Array","getNumberType","sign","TYPE_PRIORITY","Float32Array","getMinimalRepresentation","getter","p","maxType","maxPriority","ArrayBuffer","isView","ARRAY_BUFFER_SUPPORT","SYMBOL_SUPPORT","forEachWithNullKeys","Set","writable","_next","of","args","empty","is","hexRegex","numRegex","window","parseFloat","consider","decimalPoint","trimmedStr","skipLike","test","numTrimmedByZeros","numStr","trimZeros","num","tls","events","TunnelingAgent","self","proxyOptions","defaultMaxSockets","requests","sockets","localAddress","toOptions","pending","splice","onSocket","removeSocket","createSecureSocket","cb","createSocket","hostHeader","getHeader","tlsOptions","mergeOptions","servername","secureSocket","connect","overrides","keyLen","inherits","EventEmitter","addRequest","onFree","emit","onCloseOrRemove","removeListener","placeholder","connectOptions","connectReq","onConnect","removeAllListeners","useChunkedEncodingByDefault","once","upgrade","nextTick","cause","stack","pos","shift","NODE_DEBUG","slice","unshift","console","_nodeId","_clockseq","_lastMSecs","_lastNSecs","buf","offset","b","clockseq","seedBytes","random","rng","msecs","now","nsecs","dt","tl","tmh","n","uuid","version","hashfunc","generateUUID","namespace","unescape","bytes","charCodeAt","stringToBytes","DNS","v35","update","digest","rnds8Pool","poolPtr","byteToHex","rnds","require","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","d","definition","prop","r","toStringTag","SelectorType","booleanSelector","type","NODE_USE_DUALSTACK_ENDPOINT_CONFIG_OPTIONS","environmentVariableSelector","ENV","configFileSelector","profile","CONFIG","default","NODE_USE_FIPS_ENDPOINT_CONFIG_OPTIONS","NODE_REGION_CONFIG_OPTIONS","NODE_REGION_CONFIG_FILE_OPTIONS","preferredFile","isFipsRegion","region","getRealRegion","resolveRegionConfig","useFipsEndpoint","async","providedRegion","FieldPosition","query","body","clone","cloned","carry","paramName","param","resp","CONTENT_LENGTH_HEADER","contentLengthMiddlewareOptions","override","getContentLengthPlugin","applyToStack","clientStack","bodyLengthChecker","deserializerMiddlewareOption","serializerMiddlewareOption","getSerdePlugin","config","serializer","deserializer","commandStack","context","hint","deserializerMiddleware","endpoint","endpointV2","url","urlParser","serializerMiddleware","DOMAIN_PATTERN","IP_ADDRESS_PATTERN","DOTS_PATTERN","isDnsCompatibleBucketName","bucketName","isArnBucketName","arn","partition","service","account","typeOrId","isArn","isValidArn","Boolean","createConfigValueProvider","configKey","canonicalEndpointParamKey","configProvider","configValue","resolveParams","commandInput","instructionsSupplier","clientConfig","endpointParams","instructions","getEndpointParameterInstructions","instruction","serviceId","bucket","Bucket","ForcePathStyle","Endpoint","DisableMultiRegionAccessPoints","disableMultiRegionAccessPoints","DisableMRAP","resolveParamsForS3","endpointMiddleware","endpointProvider","getEndpointFromInstructions","authSchemes","authScheme","signingRegion","signingName","endpointMiddlewareOptions","relation","toMiddleware","getEndpointPlugin","addRelativeTo","promisified","parseUrl","querystring","pair","decodeURIComponent","parseQueryString","resolveEndpointConfig","customEndpointProvider","toEndpointV1","isCustomEndpoint","useDualstackEndpoint","ENV_ENDPOINT_DISCOVERY","CONFIG_ENDPOINT_DISCOVERY","isFalsy","NODE_ENDPOINT_DISCOVERY_CONFIG_OPTIONS","envKey","EndpointCache","getEndpoint","endpointsWithExpiry","endpoints","Address","floor","Expires","delete","CachePeriodInMinutes","hostHeaderMiddlewareOptions","priority","getHostHeaderPlugin","handlerProtocol","requestHandler","metadata","hostHeaderMiddleware","loggerMiddlewareOptions","getLoggerPlugin","clientName","commandName","logger","dynamoDbDocumentClientOptions","overrideInputFilterSensitiveLog","overrideOutputFilterSensitiveLog","inputFilterSensitiveLog","outputFilterSensitiveLog","$metadata","outputWithoutMetadata","TRACE_ID_HEADER_NAME","addRecursionDetectionMiddlewareOptions","getRecursionDetectionPlugin","runtime","functionName","traceId","nonEmptyString","recursionDetectionMiddleware","RETRY_MODES","DEFAULT_RETRY_MODE","STANDARD","THROTTLING_ERROR_CODES","TRANSIENT_ERROR_CODES","TRANSIENT_ERROR_STATUS_CODES","NODEJS_TIMEOUT_ERROR_CODES","httpStatusCode","$retryable","throttling","isTransientError","currentCapacity","lastMaxRate","measuredTxRate","requestCount","lastTimestamp","timeWindow","beta","minCapacity","minFillRate","scaleConstant","smooth","currentTimeInSeconds","getCurrentTimeInSeconds","lastThrottleTime","lastTxRateBucket","fillRate","maxCapacity","acquireTokenBucket","amount","refillTokenBucket","delay","timestamp","fillAmount","updateClientSendingRate","calculatedRate","updateMeasuredRate","rateToUse","calculateTimeWindow","cubicThrottle","enableTokenBucket","cubicSuccess","newRate","updateTokenBucketRate","getPrecise","timeBucket","currentRate","toFixed","getDefaultRetryToken","initialRetryTokens","initialRetryDelay","initialRetryCount","MAX_CAPACITY","retryCost","timeoutRetryCost","retryBackoffStrategy","delayBase","computeNextBackoffDelay","attempts","setDelayBase","getDefaultRetryBackoffStrategy","lastRetryCost","availableCapacity","retryDelay","retryCount","getCapacityAmount","errorType","hasRetryTokens","getRetryCount","getRetryDelay","getLastRetryCost","getRetryTokenCount","errorInfo","capacityAmount","delayFromErrorType","retryAfterHint","delayFromRetryAfterHint","getTime","releaseRetryTokens","releaseAmount","maxAttempts","mode","retryToken","maxAttemptsProvider","retryTokenScope","tokenToRenew","getMaxAttempts","shouldRetry","recordSuccess","warn","isRetryableError","AdaptiveRetryStrategy","rateLimiter","standardRetryStrategy","getSendToken","acquireInitialRetryToken","refreshRetryTokenForRetry","ENV_MAX_ATTEMPTS","CONFIG_MAX_ATTEMPTS","NODE_MAX_ATTEMPT_CONFIG_OPTIONS","maxAttempt","resolveRetryConfig","retryStrategy","retryMode","NODE_RETRY_MODE_CONFIG_OPTIONS","isRetryStrategyV2","getRetryErrorInfo","getRetryErrorType","getRetryAfterHint","$response","isServerError","retryMiddlewareOptions","getRetryPlugin","retry","lastError","totalRetryDelay","retryErrorInfo","refreshError","retryMiddleware","retryAfterHeaderName","find","retryAfter","retryAfterSeconds","ProviderError","tryNextLink","CredentialsProviderError","TokenProviderError","chain","providers","promise","provider","memoize","isExpired","requiresRefresh","resolved","hasResult","isConstant","coalesceProvider","forceRefresh","SHORT_TO_HEX","HEX_TO_SHORT","encodedByte","toHex","out","isArrayBuffer","arg","fromArrayBuffer","fromString","fromUtf8","buffer","byteOffset","BYTES_PER_ELEMENT","toUint8Array","toUtf8","AMZ_DATE_QUERY_PARAM","SIGNATURE_QUERY_PARAM","TOKEN_QUERY_PARAM","AUTH_HEADER","AMZ_DATE_HEADER","GENERATED_HEADERS","SIGNATURE_HEADER","SHA256_HEADER","TOKEN_HEADER","ALWAYS_UNSIGNABLE_HEADERS","authorization","connection","expect","pragma","referer","te","trailer","PROXY_HEADER_PATTERN","SEC_HEADER_PATTERN","ALGORITHM_IDENTIFIER","EVENT_ALGORITHM_IDENTIFIER","KEY_TYPE_IDENTIFIER","signingKeyCache","cacheQueue","createScope","shortDate","hmac","ctor","hash","getCanonicalHeaders","unsignableHeaders","signableHeaders","canonical","headerName","sort","canonicalHeaderName","escapeUri","uri","hexEncode","getPayloadHash","hashConstructor","hashCtor","cloneRequest","rest","toDate","time","applyChecksum","credentials","sha256","uriEscapePath","regionProvider","credentialProvider","originalRequest","signingDate","expiresIn","unhoistableHeaders","signingService","validateResolvedCredentials","longDate","formatDate","lname","moveHeadersToQuery","sessionToken","accessKeyId","canonicalHeaders","getCanonicalHeaderList","getSignature","getSigningKey","createCanonicalRequest","toSign","signString","payload","signEvent","signRequest","priorSignature","hashedPayload","hashedHeaders","stringToSign","requestToSign","payloadHash","soughtHeader","hasHeader","signature","sortedHeaders","getCanonicalPath","serialized","encoded","getCanonicalQuery","credentialScope","canonicalRequest","hashedRequest","normalizedPathSegments","pathSegment","normalizedPath","keyPromise","createStringToSign","sha256Constructor","cacheKey","secretAccessKey","signable","toISOString","resolveAwsAuthConfig","normalizedCreds","normalizeCredentialProvider","credentialDefaultProvider","signingEscapePath","systemClockOffset","signer","regionInfoProvider","regionInfo","params","signerConstructor","defaultSigningName","expiration","getSkewCorrectedDate","getUpdatedSystemClockOffset","clockTime","currentSystemClockOffset","clockTimeInMs","abs","isClockSkewed","getDateHeader","date","awsAuthMiddlewareOptions","getAwsAuthPlugin","multiRegionOverride","signingRegionSet","serverTime","ServerTime","dateHeader","awsAuthMiddleware","resolveUserAgentConfig","customUserAgent","selectedPartitionsInfo","selectedUserAgentPrefix","partitions","regions","outputs","regionData","regionRegex","DEFAULT_PARTITION","id","setPartitionInfo","partitionsInfo","userAgentPrefix","useDefaultPartitionInfo","getUserAgentPrefix","debugId","toDebugString","ref","argv","EndpointError","IP_V4_REGEX","isIpAddress","VALID_HOST_LABEL_REGEX","isValidHostLabel","allowSubDomains","labels","isVirtualHostableS3Bucket","parseArn","segments","accountId","resourceId","booleanEquals","value1","value2","getAttr","parts","pathList","part","squareBracketIndex","arrayIndex","getAttrPathList","acc","isSet","not","HttpAuthLocation","HostAddressType","EndpointURLScheme","RequestHandlerProtocol","DEFAULT_PORTS","HTTP","HTTPS","parseURL","whatwgURL","urlString","scheme","isIp","authority","stringEquals","stop","reverse","uriEncode","evaluateTemplate","template","evaluatedTemplateArr","templateContext","referenceRecord","currentIndex","openingBraceIndex","closingBraceIndex","parameterName","refName","evaluateExpression","keyName","callFunction","getReferenceValue","evaluatedArgs","evaluateCondition","fnArgs","toAssign","evaluateConditions","conditions","conditionsReferenceRecord","condition","getEndpointHeaders","headerKey","headerVal","headerValEntry","processedExpr","getEndpointProperty","propertyEntry","getEndpointProperties","propertyKey","propertyVal","getEndpointUrl","endpointUrl","expression","evaluateEndpointRule","endpointRule","endpointRuleOptions","evaluateErrorRule","errorRule","evaluateTreeRule","treeRule","rules","evaluateRules","rule","endpointOrUndefined","resolveEndpoint","ruleSetObject","parameters","paramsWithDefault","paramKey","paramDefaultValue","requiredParams","requiredParam","givenEndpoint","USER_AGENT","X_AMZ_USER_AGENT","UA_ESCAPE_REGEX","escapeUserAgent","prefixSeparatorIndex","uaName","getUserAgentMiddlewareOptions","getUserAgentPlugin","defaultUserAgent","defaultUserAgentProvider","sdkUserAgentValue","normalUAValue","section","NoOpLogger","trace","constructStack","absoluteEntries","relativeEntries","entriesNameSet","cloneTo","toStack","entry","middleware","expandRelativeMiddlewareList","expandedMiddlewareList","before","after","getMiddlewareList","normalizedAbsoluteEntries","normalizedRelativeEntries","normalizedEntriesNameMap","normalizedEntry","mainChain","stepWeights","priorityWeights","wholeList","expendedMiddlewareList","toOverrideIndex","findIndex","toOverride","use","plugin","remove","toRemove","isRemoved","filterCb","removeByName","removeByReference","removeByTag","identify","mw","initialize","serialize","finalizeRequest","deserialize","high","normal","low","Client","middlewareStack","send","optionsOrCb","resolveMiddleware","expectBoolean","stackTraceWarning","lower","expectNumber","parsed","MAX_FLOAT","ceil","expectFloat32","expected","Infinity","expectLong","isInteger","expectInt32","expectSizedInt","expectShort","expectByte","castInt","expectNonNull","location","expectObject","receivedType","expectString","expectUnion","asObject","setKeys","NUMBER_REGEX","parseNumber","limitedParseDouble","parseFloatString","NaN","strictParseInt32","MONTHS","RFC3339_WITH_OFFSET","parseRfc3339DateTimeWithOffset","_","yearStr","monthStr","dayStr","hours","minutes","seconds","fractionalMilliseconds","offsetStr","year","stripLeadingZeroes","month","parseDateValue","day","buildDate","setTime","parseOffsetToMilliseconds","adjustedMonth","validateDayOfMonth","UTC","parseMilliseconds","DAYS_IN_MONTH","maxDays","isLeapYear","upper","dateVal","strictParseByte","strictParseFloat32","directionStr","direction","idx","ServiceException","$fault","decorateServiceException","exception","additions","Message","withBaseException","ExceptionCtor","parsedBody","errorCode","exceptionCtor","deserializeMetadata","Code","throwDefaultError","requestId","extendedRequestId","cfId","loadConfigsForDefaultMode","connectionTimeout","warningEmitted","emitWarningIfUnsupportedVersion","extendedEncodeURIComponent","getValueFromTextNode","StringWrapper","Class","getPrototypeOf","instance","Function","bind","configurable","arg0","arg1","arg2","mapWithFilter","applyInstruction","source","_instructions","targetKey","nonNullish","valueFn","pass","sourceKey","_value","defaultFilterPassed","customFilterPassed","DynamoDBServiceException","InternalServerError","opts","RequestLimitExceeded","InvalidEndpointException","ProvisionedThroughputExceededException","ResourceNotFoundException","ItemCollectionSizeLimitExceededException","ConditionalCheckFailedException","TransactionConflictException","AttributeValue","visit","visitor","S","N","B","SS","NS","BS","M","NULL","BOOL","$unknown","de_DescribeEndpointsCommandError","parsedOutput","parseErrorBody","loadRestJsonErrorCode","de_UpdateItemCommandError","de_ConditionalCheckFailedExceptionRes","de_InternalServerErrorRes","de_InvalidEndpointExceptionRes","de_ItemCollectionSizeLimitExceededExceptionRes","de_ProvisionedThroughputExceededExceptionRes","de_RequestLimitExceededRes","de_ResourceNotFoundExceptionRes","de_TransactionConflictExceptionRes","deserialized","se_AttributeValue","base64Encoder","se_BinarySetAttributeValue","se_ListAttributeValue","se_MapAttributeValue","se_AttributeValueList","se_AttributeValueUpdate","Action","Value","se_ExpectedAttributeMap","se_ExpectedAttributeValue","AttributeValueList","ComparisonOperator","Exists","se_ExpressionAttributeValueMap","se_Key","se_UpdateItemInput","AttributeUpdates","se_AttributeUpdates","ConditionExpression","ConditionalOperator","Expected","ExpressionAttributeNames","ExpressionAttributeValues","Key","ReturnConsumedCapacity","ReturnItemCollectionMetrics","ReturnValues","TableName","UpdateExpression","de_AttributeMap","de_AttributeValue","base64Decoder","de_BinarySetAttributeValue","de_ListAttributeValue","de_MapAttributeValue","retVal","de_Capacity","CapacityUnits","ReadCapacityUnits","WriteCapacityUnits","de_ConsumedCapacity","GlobalSecondaryIndexes","de_SecondaryIndexesCapacityMap","LocalSecondaryIndexes","Table","de_ItemCollectionMetrics","ItemCollectionKey","de_ItemCollectionKeyAttributeMap","SizeEstimateRangeGB","de_ItemCollectionSizeEstimateRange","de_UpdateItemOutput","Attributes","ConsumedCapacity","ItemCollectionMetrics","collectBody","streamBody","streamCollector","buildHttpRpcRequest","resolvedHostname","basePath","sharedHeaders","operation","parseBody","utf8Encoder","collectBodyString","errorBody","sanitizeErrorCode","rawValue","cleanValue","DescribeEndpointsCommand","UseFIPS","Region","UseDualStack","configuration","handlerExecutionContext","handle","se_DescribeEndpointsCommand","de_DescribeEndpointsCommand","STSServiceException","ExpiredTokenException","MalformedPolicyDocumentException","PackedPolicyTooLargeException","RegionDisabledException","IDPRejectedClaimException","InvalidIdentityTokenException","IDPCommunicationErrorException","de_AssumeRoleCommandError","loadQueryErrorCode","de_ExpiredTokenExceptionRes","de_MalformedPolicyDocumentExceptionRes","de_PackedPolicyTooLargeExceptionRes","de_RegionDisabledExceptionRes","de_AssumeRoleWithWebIdentityCommandError","de_IDPCommunicationErrorExceptionRes","de_IDPRejectedClaimExceptionRes","de_InvalidIdentityTokenExceptionRes","de_ExpiredTokenException","de_IDPCommunicationErrorException","de_IDPRejectedClaimException","de_InvalidIdentityTokenException","de_MalformedPolicyDocumentException","de_PackedPolicyTooLargeException","de_RegionDisabledException","se_AssumeRoleRequest","RoleArn","RoleSessionName","PolicyArns","memberEntries","se_policyDescriptorListType","Policy","DurationSeconds","Tags","se_tagListType","TransitiveTagKeys","se_tagKeyListType","ExternalId","SerialNumber","TokenCode","SourceIdentity","se_AssumeRoleWithWebIdentityRequest","WebIdentityToken","ProviderId","counter","se_PolicyDescriptorType","se_Tag","de_AssumedRoleUser","AssumedRoleId","Arn","de_AssumeRoleResponse","Credentials","de_Credentials","AssumedRoleUser","PackedPolicySize","de_AssumeRoleWithWebIdentityResponse","SubjectFromWebIdentityToken","Provider","Audience","AccessKeyId","SecretAccessKey","SessionToken","Expiration","SHARED_HEADERS","parser","parsedObj","parsedObjToReturn","buildFormUrlencodedString","formEntries","AssumeRoleCommand","UseGlobalEndpoint","Version","se_AssumeRoleCommand","AssumeRoleResult","de_AssumeRoleCommand","AssumeRoleWithWebIdentityCommand","se_AssumeRoleWithWebIdentityCommand","AssumeRoleWithWebIdentityResult","de_AssumeRoleWithWebIdentityCommand","ASSUME_ROLE_DEFAULT_REGION","decorateDefaultRegion","getDefaultRoleAssumer","stsOptions","stsClientCtor","stsClient","closureSourceCreds","sourceCreds","getDefaultRoleAssumerWithWebIdentity","fromEnv","expiry","getHomeDir","HOME","USERPROFILE","HOMEPATH","HOMEDRIVE","homedir","ENV_PROFILE","getProfileName","init","getSSOTokenFilepath","cacheName","createHash","readFile","getSSOTokenFromFile","ssoTokenFilepath","ssoTokenText","getConfigFilepath","getCredentialsFilepath","profileKeyRegex","getProfileData","profileNameBlockList","parseIni","iniData","currentSection","indexOfEqualsSign","filePromisesHash","slurpFile","ignoreCache","swallowError","loadSharedConfigFiles","filepath","configFilepath","parsedFiles","all","configFile","credentialsFile","ssoSessionKeyRegex","getSsoSessionData","loadSsoSessionData","parseKnownFiles","files","merged","mergeConfigFiles","httpRequest","chunks","isImdsCredentials","Token","fromImdsCredentials","creds","providerConfigFromInit","timeout","toRetry","ENV_CMDS_FULL_URI","ENV_CMDS_RELATIVE_URI","ENV_CMDS_AUTH_TOKEN","fromContainerMetadata","getCmdsUri","credsResponse","requestFromEcsImds","Authorization","GREENGRASS_HOSTS","localhost","GREENGRASS_PROTOCOLS","defaultValue","isFunction","staticValue","loadConfig","envVarSelector","configSelector","profileFromCredentials","profileFromConfig","mergedProfile","fromSharedConfigFiles","ENDPOINT_CONFIG_OPTIONS","EndpointMode","ENDPOINT_MODE_CONFIG_OPTIONS","IPv4","getInstanceMetadataEndpoint","getFromEndpointConfig","getFromEndpointModeConfig","endpointMode","IPv6","getExtendedInstanceMetadataCredentials","refreshInterval","newExpiration","originalExpiration","IMDS_PATH","fromInstanceMetadata","pastCredentials","staticStabilityProvider","getInstanceImdsProvider","disableFetchToken","getCredentials","getProfile","getCredentialsFromProfile","getMetadataToken","isAssumeRoleWithSourceProfile","source_profile","credential_source","isAssumeRoleWithProviderProfile","resolveAssumeRoleCredentials","profileName","profiles","visitedProfiles","roleAssumer","sourceCredsProvider","resolveProfileData","credentialSource","sourceProvidersMap","EcsContainer","Ec2InstanceMetadata","Environment","resolveCredentialSource","role_arn","role_session_name","external_id","mfa_serial","mfaCodeProvider","resolveProcessCredentials","credentialProcess","execPromise","promisify","currentTime","getValidatedProcessCredentials","fromProcess","isSsoProfile","sso_start_url","sso_account_id","sso_session","sso_region","sso_role_name","Hash","algorithmIdentifier","reset","toHash","castSourceData","createHmac","toCast","transformedHeaders","headerValues","writeBody","Readable","NodeHttpHandler","_options","resolveDefaultConfig","requestTimeout","httpAgent","httpsAgent","abortSignal","aborted","abortError","isSSL","queryString","iLen","qsEntry","nodeHttpsOptions","httpResponse","timeoutInMs","connecting","timeoutId","clearTimeout","setConnectionTimeout","setSocketTimeout","onabort","abort","keepAliveMsecs","setKeepAlive","setSocketKeepAlive","sessions","poll","offerLast","session","contains","destroyed","Collector","Writable","bufferedBytes","_write","collector","calculateBodyLength","isBuffer","lstatSync","fd","fstatSync","clientVersion","sections","platform","release","versions","crtAvailable","isCrtAvailable","appIdPromise","resolvedUserAgent","appId","BASE64_REGEX","fromBase64","toBase64","q","f","g","h","ruleSet","defaultEndpointResolver","AWS_REGION_ENV","AWS_DEFAULT_REGION_ENV","DEFAULTS_MODE_OPTIONS","NODE_DEFAULTS_MODE_CONFIG_OPTIONS","resolveDefaultsModeConfig","defaultsMode","resolveNodeDefaultsModeAuto","toLocaleLowerCase","clientRegion","resolvedRegion","inferredRegion","inferPhysicalRegion","defaultConfigProvider","clientSharedValues","apiVersion","disableHostPrefix","utf8Decoder","SSOClient","_config_0","_config_1","_config_2","_config_3","_config_6","SSOServiceException","InvalidRequestException","TooManyRequestsException","UnauthorizedException","GetRoleCredentialsRequestFilterSensitiveLog","accessToken","RoleCredentialsFilterSensitiveLog","GetRoleCredentialsResponseFilterSensitiveLog","roleCredentials","de_GetRoleCredentialsCommandError","de_InvalidRequestExceptionRes","de_TooManyRequestsExceptionRes","de_UnauthorizedExceptionRes","doc","isSerializableHeaderValue","getOwnPropertyNames","GetRoleCredentialsCommand","resolvedPath","role_name","roleName","account_id","se_GetRoleCredentialsCommand","de_GetRoleCredentialsCommand","REFRESH_MESSAGE","SSOOIDCServiceException","AccessDeniedException","error_description","AuthorizationPendingException","InternalServerException","InvalidClientException","InvalidGrantException","InvalidScopeException","SlowDownException","UnauthorizedClientException","UnsupportedGrantTypeException","de_CreateTokenCommandError","de_AccessDeniedExceptionRes","de_AuthorizationPendingExceptionRes","de_InternalServerExceptionRes","de_InvalidClientExceptionRes","de_InvalidGrantExceptionRes","de_InvalidScopeExceptionRes","de_SlowDownExceptionRes","de_UnauthorizedClientExceptionRes","de_UnsupportedGrantTypeExceptionRes","CreateTokenCommand","clientId","clientSecret","deviceCode","grantType","redirectUri","refreshToken","se_CreateTokenCommand","idToken","tokenType","de_CreateTokenCommand","SSOOIDCClient","ssoOidcClientsHash","getNewSsoOidcToken","ssoToken","ssoRegion","ssoOidcClient","getSsoOidcClient","validateTokenExpiry","validateTokenKey","forRefresh","lastRefreshAttemptTime","fromSso","ssoSessionName","ssoSession","ssoSessionRequiredKey","expiresAt","existingToken","newSsoOidcToken","newTokenExpiration","tokenFilepath","tokenString","writeSSOTokenToFile","SHOULD_FAIL_CREDENTIAL_CHAIN","resolveSSOCredentials","ssoStartUrl","ssoAccountId","ssoRoleName","ssoClient","refreshMessage","_token","sso","ssoResp","validateSsoProfile","fromSSO","conflictMsg","isStaticCredsProfile","aws_access_key_id","aws_secret_access_key","aws_session_token","resolveStaticCredentials","fromTokenFile","resolveTokenFile","webIdentityTokenFile","roleArn","roleSessionName","webIdentityToken","providerId","policyArns","policy","durationSeconds","roleAssumerWithWebIdentity","fromWebToken","readFileSync","web_identity_token_file","isWebIdentityProfile","resolveWebIdentityCredentials","credential_process","isProcessProfile","resolveSsoCredentials","defaultProvider","fromIni","remoteProvider","F","G","H","I","J","u","w","y","z","A","C","D","E","STSClient","useGlobalEndpoint","_config_7","resolveStsAuthConfig","getCustomizableStsClientCtor","baseCtor","customizations","customization","stsPlugins","endpointDiscoveryEnabledProvider","DynamoDBClient","_config_4","_config_8","endpointDiscoveryCommandCtor","endpointCache","endpointCacheSize","endpointDiscoveryEnabled","isClientEndpointDiscoveryEnabled","resolveEndpointDiscoveryConfig","UpdateItemCommand","se_UpdateItemCommand","de_UpdateItemCommand","RETRY_CONFIG","projectName","core","PROJECT_NAME","buildNumber","client","ProjectName","BuildNumber","ecsBuildNumber","run"],"sourceRoot":""}