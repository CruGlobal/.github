name: Bump Version
# Increments the version using semver and saves it package.json.
# Creates a tagged commit with the new version
on:
  workflow_call:
    inputs:
      type:
        description: Release type (should be major, minor or patch)
        required: true
        type: string
      build_meta:
        description: Build metadata to append to the version
        required: false
        type: string
      ref:
        type: string
        default: ${{ github.ref }}
    outputs:
      new_version:
        value: ${{ jobs.bump.outputs.new_version }}
jobs:
  bump:
    name: Bump Version
    runs-on: ubuntu-latest
    if: ${{ inputs.type != 'no_release' }}
    outputs:
      new_version: ${{ steps.increment_version.outputs.new_version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ inputs.ref }}

      - name: Install semver package
        # use f to get past knex/objection peer conflict
        run: npm i semver -f

      - name: Increment the Runtime Version
        uses: actions/github-script@v6
        id: increment_version
        env:
          TYPE: ${{ inputs.type }}
          BUILD: ${{ inputs.build_meta }}
        with:
          result-encoding: string
          script: |
            const semver = require('semver');
            const type = process.env.TYPE;
            const build = process.env.BUILD;
            const output = [];
            const listeners = {
              stdout: (data) => output.push(data.toString()),
            };
            await exec.exec("npm", ["pkg", "get", "version"], { listeners });
            const oldVersion = JSON.parse(output.join(""));
            const buildMeta = build ?? oldVersion.split("+")[1];
            const newVersion = `${semver.inc(oldVersion, type)}${ buildMeta ? `+${buildMeta}` : ""}`;
            await exec.exec("npm", ["pkg", "set", `version=${newVersion}`]);
            core.setOutput('new_version', newVersion);

      - name: Commit Change
        id: commit_version
        uses: EndBug/add-and-commit@v9
        env:
          NEW_VERSION: ${{ steps.increment_version.outputs.new_version }}
        with:
          message: Update version ${{ env.NEW_VERSION }}
          tag: v${{ env.NEW_VERSION }}
          default_author: github_actions
