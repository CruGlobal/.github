name: Build & Push to ECR

on:
  workflow_call:
    inputs:
      workflow-ref:
        type: string
        required: false
        default: main
        description: Branch, tag or commit used when calling the workflow. Required if calling the workflow from non default 'v1' tag.
    outputs:
      project-name:
        description: Project Name, defaults to GitHub repo name.
        value: ${{ jobs.build.outputs.project-name }}
      environment:
        description: Environment (staging/production/lab).
        value: ${{ jobs.build.outputs.environment }}
      build-number:
        description: Build Number/Tag
        value: ${{ jobs.build.outputs.build-number }}

jobs:
  build:
    name: Build Docker Container
    runs-on: ubuntu-latest
    timeout-minutes: 30
    outputs:
      project-name: ${{ steps.env.outputs.project-name }}
      environment: ${{ steps.env.outputs.environment }}
      build-number: ${{ steps.build-number.outputs.build-number }}
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout Cru Actions & Workflows
        uses: actions/checkout@v4
        with:
          repository: CruGlobal/.github
          ref: ${{ inputs.workflow-ref }}
          path: cru-github-actions

      - name: Setup Build environment
        uses: ./cru-github-actions/actions/setup-env
        id: env
        with:
          role-suffix: GitHubRole

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: us-east-1
          role-to-assume: ${{ steps.env.outputs.role-arn }}

      - name: Increment Build Number
        uses: ./cru-github-actions/actions/build-number
        id: build-number

      - name: Start Docker Network
        uses: ./cru-github-actions/actions/docker-network
        with:
          name: ${{ steps.env.outputs.project-name }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        id: buildx
        with:
          driver-opts: network=${{ steps.env.outputs.project-name }}

      - name: Login to ECR
        uses: aws-actions/amazon-ecr-login@v2
        id: ecr
        with:
          mask-password: true

      - name: Cache Docker Layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: "${{ runner.os }}-buildx-${{ github.sha }}"
          restore-keys: |
            ${{ runner.os }}-buildx

      - name: Import Build Secrets
        uses: ./cru-github-actions/actions/secrets
        with:
          type: BUILD

      - name: Checkout Project
        uses: actions/checkout@v4
        with:
          path: project

      - name: Run build.sh
        working-directory: project
        run: ./build.sh
        env:
          DOCKER_NETWORK: ${{ steps.env.outputs.project-name }}
          DOCKER_ARGS: |
            --builder ${{ steps.buildx.outputs.name }}
            --build-arg PROJECT_NAME=${{ steps.env.outputs.project-name }}
            --build-arg ENVIRONMENT=${{ steps.env.outputs.environment }}
            --build-arg BUILD_NUMBER=${{ steps.build-number.outputs.build-number }}
            --cache-from type=local,src=/tmp/.buildx-cache
            --cache-to type=local,dest=/tmp/.buildx-cache-new
            --tag ${{ steps.ecr.outputs.registry }}/${{ steps.env.outputs.project-name }}:${{ steps.env.outputs.environment}}-${{ steps.build-number.outputs.build-number}}
            --provenance=false
            --push

      # Temp fix
      # https://github.com/docker/build-push-action/issues/252
      # https://github.com/moby/buildkit/issues/1896
      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
        continue-on-error: true

      - name: Notify Success
        run: echo "::notice title=Build Success::Successfully built - $ENVIRONMENT-$BUILD_NUMBER"
