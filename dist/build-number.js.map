{"version":3,"file":"build-number.js","mappings":"+CACA,IAAIA,EAAmBC,MAAQA,KAAKD,kBAAqBE,OAAOC,OAAS,SAAUC,EAAGC,EAAGC,EAAGC,QAC7EC,IAAPD,IAAkBA,EAAKD,GAC3BJ,OAAOO,eAAeL,EAAGG,EAAI,CAAEG,YAAY,EAAMC,IAAK,WAAa,OAAON,EAAEC,EAAI,GACnF,EAAI,SAAUF,EAAGC,EAAGC,EAAGC,QACTC,IAAPD,IAAkBA,EAAKD,GAC3BF,EAAEG,GAAMF,EAAEC,EACb,GACGM,EAAsBX,MAAQA,KAAKW,qBAAwBV,OAAOC,OAAS,SAAUC,EAAGS,GACxFX,OAAOO,eAAeL,EAAG,UAAW,CAAEM,YAAY,EAAMI,MAAOD,GAClE,EAAI,SAAST,EAAGS,GACbT,EAAW,QAAIS,CACnB,GACIE,EAAgBd,MAAQA,KAAKc,cAAiB,SAAUC,GACxD,GAAIA,GAAOA,EAAIC,WAAY,OAAOD,EAClC,IAAIE,EAAS,CAAC,EACd,GAAW,MAAPF,EAAa,IAAK,IAAIV,KAAKU,EAAe,YAANV,GAAmBJ,OAAOiB,eAAeC,KAAKJ,EAAKV,IAAIN,EAAgBkB,EAAQF,EAAKV,GAE5H,OADAM,EAAmBM,EAAQF,GACpBE,CACX,EACAhB,OAAOO,eAAeY,EAAS,aAAc,CAAEP,OAAO,IACtDO,EAAQC,MAAQD,EAAQE,kBAAe,EACvC,MAAMC,EAAKT,EAAa,EAAQ,OAC1BU,EAAU,EAAQ,MAWxB,SAASF,EAAaG,EAASC,EAAYC,GACvC,MAAMC,EAAM,IAAIC,EAAQJ,EAASC,EAAYC,GAC7CG,QAAQC,OAAOC,MAAMJ,EAAIK,WAAaV,EAAGW,IAC7C,CACAd,EAAQE,aAAeA,EAIvBF,EAAQC,MAHR,SAAec,EAAMR,EAAU,IAC3BL,EAAaa,EAAM,CAAC,EAAGR,EAC3B,EAGA,MAAME,EACFO,YAAYX,EAASC,EAAYC,GACxBF,IACDA,EAAU,mBAEdzB,KAAKyB,QAAUA,EACfzB,KAAK0B,WAAaA,EAClB1B,KAAK2B,QAAUA,CACnB,CACAM,WACI,IAAII,EAXO,KAWerC,KAAKyB,QAC/B,GAAIzB,KAAK0B,YAAczB,OAAOqC,KAAKtC,KAAK0B,YAAYa,OAAS,EAAG,CAC5DF,GAAU,IACV,IAAIG,GAAQ,EACZ,IAAK,MAAMC,KAAOzC,KAAK0B,WACnB,GAAI1B,KAAK0B,WAAWR,eAAeuB,GAAM,CACrC,MAAMC,EAAM1C,KAAK0B,WAAWe,GACxBC,IACIF,EACAA,GAAQ,EAGRH,GAAU,IAEdA,GAAU,GAAGI,KAebE,EAfmCD,EAgBhDlB,EAAQoB,eAAeD,GACzBE,QAAQ,KAAM,OACdA,QAAQ,MAAO,OACfA,QAAQ,MAAO,OACfA,QAAQ,KAAM,OACdA,QAAQ,KAAM,SAnBP,CAER,CAWR,IAAwBF,EAThB,OADAN,GAAU,KAIlB,SAAoBM,GAChB,OAAOnB,EAAQoB,eAAeD,GACzBE,QAAQ,KAAM,OACdA,QAAQ,MAAO,OACfA,QAAQ,MAAO,MACxB,CATkCC,CAAW9C,KAAK2B,WACnCU,CACX,E,oCC1EJ,IAAItC,EAAmBC,MAAQA,KAAKD,kBAAqBE,OAAOC,OAAS,SAAUC,EAAGC,EAAGC,EAAGC,QAC7EC,IAAPD,IAAkBA,EAAKD,GAC3BJ,OAAOO,eAAeL,EAAGG,EAAI,CAAEG,YAAY,EAAMC,IAAK,WAAa,OAAON,EAAEC,EAAI,GACnF,EAAI,SAAUF,EAAGC,EAAGC,EAAGC,QACTC,IAAPD,IAAkBA,EAAKD,GAC3BF,EAAEG,GAAMF,EAAEC,EACb,GACGM,EAAsBX,MAAQA,KAAKW,qBAAwBV,OAAOC,OAAS,SAAUC,EAAGS,GACxFX,OAAOO,eAAeL,EAAG,UAAW,CAAEM,YAAY,EAAMI,MAAOD,GAClE,EAAI,SAAST,EAAGS,GACbT,EAAW,QAAIS,CACnB,GACIE,EAAgBd,MAAQA,KAAKc,cAAiB,SAAUC,GACxD,GAAIA,GAAOA,EAAIC,WAAY,OAAOD,EAClC,IAAIE,EAAS,CAAC,EACd,GAAW,MAAPF,EAAa,IAAK,IAAIV,KAAKU,EAAe,YAANV,GAAmBJ,OAAOiB,eAAeC,KAAKJ,EAAKV,IAAIN,EAAgBkB,EAAQF,EAAKV,GAE5H,OADAM,EAAmBM,EAAQF,GACpBE,CACX,EACI8B,EAAa/C,MAAQA,KAAK+C,WAAc,SAAUC,EAASC,EAAYC,EAAGC,GAE1E,OAAO,IAAKD,IAAMA,EAAIE,WAAU,SAAUC,EAASC,GAC/C,SAASC,EAAU1C,GAAS,IAAM2C,EAAKL,EAAUM,KAAK5C,GAAkC,CAAvB,MAAO6C,GAAKJ,EAAOI,EAAI,CAAE,CAC1F,SAASC,EAAS9C,GAAS,IAAM2C,EAAKL,EAAiB,MAAEtC,GAAkC,CAAvB,MAAO6C,GAAKJ,EAAOI,EAAI,CAAE,CAC7F,SAASF,EAAKvC,GAJlB,IAAeJ,EAIaI,EAAO2C,KAAOP,EAAQpC,EAAOJ,QAJ1CA,EAIyDI,EAAOJ,MAJhDA,aAAiBqC,EAAIrC,EAAQ,IAAIqC,GAAE,SAAUG,GAAWA,EAAQxC,EAAQ,KAIjBgD,KAAKN,EAAWI,EAAW,CAC7GH,GAAML,EAAYA,EAAUW,MAAMd,EAASC,GAAc,KAAKQ,OAClE,GACJ,EACAxD,OAAOO,eAAeY,EAAS,aAAc,CAAEP,OAAO,IACtDO,EAAQ2C,WAAa3C,EAAQ4C,SAAW5C,EAAQ6C,UAAY7C,EAAQ8C,MAAQ9C,EAAQ+C,SAAW/C,EAAQgD,WAAahD,EAAQiD,KAAOjD,EAAQkD,OAASlD,EAAQmD,QAAUnD,EAAQoD,MAAQpD,EAAQqD,MAAQrD,EAAQsD,QAAUtD,EAAQuD,UAAYvD,EAAQwD,eAAiBxD,EAAQyD,UAAYzD,EAAQ0D,gBAAkB1D,EAAQ2D,kBAAoB3D,EAAQ4D,SAAW5D,EAAQ6D,QAAU7D,EAAQ8D,UAAY9D,EAAQ+D,eAAiB/D,EAAQgE,cAAW,EACpb,MAAMC,EAAY,EAAQ,MACpBC,EAAiB,EAAQ,MACzB9D,EAAU,EAAQ,MAClBD,EAAKT,EAAa,EAAQ,OAC1ByE,EAAOzE,EAAa,EAAQ,OAC5B0E,EAAe,EAAQ,MAI7B,IAAIJ,EA8DJ,SAASJ,EAAS7C,EAAMsD,GACpB,MAAM/C,EAAMZ,QAAQ4D,IAAI,SAASvD,EAAKU,QAAQ,KAAM,KAAK8C,kBAAoB,GAC7E,GAAIF,GAAWA,EAAQG,WAAalD,EAChC,MAAM,IAAImD,MAAM,oCAAoC1D,KAExD,OAAIsD,IAAsC,IAA3BA,EAAQK,eACZpD,EAEJA,EAAIqD,MACf,CAuGA,SAASvB,EAAM7C,EAASD,EAAa,CAAC,GAClC2D,EAAU/D,aAAa,QAASE,EAAQwE,oBAAoBtE,GAAaC,aAAmBkE,MAAQlE,EAAQM,WAAaN,EAC7H,CAmCA,SAASyC,EAAWjC,GAChBkD,EAAUhE,MAAM,QAASc,EAC7B,CAKA,SAASgC,IACLkB,EAAUhE,MAAM,WACpB,EA3NA,SAAW+D,GAIPA,EAASA,EAAkB,QAAI,GAAK,UAIpCA,EAASA,EAAkB,QAAI,GAAK,SACvC,CATD,CASGA,EAAWhE,EAAQgE,WAAahE,EAAQgE,SAAW,CAAC,IAmBvDhE,EAAQ+D,eATR,SAAwBhD,EAAMO,GAC1B,MAAMuD,EAAezE,EAAQoB,eAAeF,GAG5C,GAFAZ,QAAQ4D,IAAIvD,GAAQ8D,EACHnE,QAAQ4D,IAAgB,YAAK,GAE1C,OAAOJ,EAAeY,iBAAiB,MAAOZ,EAAea,uBAAuBhE,EAAMO,IAE9F2C,EAAU/D,aAAa,UAAW,CAAEa,QAAQ8D,EAChD,EASA7E,EAAQ8D,UAHR,SAAmBkB,GACff,EAAU/D,aAAa,WAAY,CAAC,EAAG8E,EAC3C,EAgBAhF,EAAQ6D,QAVR,SAAiBoB,GACIvE,QAAQ4D,IAAiB,aAAK,GAE3CJ,EAAeY,iBAAiB,OAAQG,GAGxChB,EAAU/D,aAAa,WAAY,CAAC,EAAG+E,GAE3CvE,QAAQ4D,IAAU,KAAI,GAAGW,IAAYd,EAAKe,YAAYxE,QAAQ4D,IAAU,MAC5E,EAqBAtE,EAAQ4D,SAAWA,EAkBnB5D,EAAQ2D,kBATR,SAA2B5C,EAAMsD,GAC7B,MAAMc,EAASvB,EAAS7C,EAAMsD,GACzBe,MAAM,MACNC,QAAOC,GAAW,KAANA,IACjB,OAAIjB,IAAsC,IAA3BA,EAAQK,eACZS,EAEJA,EAAOI,KAAIC,GAASA,EAAMb,QACrC,EAuBA3E,EAAQ0D,gBAXR,SAAyB3C,EAAMsD,GAC3B,MAEM/C,EAAMsC,EAAS7C,EAAMsD,GAC3B,GAHkB,CAAC,OAAQ,OAAQ,QAGrBoB,SAASnE,GACnB,OAAO,EACX,GAJmB,CAAC,QAAS,QAAS,SAIvBmE,SAASnE,GACpB,OAAO,EACX,MAAM,IAAIoE,UAAU,6DAA6D3E,gFAErF,EAiBAf,EAAQyD,UARR,SAAmB1C,EAAMtB,GAErB,GADiBiB,QAAQ4D,IAAmB,eAAK,GAE7C,OAAOJ,EAAeY,iBAAiB,SAAUZ,EAAea,uBAAuBhE,EAAMtB,IAEjGiB,QAAQC,OAAOC,MAAMT,EAAGW,KACxBmD,EAAU/D,aAAa,aAAc,CAAEa,QAAQX,EAAQoB,eAAe/B,GAC1E,EAUAO,EAAQwD,eAHR,SAAwBmC,GACpB1B,EAAUhE,MAAM,OAAQ0F,EAAU,KAAO,MAC7C,EAcA3F,EAAQuD,UAJR,SAAmBhD,GACfG,QAAQkF,SAAW5B,EAAS6B,QAC5BzC,EAAM7C,EACV,EAWAP,EAAQsD,QAHR,WACI,MAAuC,MAAhC5C,QAAQ4D,IAAkB,YACrC,EASAtE,EAAQqD,MAHR,SAAe9C,GACX0D,EAAU/D,aAAa,QAAS,CAAC,EAAGK,EACxC,EAUAP,EAAQoD,MAAQA,EAShBpD,EAAQmD,QAHR,SAAiB5C,EAASD,EAAa,CAAC,GACpC2D,EAAU/D,aAAa,UAAWE,EAAQwE,oBAAoBtE,GAAaC,aAAmBkE,MAAQlE,EAAQM,WAAaN,EAC/H,EAUAP,EAAQkD,OAHR,SAAgB3C,EAASD,EAAa,CAAC,GACnC2D,EAAU/D,aAAa,SAAUE,EAAQwE,oBAAoBtE,GAAaC,aAAmBkE,MAAQlE,EAAQM,WAAaN,EAC9H,EASAP,EAAQiD,KAHR,SAAc1C,GACVG,QAAQC,OAAOC,MAAML,EAAUJ,EAAGW,IACtC,EAYAd,EAAQgD,WAAaA,EAOrBhD,EAAQ+C,SAAWA,EAsBnB/C,EAAQ8C,MAbR,SAAe/B,EAAM+E,GACjB,OAAOnE,EAAU/C,UAAM,OAAQ,GAAQ,YAEnC,IAAIiB,EADJmD,EAAWjC,GAEX,IACIlB,QAAeiG,GAInB,CAFA,QACI/C,GACJ,CACA,OAAOlD,CACX,GACJ,EAmBAG,EAAQ6C,UAPR,SAAmB9B,EAAMtB,GAErB,GADiBiB,QAAQ4D,IAAkB,cAAK,GAE5C,OAAOJ,EAAeY,iBAAiB,QAASZ,EAAea,uBAAuBhE,EAAMtB,IAEhGwE,EAAU/D,aAAa,aAAc,CAAEa,QAAQX,EAAQoB,eAAe/B,GAC1E,EAWAO,EAAQ4C,SAHR,SAAkB7B,GACd,OAAOL,QAAQ4D,IAAI,SAASvD,MAAW,EAC3C,EAOAf,EAAQ2C,WALR,SAAoBoD,GAChB,OAAOpE,EAAU/C,UAAM,OAAQ,GAAQ,YACnC,aAAawF,EAAa4B,WAAWrD,WAAWoD,EACpD,GACJ,EAKA,IAAIE,EAAY,EAAQ,MACxBpH,OAAOO,eAAeY,EAAS,UAAW,CAAEX,YAAY,EAAMC,IAAK,WAAc,OAAO2G,EAAUC,OAAS,IAI3G,IAAIC,EAAY,EAAQ,MACxBtH,OAAOO,eAAeY,EAAS,kBAAmB,CAAEX,YAAY,EAAMC,IAAK,WAAc,OAAO6G,EAAUC,eAAiB,IAI3H,IAAIC,EAAe,EAAQ,MAC3BxH,OAAOO,eAAeY,EAAS,cAAe,CAAEX,YAAY,EAAMC,IAAK,WAAc,OAAO+G,EAAaC,WAAa,IACtHzH,OAAOO,eAAeY,EAAS,cAAe,CAAEX,YAAY,EAAMC,IAAK,WAAc,OAAO+G,EAAaE,WAAa,IACtH1H,OAAOO,eAAeY,EAAS,iBAAkB,CAAEX,YAAY,EAAMC,IAAK,WAAc,OAAO+G,EAAaG,cAAgB,G,oCC5U5H,IAAI7H,EAAmBC,MAAQA,KAAKD,kBAAqBE,OAAOC,OAAS,SAAUC,EAAGC,EAAGC,EAAGC,QAC7EC,IAAPD,IAAkBA,EAAKD,GAC3BJ,OAAOO,eAAeL,EAAGG,EAAI,CAAEG,YAAY,EAAMC,IAAK,WAAa,OAAON,EAAEC,EAAI,GACnF,EAAI,SAAUF,EAAGC,EAAGC,EAAGC,QACTC,IAAPD,IAAkBA,EAAKD,GAC3BF,EAAEG,GAAMF,EAAEC,EACb,GACGM,EAAsBX,MAAQA,KAAKW,qBAAwBV,OAAOC,OAAS,SAAUC,EAAGS,GACxFX,OAAOO,eAAeL,EAAG,UAAW,CAAEM,YAAY,EAAMI,MAAOD,GAClE,EAAI,SAAST,EAAGS,GACbT,EAAW,QAAIS,CACnB,GACIE,EAAgBd,MAAQA,KAAKc,cAAiB,SAAUC,GACxD,GAAIA,GAAOA,EAAIC,WAAY,OAAOD,EAClC,IAAIE,EAAS,CAAC,EACd,GAAW,MAAPF,EAAa,IAAK,IAAIV,KAAKU,EAAe,YAANV,GAAmBJ,OAAOiB,eAAeC,KAAKJ,EAAKV,IAAIN,EAAgBkB,EAAQF,EAAKV,GAE5H,OADAM,EAAmBM,EAAQF,GACpBE,CACX,EACAhB,OAAOO,eAAeY,EAAS,aAAc,CAAEP,OAAO,IACtDO,EAAQ+E,uBAAyB/E,EAAQ8E,sBAAmB,EAG5D,MAAM2B,EAAK/G,EAAa,EAAQ,OAC1BS,EAAKT,EAAa,EAAQ,OAC1BgH,EAAS,EAAQ,MACjBtG,EAAU,EAAQ,MAaxBJ,EAAQ8E,iBAZR,SAA0BzE,EAASE,GAC/B,MAAMoG,EAAWjG,QAAQ4D,IAAI,UAAUjE,KACvC,IAAKsG,EACD,MAAM,IAAIlC,MAAM,wDAAwDpE,KAE5E,IAAKoG,EAAGG,WAAWD,GACf,MAAM,IAAIlC,MAAM,yBAAyBkC,KAE7CF,EAAGI,eAAeF,EAAU,GAAGvG,EAAQoB,eAAejB,KAAWJ,EAAGW,MAAO,CACvEgG,SAAU,QAElB,EAgBA9G,EAAQ+E,uBAdR,SAAgC1D,EAAK5B,GACjC,MAAMyF,EAAY,gBAAgBwB,EAAOK,OACnCC,EAAiB5G,EAAQoB,eAAe/B,GAI9C,GAAI4B,EAAIoE,SAASP,GACb,MAAM,IAAIT,MAAM,4DAA4DS,MAEhF,GAAI8B,EAAevB,SAASP,GACxB,MAAM,IAAIT,MAAM,6DAA6DS,MAEjF,MAAO,GAAG7D,MAAQ6D,IAAY/E,EAAGW,MAAMkG,IAAiB7G,EAAGW,MAAMoE,GACrE,C,oCCtDA,IAAIvD,EAAa/C,MAAQA,KAAK+C,WAAc,SAAUC,EAASC,EAAYC,EAAGC,GAE1E,OAAO,IAAKD,IAAMA,EAAIE,WAAU,SAAUC,EAASC,GAC/C,SAASC,EAAU1C,GAAS,IAAM2C,EAAKL,EAAUM,KAAK5C,GAAkC,CAAvB,MAAO6C,GAAKJ,EAAOI,EAAI,CAAE,CAC1F,SAASC,EAAS9C,GAAS,IAAM2C,EAAKL,EAAiB,MAAEtC,GAAkC,CAAvB,MAAO6C,GAAKJ,EAAOI,EAAI,CAAE,CAC7F,SAASF,EAAKvC,GAJlB,IAAeJ,EAIaI,EAAO2C,KAAOP,EAAQpC,EAAOJ,QAJ1CA,EAIyDI,EAAOJ,MAJhDA,aAAiBqC,EAAIrC,EAAQ,IAAIqC,GAAE,SAAUG,GAAWA,EAAQxC,EAAQ,KAIjBgD,KAAKN,EAAWI,EAAW,CAC7GH,GAAML,EAAYA,EAAUW,MAAMd,EAASC,GAAc,KAAKQ,OAClE,GACJ,EACAxD,OAAOO,eAAeY,EAAS,aAAc,CAAEP,OAAO,IACtDO,EAAQgG,gBAAa,EACrB,MAAMiB,EAAgB,EAAQ,MACxBC,EAAS,EAAQ,MACjBC,EAAS,EAAQ,MACvB,MAAMnB,EACFoB,wBAAwBC,GAAa,EAAMC,EAAW,IAClD,MAAMC,EAAiB,CACnBC,aAAcH,EACdI,WAAYH,GAEhB,OAAO,IAAIL,EAAcS,WAAW,sBAAuB,CAAC,IAAIR,EAAOS,wBAAwB3B,EAAW4B,oBAAqBL,EACnI,CACAH,yBACI,MAAMS,EAAQnH,QAAQ4D,IAAoC,+BAC1D,IAAKuD,EACD,MAAM,IAAIpD,MAAM,6DAEpB,OAAOoD,CACX,CACAT,uBACI,MAAMU,EAAapH,QAAQ4D,IAAkC,6BAC7D,IAAKwD,EACD,MAAM,IAAIrD,MAAM,2DAEpB,OAAOqD,CACX,CACAV,eAAeW,GACX,IAAIC,EACJ,OAAOrG,EAAU/C,UAAM,OAAQ,GAAQ,YACnC,MAAMqJ,EAAajC,EAAWkC,mBACxBC,QAAYF,EACbG,QAAQL,GACRM,OAAMjF,IACP,MAAM,IAAIqB,MAAM,qDACTrB,EAAMkF,yCACJlF,EAAMvD,OAAOU,UAAU,IAE9BgI,EAAiC,QAArBP,EAAKG,EAAItI,cAA2B,IAAPmI,OAAgB,EAASA,EAAGvI,MAC3E,IAAK8I,EACD,MAAM,IAAI9D,MAAM,iDAEpB,OAAO8D,CACX,GACJ,CACAnB,kBAAkBoB,GACd,OAAO7G,EAAU/C,UAAM,OAAQ,GAAQ,YACnC,IAEI,IAAImJ,EAAe/B,EAAWyC,gBAC9B,GAAID,EAAU,CAEVT,EAAe,GAAGA,cADMW,mBAAmBF,IAE/C,CACArB,EAAO9D,MAAM,mBAAmB0E,KAChC,MAAMQ,QAAiBvC,EAAW2C,QAAQZ,GAE1C,OADAZ,EAAOrD,UAAUyE,GACVA,CAIX,CAFA,MAAOnF,GACH,MAAM,IAAIqB,MAAM,kBAAkBrB,EAAM7C,UAC5C,CACJ,GACJ,EAEJP,EAAQgG,WAAaA,C,oCC1ErB,IAAIrH,EAAmBC,MAAQA,KAAKD,kBAAqBE,OAAOC,OAAS,SAAUC,EAAGC,EAAGC,EAAGC,QAC7EC,IAAPD,IAAkBA,EAAKD,GAC3BJ,OAAOO,eAAeL,EAAGG,EAAI,CAAEG,YAAY,EAAMC,IAAK,WAAa,OAAON,EAAEC,EAAI,GACnF,EAAI,SAAUF,EAAGC,EAAGC,EAAGC,QACTC,IAAPD,IAAkBA,EAAKD,GAC3BF,EAAEG,GAAMF,EAAEC,EACb,GACGM,EAAsBX,MAAQA,KAAKW,qBAAwBV,OAAOC,OAAS,SAAUC,EAAGS,GACxFX,OAAOO,eAAeL,EAAG,UAAW,CAAEM,YAAY,EAAMI,MAAOD,GAClE,EAAI,SAAST,EAAGS,GACbT,EAAW,QAAIS,CACnB,GACIE,EAAgBd,MAAQA,KAAKc,cAAiB,SAAUC,GACxD,GAAIA,GAAOA,EAAIC,WAAY,OAAOD,EAClC,IAAIE,EAAS,CAAC,EACd,GAAW,MAAPF,EAAa,IAAK,IAAIV,KAAKU,EAAe,YAANV,GAAmBJ,OAAOiB,eAAeC,KAAKJ,EAAKV,IAAIN,EAAgBkB,EAAQF,EAAKV,GAE5H,OADAM,EAAmBM,EAAQF,GACpBE,CACX,EACAhB,OAAOO,eAAeY,EAAS,aAAc,CAAEP,OAAO,IACtDO,EAAQwG,eAAiBxG,EAAQuG,YAAcvG,EAAQsG,iBAAc,EACrE,MAAMnC,EAAOzE,EAAa,EAAQ,OAWlCM,EAAQsG,YAHR,SAAqBsC,GACjB,OAAOA,EAAInH,QAAQ,QAAS,IAChC,EAYAzB,EAAQuG,YAHR,SAAqBqC,GACjB,OAAOA,EAAInH,QAAQ,OAAQ,KAC/B,EAaAzB,EAAQwG,eAHR,SAAwBoC,GACpB,OAAOA,EAAInH,QAAQ,SAAU0C,EAAK0E,IACtC,C,oCCtDA,IAAIlH,EAAa/C,MAAQA,KAAK+C,WAAc,SAAUC,EAASC,EAAYC,EAAGC,GAE1E,OAAO,IAAKD,IAAMA,EAAIE,WAAU,SAAUC,EAASC,GAC/C,SAASC,EAAU1C,GAAS,IAAM2C,EAAKL,EAAUM,KAAK5C,GAAkC,CAAvB,MAAO6C,GAAKJ,EAAOI,EAAI,CAAE,CAC1F,SAASC,EAAS9C,GAAS,IAAM2C,EAAKL,EAAiB,MAAEtC,GAAkC,CAAvB,MAAO6C,GAAKJ,EAAOI,EAAI,CAAE,CAC7F,SAASF,EAAKvC,GAJlB,IAAeJ,EAIaI,EAAO2C,KAAOP,EAAQpC,EAAOJ,QAJ1CA,EAIyDI,EAAOJ,MAJhDA,aAAiBqC,EAAIrC,EAAQ,IAAIqC,GAAE,SAAUG,GAAWA,EAAQxC,EAAQ,KAIjBgD,KAAKN,EAAWI,EAAW,CAC7GH,GAAML,EAAYA,EAAUW,MAAMd,EAASC,GAAc,KAAKQ,OAClE,GACJ,EACAxD,OAAOO,eAAeY,EAAS,aAAc,CAAEP,OAAO,IACtDO,EAAQkG,QAAUlG,EAAQoG,gBAAkBpG,EAAQ8I,iBAAmB9I,EAAQ+I,qBAAkB,EACjG,MAAMC,EAAO,EAAQ,MACfC,EAAO,EAAQ,OACf,OAAEC,EAAM,WAAEC,EAAU,UAAEC,GAAcH,EAAKI,SAC/CrJ,EAAQ+I,gBAAkB,sBAC1B/I,EAAQ8I,iBAAmB,4GAoQ3B,MAAMQ,EAAW,IAnQjB,MACItI,cACIpC,KAAK2K,QAAU,EACnB,CAOA5C,WACI,OAAOhF,EAAU/C,UAAM,OAAQ,GAAQ,YACnC,GAAIA,KAAK4K,UACL,OAAO5K,KAAK4K,UAEhB,MAAMC,EAAc/I,QAAQ4D,IAAItE,EAAQ+I,iBACxC,IAAKU,EACD,MAAM,IAAIhF,MAAM,4CAA4CzE,EAAQ+I,8EAExE,UACUG,EAAOO,EAAaR,EAAKS,UAAUC,KAAOV,EAAKS,UAAUE,KAInE,CAFA,MAAO5B,GACH,MAAM,IAAIvD,MAAM,mCAAmCgF,4DACvD,CAEA,OADA7K,KAAK4K,UAAYC,EACV7K,KAAK4K,SAChB,GACJ,CAUAK,KAAKC,EAAKC,EAASC,EAAQ,CAAC,GACxB,MAAMC,EAAYpL,OAAOqL,QAAQF,GAC5BzE,KAAI,EAAElE,EAAK5B,KAAW,IAAI4B,MAAQ5B,OAClC0K,KAAK,IACV,OAAKJ,EAGE,IAAID,IAAMG,KAAaF,MAAYD,KAF/B,IAAIA,IAAMG,IAGzB,CAQArJ,MAAMyD,GACF,OAAO1C,EAAU/C,UAAM,OAAQ,GAAQ,YACnC,MAAMwL,KAAe/F,aAAyC,EAASA,EAAQ+F,WACzEzD,QAAiB/H,KAAK+H,WACtB0D,EAAYD,EAAYhB,EAAYD,EAE1C,aADMkB,EAAU1D,EAAU/H,KAAK2K,QAAS,CAAEzC,SAAU,SAC7ClI,KAAK0L,aAChB,GACJ,CAMAC,QACI,OAAO5I,EAAU/C,UAAM,OAAQ,GAAQ,YACnC,OAAOA,KAAK0L,cAAc1J,MAAM,CAAEwJ,WAAW,GACjD,GACJ,CAMAI,YACI,OAAO5L,KAAK2K,OAChB,CAMAkB,gBACI,OAA+B,IAAxB7L,KAAK2K,QAAQpI,MACxB,CAMAmJ,cAEI,OADA1L,KAAK2K,QAAU,GACR3K,IACX,CASA8L,OAAOC,EAAMC,GAAS,GAElB,OADAhM,KAAK2K,SAAWoB,EACTC,EAAShM,KAAKgM,SAAWhM,IACpC,CAMAgM,SACI,OAAOhM,KAAK8L,OAAO1B,EAAKlI,IAC5B,CASA+J,aAAaC,EAAMC,GACf,MAAMf,EAAQnL,OAAOmM,OAAO,CAAC,EAAID,GAAQ,CAAEA,SACrCE,EAAUrM,KAAKiL,KAAK,MAAOjL,KAAKiL,KAAK,OAAQiB,GAAOd,GAC1D,OAAOpL,KAAK8L,OAAOO,GAASL,QAChC,CASAM,QAAQC,EAAOC,GAAU,GACrB,MAAMtB,EAAMsB,EAAU,KAAO,KACvBC,EAAYF,EAAM5F,KAAI+F,GAAQ1M,KAAKiL,KAAK,KAAMyB,KAAOnB,KAAK,IAC1Dc,EAAUrM,KAAKiL,KAAKC,EAAKuB,GAC/B,OAAOzM,KAAK8L,OAAOO,GAASL,QAChC,CAQAW,SAASC,GACL,MAAMC,EAAYD,EACbjG,KAAImG,IACL,MAAMC,EAAQD,EACTnG,KAAIqG,IACL,GAAoB,iBAATA,EACP,OAAOhN,KAAKiL,KAAK,KAAM+B,GAE3B,MAAM,OAAEC,EAAM,KAAEC,EAAI,QAAEC,EAAO,QAAEC,GAAYJ,EACrC9B,EAAM+B,EAAS,KAAO,KACtB7B,EAAQnL,OAAOmM,OAAOnM,OAAOmM,OAAO,CAAC,EAAIe,GAAW,CAAEA,YAAcC,GAAW,CAAEA,YACvF,OAAOpN,KAAKiL,KAAKC,EAAKgC,EAAM9B,EAAM,IAEjCG,KAAK,IACV,OAAOvL,KAAKiL,KAAK,KAAM8B,EAAM,IAE5BxB,KAAK,IACJc,EAAUrM,KAAKiL,KAAK,QAAS4B,GACnC,OAAO7M,KAAK8L,OAAOO,GAASL,QAChC,CASAqB,WAAWC,EAAOnC,GACd,MAAMkB,EAAUrM,KAAKiL,KAAK,UAAWjL,KAAKiL,KAAK,UAAWqC,GAASnC,GACnE,OAAOnL,KAAK8L,OAAOO,GAASL,QAChC,CAUAuB,SAASC,EAAKC,EAAKhI,GACf,MAAM,MAAEiI,EAAK,OAAEC,GAAWlI,GAAW,CAAC,EAChC2F,EAAQnL,OAAOmM,OAAOnM,OAAOmM,OAAO,CAAC,EAAIsB,GAAS,CAAEA,UAAYC,GAAU,CAAEA,WAC5EtB,EAAUrM,KAAKiL,KAAK,MAAO,KAAMhL,OAAOmM,OAAO,CAAEoB,MAAKC,OAAOrC,IACnE,OAAOpL,KAAK8L,OAAOO,GAASL,QAChC,CASA4B,WAAW7B,EAAM8B,GACb,MAAM3C,EAAM,IAAI2C,IACVC,EAAa,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MAAMjH,SAASqE,GAC3DA,EACA,KACAmB,EAAUrM,KAAKiL,KAAK6C,EAAY/B,GACtC,OAAO/L,KAAK8L,OAAOO,GAASL,QAChC,CAMA+B,eACI,MAAM1B,EAAUrM,KAAKiL,KAAK,KAAM,MAChC,OAAOjL,KAAK8L,OAAOO,GAASL,QAChC,CAMAgC,WACI,MAAM3B,EAAUrM,KAAKiL,KAAK,KAAM,MAChC,OAAOjL,KAAK8L,OAAOO,GAASL,QAChC,CASAiC,SAASlC,EAAMmC,GACX,MAAM9C,EAAQnL,OAAOmM,OAAO,CAAC,EAAI8B,GAAQ,CAAEA,SACrC7B,EAAUrM,KAAKiL,KAAK,aAAcc,EAAMX,GAC9C,OAAOpL,KAAK8L,OAAOO,GAASL,QAChC,CASAmC,QAAQpC,EAAMqC,GACV,MAAM/B,EAAUrM,KAAKiL,KAAK,IAAKc,EAAM,CAAEqC,SACvC,OAAOpO,KAAK8L,OAAOO,GAASL,QAChC,GAMJ5K,EAAQoG,gBAAkBkD,EAC1BtJ,EAAQkG,QAAUoD,C,4BCtRlBzK,OAAOO,eAAeY,EAAS,aAAc,CAAEP,OAAO,IACtDO,EAAQ4E,oBAAsB5E,EAAQwB,oBAAiB,EAcvDxB,EAAQwB,eATR,SAAwBgE,GACpB,OAAIA,QACO,GAEe,iBAAVA,GAAsBA,aAAiByH,OAC5CzH,EAEJ0H,KAAK1C,UAAUhF,EAC1B,EAqBAxF,EAAQ4E,oBAbR,SAA6BuI,GACzB,OAAKtO,OAAOqC,KAAKiM,GAAsBhM,OAGhC,CACHiM,MAAOD,EAAqBC,MAC5BC,KAAMF,EAAqBE,KAC3BC,KAAMH,EAAqBI,UAC3BC,QAASL,EAAqBK,QAC9BC,IAAKN,EAAqBO,YAC1BC,UAAWR,EAAqBQ,WARzB,CAAC,CAUhB,C,kCCpCA,IAAIhM,EAAa/C,MAAQA,KAAK+C,WAAc,SAAUC,EAASC,EAAYC,EAAGC,GAE1E,OAAO,IAAKD,IAAMA,EAAIE,WAAU,SAAUC,EAASC,GAC/C,SAASC,EAAU1C,GAAS,IAAM2C,EAAKL,EAAUM,KAAK5C,GAAkC,CAAvB,MAAO6C,GAAKJ,EAAOI,EAAI,CAAE,CAC1F,SAASC,EAAS9C,GAAS,IAAM2C,EAAKL,EAAiB,MAAEtC,GAAkC,CAAvB,MAAO6C,GAAKJ,EAAOI,EAAI,CAAE,CAC7F,SAASF,EAAKvC,GAJlB,IAAeJ,EAIaI,EAAO2C,KAAOP,EAAQpC,EAAOJ,QAJ1CA,EAIyDI,EAAOJ,MAJhDA,aAAiBqC,EAAIrC,EAAQ,IAAIqC,GAAE,SAAUG,GAAWA,EAAQxC,EAAQ,KAIjBgD,KAAKN,EAAWI,EAAW,CAC7GH,GAAML,EAAYA,EAAUW,MAAMd,EAASC,GAAc,KAAKQ,OAClE,GACJ,EACAxD,OAAOO,eAAeY,EAAS,aAAc,CAAEP,OAAO,IACtDO,EAAQ4N,qCAAuC5N,EAAQ2H,wBAA0B3H,EAAQ6N,4BAAyB,EAsBlH7N,EAAQ6N,uBArBR,MACI7M,YAAY8M,EAAUC,GAClBnP,KAAKkP,SAAWA,EAChBlP,KAAKmP,SAAWA,CACpB,CACAC,eAAe3J,GACX,IAAKA,EAAQ4J,QACT,MAAMxJ,MAAM,8BAEhBJ,EAAQ4J,QAAuB,cAAI,SAASC,OAAOC,KAAK,GAAGvP,KAAKkP,YAAYlP,KAAKmP,YAAYlN,SAAS,WAC1G,CAEAuN,0BACI,OAAO,CACX,CACAC,uBACI,OAAO1M,EAAU/C,UAAM,OAAQ,GAAQ,YACnC,MAAM,IAAI6F,MAAM,kBACpB,GACJ,GAyBJzE,EAAQ2H,wBAtBR,MACI3G,YAAY6G,GACRjJ,KAAKiJ,MAAQA,CACjB,CAGAmG,eAAe3J,GACX,IAAKA,EAAQ4J,QACT,MAAMxJ,MAAM,8BAEhBJ,EAAQ4J,QAAuB,cAAI,UAAUrP,KAAKiJ,OACtD,CAEAuG,0BACI,OAAO,CACX,CACAC,uBACI,OAAO1M,EAAU/C,UAAM,OAAQ,GAAQ,YACnC,MAAM,IAAI6F,MAAM,kBACpB,GACJ,GAyBJzE,EAAQ4N,qCAtBR,MACI5M,YAAY6G,GACRjJ,KAAKiJ,MAAQA,CACjB,CAGAmG,eAAe3J,GACX,IAAKA,EAAQ4J,QACT,MAAMxJ,MAAM,8BAEhBJ,EAAQ4J,QAAuB,cAAI,SAASC,OAAOC,KAAK,OAAOvP,KAAKiJ,SAAShH,SAAS,WAC1F,CAEAuN,0BACI,OAAO,CACX,CACAC,uBACI,OAAO1M,EAAU/C,UAAM,OAAQ,GAAQ,YACnC,MAAM,IAAI6F,MAAM,kBACpB,GACJ,E,oCC3EJ,IAAI9F,EAAmBC,MAAQA,KAAKD,kBAAqBE,OAAOC,OAAS,SAAUC,EAAGC,EAAGC,EAAGC,QAC7EC,IAAPD,IAAkBA,EAAKD,GAC3BJ,OAAOO,eAAeL,EAAGG,EAAI,CAAEG,YAAY,EAAMC,IAAK,WAAa,OAAON,EAAEC,EAAI,GACnF,EAAI,SAAUF,EAAGC,EAAGC,EAAGC,QACTC,IAAPD,IAAkBA,EAAKD,GAC3BF,EAAEG,GAAMF,EAAEC,EACb,GACGM,EAAsBX,MAAQA,KAAKW,qBAAwBV,OAAOC,OAAS,SAAUC,EAAGS,GACxFX,OAAOO,eAAeL,EAAG,UAAW,CAAEM,YAAY,EAAMI,MAAOD,GAClE,EAAI,SAAST,EAAGS,GACbT,EAAW,QAAIS,CACnB,GACIE,EAAgBd,MAAQA,KAAKc,cAAiB,SAAUC,GACxD,GAAIA,GAAOA,EAAIC,WAAY,OAAOD,EAClC,IAAIE,EAAS,CAAC,EACd,GAAW,MAAPF,EAAa,IAAK,IAAIV,KAAKU,EAAe,YAANV,GAAmBJ,OAAOiB,eAAeC,KAAKJ,EAAKV,IAAIN,EAAgBkB,EAAQF,EAAKV,GAE5H,OADAM,EAAmBM,EAAQF,GACpBE,CACX,EACI8B,EAAa/C,MAAQA,KAAK+C,WAAc,SAAUC,EAASC,EAAYC,EAAGC,GAE1E,OAAO,IAAKD,IAAMA,EAAIE,WAAU,SAAUC,EAASC,GAC/C,SAASC,EAAU1C,GAAS,IAAM2C,EAAKL,EAAUM,KAAK5C,GAAkC,CAAvB,MAAO6C,GAAKJ,EAAOI,EAAI,CAAE,CAC1F,SAASC,EAAS9C,GAAS,IAAM2C,EAAKL,EAAiB,MAAEtC,GAAkC,CAAvB,MAAO6C,GAAKJ,EAAOI,EAAI,CAAE,CAC7F,SAASF,EAAKvC,GAJlB,IAAeJ,EAIaI,EAAO2C,KAAOP,EAAQpC,EAAOJ,QAJ1CA,EAIyDI,EAAOJ,MAJhDA,aAAiBqC,EAAIrC,EAAQ,IAAIqC,GAAE,SAAUG,GAAWA,EAAQxC,EAAQ,KAIjBgD,KAAKN,EAAWI,EAAW,CAC7GH,GAAML,EAAYA,EAAUW,MAAMd,EAASC,GAAc,KAAKQ,OAClE,GACJ,EACAxD,OAAOO,eAAeY,EAAS,aAAc,CAAEP,OAAO,IACtDO,EAAQ0H,WAAa1H,EAAQsO,QAAUtO,EAAQuO,mBAAqBvO,EAAQwO,gBAAkBxO,EAAQyO,YAAczO,EAAQ0O,WAAa1O,EAAQ2O,QAAU3O,EAAQ4O,eAAY,EAC/K,MAAMC,EAAOnP,EAAa,EAAQ,OAC5BoP,EAAQpP,EAAa,EAAQ,OAC7BqP,EAAKrP,EAAa,EAAQ,OAC1BsP,EAAStP,EAAa,EAAQ,OACpC,IAAIkP,EA8BAD,EAKAD,GAlCJ,SAAWE,GACPA,EAAUA,EAAc,GAAI,KAAO,KACnCA,EAAUA,EAA2B,gBAAI,KAAO,kBAChDA,EAAUA,EAA4B,iBAAI,KAAO,mBACjDA,EAAUA,EAAyB,cAAI,KAAO,gBAC9CA,EAAUA,EAAoB,SAAI,KAAO,WACzCA,EAAUA,EAAuB,YAAI,KAAO,cAC5CA,EAAUA,EAAoB,SAAI,KAAO,WACzCA,EAAUA,EAAuB,YAAI,KAAO,cAC5CA,EAAUA,EAA6B,kBAAI,KAAO,oBAClDA,EAAUA,EAA6B,kBAAI,KAAO,oBAClDA,EAAUA,EAAsB,WAAI,KAAO,aAC3CA,EAAUA,EAAwB,aAAI,KAAO,eAC7CA,EAAUA,EAA2B,gBAAI,KAAO,kBAChDA,EAAUA,EAAqB,UAAI,KAAO,YAC1CA,EAAUA,EAAoB,SAAI,KAAO,WACzCA,EAAUA,EAA4B,iBAAI,KAAO,mBACjDA,EAAUA,EAAyB,cAAI,KAAO,gBAC9CA,EAAUA,EAAuC,4BAAI,KAAO,8BAC5DA,EAAUA,EAA0B,eAAI,KAAO,iBAC/CA,EAAUA,EAAoB,SAAI,KAAO,WACzCA,EAAUA,EAAgB,KAAI,KAAO,OACrCA,EAAUA,EAA2B,gBAAI,KAAO,kBAChDA,EAAUA,EAA+B,oBAAI,KAAO,sBACpDA,EAAUA,EAA0B,eAAI,KAAO,iBAC/CA,EAAUA,EAAsB,WAAI,KAAO,aAC3CA,EAAUA,EAA8B,mBAAI,KAAO,qBACnDA,EAAUA,EAA0B,eAAI,KAAO,gBAClD,CA5BD,CA4BGA,EAAY5O,EAAQ4O,YAAc5O,EAAQ4O,UAAY,CAAC,IAE1D,SAAWD,GACPA,EAAgB,OAAI,SACpBA,EAAqB,YAAI,cAC5B,CAHD,CAGGA,EAAU3O,EAAQ2O,UAAY3O,EAAQ2O,QAAU,CAAC,IAEpD,SAAWD,GACPA,EAA4B,gBAAI,kBACnC,CAFD,CAEGA,EAAa1O,EAAQ0O,aAAe1O,EAAQ0O,WAAa,CAAC,IAS7D1O,EAAQyO,YAJR,SAAqBQ,GACjB,MAAMC,EAAWH,EAAGN,YAAY,IAAIU,IAAIF,IACxC,OAAOC,EAAWA,EAASlC,KAAO,EACtC,EAEA,MAAMoC,EAAoB,CACtBR,EAAUS,iBACVT,EAAUU,cACVV,EAAUW,SACVX,EAAUY,kBACVZ,EAAUa,mBAERC,EAAyB,CAC3Bd,EAAUe,WACVf,EAAUgB,mBACVhB,EAAUiB,gBAERC,EAAqB,CAAC,UAAW,MAAO,SAAU,QAGxD,MAAMtB,UAAwB/J,MAC1BzD,YAAYT,EAAS+H,GACjByH,MAAMxP,GACN3B,KAAKmC,KAAO,kBACZnC,KAAK0J,WAAaA,EAClBzJ,OAAOmR,eAAepR,KAAM4P,EAAgByB,UAChD,EAEJjQ,EAAQwO,gBAAkBA,EAC1B,MAAMD,EACFvN,YAAYT,GACR3B,KAAK2B,QAAUA,CACnB,CACA2P,WACI,OAAOvO,EAAU/C,UAAM,OAAQ,GAAQ,YACnC,OAAO,IAAIoD,SAASC,GAAYN,EAAU/C,UAAM,OAAQ,GAAQ,YAC5D,IAAIuR,EAASjC,OAAOkC,MAAM,GAC1BxR,KAAK2B,QAAQ8P,GAAG,QAASC,IACrBH,EAASjC,OAAOqC,OAAO,CAACJ,EAAQG,GAAO,IAE3C1R,KAAK2B,QAAQ8P,GAAG,OAAO,KACnBpO,EAAQkO,EAAOtP,WAAW,GAElC,KACJ,GACJ,EAEJb,EAAQuO,mBAAqBA,EAK7BvO,EAAQsO,QAJR,SAAiBkC,GAEb,MAA8B,WADZ,IAAIrB,IAAIqB,GACTC,QACrB,EAwdAzQ,EAAQ0H,WAtdR,MACI1G,YAAY0P,EAAWC,EAAUpJ,GAC7B3I,KAAKgS,iBAAkB,EACvBhS,KAAKiS,iBAAkB,EACvBjS,KAAKkS,yBAA0B,EAC/BlS,KAAKmS,cAAgB,GACrBnS,KAAKoS,eAAgB,EACrBpS,KAAKqS,YAAc,EACnBrS,KAAKsS,YAAa,EAClBtS,KAAKuS,WAAY,EACjBvS,KAAK8R,UAAYA,EACjB9R,KAAK+R,SAAWA,GAAY,GAC5B/R,KAAK2I,eAAiBA,EAClBA,IACqC,MAAjCA,EAAe6J,iBACfxS,KAAKgS,gBAAkBrJ,EAAe6J,gBAE1CxS,KAAKyS,eAAiB9J,EAAe+J,cACA,MAAjC/J,EAAegK,iBACf3S,KAAKiS,gBAAkBtJ,EAAegK,gBAEG,MAAzChK,EAAeiK,yBACf5S,KAAKkS,wBAA0BvJ,EAAeiK,wBAEf,MAA/BjK,EAAekK,eACf7S,KAAKmS,cAAgBW,KAAKC,IAAIpK,EAAekK,aAAc,IAE/B,MAA5BlK,EAAeqK,YACfhT,KAAKsS,WAAa3J,EAAeqK,WAEF,MAA/BrK,EAAeC,eACf5I,KAAKoS,cAAgBzJ,EAAeC,cAEP,MAA7BD,EAAeE,aACf7I,KAAKqS,YAAc1J,EAAeE,YAG9C,CACApD,QAAQmM,EAAYqB,GAChB,OAAOlQ,EAAU/C,UAAM,OAAQ,GAAQ,YACnC,OAAOA,KAAKkT,QAAQ,UAAWtB,EAAY,KAAMqB,GAAqB,CAAC,EAC3E,GACJ,CACAvS,IAAIkR,EAAYqB,GACZ,OAAOlQ,EAAU/C,UAAM,OAAQ,GAAQ,YACnC,OAAOA,KAAKkT,QAAQ,MAAOtB,EAAY,KAAMqB,GAAqB,CAAC,EACvE,GACJ,CACAE,IAAIvB,EAAYqB,GACZ,OAAOlQ,EAAU/C,UAAM,OAAQ,GAAQ,YACnC,OAAOA,KAAKkT,QAAQ,SAAUtB,EAAY,KAAMqB,GAAqB,CAAC,EAC1E,GACJ,CACAG,KAAKxB,EAAY1E,EAAM+F,GACnB,OAAOlQ,EAAU/C,UAAM,OAAQ,GAAQ,YACnC,OAAOA,KAAKkT,QAAQ,OAAQtB,EAAY1E,EAAM+F,GAAqB,CAAC,EACxE,GACJ,CACAI,MAAMzB,EAAY1E,EAAM+F,GACpB,OAAOlQ,EAAU/C,UAAM,OAAQ,GAAQ,YACnC,OAAOA,KAAKkT,QAAQ,QAAStB,EAAY1E,EAAM+F,GAAqB,CAAC,EACzE,GACJ,CACAK,IAAI1B,EAAY1E,EAAM+F,GAClB,OAAOlQ,EAAU/C,UAAM,OAAQ,GAAQ,YACnC,OAAOA,KAAKkT,QAAQ,MAAOtB,EAAY1E,EAAM+F,GAAqB,CAAC,EACvE,GACJ,CACAM,KAAK3B,EAAYqB,GACb,OAAOlQ,EAAU/C,UAAM,OAAQ,GAAQ,YACnC,OAAOA,KAAKkT,QAAQ,OAAQtB,EAAY,KAAMqB,GAAqB,CAAC,EACxE,GACJ,CACAO,WAAWC,EAAM7B,EAAY8B,EAAQT,GACjC,OAAOlQ,EAAU/C,UAAM,OAAQ,GAAQ,YACnC,OAAOA,KAAKkT,QAAQO,EAAM7B,EAAY8B,EAAQT,EAClD,GACJ,CAKAzJ,QAAQoI,EAAYqB,EAAoB,CAAC,GACrC,OAAOlQ,EAAU/C,UAAM,OAAQ,GAAQ,YACnCiT,EAAkBlD,EAAQ4D,QAAU3T,KAAK4T,4BAA4BX,EAAmBlD,EAAQ4D,OAAQ7D,EAAW+D,iBACnH,MAAMtK,QAAYvJ,KAAKU,IAAIkR,EAAYqB,GACvC,OAAOjT,KAAK8T,iBAAiBvK,EAAKvJ,KAAK2I,eAC3C,GACJ,CACAoL,SAASnC,EAAYoC,EAAKf,EAAoB,CAAC,GAC3C,OAAOlQ,EAAU/C,UAAM,OAAQ,GAAQ,YACnC,MAAMkN,EAAOoB,KAAK1C,UAAUoI,EAAK,KAAM,GACvCf,EAAkBlD,EAAQ4D,QAAU3T,KAAK4T,4BAA4BX,EAAmBlD,EAAQ4D,OAAQ7D,EAAW+D,iBACnHZ,EAAkBlD,EAAQkE,aAAejU,KAAK4T,4BAA4BX,EAAmBlD,EAAQkE,YAAanE,EAAW+D,iBAC7H,MAAMtK,QAAYvJ,KAAKoT,KAAKxB,EAAY1E,EAAM+F,GAC9C,OAAOjT,KAAK8T,iBAAiBvK,EAAKvJ,KAAK2I,eAC3C,GACJ,CACAuL,QAAQtC,EAAYoC,EAAKf,EAAoB,CAAC,GAC1C,OAAOlQ,EAAU/C,UAAM,OAAQ,GAAQ,YACnC,MAAMkN,EAAOoB,KAAK1C,UAAUoI,EAAK,KAAM,GACvCf,EAAkBlD,EAAQ4D,QAAU3T,KAAK4T,4BAA4BX,EAAmBlD,EAAQ4D,OAAQ7D,EAAW+D,iBACnHZ,EAAkBlD,EAAQkE,aAAejU,KAAK4T,4BAA4BX,EAAmBlD,EAAQkE,YAAanE,EAAW+D,iBAC7H,MAAMtK,QAAYvJ,KAAKsT,IAAI1B,EAAY1E,EAAM+F,GAC7C,OAAOjT,KAAK8T,iBAAiBvK,EAAKvJ,KAAK2I,eAC3C,GACJ,CACAwL,UAAUvC,EAAYoC,EAAKf,EAAoB,CAAC,GAC5C,OAAOlQ,EAAU/C,UAAM,OAAQ,GAAQ,YACnC,MAAMkN,EAAOoB,KAAK1C,UAAUoI,EAAK,KAAM,GACvCf,EAAkBlD,EAAQ4D,QAAU3T,KAAK4T,4BAA4BX,EAAmBlD,EAAQ4D,OAAQ7D,EAAW+D,iBACnHZ,EAAkBlD,EAAQkE,aAAejU,KAAK4T,4BAA4BX,EAAmBlD,EAAQkE,YAAanE,EAAW+D,iBAC7H,MAAMtK,QAAYvJ,KAAKqT,MAAMzB,EAAY1E,EAAM+F,GAC/C,OAAOjT,KAAK8T,iBAAiBvK,EAAKvJ,KAAK2I,eAC3C,GACJ,CAMAuK,QAAQO,EAAM7B,EAAY1E,EAAMmC,GAC5B,OAAOtM,EAAU/C,UAAM,OAAQ,GAAQ,YACnC,GAAIA,KAAKuS,UACL,MAAM,IAAI1M,MAAM,qCAEpB,MAAMuO,EAAY,IAAI7D,IAAIqB,GAC1B,IAAIvN,EAAOrE,KAAKqU,gBAAgBZ,EAAMW,EAAW/E,GAEjD,MAAMiF,EAAWtU,KAAKoS,eAAiBlB,EAAmBrK,SAAS4M,GAC7DzT,KAAKqS,YAAc,EACnB,EACN,IACIkC,EADAC,EAAW,EAEf,EAAG,CAGC,GAFAD,QAAiBvU,KAAKyU,WAAWpQ,EAAM6I,GAEnCqH,GACAA,EAAS5S,SACT4S,EAAS5S,QAAQ+H,aAAesG,EAAU0E,aAAc,CACxD,IAAIC,EACJ,IAAK,MAAMC,KAAW5U,KAAK+R,SACvB,GAAI6C,EAAQpF,wBAAwB+E,GAAW,CAC3CI,EAAwBC,EACxB,KACJ,CAEJ,OAAID,EACOA,EAAsBlF,qBAAqBzP,KAAMqE,EAAM6I,GAKvDqH,CAEf,CACA,IAAIM,EAAqB7U,KAAKmS,cAC9B,KAAOoC,EAAS5S,QAAQ+H,YACpB8G,EAAkB3J,SAAS0N,EAAS5S,QAAQ+H,aAC5C1J,KAAKiS,iBACL4C,EAAqB,GAAG,CACxB,MAAMC,EAAcP,EAAS5S,QAAQ0N,QAAkB,SACvD,IAAKyF,EAED,MAEJ,MAAMC,EAAoB,IAAIxE,IAAIuE,GAClC,GAA2B,WAAvBV,EAAUvC,UACVuC,EAAUvC,WAAakD,EAAkBlD,WACxC7R,KAAKkS,wBACN,MAAM,IAAIrM,MAAM,gLAMpB,SAFM0O,EAASjD,WAEXyD,EAAkBC,WAAaZ,EAAUY,SACzC,IAAK,MAAM/H,KAAUoC,EAEY,kBAAzBpC,EAAOgI,sBACA5F,EAAQpC,GAK3B5I,EAAOrE,KAAKqU,gBAAgBZ,EAAMsB,EAAmB1F,GACrDkF,QAAiBvU,KAAKyU,WAAWpQ,EAAM6I,GACvC2H,GACJ,CACA,IAAKN,EAAS5S,QAAQ+H,aACjBoH,EAAuBjK,SAAS0N,EAAS5S,QAAQ+H,YAElD,OAAO6K,EAEXC,GAAY,EACRA,EAAWF,UACLC,EAASjD,iBACTtR,KAAKkV,2BAA2BV,GAE9C,OAASA,EAAWF,GACpB,OAAOC,CACX,GACJ,CAIAY,UACQnV,KAAKoV,QACLpV,KAAKoV,OAAOC,UAEhBrV,KAAKuS,WAAY,CACrB,CAMAkC,WAAWpQ,EAAM6I,GACb,OAAOnK,EAAU/C,UAAM,OAAQ,GAAQ,YACnC,OAAO,IAAIoD,SAAQ,CAACC,EAASC,KAazBtD,KAAKsV,uBAAuBjR,EAAM6I,GAZlC,SAA2BqI,EAAKhM,GACxBgM,EACAjS,EAAOiS,GAEDhM,EAKNlG,EAAQkG,GAHRjG,EAAO,IAAIuC,MAAM,iBAKzB,GAC0D,GAElE,GACJ,CAOAyP,uBAAuBjR,EAAM6I,EAAMsI,GACX,iBAATtI,IACF7I,EAAKoB,QAAQ4J,UACdhL,EAAKoB,QAAQ4J,QAAU,CAAC,GAE5BhL,EAAKoB,QAAQ4J,QAAQ,kBAAoBC,OAAOmG,WAAWvI,EAAM,SAErE,IAAIwI,GAAiB,EACrB,SAASC,EAAaJ,EAAKhM,GAClBmM,IACDA,GAAiB,EACjBF,EAASD,EAAKhM,GAEtB,CACA,MAAMqM,EAAMvR,EAAKwR,WAAW3C,QAAQ7O,EAAKoB,SAAUqQ,IAE/CH,OAAapV,EADD,IAAIoP,EAAmBmG,GACP,IAEhC,IAAIC,EACJH,EAAInE,GAAG,UAAUuE,IACbD,EAASC,CAAI,IAGjBJ,EAAIK,WAAWjW,KAAKyS,gBAAkB,MAAW,KACzCsD,GACAA,EAAOG,MAEXP,EAAa,IAAI9P,MAAM,oBAAoBxB,EAAKoB,QAAQF,QAAQ,IAEpEqQ,EAAInE,GAAG,SAAS,SAAU8D,GAGtBI,EAAaJ,EACjB,IACIrI,GAAwB,iBAATA,GACf0I,EAAI5T,MAAMkL,EAAM,QAEhBA,GAAwB,iBAATA,GACfA,EAAKuE,GAAG,SAAS,WACbmE,EAAIM,KACR,IACAhJ,EAAKiJ,KAAKP,IAGVA,EAAIM,KAEZ,CAMAE,SAAS/F,GACL,MAAM+D,EAAY,IAAI7D,IAAIF,GAC1B,OAAOrQ,KAAKqW,UAAUjC,EAC1B,CACAC,gBAAgBiC,EAAQ1E,EAAYvC,GAChC,MAAMhL,EAAO,CAAC,EACdA,EAAK+P,UAAYxC,EACjB,MAAM2E,EAAuC,WAA5BlS,EAAK+P,UAAUvC,SAChCxN,EAAKwR,WAAaU,EAAWrG,EAAQD,EACrC,MAAMuG,EAAcD,EAAW,IAAM,GAerC,GAdAlS,EAAKoB,QAAU,CAAC,EAChBpB,EAAKoB,QAAQgR,KAAOpS,EAAK+P,UAAUY,SACnC3Q,EAAKoB,QAAQiR,KAAOrS,EAAK+P,UAAUsC,KAC7BC,SAAStS,EAAK+P,UAAUsC,MACxBF,EACNnS,EAAKoB,QAAQF,MACRlB,EAAK+P,UAAUwC,UAAY,KAAOvS,EAAK+P,UAAUyC,QAAU,IAChExS,EAAKoB,QAAQ6Q,OAASA,EACtBjS,EAAKoB,QAAQ4J,QAAUrP,KAAK8W,cAAczH,GACpB,MAAlBrP,KAAK8R,YACLzN,EAAKoB,QAAQ4J,QAAQ,cAAgBrP,KAAK8R,WAE9CzN,EAAKoB,QAAQsR,MAAQ/W,KAAKqW,UAAUhS,EAAK+P,WAErCpU,KAAK+R,SACL,IAAK,MAAM6C,KAAW5U,KAAK+R,SACvB6C,EAAQxF,eAAe/K,EAAKoB,SAGpC,OAAOpB,CACX,CACAyS,cAAczH,GACV,OAAIrP,KAAK2I,gBAAkB3I,KAAK2I,eAAe0G,QACpCpP,OAAOmM,OAAO,CAAC,EAAG4K,EAAchX,KAAK2I,eAAe0G,SAAU2H,EAAc3H,GAAW,CAAC,IAE5F2H,EAAc3H,GAAW,CAAC,EACrC,CACAuE,4BAA4BX,EAAmBhG,EAAQgK,GACnD,IAAIC,EAIJ,OAHIlX,KAAK2I,gBAAkB3I,KAAK2I,eAAe0G,UAC3C6H,EAAeF,EAAchX,KAAK2I,eAAe0G,SAASpC,IAEvDgG,EAAkBhG,IAAWiK,GAAgBD,CACxD,CACAZ,UAAUjC,GACN,IAAI2C,EACJ,MAAMzG,EAAWH,EAAGN,YAAYuE,GAC1B+C,EAAW7G,GAAYA,EAAS0E,SAQtC,GAPIhV,KAAKsS,YAAc6E,IACnBJ,EAAQ/W,KAAKoX,aAEbpX,KAAKsS,aAAe6E,IACpBJ,EAAQ/W,KAAKoV,QAGb2B,EACA,OAAOA,EAEX,MAAMR,EAAkC,WAAvBnC,EAAUvC,SAC3B,IAAIwF,EAAa,IAKjB,GAJIrX,KAAK2I,iBACL0O,EAAarX,KAAK2I,eAAe0O,YAAcpH,EAAKqH,YAAYD,YAGhE/G,GAAYA,EAAS0E,SAAU,CAC/B,MAAMuC,EAAe,CACjBF,aACArE,UAAWhT,KAAKsS,WAChBkF,MAAOvX,OAAOmM,OAAOnM,OAAOmM,OAAO,CAAC,GAAKkE,EAASpB,UAAYoB,EAASnB,WAAa,CAChFsI,UAAW,GAAGnH,EAASpB,YAAYoB,EAASnB,aAC3C,CAAEsH,KAAMnG,EAAS0E,SAAU0B,KAAMpG,EAASoG,QAEnD,IAAIgB,EACJ,MAAMC,EAAkC,WAAtBrH,EAASuB,SAEvB6F,EADAnB,EACcoB,EAAYvH,EAAOwH,eAAiBxH,EAAOyH,cAG3CF,EAAYvH,EAAO0H,cAAgB1H,EAAO2H,aAE5DhB,EAAQW,EAAYH,GACpBvX,KAAKoX,YAAcL,CACvB,CAEA,GAAI/W,KAAKsS,aAAeyE,EAAO,CAC3B,MAAMtR,EAAU,CAAEuN,UAAWhT,KAAKsS,WAAY+E,cAC9CN,EAAQR,EAAW,IAAIrG,EAAM8H,MAAMvS,GAAW,IAAIwK,EAAK+H,MAAMvS,GAC7DzF,KAAKoV,OAAS2B,CAClB,CAaA,OAXKA,IACDA,EAAQR,EAAWrG,EAAMoH,YAAcrH,EAAKqH,aAE5Cf,GAAYvW,KAAKgS,kBAIjB+E,EAAMtR,QAAUxF,OAAOmM,OAAO2K,EAAMtR,SAAW,CAAC,EAAG,CAC/CwS,oBAAoB,KAGrBlB,CACX,CACA7B,2BAA2BgD,GACvB,OAAOnV,EAAU/C,UAAM,OAAQ,GAAQ,YACnCkY,EAAcpF,KAAKqF,IAlbG,GAkb4BD,GAClD,MAAME,EAlbkB,EAkbiBtF,KAAKuF,IAAI,EAAGH,GACrD,OAAO,IAAI9U,SAAQC,GAAW4S,YAAW,IAAM5S,KAAW+U,IAC9D,GACJ,CACAtE,iBAAiBvK,EAAK9D,GAClB,OAAO1C,EAAU/C,UAAM,OAAQ,GAAQ,YACnC,OAAO,IAAIoD,SAAQ,CAACC,EAASC,IAAWP,EAAU/C,UAAM,OAAQ,GAAQ,YACpE,MAAM0J,EAAaH,EAAI5H,QAAQ+H,YAAc,EACvC6K,EAAW,CACb7K,aACAzI,OAAQ,KACRoO,QAAS,CAAC,GAgBd,IAAI2E,EACAsE,EAdA5O,IAAesG,EAAUuI,UACzBlV,EAAQkR,GAcZ,IACI+D,QAAiB/O,EAAI+H,WACjBgH,GAAYA,EAAS/V,OAAS,IAE1ByR,EADAvO,GAAWA,EAAQ+S,iBACblK,KAAKmK,MAAMH,GAf7B,SAA8B7V,EAAK5B,GAC/B,GAAqB,iBAAVA,EAAoB,CAC3B,MAAM6X,EAAI,IAAIC,KAAK9X,GACnB,IAAK+X,MAAMF,EAAEG,WACT,OAAOH,CAEf,CACA,OAAO7X,CACX,IAUkByN,KAAKmK,MAAMH,GAErB/D,EAAStT,OAAS+S,GAEtBO,EAASlF,QAAU9F,EAAI5H,QAAQ0N,OAInC,CAFA,MAAOkG,GAEP,CAEA,GAAI7L,EAAa,IAAK,CAClB,IAAIoM,EAGAA,EADA9B,GAAOA,EAAIrS,QACLqS,EAAIrS,QAEL2W,GAAYA,EAAS/V,OAAS,EAE7B+V,EAGA,oBAAoB5O,KAE9B,MAAM6L,EAAM,IAAI3F,EAAgBkG,EAAKpM,GACrC6L,EAAItU,OAASsT,EAAStT,OACtBqC,EAAOiS,EACX,MAEIlS,EAAQkR,EAEhB,KACJ,GACJ,GAGJ,MAAMyC,EAAiBhD,GAAQ/T,OAAOqC,KAAK0R,GAAK8E,QAAO,CAACC,EAAG1Y,KAAQ0Y,EAAE1Y,EAAE4U,eAAiBjB,EAAI3T,GAAK0Y,IAAI,CAAC,E,4BCnkBtG,SAASC,EAAYC,GACjB,IAAKA,EAAOjE,SACR,OAAO,EAEX,MAAMkE,EAAUpX,QAAQ4D,IAAc,UAAK5D,QAAQ4D,IAAc,UAAK,GACtE,IAAKwT,EACD,OAAO,EAGX,IAAIC,EACAF,EAAOvC,KACPyC,EAAUC,OAAOH,EAAOvC,MAEC,UAApBuC,EAAOpH,SACZsH,EAAU,GAEe,WAApBF,EAAOpH,WACZsH,EAAU,KAGd,MAAME,EAAgB,CAACJ,EAAOjE,SAASrP,eAChB,iBAAZwT,GACPE,EAAcC,KAAK,GAAGD,EAAc,MAAMF,KAG9C,IAAK,MAAMI,KAAoBL,EAC1B1S,MAAM,KACNG,KAAID,GAAKA,EAAEX,OAAOJ,gBAClBc,QAAOC,GAAKA,IACb,GAAI2S,EAAcG,MAAK9S,GAAKA,IAAM6S,IAC9B,OAAO,EAGf,OAAO,CACX,CAzDAtZ,OAAOO,eAAeY,EAAS,aAAc,CAAEP,OAAO,IACtDO,EAAQ4X,YAAc5X,EAAQyO,iBAAc,EAqB5CzO,EAAQyO,YApBR,SAAqBoJ,GACjB,MAAM1C,EAA+B,WAApB0C,EAAOpH,SACxB,GAAImH,EAAYC,GACZ,OAEJ,MAAMQ,EACElD,EACOzU,QAAQ4D,IAAiB,aAAK5D,QAAQ4D,IAAiB,YAGvD5D,QAAQ4D,IAAgB,YAAK5D,QAAQ4D,IAAgB,WAGpE,OAAI+T,EACO,IAAIlJ,IAAIkJ,QAGf,CAER,EAqCArY,EAAQ4X,YAAcA,C,yDC3Df,MAAMU,EAAiB,KAC1B,IACI,OAAsEC,EAAOC,SAAW,EAAQ,yGACrF,CAAC,gBAEL,IAIX,CAFA,MAAOlW,GACH,OAAO,IACX,E,8BCPJ,MAAMmW,EAAY,EAAQ,MACpBC,EAAY,EAAQ,MACpBC,EAAa,EAAQ,MAE3BJ,EAAOvY,QAAU,CACf0Y,UAAWA,EACXE,aAAcH,EACdE,WAAYA,E,4BCPd,MAAME,EAAgB,gLAEhBC,EAAa,IAAMD,EAAN,gOACbE,EAAY,IAAIC,OAAO,IAAMF,EAAa,KAuBhD9Y,EAAQiZ,QAAU,SAASzZ,GACzB,YAAoB,IAANA,CAChB,EAEAQ,EAAQkZ,cAAgB,SAAStG,GAC/B,OAAmC,IAA5B/T,OAAOqC,KAAK0R,GAAKzR,MAC1B,EAOAnB,EAAQmZ,MAAQ,SAASC,EAAQ9B,EAAG+B,GAClC,GAAI/B,EAAG,CACL,MAAMpW,EAAOrC,OAAOqC,KAAKoW,GACnBgC,EAAMpY,EAAKC,OACjB,IAAK,IAAIoY,EAAI,EAAGA,EAAID,EAAKC,IAErBH,EAAOlY,EAAKqY,IADI,WAAdF,EACgB,CAAE/B,EAAEpW,EAAKqY,KAETjC,EAAEpW,EAAKqY,GAG/B,CACF,EAKAvZ,EAAQwZ,SAAW,SAASha,GAC1B,OAAIQ,EAAQiZ,QAAQzZ,GACXA,EAEA,EAEX,EAKAQ,EAAQyZ,OA9CO,SAASC,GACtB,MAAMC,EAAQZ,EAAUa,KAAKF,GAC7B,QAAQ,MAACC,EACX,EA4CA3Z,EAAQ6Z,cA/Dc,SAASH,EAAQI,GACrC,MAAMC,EAAU,GAChB,IAAIJ,EAAQG,EAAMF,KAAKF,GACvB,KAAOC,GAAO,CACZ,MAAMK,EAAa,GACnBA,EAAWC,WAAaH,EAAMI,UAAYP,EAAM,GAAGxY,OACnD,MAAMmY,EAAMK,EAAMxY,OAClB,IAAK,IAAIgZ,EAAQ,EAAGA,EAAQb,EAAKa,IAC/BH,EAAW9B,KAAKyB,EAAMQ,IAExBJ,EAAQ7B,KAAK8B,GACbL,EAAQG,EAAMF,KAAKF,EACrB,CACA,OAAOK,CACT,EAkDA/Z,EAAQ8Y,WAAaA,C,8BCrErB,MAAMsB,EAAO,EAAQ,MAEfC,EAAiB,CACrBC,wBAAwB,EACxBC,aAAc,IAwLhB,SAASC,EAAaC,GACpB,MAAgB,MAATA,GAAyB,OAATA,GAA0B,OAATA,GAA2B,OAATA,CAC5D,CAMA,SAASC,EAAOC,EAASpB,GACvB,MAAMqB,EAAQrB,EACd,KAAOA,EAAIoB,EAAQxZ,OAAQoY,IACzB,GAAkB,KAAdoB,EAAQpB,IAA2B,KAAdoB,EAAQpB,QAAjC,CAEE,MAAMsB,EAAUF,EAAQG,OAAOF,EAAOrB,EAAIqB,GAC1C,GAAIrB,EAAI,GAAiB,QAAZsB,EACX,OAAOE,EAAe,aAAc,6DAA8DC,EAAyBL,EAASpB,IAC/H,GAAkB,KAAdoB,EAAQpB,IAA+B,KAAlBoB,EAAQpB,EAAI,GAAW,CAErDA,IACA,KACF,CAGF,CAEF,OAAOA,CACT,CAEA,SAAS0B,EAAoBN,EAASpB,GACpC,GAAIoB,EAAQxZ,OAASoY,EAAI,GAAwB,MAAnBoB,EAAQpB,EAAI,IAAiC,MAAnBoB,EAAQpB,EAAI,IAElE,IAAKA,GAAK,EAAGA,EAAIoB,EAAQxZ,OAAQoY,IAC/B,GAAmB,MAAfoB,EAAQpB,IAAiC,MAAnBoB,EAAQpB,EAAI,IAAiC,MAAnBoB,EAAQpB,EAAI,GAAY,CAC1EA,GAAK,EACL,KACF,OAEG,GACLoB,EAAQxZ,OAASoY,EAAI,GACF,MAAnBoB,EAAQpB,EAAI,IACO,MAAnBoB,EAAQpB,EAAI,IACO,MAAnBoB,EAAQpB,EAAI,IACO,MAAnBoB,EAAQpB,EAAI,IACO,MAAnBoB,EAAQpB,EAAI,IACO,MAAnBoB,EAAQpB,EAAI,IACO,MAAnBoB,EAAQpB,EAAI,GACZ,CACA,IAAI2B,EAAqB,EACzB,IAAK3B,GAAK,EAAGA,EAAIoB,EAAQxZ,OAAQoY,IAC/B,GAAmB,MAAfoB,EAAQpB,GACV2B,SACK,GAAmB,MAAfP,EAAQpB,KACjB2B,IAC2B,IAAvBA,GACF,KAIR,MAAO,GACLP,EAAQxZ,OAASoY,EAAI,GACF,MAAnBoB,EAAQpB,EAAI,IACO,MAAnBoB,EAAQpB,EAAI,IACO,MAAnBoB,EAAQpB,EAAI,IACO,MAAnBoB,EAAQpB,EAAI,IACO,MAAnBoB,EAAQpB,EAAI,IACO,MAAnBoB,EAAQpB,EAAI,IACO,MAAnBoB,EAAQpB,EAAI,GAEZ,IAAKA,GAAK,EAAGA,EAAIoB,EAAQxZ,OAAQoY,IAC/B,GAAmB,MAAfoB,EAAQpB,IAAiC,MAAnBoB,EAAQpB,EAAI,IAAiC,MAAnBoB,EAAQpB,EAAI,GAAY,CAC1EA,GAAK,EACL,KACF,CAIJ,OAAOA,CACT,CAjQAvZ,EAAQmb,SAAW,SAAUR,EAAStW,GACpCA,EAAUxF,OAAOmM,OAAO,CAAC,EAAGqP,EAAgBhW,GAK5C,MAAM+W,EAAO,GACb,IAAIC,GAAW,EAGXC,GAAc,EAEC,WAAfX,EAAQ,KAEVA,EAAUA,EAAQG,OAAO,IAG3B,IAAK,IAAIvB,EAAI,EAAGA,EAAIoB,EAAQxZ,OAAQoY,IAElC,GAAmB,MAAfoB,EAAQpB,IAA+B,MAAjBoB,EAAQpB,EAAE,IAGlC,GAFAA,GAAG,EACHA,EAAImB,EAAOC,EAAQpB,GACfA,EAAEpF,IAAK,OAAOoF,MACd,IAAmB,MAAfoB,EAAQpB,GAwIX,CACL,GAAKiB,EAAaG,EAAQpB,IACxB,SAEF,OAAOwB,EAAe,cAAe,SAASJ,EAAQpB,GAAG,qBAAsByB,EAAyBL,EAASpB,GACnH,CA7I8B,CAG5B,IAAIgC,EAAchC,EAGlB,GAFAA,IAEmB,MAAfoB,EAAQpB,GAAY,CACtBA,EAAI0B,EAAoBN,EAASpB,GACjC,QACF,CAAO,CACL,IAAIiC,GAAa,EACE,MAAfb,EAAQpB,KAEViC,GAAa,EACbjC,KAGF,IAAIkC,EAAU,GACd,KAAOlC,EAAIoB,EAAQxZ,QACF,MAAfwZ,EAAQpB,IACO,MAAfoB,EAAQpB,IACO,OAAfoB,EAAQpB,IACO,OAAfoB,EAAQpB,IACO,OAAfoB,EAAQpB,GAAaA,IAErBkC,GAAWd,EAAQpB,GAWrB,GATAkC,EAAUA,EAAQ9W,OAGkB,MAAhC8W,EAAQA,EAAQta,OAAS,KAE3Bsa,EAAUA,EAAQC,UAAU,EAAGD,EAAQta,OAAS,GAEhDoY,KAiVesB,EA/UIY,GAgVpBrB,EAAKX,OAAOoB,GAhVkB,CAC7B,IAAInG,EAMJ,OAJEA,EAD4B,IAA1B+G,EAAQ9W,OAAOxD,OACX,2BAEA,QAAQsa,EAAQ,wBAEjBV,EAAe,aAAcrG,EAAKsG,EAAyBL,EAASpB,GAC7E,CAEA,MAAM1Z,EAAS8b,EAAiBhB,EAASpB,GACzC,IAAe,IAAX1Z,EACF,OAAOkb,EAAe,cAAe,mBAAmBU,EAAQ,qBAAsBT,EAAyBL,EAASpB,IAE1H,IAAIqC,EAAU/b,EAAOJ,MAGrB,GAFA8Z,EAAI1Z,EAAOsa,MAEyB,MAAhCyB,EAAQA,EAAQza,OAAS,GAAY,CAEvC,MAAM0a,EAAetC,EAAIqC,EAAQza,OACjCya,EAAUA,EAAQF,UAAU,EAAGE,EAAQza,OAAS,GAChD,MAAM2a,EAAUC,EAAwBH,EAASvX,GACjD,IAAgB,IAAZyX,EAOF,OAAOf,EAAee,EAAQ3H,IAAIrJ,KAAMgR,EAAQ3H,IAAIO,IAAKsG,EAAyBL,EAASkB,EAAeC,EAAQ3H,IAAI7G,OANtH+N,GAAW,CAQf,MAAO,GAAIG,EAAY,CACrB,IAAK3b,EAAOmc,UACV,OAAOjB,EAAe,aAAc,gBAAgBU,EAAQ,iCAAkCT,EAAyBL,EAASpB,IAC3H,GAAIqC,EAAQjX,OAAOxD,OAAS,EACjC,OAAO4Z,EAAe,aAAc,gBAAgBU,EAAQ,+CAAgDT,EAAyBL,EAASY,IACzI,CACL,MAAMU,EAAMb,EAAKc,MACjB,GAAIT,IAAYQ,EAAIR,QAAS,CAC3B,IAAIU,EAAUnB,EAAyBL,EAASsB,EAAIV,aACpD,OAAOR,EAAe,aACpB,yBAAyBkB,EAAIR,QAAQ,qBAAqBU,EAAQ7O,KAAK,SAAS6O,EAAQ1O,IAAI,6BAA6BgO,EAAQ,KACjIT,EAAyBL,EAASY,GACtC,CAGmB,GAAfH,EAAKja,SACPma,GAAc,EAElB,CACF,KAAO,CACL,MAAMQ,EAAUC,EAAwBH,EAASvX,GACjD,IAAgB,IAAZyX,EAIF,OAAOf,EAAee,EAAQ3H,IAAIrJ,KAAMgR,EAAQ3H,IAAIO,IAAKsG,EAAyBL,EAASpB,EAAIqC,EAAQza,OAAS2a,EAAQ3H,IAAI7G,OAI9H,IAAoB,IAAhBgO,EACF,OAAOP,EAAe,aAAc,sCAAuCC,EAAyBL,EAASpB,KAC1D,IAA3ClV,EAAQkW,aAAa6B,QAAQX,IAGrCL,EAAKlD,KAAK,CAACuD,UAASF,gBAEtBF,GAAW,CACb,CAIA,IAAK9B,IAAKA,EAAIoB,EAAQxZ,OAAQoY,IAC5B,GAAmB,MAAfoB,EAAQpB,GAAY,CACtB,GAAuB,MAAnBoB,EAAQpB,EAAI,GAAY,CAE1BA,IACAA,EAAI0B,EAAoBN,EAASpB,GACjC,QACF,CAAO,GAAqB,MAAjBoB,EAAQpB,EAAE,GAInB,MAFA,GADAA,EAAImB,EAAOC,IAAWpB,GAClBA,EAAEpF,IAAK,OAAOoF,CAItB,MAAO,GAAmB,MAAfoB,EAAQpB,GAAY,CAC7B,MAAM8C,EAAWC,EAAkB3B,EAASpB,GAC5C,IAAiB,GAAb8C,EACF,OAAOtB,EAAe,cAAe,4BAA6BC,EAAyBL,EAASpB,IACtGA,EAAI8C,CACN,MACE,IAAoB,IAAhBf,IAAyBd,EAAaG,EAAQpB,IAChD,OAAOwB,EAAe,aAAc,wBAAyBC,EAAyBL,EAASpB,IAIlF,MAAfoB,EAAQpB,IACVA,GAEJ,CACF,CAKA,CAsOJ,IAAyBsB,EAnOvB,OAAKQ,EAEoB,GAAfD,EAAKja,OACJ4Z,EAAe,aAAc,iBAAiBK,EAAK,GAAGK,QAAQ,KAAMT,EAAyBL,EAASS,EAAK,GAAGG,gBAC/GH,EAAKja,OAAS,IACb4Z,EAAe,aAAc,YAChC7N,KAAK1C,UAAU4Q,EAAK7V,KAAIgX,GAAKA,EAAEd,UAAU,KAAM,GAAGha,QAAQ,SAAU,IACpE,WAAY,CAAC6L,KAAM,EAAGG,IAAK,IAN1BsN,EAAe,aAAc,sBAAuB,EAU/D,EAyFA,SAASY,EAAiBhB,EAASpB,GACjC,IAAIqC,EAAU,GACVY,EAAY,GACZR,GAAY,EAChB,KAAOzC,EAAIoB,EAAQxZ,OAAQoY,IAAK,CAC9B,GAbgB,MAaZoB,EAAQpB,IAZI,MAYkBoB,EAAQpB,GACtB,KAAdiD,EACFA,EAAY7B,EAAQpB,GACXiD,IAAc7B,EAAQpB,KAG/BiD,EAAY,SAET,GAAmB,MAAf7B,EAAQpB,IACC,KAAdiD,EAAkB,CACpBR,GAAY,EACZ,KACF,CAEFJ,GAAWjB,EAAQpB,EACrB,CACA,MAAkB,KAAdiD,GAIG,CACL/c,MAAOmc,EACPzB,MAAOZ,EACPyC,UAAWA,EAEf,CAKA,MAAMS,EAAoB,IAAIzD,OAAO,0DAA2D,KAIhG,SAAS+C,EAAwBH,EAASvX,GAKxC,MAAM0V,EAAUK,EAAKP,cAAc+B,EAASa,GACtCC,EAAY,CAAC,EAEnB,IAAK,IAAInD,EAAI,EAAGA,EAAIQ,EAAQ5Y,OAAQoY,IAAK,CACvC,GAA6B,IAAzBQ,EAAQR,GAAG,GAAGpY,OAEhB,OAAO4Z,EAAe,cAAe,cAAchB,EAAQR,GAAG,GAAG,8BAA+BoD,EAAqB5C,EAAQR,KACxH,QAAsBpa,IAAlB4a,EAAQR,GAAG,SAAsCpa,IAAlB4a,EAAQR,GAAG,GACnD,OAAOwB,EAAe,cAAe,cAAchB,EAAQR,GAAG,GAAG,sBAAuBoD,EAAqB5C,EAAQR,KAChH,QAAsBpa,IAAlB4a,EAAQR,GAAG,KAAqBlV,EAAQiW,uBAEjD,OAAOS,EAAe,cAAe,sBAAsBhB,EAAQR,GAAG,GAAG,oBAAqBoD,EAAqB5C,EAAQR,KAK7H,MAAMqD,EAAW7C,EAAQR,GAAG,GAC5B,IAAKsD,EAAiBD,GACpB,OAAO7B,EAAe,cAAe,cAAc6B,EAAS,wBAAyBD,EAAqB5C,EAAQR,KAEpH,GAAKmD,EAAU5c,eAAe8c,GAI5B,OAAO7B,EAAe,cAAe,cAAc6B,EAAS,iBAAkBD,EAAqB5C,EAAQR,KAF3GmD,EAAUE,GAAY,CAI1B,CAEA,OAAO,CACT,CAiBA,SAASN,EAAkB3B,EAASpB,GAGlC,GAAmB,MAAfoB,IADJpB,GAEE,OAAQ,EACV,GAAmB,MAAfoB,EAAQpB,GAEV,OAtBJ,SAAiCoB,EAASpB,GACxC,IAAIuD,EAAK,KAKT,IAJmB,MAAfnC,EAAQpB,KACVA,IACAuD,EAAK,cAEAvD,EAAIoB,EAAQxZ,OAAQoY,IAAK,CAC9B,GAAmB,MAAfoB,EAAQpB,GACV,OAAOA,EACT,IAAKoB,EAAQpB,GAAGI,MAAMmD,GACpB,KACJ,CACA,OAAQ,CACV,CASWC,CAAwBpC,IAD/BpB,GAGF,IAAIyD,EAAQ,EACZ,KAAOzD,EAAIoB,EAAQxZ,OAAQoY,IAAKyD,IAC9B,KAAIrC,EAAQpB,GAAGI,MAAM,OAASqD,EAAQ,IAAtC,CAEA,GAAmB,MAAfrC,EAAQpB,GACV,MACF,OAAQ,CAHE,CAKZ,OAAOA,CACT,CAEA,SAASwB,EAAejQ,EAAMvK,EAAS0c,GACrC,MAAO,CACL9I,IAAK,CACHrJ,KAAMA,EACN4J,IAAKnU,EACL+M,KAAM2P,EAAW3P,MAAQ2P,EACzBxP,IAAKwP,EAAWxP,KAGtB,CAEA,SAASoP,EAAiBD,GACxB,OAAOxC,EAAKX,OAAOmD,EACrB,CASA,SAAS5B,EAAyBL,EAASR,GACzC,MAAM+C,EAAQvC,EAAQe,UAAU,EAAGvB,GAAO/U,MAAM,SAChD,MAAO,CACLkI,KAAM4P,EAAM/b,OAGZsM,IAAKyP,EAAMA,EAAM/b,OAAS,GAAGA,OAAS,EAE1C,CAGA,SAASwb,EAAqBhD,GAC5B,OAAOA,EAAMM,WAAaN,EAAM,GAAGxY,MACrC,C,8BCpaA,MAAMgc,EAAqB,EAAQ,MAE7B9C,EAAiB,CACrB+C,oBAAqB,KACrBC,qBAAqB,EACrBC,aAAc,QACdC,kBAAkB,EAClBC,eAAe,EACfC,QAAQ,EACRC,SAAU,KACVC,mBAAmB,EACnBC,sBAAsB,EACtBC,2BAA2B,EAC3BC,kBAAmB,SAASzc,EAAKiW,GAC/B,OAAOA,CACT,EACAyG,wBAAyB,SAASnB,EAAUtF,GAC1C,OAAOA,CACT,EACA0G,eAAe,EACfC,iBAAiB,EACjB1D,aAAc,GACd2D,SAAU,CACR,CAAEpE,MAAO,IAAId,OAAO,IAAK,KAAM1X,IAAK,SACpC,CAAEwY,MAAO,IAAId,OAAO,IAAK,KAAM1X,IAAK,QACpC,CAAEwY,MAAO,IAAId,OAAO,IAAK,KAAM1X,IAAK,QACpC,CAAEwY,MAAO,IAAId,OAAO,IAAM,KAAM1X,IAAK,UACrC,CAAEwY,MAAO,IAAId,OAAO,IAAM,KAAM1X,IAAK,WAEvC6c,iBAAiB,EACjBC,UAAW,GACXC,kBAAkB,GAGpB,SAASC,EAAQja,GACfzF,KAAKyF,QAAUxF,OAAOmM,OAAO,CAAC,EAAGqP,EAAgBhW,GAC7CzF,KAAKyF,QAAQkZ,kBAAoB3e,KAAKyF,QAAQgZ,oBAChDze,KAAK2f,YAAc,WACjB,OAAO,CACT,GAEA3f,KAAK4f,cAAgB5f,KAAKyF,QAAQ+Y,oBAAoBjc,OACtDvC,KAAK2f,YAAcA,GAGrB3f,KAAK6f,qBAAuBA,EAExB7f,KAAKyF,QAAQoZ,QACf7e,KAAK8f,UAAYA,EACjB9f,KAAK+f,WAAa,MAClB/f,KAAKggB,QAAU,OAEfhgB,KAAK8f,UAAY,WACf,MAAO,EACT,EACA9f,KAAK+f,WAAa,IAClB/f,KAAKggB,QAAU,IAGbhgB,KAAKyF,QAAQsZ,mBACf/e,KAAKigB,cAAgBC,EACrBlgB,KAAKmgB,aAAeC,IAEpBpgB,KAAKigB,cAAgBI,EACrBrgB,KAAKmgB,aAAeG,GAGtBtgB,KAAKqgB,iBAAmBA,EACxBrgB,KAAKsgB,gBAAkBA,EAEvBtgB,KAAKugB,qBAAuBA,EAC5BvgB,KAAKwgB,iBAAmBA,CAC1B,CA0EA,SAASA,EAAiBxC,EAAUtb,GAGlC,OAFAA,EAAM1C,KAAKyF,QAAQ0Z,wBAAwBnB,EAAU,GAAKtb,GAC1DA,EAAM1C,KAAKugB,qBAAqB7d,GAC5B1C,KAAKyF,QAAQwZ,2BAAqC,SAARvc,EACrC,IAAMsb,EACD,IAAMA,EAAW,KAAOtb,EAAM,GAC9C,CAEA,SAASmd,EAAsBY,EAAQhe,EAAKoL,GAC1C,MAAM5M,EAASjB,KAAK0gB,IAAID,EAAQ5S,EAAQ,GACxC,YAA0CtN,IAAtCkgB,EAAOzgB,KAAKyF,QAAQiZ,eAA8D,IAA/Bze,OAAOqC,KAAKme,GAAQle,OAClEvC,KAAKigB,cAAcQ,EAAOzgB,KAAKyF,QAAQiZ,cAAejc,EAAKxB,EAAO+b,QAASnP,GAE3E7N,KAAKmgB,aAAalf,EAAOyB,IAAKD,EAAKxB,EAAO+b,QAASnP,EAE9D,CAEA,SAASyS,EAAgB5d,EAAKD,EAAKua,EAASnP,GAC1C,IAAI8S,EAAY,KAAOle,EAAMzC,KAAK+f,WAC9Ba,EAAgB,GAOpB,MALc,MAAXne,EAAI,KACLme,EAAgB,IAChBD,EAAY,IAGV3D,IAAiC,IAAtBta,EAAI8a,QAAQ,KAChBxd,KAAK8f,UAAUjS,GAAS,IAAOpL,EAAMua,EAAU4D,EAAgB,IAAMle,EAAMie,GAC1C,IAAjC3gB,KAAKyF,QAAQ4Z,iBAA6B5c,IAAQzC,KAAKyF,QAAQ4Z,iBAA4C,IAAzBuB,EAAcre,OAClGvC,KAAK8f,UAAUjS,GAAS,UAAOnL,UAAW1C,KAAKggB,QAGpDhgB,KAAK8f,UAAUjS,GAAS,IAAMpL,EAAMua,EAAU4D,EAAgB5gB,KAAK+f,WACnErd,EACA1C,KAAK8f,UAAUjS,GAAS8S,CAE9B,CAEA,SAASP,EAAkB1d,EAAKD,EAAKua,EAASnP,GAC5C,MAAY,KAARnL,EACK1C,KAAKsgB,gBAAgB5d,EAAKD,EAAKua,EAASnP,GAEjC,MAAXpL,EAAI,GAAoBzC,KAAK8f,UAAUjS,GAAS,IAAMpL,EAAMua,EAAS,IAAMhd,KAAK+f,WACtE/f,KAAK8f,UAAUjS,GAAS,IAAMpL,EAAMua,EAAU,IAAMhd,KAAK+f,UAE1E,CAEA,SAASM,EAAiB3d,EAAKD,EAAKua,EAASnP,GAC3C,IAAmC,IAA/B7N,KAAKyF,QAAQmZ,eAA2Bnc,IAAQzC,KAAKyF,QAAQmZ,cAC/D,OAAO5e,KAAK8f,UAAUjS,GAAS,YAAYnL,OAAY1C,KAAKggB,QACxD,IAAqC,IAAjChgB,KAAKyF,QAAQ4Z,iBAA6B5c,IAAQzC,KAAKyF,QAAQ4Z,gBACvE,OAAOrf,KAAK8f,UAAUjS,GAAS,UAAOnL,UAAY1C,KAAKggB,QACpD,CACH,IAAIa,EAAY7gB,KAAKyF,QAAQyZ,kBAAkBzc,EAAKC,GAGpD,OAFAme,EAAY7gB,KAAKugB,qBAAqBM,GAEpB,KAAdA,IAAgE,IAA5C7gB,KAAKyF,QAAQkW,aAAa6B,QAAQ/a,GACrDzC,KAAKyF,QAAQuZ,qBACPhf,KAAK8f,UAAUjS,GAAS,IAAMpL,EAAMzC,KAAK+f,WAEzC/f,KAAK8f,UAAUjS,GAAS,IAAMpL,EAAM,IAAMzC,KAAK+f,WAItD/f,KAAK8f,UAAUjS,GAAS,IAAMpL,EAAMua,EAAU,IAC7C6D,EACD,KAAOpe,EAAMzC,KAAK+f,UAGxB,CACF,CAEA,SAASQ,EAAqBM,GAC5B,GAAGA,GAAaA,EAAUte,OAAS,GAAKvC,KAAKyF,QAAQ8Z,gBACnD,IAAK,IAAI5E,EAAE,EAAGA,EAAE3a,KAAKyF,QAAQ6Z,SAAS/c,OAAQoY,IAAK,CACjD,MAAMmG,EAAS9gB,KAAKyF,QAAQ6Z,SAAS3E,GACrCkG,EAAYA,EAAUhe,QAAQie,EAAO5F,MAAO4F,EAAOpe,IACrD,CAEF,OAAOme,CACT,CAEA,SAASX,EAAmBxd,EAAKD,EAAKua,EAASnP,GAC7C,MAAY,KAARnL,IAA0D,IAA5C1C,KAAKyF,QAAQkW,aAAa6B,QAAQ/a,GAC/CzC,KAAKyF,QAAQuZ,qBACPhf,KAAK8f,UAAUjS,GAAS,IAAMpL,EAAMzC,KAAK+f,WAEzC/f,KAAK8f,UAAUjS,GAAS,IAAMpL,EAAM,IAAMzC,KAAK+f,WAExC,KAARrd,EACD1C,KAAKqgB,iBAAiB3d,EAAKD,EAAKua,EAASnP,GAElC,MAAXpL,EAAI,GAAoBzC,KAAK8f,UAAUjS,GAAS,IAAMpL,EAAMua,EAAS,IAAMhd,KAAK+f,WACtE/f,KAAK8f,UAAUjS,GAAS,IAAMpL,EAAMua,EAAU,IAAMhd,KAAK+f,UAE1E,CAEA,SAASD,EAAUjS,GACjB,OAAO7N,KAAKyF,QAAQqZ,SAASiC,OAAOlT,EACtC,CAEA,SAAS8R,EAAYxd,GACnB,QAAIA,EAAK6e,WAAWhhB,KAAKyF,QAAQ+Y,sBACxBrc,EAAK+Z,OAAOlc,KAAK4f,cAI5B,CAnLAF,EAAQrO,UAAU4P,MAAQ,SAASC,GACjC,OAAGlhB,KAAKyF,QAAQ2Z,cACPb,EAAmB2C,EAAMlhB,KAAKyF,UAElC0b,MAAMC,QAAQF,IAASlhB,KAAKyF,QAAQ4b,eAAiBrhB,KAAKyF,QAAQ4b,cAAc9e,OAAS,IAC1F2e,EAAO,CACL,CAAClhB,KAAKyF,QAAQ4b,eAAiBH,IAG5BlhB,KAAK0gB,IAAIQ,EAAM,GAAGxe,IAE7B,EAEAgd,EAAQrO,UAAUqP,IAAM,SAASQ,EAAMrT,GACrC,IAAImP,EAAU,GACVta,EAAM,GACV,IAAK,IAAID,KAAOye,EACd,QAAyB,IAAdA,EAAKze,SAET,GAAkB,OAAdye,EAAKze,GACA,MAAXA,EAAI,GAAYC,GAAO1C,KAAK8f,UAAUjS,GAAS,IAAMpL,EAAM,IAAMzC,KAAK+f,WACpErd,GAAO1C,KAAK8f,UAAUjS,GAAS,IAAMpL,EAAM,IAAMzC,KAAK+f,gBAEtD,GAAImB,EAAKze,aAAgBkW,KAC9BjW,GAAO1C,KAAKigB,cAAciB,EAAKze,GAAMA,EAAK,GAAIoL,QACzC,GAAyB,iBAAdqT,EAAKze,GAAmB,CAExC,MAAM6e,EAAOthB,KAAK2f,YAAYld,GAC9B,GAAI6e,EACFtE,GAAWhd,KAAKwgB,iBAAiBc,EAAM,GAAKJ,EAAKze,SAGjD,GAAIA,IAAQzC,KAAKyF,QAAQiZ,aAAc,CACrC,IAAI6C,EAASvhB,KAAKyF,QAAQyZ,kBAAkBzc,EAAK,GAAKye,EAAKze,IAC3DC,GAAO1C,KAAKugB,qBAAqBgB,EACnC,MACE7e,GAAO1C,KAAKigB,cAAciB,EAAKze,GAAMA,EAAK,GAAIoL,EAGpD,MAAO,GAAIsT,MAAMC,QAAQF,EAAKze,IAAO,CAEnC,MAAM+e,EAASN,EAAKze,GAAKF,OACzB,IAAK,IAAIkf,EAAI,EAAGA,EAAID,EAAQC,IAAK,CAC/B,MAAM/U,EAAOwU,EAAKze,GAAKgf,QACH,IAAT/U,IAES,OAATA,EACK,MAAXjK,EAAI,GAAYC,GAAO1C,KAAK8f,UAAUjS,GAAS,IAAMpL,EAAM,IAAMzC,KAAK+f,WACpErd,GAAO1C,KAAK8f,UAAUjS,GAAS,IAAMpL,EAAM,IAAMzC,KAAK+f,WAG3Drd,GADyB,iBAATgK,EACT1M,KAAK6f,qBAAqBnT,EAAMjK,EAAKoL,GAErC7N,KAAKigB,cAAcvT,EAAMjK,EAAK,GAAIoL,GAE7C,CACF,MAEE,GAAI7N,KAAKyF,QAAQgZ,qBAAuBhc,IAAQzC,KAAKyF,QAAQgZ,oBAAqB,CAChF,MAAMiD,EAAKzhB,OAAOqC,KAAK4e,EAAKze,IACtBkf,EAAID,EAAGnf,OACb,IAAK,IAAIkf,EAAI,EAAGA,EAAIE,EAAGF,IACrBzE,GAAWhd,KAAKwgB,iBAAiBkB,EAAGD,GAAI,GAAKP,EAAKze,GAAKif,EAAGD,IAE9D,MACE/e,GAAO1C,KAAK6f,qBAAqBqB,EAAKze,GAAMA,EAAKoL,GAIvD,MAAO,CAACmP,QAASA,EAASta,IAAKA,EACjC,EA+GAiX,EAAOvY,QAAUse,C,WCrPjB,SAASkC,EAASC,EAAKpc,EAASqc,EAAOjU,GACnC,IAAIkU,EAAS,GAETC,EAAc,GACfvc,EAAQoZ,QAAUpZ,EAAQqZ,SAASvc,OAAS,IAC3Cyf,EAjBI,KAiBqBvc,EAAQqZ,SAASiC,OAAOlT,IAGrD,IAAK,IAAI8M,EAAI,EAAGA,EAAIkH,EAAItf,OAAQoY,IAAK,CACjC,MAAMsH,EAASJ,EAAIlH,GACbkC,EAAUqF,EAASD,GACzB,IAAIE,EAAW,GAIf,GAHuBA,EAAH,IAAjBL,EAAMvf,OAAyBsa,EAClB,GAAGiF,KAASjF,IAEzBA,IAAYpX,EAAQiZ,aAAa,CAChC,IAAI0D,EAAUH,EAAOpF,GACjBwF,EAAWF,EAAU1c,KACrB2c,EAAU3c,EAAQyZ,kBAAmBrC,EAASuF,GAC9CA,EAAU7B,EAAqB6B,EAAS3c,IAE5Csc,GAAUC,EAAcI,EACxB,QACJ,CAAM,GAAIvF,IAAYpX,EAAQmZ,cAAc,CACxCmD,GAAUC,EAAc,YAAYC,EAAOpF,GAAS,GAAGpX,EAAQiZ,mBAC/D,QACJ,CAAM,GAAI7B,IAAYpX,EAAQ4Z,gBAAgB,CAC1C0C,GAAUC,EAAc,UAAOC,EAAOpF,GAAS,GAAGpX,EAAQiZ,sBAC1D,QACJ,CAAM,GAAmB,MAAf7B,EAAQ,GAAW,CACzB,MAAMyF,EAASC,EAAYN,EAAO,MAAOxc,GACnC+c,EAAsB,SAAZ3F,EAAqB,GAAKmF,EAC1C,IAAIS,EAAiBR,EAAOpF,GAAS,GAAGpX,EAAQiZ,cAChD+D,EAA2C,IAA1BA,EAAelgB,OAAe,IAAMkgB,EAAiB,GACtEV,GAAUS,EAAU,IAAI3F,IAAU4F,IAAiBH,MACnD,QACJ,CAEA,IAAII,EAAYV,EAAc,IAAInF,IADnB0F,EAAYN,EAAO,MAAOxc,KAErCkd,EAAWf,EAASK,EAAOpF,GAAUpX,EAAS0c,EAAUtU,EAAQ,IACtB,IAA3CpI,EAAQkW,aAAa6B,QAAQX,GACzBpX,EAAQuZ,qBAAuB+C,GAAUW,EAAW,IAClDX,GAAUW,EAAW,KAClBC,GAAgC,IAApBA,EAASpgB,SAAiBkD,EAAQsZ,kBAItDgD,GAAUW,EAAW,IAAIC,IAAWX,MAAgBnF,KAHpDkF,GAAUW,EAAW,IAK7B,CAEA,OAAOX,CACX,CAEA,SAASG,EAASlO,GACd,MAAM1R,EAAOrC,OAAOqC,KAAK0R,GACzB,IAAK,IAAI2G,EAAI,EAAGA,EAAIrY,EAAKC,OAAQoY,IAAK,CACpC,MAAMlY,EAAMH,EAAKqY,GACjB,GAAW,OAARlY,EAAc,OAAOA,CAC1B,CACF,CAEF,SAAS8f,EAAYK,EAASnd,GAC1B,IAAIuX,EAAU,GACd,GAAG4F,IAAYnd,EAAQkZ,iBACnB,IAAK,IAAI2C,KAAQsB,EAAQ,CACrB,IAAIC,EAAUpd,EAAQ0Z,wBAAwBmC,EAAMsB,EAAQtB,IAC5DuB,EAAUtC,EAAqBsC,EAASpd,IACzB,IAAZod,GAAoBpd,EAAQwZ,0BAC3BjC,GAAU,IAAIsE,EAAKpF,OAAOzW,EAAQ+Y,oBAAoBjc,UAEtDya,GAAU,IAAIsE,EAAKpF,OAAOzW,EAAQ+Y,oBAAoBjc,YAAYsgB,IAE1E,CAEJ,OAAO7F,CACX,CAEA,SAASqF,EAAWP,EAAOrc,GAEvB,IAAIoX,GADJiF,EAAQA,EAAM5F,OAAO,EAAE4F,EAAMvf,OAASkD,EAAQiZ,aAAanc,OAAS,IAChD2Z,OAAO4F,EAAMgB,YAAY,KAAO,GACpD,IAAI,IAAIvH,KAAS9V,EAAQ+Z,UACrB,GAAG/Z,EAAQ+Z,UAAUjE,KAAWuG,GAASrc,EAAQ+Z,UAAUjE,KAAW,KAAKsB,EAAS,OAAO,EAE/F,OAAO,CACX,CAEA,SAAS0D,EAAqBM,EAAWpb,GACrC,GAAGob,GAAaA,EAAUte,OAAS,GAAKkD,EAAQ8Z,gBAC9C,IAAK,IAAI5E,EAAE,EAAGA,EAAGlV,EAAQ6Z,SAAS/c,OAAQoY,IAAK,CAC7C,MAAMmG,EAASrb,EAAQ6Z,SAAS3E,GAChCkG,EAAYA,EAAUhe,QAAQie,EAAO5F,MAAO4F,EAAOpe,IACrD,CAEF,OAAOme,CACT,CACFlH,EAAOvY,QApGP,SAAe2hB,EAAQtd,GACnB,OAAOmc,EAAUmB,EAAQtd,EAAS,GAAI,EAC1C,C,WCgGA,MAAMud,EAAc5I,OAAO,4CAC3B,SAAS6I,EAAeC,EAAK5D,GACzB,MAAMvE,EAAQiI,EAAYhI,KAAKkI,GAC5BnI,IACCuE,EAAUvE,EAAM,IAAO,CACnBoI,KAAO/I,OAAQ,IAAIW,EAAM,MAAM,KAC/BrY,IAAKqY,EAAM,IAGvB,CACApB,EAAOvY,QAnHP,SAAqB2a,EAASpB,GAE1B,MAAM2E,EAAW,CAAC,EAClB,GAAuB,MAAnBvD,EAAQpB,EAAI,IACQ,MAAnBoB,EAAQpB,EAAI,IACO,MAAnBoB,EAAQpB,EAAI,IACO,MAAnBoB,EAAQpB,EAAI,IACO,MAAnBoB,EAAQpB,EAAI,IACO,MAAnBoB,EAAQpB,EAAI,GA4Fb,MAAM,IAAI9U,MAAM,kCA3FpB,CACI8U,GAAM,EACN,IAAI2B,EAAqB,EACrB8G,GAAU,EAAOtC,GAAS,EAAOuC,GAAU,EAC3CH,EAAM,GACV,KAAKvI,EAAEoB,EAAQxZ,OAAOoY,IAClB,GAAmB,MAAfoB,EAAQpB,GAAY,CACpB,GAAIyI,GACkB,MAAjBrH,EAAQpB,EAAE,IACO,MAAjBoB,EAAQpB,EAAE,IACO,MAAjBoB,EAAQpB,EAAE,IACO,MAAjBoB,EAAQpB,EAAE,IACO,MAAjBoB,EAAQpB,EAAE,IACO,MAAjBoB,EAAQpB,EAAE,IACO,MAAjBoB,EAAQpB,EAAE,GAEXA,GAAK,EACLmG,GAAS,OACP,GAAIsC,GACW,MAAjBrH,EAAQpB,EAAE,IACQ,MAAjBoB,EAAQpB,EAAE,IACO,MAAjBoB,EAAQpB,EAAE,IACO,MAAjBoB,EAAQpB,EAAE,IACO,MAAjBoB,EAAQpB,EAAE,IACO,MAAjBoB,EAAQpB,EAAE,IACO,MAAjBoB,EAAQpB,EAAE,IACO,MAAjBoB,EAAQpB,EAAE,GAGXA,GAAK,OACH,GAAIyI,GACW,MAAjBrH,EAAQpB,EAAE,IACO,MAAjBoB,EAAQpB,EAAE,IACO,MAAjBoB,EAAQpB,EAAE,IACO,MAAjBoB,EAAQpB,EAAE,IACO,MAAjBoB,EAAQpB,EAAE,IACO,MAAjBoB,EAAQpB,EAAE,IACO,MAAjBoB,EAAQpB,EAAE,IACO,MAAjBoB,EAAQpB,EAAE,GAGVA,GAAK,OACH,GAAIyI,GACW,MAAjBrH,EAAQpB,EAAE,IACO,MAAjBoB,EAAQpB,EAAE,IACO,MAAjBoB,EAAQpB,EAAE,IACO,MAAjBoB,EAAQpB,EAAE,IACO,MAAjBoB,EAAQpB,EAAE,IACO,MAAjBoB,EAAQpB,EAAE,IACO,MAAjBoB,EAAQpB,EAAE,IACO,MAAjBoB,EAAQpB,EAAE,IACO,MAAjBoB,EAAQpB,EAAE,GAGVA,GAAK,MACH,IACe,MAAjBoB,EAAQpB,EAAE,IACO,MAAjBoB,EAAQpB,EAAE,IACO,MAAjBoB,EAAQpB,EAAE,GAIV,MAAM,IAAI9U,MAAM,mBAFhBwd,GAAU,CAGd,CACA/G,IACA4G,EAAM,EACV,MAAO,GAAmB,MAAfnH,EAAQpB,GAAY,CAC3B,GAAG0I,EAAQ,CACP,GAAuB,MAAnBtH,EAAQpB,EAAI,IAAiC,MAAnBoB,EAAQpB,EAAI,GAGtC,MAAM,IAAI9U,MAAM,kCAFhBwd,GAAU,CAIlB,MAASvC,IACLmC,EAAeC,EAAK5D,GACpBwB,GAAS,GAGb,GADAxE,IAC2B,IAAvBA,EACF,KAEN,KAAyB,MAAfP,EAAQpB,GACdyI,GAAU,EAEVF,GAAOnH,EAAQpB,GAGvB,GAA0B,IAAvB2B,EACC,MAAM,IAAIzW,MAAM,mBAExB,CAGA,MAAO,CAACyZ,WAAU3E,IACtB,C,eCvGA,MAAMc,EAAiB,CACnB2D,eAAe,EACfZ,oBAAqB,KACrBC,qBAAqB,EACrBC,aAAc,QACdC,kBAAkB,EAClB2E,gBAAgB,EAChB5H,wBAAwB,EAExB6H,eAAe,EACfC,qBAAqB,EACrBC,YAAY,EACZ7E,eAAe,EACf8E,mBAAoB,CAClBC,KAAK,EACLC,cAAc,GAEhB1E,kBAAmB,SAASrC,EAASna,GACnC,OAAOA,CACT,EACAyc,wBAAyB,SAASnB,EAAUtb,GAC1C,OAAOA,CACT,EACA8c,UAAW,GACXqE,sBAAsB,EACtBzC,QAAS,KAAM,EACf/B,iBAAiB,EACjB1D,aAAc,GACd4D,iBAAiB,EACjBuE,cAAc,EACdC,mBAAmB,EACnBC,cAAc,EACdvE,kBAAkB,GAOtBre,EAAQ6iB,aAJa,SAASxe,GAC1B,OAAOxF,OAAOmM,OAAO,CAAC,EAAGqP,EAAgBhW,EAC7C,EAGArE,EAAQqa,eAAiBA,C,8BCtCzB,MAAMD,EAAO,EAAQ,MACf0I,EAAU,EAAQ,MAClBC,EAAc,EAAQ,MACtBC,EAAW,EAAQ,MAGvB,wFACCvhB,QAAQ,QAAS2Y,EAAKtB,YA8CzB,SAASmK,EAAoBC,GAC3B,MAAMC,EAAUtkB,OAAOqC,KAAKgiB,GAC5B,IAAK,IAAI3J,EAAI,EAAGA,EAAI4J,EAAQhiB,OAAQoY,IAAK,CACvC,MAAM6J,EAAMD,EAAQ5J,GACpB3a,KAAKykB,aAAaD,GAAO,CACtBtJ,MAAO,IAAId,OAAO,IAAIoK,EAAI,IAAI,KAC9B9hB,IAAM4hB,EAAiBE,GAE5B,CACF,CAWA,SAASE,EAAchiB,EAAKma,EAASiF,EAAO6C,EAAUC,EAAeC,EAAYC,GAC/E,QAAYvkB,IAARmC,IACE1C,KAAKyF,QAAQge,aAAekB,IAC9BjiB,EAAMA,EAAIqD,QAETrD,EAAIH,OAAS,GAAE,CACZuiB,IAAgBpiB,EAAM1C,KAAKugB,qBAAqB7d,IAEpD,MAAM6e,EAASvhB,KAAKyF,QAAQyZ,kBAAkBrC,EAASna,EAAKof,EAAO8C,EAAeC,GAClF,GAAGtD,QAED,OAAO7e,EACH,UAAU6e,UAAkB7e,GAAO6e,IAAW7e,EAElD,OAAO6e,EACH,GAAGvhB,KAAKyF,QAAQge,WACpB,OAAOsB,EAAWriB,EAAK1C,KAAKyF,QAAQ8d,cAAevjB,KAAKyF,QAAQie,oBAGhE,OADmBhhB,EAAIqD,SACLrD,EACTqiB,EAAWriB,EAAK1C,KAAKyF,QAAQ8d,cAAevjB,KAAKyF,QAAQie,oBAEzDhhB,CAGb,CAEJ,CAEA,SAASsiB,EAAiB/I,GACxB,GAAIjc,KAAKyF,QAAQ6d,eAAgB,CAC/B,MAAM9G,EAAOP,EAAQzV,MAAM,KACrBye,EAA+B,MAAtBhJ,EAAQiJ,OAAO,GAAa,IAAM,GACjD,GAAgB,UAAZ1I,EAAK,GACP,MAAO,GAEW,IAAhBA,EAAKja,SACP0Z,EAAUgJ,EAASzI,EAAK,GAE5B,CACA,OAAOP,CACT,CAIA,MAAMkJ,EAAY,IAAI/K,OAAO,+CAAgD,MAE7E,SAASgL,EAAmBpI,EAAS8E,GACnC,IAAK9hB,KAAKyF,QAAQkZ,kBAAuC,iBAAZ3B,EAAsB,CAIjE,MAAM7B,EAAUK,EAAKP,cAAc+B,EAASmI,GACtCzK,EAAMS,EAAQ5Y,OACd6I,EAAQ,CAAC,EACf,IAAK,IAAIuP,EAAI,EAAGA,EAAID,EAAKC,IAAK,CAC5B,MAAMqD,EAAWhe,KAAKglB,iBAAiB7J,EAAQR,GAAG,IAClD,IAAI0K,EAASlK,EAAQR,GAAG,GACxB,MAAM2K,EAAQtlB,KAAKyF,QAAQ+Y,oBAAsBR,EACjD,GAAIA,EAASzb,OACX,QAAehC,IAAX8kB,EAAsB,CACpBrlB,KAAKyF,QAAQge,aACf4B,EAASA,EAAOtf,QAElBsf,EAASrlB,KAAKugB,qBAAqB8E,GACnC,MAAME,EAASvlB,KAAKyF,QAAQ0Z,wBAAwBnB,EAAUqH,EAAQvD,GAGpE1W,EAAMka,GAFLC,QAEcF,SACDE,UAAkBF,GAAUE,IAAWF,EAEtCE,EAGAR,EACbM,EACArlB,KAAKyF,QAAQ+d,oBACbxjB,KAAKyF,QAAQie,mBAGnB,MAAW1jB,KAAKyF,QAAQiW,yBACtBtQ,EAAMka,IAAS,EAGrB,CACA,IAAKrlB,OAAOqC,KAAK8I,GAAO7I,OACtB,OAEF,GAAIvC,KAAKyF,QAAQgZ,oBAAqB,CACpC,MAAM+G,EAAiB,CAAC,EAExB,OADAA,EAAexlB,KAAKyF,QAAQgZ,qBAAuBrT,EAC5Coa,CACT,CACA,OAAOpa,CACT,CACF,CAEA,MAAMqa,EAAW,SAAS1J,GACxBA,EAAUA,EAAQlZ,QAAQ,SAAU,MACpC,MAAM6iB,EAAS,IAAIxB,EAAQ,QAC3B,IAAIyB,EAAcD,EACdE,EAAW,GACX9D,EAAQ,GACZ,IAAI,IAAInH,EAAE,EAAGA,EAAGoB,EAAQxZ,OAAQoY,IAAI,CAElC,GAAU,MADCoB,EAAQpB,GAIjB,GAAqB,MAAjBoB,EAAQpB,EAAE,GAAY,CACxB,MAAMkL,EAAaC,EAAiB/J,EAAS,IAAKpB,EAAG,8BACrD,IAAIkC,EAAUd,EAAQe,UAAUnC,EAAE,EAAEkL,GAAY9f,OAEhD,GAAG/F,KAAKyF,QAAQ6d,eAAe,CAC7B,MAAMyC,EAAalJ,EAAQW,QAAQ,MAChB,IAAhBuI,IACDlJ,EAAUA,EAAQX,OAAO6J,EAAW,GAExC,CAEG/lB,KAAKyF,QAAQga,mBACd5C,EAAU7c,KAAKyF,QAAQga,iBAAiB5C,IAGvC8I,IACDC,EAAW5lB,KAAKgmB,oBAAoBJ,EAAUD,EAAa7D,IAG7DA,EAAQA,EAAM5F,OAAO,EAAG4F,EAAMgB,YAAY,MAE1C6C,EAAc3lB,KAAKimB,cAAc3I,MACjCsI,EAAW,GACXjL,EAAIkL,CACN,MAAO,GAAqB,MAAjB9J,EAAQpB,EAAE,GAAY,CAE/B,IAAIuL,EAAUC,EAAWpK,EAAQpB,GAAG,EAAO,MAC3C,IAAIuL,EAAS,MAAM,IAAIrgB,MAAM,yBAG7B,GADA+f,EAAW5lB,KAAKgmB,oBAAoBJ,EAAUD,EAAa7D,GACtD9hB,KAAKyF,QAAQse,mBAAyC,SAApBmC,EAAQrJ,SAAuB7c,KAAKyF,QAAQue,kBAE9E,CAEH,MAAMoC,EAAY,IAAIlC,EAAQgC,EAAQrJ,SACtCuJ,EAAUC,IAAIrmB,KAAKyF,QAAQiZ,aAAc,IAEtCwH,EAAQrJ,UAAYqJ,EAAQI,QAAUJ,EAAQK,iBAC/CH,EAAU,MAAQpmB,KAAKolB,mBAAmBc,EAAQI,OAAQxE,IAE5D6D,EAAYa,SAASJ,EAEvB,CAGAzL,EAAIuL,EAAQL,WAAa,CAC3B,MAAO,GAAgC,QAA7B9J,EAAQG,OAAOvB,EAAI,EAAG,GAAc,CAC5C,MAAM8L,EAAWX,EAAiB/J,EAAS,SAAOpB,EAAE,EAAG,0BACvD,GAAG3a,KAAKyF,QAAQ4Z,gBAAgB,CAC9B,MAAMgE,EAAUtH,EAAQe,UAAUnC,EAAI,EAAG8L,EAAW,GAEpDb,EAAW5lB,KAAKgmB,oBAAoBJ,EAAUD,EAAa7D,GAE3D6D,EAAYU,IAAIrmB,KAAKyF,QAAQ4Z,gBAAiB,CAAE,CAAE,CAACrf,KAAKyF,QAAQiZ,cAAgB2E,IAClF,CACA1I,EAAI8L,CACN,MAAO,GAAiC,OAA7B1K,EAAQG,OAAOvB,EAAI,EAAG,GAAa,CAC5C,MAAM1Z,EAASkjB,EAAYpI,EAASpB,GACpC3a,KAAK0mB,gBAAkBzlB,EAAOqe,SAC9B3E,EAAI1Z,EAAO0Z,CACb,MAAM,GAAgC,OAA7BoB,EAAQG,OAAOvB,EAAI,EAAG,GAAa,CAC1C,MAAMkL,EAAaC,EAAiB/J,EAAS,MAAOpB,EAAG,wBAA0B,EAC3E2L,EAASvK,EAAQe,UAAUnC,EAAI,EAAEkL,GAKvC,GAHAD,EAAW5lB,KAAKgmB,oBAAoBJ,EAAUD,EAAa7D,GAGxD9hB,KAAKyF,QAAQmZ,cAGd+G,EAAYU,IAAIrmB,KAAKyF,QAAQmZ,cAAe,CAAE,CAAE,CAAC5e,KAAKyF,QAAQiZ,cAAgB4H,SAC3E,CACH,IAAI5jB,EAAM1C,KAAK0kB,cAAc4B,EAAQX,EAAY1J,QAAS6F,GAAO,GAAM,GAAO,GACpEvhB,MAAPmC,IAAkBA,EAAM,IAC3BijB,EAAYU,IAAIrmB,KAAKyF,QAAQiZ,aAAchc,EAC7C,CAEAiY,EAAIkL,EAAa,CACnB,KAAM,CACJ,IAAI5kB,EAASklB,EAAWpK,EAAQpB,EAAG3a,KAAMyF,QAAQ6d,gBAC7CzG,EAAS5b,EAAO4b,QAChByJ,EAASrlB,EAAOqlB,OAChBC,EAAiBtlB,EAAOslB,eACxBV,EAAa5kB,EAAO4kB,WAEpB7lB,KAAKyF,QAAQga,mBACf5C,EAAU7c,KAAKyF,QAAQga,iBAAiB5C,IAItC8I,GAAeC,GACU,SAAxBD,EAAY1J,UAEb2J,EAAW5lB,KAAKgmB,oBAAoBJ,EAAUD,EAAa7D,GAAO,IAInEjF,IAAY6I,EAAOzJ,UACpB6F,GAASA,EAAQ,IAAMjF,EAAUA,GAInC,MAAM8J,EAAUhB,EAKhB,GAJGgB,IAAmE,IAAxD3mB,KAAKyF,QAAQkW,aAAa6B,QAAQmJ,EAAQ1K,WACtD0J,EAAc3lB,KAAKimB,cAAc3I,OAG/Btd,KAAK4mB,aAAa5mB,KAAKyF,QAAQ+Z,UAAWsC,EAAOjF,GAAU,CAC7D,IAAIgK,EAAa,GAEjB,GAAGP,EAAO/jB,OAAS,GAAK+jB,EAAOxD,YAAY,OAASwD,EAAO/jB,OAAS,EAClEoY,EAAI1Z,EAAO4kB,gBAGR,IAAmD,IAAhD7lB,KAAKyF,QAAQkW,aAAa6B,QAAQX,GACxClC,EAAI1Z,EAAO4kB,eAGT,CAEF,MAAM5kB,EAASjB,KAAK8mB,iBAAiB/K,EAASc,EAASgJ,EAAa,GACpE,IAAI5kB,EAAQ,MAAM,IAAI4E,MAAM,qBAAqBgX,KACjDlC,EAAI1Z,EAAO0Z,EACXkM,EAAa5lB,EAAO4lB,UACtB,CAEA,MAAMT,EAAY,IAAIlC,EAAQrH,GAC3BA,IAAYyJ,GAAUC,IACvBH,EAAU,MAAQpmB,KAAKolB,mBAAmBkB,EAAQxE,IAEjD+E,IACDA,EAAa7mB,KAAK0kB,cAAcmC,EAAYhK,EAASiF,GAAO,EAAMyE,GAAgB,GAAM,IAG1FzE,EAAQA,EAAM5F,OAAO,EAAG4F,EAAMgB,YAAY,MAC1CsD,EAAUC,IAAIrmB,KAAKyF,QAAQiZ,aAAcmI,GAEzClB,EAAYa,SAASJ,EACvB,KAAK,CAEH,GAAGE,EAAO/jB,OAAS,GAAK+jB,EAAOxD,YAAY,OAASwD,EAAO/jB,OAAS,EAAE,CACjC,MAAhCsa,EAAQA,EAAQta,OAAS,IAC1Bsa,EAAUA,EAAQX,OAAO,EAAGW,EAAQta,OAAS,GAC7C+jB,EAASzJ,GAETyJ,EAASA,EAAOpK,OAAO,EAAGoK,EAAO/jB,OAAS,GAGzCvC,KAAKyF,QAAQga,mBACd5C,EAAU7c,KAAKyF,QAAQga,iBAAiB5C,IAG1C,MAAMuJ,EAAY,IAAIlC,EAAQrH,GAC3BA,IAAYyJ,GAAUC,IACvBH,EAAU,MAAQpmB,KAAKolB,mBAAmBkB,EAAQxE,IAEpDA,EAAQA,EAAM5F,OAAO,EAAG4F,EAAMgB,YAAY,MAC1C6C,EAAYa,SAASJ,EACvB,KAEI,CACF,MAAMA,EAAY,IAAIlC,EAASrH,GAC/B7c,KAAKimB,cAAc3M,KAAKqM,GAErB9I,IAAYyJ,GAAUC,IACvBH,EAAU,MAAQpmB,KAAKolB,mBAAmBkB,EAAQxE,IAEpD6D,EAAYa,SAASJ,GACrBT,EAAcS,CAChB,CACAR,EAAW,GACXjL,EAAIkL,CACN,CACF,MAEAD,GAAY7J,EAAQpB,EAExB,CACA,OAAO+K,EAAOqB,KAChB,EAEMxG,EAAuB,SAAS7d,GAEpC,GAAG1C,KAAKyF,QAAQ8Z,gBAAgB,CAC9B,IAAI,IAAIyH,KAAchnB,KAAK0mB,gBAAgB,CACzC,MAAM5F,EAAS9gB,KAAK0mB,gBAAgBM,GACpCtkB,EAAMA,EAAIG,QAASie,EAAOqC,KAAMrC,EAAOpe,IACzC,CACA,IAAI,IAAIskB,KAAchnB,KAAKykB,aAAa,CACtC,MAAM3D,EAAS9gB,KAAKykB,aAAauC,GACjCtkB,EAAMA,EAAIG,QAASie,EAAO5F,MAAO4F,EAAOpe,IAC1C,CACA,GAAG1C,KAAKyF,QAAQqe,aACd,IAAI,IAAIkD,KAAchnB,KAAK8jB,aAAa,CACtC,MAAMhD,EAAS9gB,KAAK8jB,aAAakD,GACjCtkB,EAAMA,EAAIG,QAASie,EAAO5F,MAAO4F,EAAOpe,IAC1C,CAEFA,EAAMA,EAAIG,QAAS7C,KAAKinB,UAAU/L,MAAOlb,KAAKinB,UAAUvkB,IAC1D,CACA,OAAOA,CACT,EACA,SAASsjB,EAAoBJ,EAAUD,EAAa7D,EAAO+C,GAezD,OAdIe,SACgBrlB,IAAfskB,IAA0BA,EAAuD,IAA1C5kB,OAAOqC,KAAKqjB,EAAYoB,OAAOxkB,aASxDhC,KAPjBqlB,EAAW5lB,KAAK0kB,cAAckB,EAC5BD,EAAY1J,QACZ6F,GACA,IACA6D,EAAY,OAAkD,IAA1C1lB,OAAOqC,KAAKqjB,EAAY,OAAOpjB,OACnDsiB,KAEyC,KAAbe,GAC5BD,EAAYU,IAAIrmB,KAAKyF,QAAQiZ,aAAckH,GAC7CA,EAAW,IAENA,CACT,CASA,SAASgB,EAAapH,EAAWsC,EAAOoF,GACtC,MAAMC,EAAc,KAAOD,EAC3B,IAAK,MAAME,KAAgB5H,EAAW,CACpC,MAAM6H,EAAc7H,EAAU4H,GAC9B,GAAID,IAAgBE,GAAevF,IAAUuF,EAAe,OAAO,CACrE,CACA,OAAO,CACT,CAsCA,SAASvB,EAAiB/J,EAASuL,EAAK3M,EAAG4M,GACzC,MAAMC,EAAezL,EAAQyB,QAAQ8J,EAAK3M,GAC1C,IAAqB,IAAlB6M,EACD,MAAM,IAAI3hB,MAAM0hB,GAEhB,OAAOC,EAAeF,EAAI/kB,OAAS,CAEvC,CAEA,SAAS4jB,EAAWpK,EAAQpB,EAAG2I,EAAgBmE,EAAc,KAC3D,MAAMxmB,EAxCR,SAAgC8a,EAASpB,EAAG8M,EAAc,KACxD,IAAIC,EACApB,EAAS,GACb,IAAK,IAAI/K,EAAQZ,EAAGY,EAAQQ,EAAQxZ,OAAQgZ,IAAS,CACnD,IAAIoM,EAAK5L,EAAQR,GACjB,GAAImM,EACIC,IAAOD,IAAcA,EAAe,SACrC,GAAW,MAAPC,GAAqB,MAAPA,EACrBD,EAAeC,OACZ,GAAIA,IAAOF,EAAY,GAAI,CAChC,IAAGA,EAAY,GAQb,MAAO,CACLva,KAAMoZ,EACN/K,MAAOA,GATT,GAAGQ,EAAQR,EAAQ,KAAOkM,EAAY,GACpC,MAAO,CACLva,KAAMoZ,EACN/K,MAAOA,EASf,KAAkB,OAAPoM,IACTA,EAAK,KAEPrB,GAAUqB,CACZ,CACF,CAYiBC,CAAuB7L,EAASpB,EAAE,EAAG8M,GACpD,IAAIxmB,EAAQ,OACZ,IAAIqlB,EAASrlB,EAAOiM,KACpB,MAAM2Y,EAAa5kB,EAAOsa,MACpBsM,EAAiBvB,EAAOzP,OAAO,MACrC,IAAIgG,EAAUyJ,EACVC,GAAiB,EAMrB,IALuB,IAApBsB,IACDhL,EAAUyJ,EAAOpK,OAAO,EAAG2L,GAAgBhlB,QAAQ,SAAU,IAC7DyjB,EAASA,EAAOpK,OAAO2L,EAAiB,IAGvCvE,EAAe,CAChB,MAAMyC,EAAalJ,EAAQW,QAAQ,MAChB,IAAhBuI,IACDlJ,EAAUA,EAAQX,OAAO6J,EAAW,GACpCQ,EAAiB1J,IAAY5b,EAAOiM,KAAKgP,OAAO6J,EAAa,GAEjE,CAEA,MAAO,CACLlJ,QAASA,EACTyJ,OAAQA,EACRT,WAAYA,EACZU,eAAgBA,EAEpB,CAOA,SAASO,EAAiB/K,EAASc,EAASlC,GAC1C,MAAMU,EAAaV,EAEnB,IAAImN,EAAe,EAEnB,KAAOnN,EAAIoB,EAAQxZ,OAAQoY,IACzB,GAAmB,MAAfoB,EAAQpB,GACV,GAAqB,MAAjBoB,EAAQpB,EAAE,GAAY,CACtB,MAAMkL,EAAaC,EAAiB/J,EAAS,IAAKpB,EAAG,GAAGkC,mBAExD,GADmBd,EAAQe,UAAUnC,EAAE,EAAEkL,GAAY9f,SACjC8W,IAClBiL,IACqB,IAAjBA,GACF,MAAO,CACLjB,WAAY9K,EAAQe,UAAUzB,EAAYV,GAC1CA,EAAIkL,GAIVlL,EAAEkL,CACJ,MAAO,GAAoB,MAAjB9J,EAAQpB,EAAE,GAAY,CAE9BA,EADmBmL,EAAiB/J,EAAS,KAAMpB,EAAE,EAAG,0BAE1D,MAAO,GAAgC,QAA7BoB,EAAQG,OAAOvB,EAAI,EAAG,GAAc,CAE5CA,EADmBmL,EAAiB/J,EAAS,SAAOpB,EAAE,EAAG,0BAE3D,MAAO,GAAgC,OAA7BoB,EAAQG,OAAOvB,EAAI,EAAG,GAAa,CAE3CA,EADmBmL,EAAiB/J,EAAS,MAAOpB,EAAG,2BAA6B,CAEtF,KAAO,CACL,MAAMuL,EAAUC,EAAWpK,EAASpB,EAAG,KAEvC,GAAIuL,EAAS,EACSA,GAAWA,EAAQrJ,WACnBA,GAAuD,MAA5CqJ,EAAQI,OAAOJ,EAAQI,OAAO/jB,OAAO,IAClEulB,IAEFnN,EAAEuL,EAAQL,UACZ,CACF,CAGR,CAEA,SAASd,EAAWriB,EAAKqlB,EAAatiB,GACpC,GAAIsiB,GAA8B,iBAARrlB,EAAkB,CAE1C,MAAM6e,EAAS7e,EAAIqD,OACnB,MAAc,SAAXwb,GACgB,UAAXA,GACI6C,EAAS1hB,EAAK+C,EAC5B,CACE,OAAI+V,EAAKnB,QAAQ3X,GACRA,EAEA,EAGb,CAGAiX,EAAOvY,QAjiBP,MACEgB,YAAYqD,GACVzF,KAAKyF,QAAUA,EACfzF,KAAK2lB,YAAc,KACnB3lB,KAAKimB,cAAgB,GACrBjmB,KAAK0mB,gBAAkB,CAAC,EACxB1mB,KAAKykB,aAAe,CAClB,KAAS,CAAEvJ,MAAO,qBAAsBxY,IAAM,KAC9C,GAAO,CAAEwY,MAAO,mBAAoBxY,IAAM,KAC1C,GAAO,CAAEwY,MAAO,mBAAoBxY,IAAM,KAC1C,KAAS,CAAEwY,MAAO,qBAAsBxY,IAAM,MAEhD1C,KAAKinB,UAAY,CAAE/L,MAAO,oBAAqBxY,IAAM,KACrD1C,KAAK8jB,aAAe,CAClB,MAAS,CAAE5I,MAAO,iBAAkBxY,IAAK,KAMzC,KAAS,CAAEwY,MAAO,iBAAkBxY,IAAK,KACzC,MAAU,CAAEwY,MAAO,kBAAmBxY,IAAK,KAC3C,IAAQ,CAAEwY,MAAO,gBAAiBxY,IAAK,KACvC,KAAS,CAAEwY,MAAO,kBAAmBxY,IAAK,KAC1C,UAAc,CAAEwY,MAAO,iBAAkBxY,IAAK,KAC9C,IAAQ,CAAEwY,MAAO,gBAAiBxY,IAAK,KACvC,IAAQ,CAAEwY,MAAO,iBAAkBxY,IAAK,MAE1C1C,KAAKqkB,oBAAsBA,EAC3BrkB,KAAKylB,SAAWA,EAChBzlB,KAAK0kB,cAAgBA,EACrB1kB,KAAKglB,iBAAmBA,EACxBhlB,KAAKolB,mBAAqBA,EAC1BplB,KAAK4mB,aAAeA,EACpB5mB,KAAKugB,qBAAuBA,EAC5BvgB,KAAK8mB,iBAAmBA,EACxB9mB,KAAKgmB,oBAAsBA,CAC7B,E,iBCpDF,MAAM,aAAE/B,GAAgB,EAAQ,MAC1B+D,EAAmB,EAAQ,OAC3B,SAAEC,GAAY,EAAQ,MACtBpO,EAAY,EAAQ,MAsD1BF,EAAOvY,QApDP,MAEIgB,YAAYqD,GACRzF,KAAKskB,iBAAmB,CAAC,EACzBtkB,KAAKyF,QAAUwe,EAAaxe,EAEhC,CAMAgT,MAAMsD,EAAQmM,GACV,GAAsB,iBAAZnM,OACJ,KAAIA,EAAQ9Z,SAGd,MAAM,IAAI4D,MAAM,mDAFhBkW,EAAUA,EAAQ9Z,UAGtB,CACA,GAAIimB,EAAiB,EACO,IAArBA,IAA2BA,EAAmB,CAAC,GAElD,MAAMjnB,EAAS4Y,EAAU0C,SAASR,EAASmM,GAC3C,IAAe,IAAXjnB,EACF,MAAM4E,MAAO,GAAG5E,EAAOsU,IAAIO,OAAO7U,EAAOsU,IAAI7G,QAAQzN,EAAOsU,IAAI1G,MAEpE,CACF,MAAMsZ,EAAmB,IAAIH,EAAiBhoB,KAAKyF,SACnD0iB,EAAiB9D,oBAAoBrkB,KAAKskB,kBAC1C,MAAM8D,EAAgBD,EAAiB1C,SAAS1J,GAChD,OAAG/b,KAAKyF,QAAQ2Z,oBAAmC7e,IAAlB6nB,EAAoCA,EACzDH,EAASG,EAAepoB,KAAKyF,QAC7C,CAOA4iB,UAAU5lB,EAAK5B,GACX,IAA2B,IAAxBA,EAAM2c,QAAQ,KACb,MAAM,IAAI3X,MAAM,+BACd,IAAyB,IAAtBpD,EAAI+a,QAAQ,OAAqC,IAAtB/a,EAAI+a,QAAQ,KAC5C,MAAM,IAAI3X,MAAM,wEACd,GAAa,MAAVhF,EACL,MAAM,IAAIgF,MAAM,6CAEhB7F,KAAKskB,iBAAiB7hB,GAAO5B,CAErC,E,4BCnCJ,SAASynB,EAASzG,EAAKpc,EAASqc,GAC9B,IAAI/V,EACJ,MAAMwc,EAAgB,CAAC,EACvB,IAAK,IAAI5N,EAAI,EAAGA,EAAIkH,EAAItf,OAAQoY,IAAK,CACnC,MAAMsH,EAASJ,EAAIlH,GACb6N,EAAWtG,EAASD,GAC1B,IAAIwG,EAAW,GAIf,GAHwBA,OAAXloB,IAAVuhB,EAAgC0G,EACnB1G,EAAQ,IAAM0G,EAE3BA,IAAa/iB,EAAQiZ,kBACVne,IAATwL,EAAoBA,EAAOkW,EAAOuG,GAChCzc,GAAQ,GAAKkW,EAAOuG,OACrB,SAAgBjoB,IAAbioB,EACP,SACI,GAAGvG,EAAOuG,GAAU,CAExB,IAAI9lB,EAAM4lB,EAASrG,EAAOuG,GAAW/iB,EAASgjB,GAC9C,MAAMC,EAASC,EAAUjmB,EAAK+C,GAE3Bwc,EAAO,MACR2G,EAAkBlmB,EAAKuf,EAAO,MAAOwG,EAAUhjB,GACZ,IAA5BxF,OAAOqC,KAAKI,GAAKH,aAA8ChC,IAA9BmC,EAAI+C,EAAQiZ,eAAgCjZ,EAAQoe,qBAEzD,IAA5B5jB,OAAOqC,KAAKI,GAAKH,SACrBkD,EAAQoe,qBAAsBnhB,EAAI+C,EAAQiZ,cAAgB,GACxDhc,EAAM,IAHXA,EAAMA,EAAI+C,EAAQiZ,mBAMWne,IAA5BgoB,EAAcC,IAA2BD,EAAcrnB,eAAesnB,IACnErH,MAAMC,QAAQmH,EAAcC,MAC5BD,EAAcC,GAAY,CAAED,EAAcC,KAE9CD,EAAcC,GAAUlP,KAAK5W,IAIzB+C,EAAQ2b,QAAQoH,EAAUC,EAAUC,GACtCH,EAAcC,GAAY,CAAC9lB,GAE3B6lB,EAAcC,GAAY9lB,CAGhC,EAEF,CAKA,MAHmB,iBAATqJ,EACLA,EAAKxJ,OAAS,IAAGgmB,EAAc9iB,EAAQiZ,cAAgB3S,QAC1CxL,IAATwL,IAAoBwc,EAAc9iB,EAAQiZ,cAAgB3S,GAC5Dwc,CACT,CAEA,SAASrG,EAASlO,GAChB,MAAM1R,EAAOrC,OAAOqC,KAAK0R,GACzB,IAAK,IAAI2G,EAAI,EAAGA,EAAIrY,EAAKC,OAAQoY,IAAK,CACpC,MAAMlY,EAAMH,EAAKqY,GACjB,GAAW,OAARlY,EAAc,OAAOA,CAC1B,CACF,CAEA,SAASmmB,EAAiB5U,EAAK4O,EAASiG,EAAOpjB,GAC7C,GAAImd,EAAS,CACX,MAAMtgB,EAAOrC,OAAOqC,KAAKsgB,GACnBlI,EAAMpY,EAAKC,OACjB,IAAK,IAAIoY,EAAI,EAAGA,EAAID,EAAKC,IAAK,CAC5B,MAAMmO,EAAWxmB,EAAKqY,GAClBlV,EAAQ2b,QAAQ0H,EAAUD,EAAQ,IAAMC,GAAU,GAAM,GAC1D9U,EAAI8U,GAAY,CAAElG,EAAQkG,IAE1B9U,EAAI8U,GAAYlG,EAAQkG,EAE5B,CACF,CACF,CAEA,SAASH,EAAU3U,EAAKvO,GACtB,MAAMsjB,EAAY9oB,OAAOqC,KAAK0R,GAAKzR,OACnC,SAAkB,IAAdwmB,GAAkC,IAAdA,GAAmB/U,EAAIvO,EAAQiZ,cAEzD,CACAtd,EAAQ6mB,SA5FR,SAAkBe,EAAMvjB,GACtB,OAAO6iB,EAAUU,EAAMvjB,EACzB,C,wBCYAkU,EAAOvY,QApBP,MACEgB,YAAY6Z,GACVjc,KAAKic,QAAUA,EACfjc,KAAK+mB,MAAQ,GACb/mB,KAAK,MAAQ,CAAC,CAChB,CACAqmB,IAAI5jB,EAAIC,GAEN1C,KAAK+mB,MAAMzN,KAAM,CAAC,CAAC7W,GAAMC,GAC3B,CACA8jB,SAASwC,GACJA,EAAK,OAAS/oB,OAAOqC,KAAK0mB,EAAK,OAAOzmB,OAAS,EAChDvC,KAAK+mB,MAAMzN,KAAM,CAAE,CAAC0P,EAAK/M,SAAU+M,EAAKjC,MAAO,KAAQiC,EAAK,QAE5DhpB,KAAK+mB,MAAMzN,KAAM,CAAE,CAAC0P,EAAK/M,SAAU+M,EAAKjC,OAE5C,E,iBCDF,IAAIkC,EAAW,EAAQ,MACnBC,EAAU,EAAQ,KAClBC,EAAQ,EAAQ,MAChBC,EAAY,EAAQ,KAUxB,SAASC,EAASC,EAAMC,EAAQC,GAS9B,GARIC,UAAUlnB,OAAS,IACrBinB,EAAWF,EACXA,EAAO,KACPC,EAAS,MAGXvpB,KAAKwpB,SAAWA,EAEa,iBAAlBxpB,KAAKwpB,UAAyBxpB,KAAKwpB,UAAY,EACxD,MAAM,IAAI3jB,MAAM,4DAElB,IAAI6jB,EAAeP,EAAMQ,gBAAgBH,GAEzCxpB,KAAK4pB,QAAU,IAAIF,EAAaF,GAChCxpB,KAAK6pB,SAAW,IAAIH,EAAaF,GACjCxpB,KAAK8pB,EAAoB,mBAATR,EAAsB,IAAIA,EAAKE,GAAY,IAAIrI,MAAMqI,GACrExpB,KAAK+pB,EAAsB,mBAAXR,EAAwB,IAAIA,EAAOC,GAAY,IAAIrI,MAAMqI,GAGzExpB,KAAKgqB,KAAO,EACZhqB,KAAKuT,KAAO,EACZvT,KAAKiqB,KAAO,EACZjqB,KAAKuM,MAAQ,CAAC,CAChB,CAOA8c,EAAShY,UAAU1F,MAAQ,WACzB3L,KAAKgqB,KAAO,EACZhqB,KAAKuT,KAAO,EACZvT,KAAKiqB,KAAO,EACZjqB,KAAKuM,MAAQ,CAAC,CAChB,EAQA8c,EAAShY,UAAU6Y,WAAa,SAASC,GACvC,IAAIC,EAAUpqB,KAAKuT,KAEnB,GAAIvT,KAAKuT,OAAS4W,EAChB,OAAOnqB,KAET,IAAIqqB,EAAWrqB,KAAK6pB,SAASM,GACzB1mB,EAAOzD,KAAK4pB,QAAQO,GAexB,OAbInqB,KAAKiqB,OAASE,EAChBnqB,KAAKiqB,KAAOI,EAGZrqB,KAAK6pB,SAASpmB,GAAQ4mB,EAGxBrqB,KAAK4pB,QAAQS,GAAY5mB,EAEzBzD,KAAK6pB,SAASO,GAAWD,EACzBnqB,KAAKuT,KAAO4W,EACZnqB,KAAK4pB,QAAQO,GAAWC,EAEjBpqB,IACT,EASAqpB,EAAShY,UAAUiZ,IAAM,SAAS7nB,EAAK5B,GAGrC,IAAIspB,EAAUnqB,KAAKuM,MAAM9J,GAEzB,QAAuB,IAAZ0nB,EAIT,OAHAnqB,KAAKkqB,WAAWC,QAChBnqB,KAAK+pB,EAAEI,GAAWtpB,GAMhBb,KAAKgqB,KAAOhqB,KAAKwpB,SACnBW,EAAUnqB,KAAKgqB,QAKfG,EAAUnqB,KAAKiqB,KACfjqB,KAAKiqB,KAAOjqB,KAAK6pB,SAASM,UACnBnqB,KAAKuM,MAAMvM,KAAK8pB,EAAEK,KAI3BnqB,KAAKuM,MAAM9J,GAAO0nB,EAClBnqB,KAAK8pB,EAAEK,GAAW1nB,EAClBzC,KAAK+pB,EAAEI,GAAWtpB,EAGlBb,KAAK4pB,QAAQO,GAAWnqB,KAAKuT,KAC7BvT,KAAK6pB,SAAS7pB,KAAKuT,MAAQ4W,EAC3BnqB,KAAKuT,KAAO4W,CACd,EAaAd,EAAShY,UAAUkZ,OAAS,SAAS9nB,EAAK5B,GACxC,IAAI2pB,EAAW,KACXC,EAAS,KAETN,EAAUnqB,KAAKuM,MAAM9J,GAEzB,YAAuB,IAAZ0nB,GACTnqB,KAAKkqB,WAAWC,GAChBK,EAAWxqB,KAAK+pB,EAAEI,GAClBnqB,KAAK+pB,EAAEI,GAAWtpB,EACX,CAAC6pB,SAAS,EAAOjoB,IAAKA,EAAK5B,MAAO2pB,KAIvCxqB,KAAKgqB,KAAOhqB,KAAKwpB,SACnBW,EAAUnqB,KAAKgqB,QAKfG,EAAUnqB,KAAKiqB,KACfjqB,KAAKiqB,KAAOjqB,KAAK6pB,SAASM,GAC1BK,EAAWxqB,KAAK+pB,EAAEI,GAClBM,EAASzqB,KAAK8pB,EAAEK,UACTnqB,KAAKuM,MAAMvM,KAAK8pB,EAAEK,KAI3BnqB,KAAKuM,MAAM9J,GAAO0nB,EAClBnqB,KAAK8pB,EAAEK,GAAW1nB,EAClBzC,KAAK+pB,EAAEI,GAAWtpB,EAGlBb,KAAK4pB,QAAQO,GAAWnqB,KAAKuT,KAC7BvT,KAAK6pB,SAAS7pB,KAAKuT,MAAQ4W,EAC3BnqB,KAAKuT,KAAO4W,EAGRM,EACK,CAACC,SAAS,EAAMjoB,IAAKgoB,EAAQ5pB,MAAO2pB,GAGpC,KAEX,EAQAnB,EAAShY,UAAUsZ,IAAM,SAASloB,GAChC,OAAOA,KAAOzC,KAAKuM,KACrB,EASA8c,EAAShY,UAAU3Q,IAAM,SAAS+B,GAChC,IAAI0nB,EAAUnqB,KAAKuM,MAAM9J,GAEzB,QAAuB,IAAZ0nB,EAKX,OAFAnqB,KAAKkqB,WAAWC,GAETnqB,KAAK+pB,EAAEI,EAChB,EASAd,EAAShY,UAAUuZ,KAAO,SAASnoB,GAC/B,IAAI0nB,EAAUnqB,KAAKuM,MAAM9J,GAEzB,QAAuB,IAAZ0nB,EAGX,OAAOnqB,KAAK+pB,EAAEI,EAClB,EASAd,EAAShY,UAAU6X,QAAU,SAAS2B,EAAUC,GAC9CA,EAAQrB,UAAUlnB,OAAS,EAAIuoB,EAAQ9qB,KAUvC,IARA,IAAI2a,EAAI,EACJoQ,EAAI/qB,KAAKgqB,KAETG,EAAUnqB,KAAKuT,KACfjR,EAAOtC,KAAK8pB,EACZkB,EAAShrB,KAAK+pB,EACdH,EAAU5pB,KAAK4pB,QAEZjP,EAAIoQ,GAETF,EAAS1pB,KAAK2pB,EAAOE,EAAOb,GAAU7nB,EAAK6nB,GAAUnqB,MACrDmqB,EAAUP,EAAQO,GAElBxP,GAEJ,EAQA0O,EAAShY,UAAU/O,KAAO,WACxB,IAAIqY,EAAI,EACJoQ,EAAI/qB,KAAKgqB,KAETG,EAAUnqB,KAAKuT,KACfjR,EAAOtC,KAAK8pB,EACZF,EAAU5pB,KAAK4pB,QAEnB,OAAO,IAAIX,GAAS,WAClB,GAAItO,GAAKoQ,EACP,MAAO,CAACnnB,MAAM,GAEhB,IAAInB,EAAMH,EAAK6nB,GAOf,QALAxP,EAEQoQ,IACNZ,EAAUP,EAAQO,IAEb,CACLvmB,MAAM,EACN/C,MAAO4B,EAEX,GACF,EAQA4mB,EAAShY,UAAU2Z,OAAS,WAC1B,IAAIrQ,EAAI,EACJoQ,EAAI/qB,KAAKgqB,KAETG,EAAUnqB,KAAKuT,KACfyX,EAAShrB,KAAK+pB,EACdH,EAAU5pB,KAAK4pB,QAEnB,OAAO,IAAIX,GAAS,WAClB,GAAItO,GAAKoQ,EACP,MAAO,CAACnnB,MAAM,GAEhB,IAAI/C,EAAQmqB,EAAOb,GAOnB,QALAxP,EAEQoQ,IACNZ,EAAUP,EAAQO,IAEb,CACLvmB,MAAM,EACN/C,MAAOA,EAEX,GACF,EAQAwoB,EAAShY,UAAU/F,QAAU,WAC3B,IAAIqP,EAAI,EACJoQ,EAAI/qB,KAAKgqB,KAETG,EAAUnqB,KAAKuT,KACfjR,EAAOtC,KAAK8pB,EACZkB,EAAShrB,KAAK+pB,EACdH,EAAU5pB,KAAK4pB,QAEnB,OAAO,IAAIX,GAAS,WAClB,GAAItO,GAAKoQ,EACP,MAAO,CAACnnB,MAAM,GAEhB,IAAInB,EAAMH,EAAK6nB,GACXtpB,EAAQmqB,EAAOb,GAOnB,QALAxP,EAEQoQ,IACNZ,EAAUP,EAAQO,IAEb,CACLvmB,MAAM,EACN/C,MAAO,CAAC4B,EAAK5B,GAEjB,GACF,EAKsB,oBAAXoqB,SACT5B,EAAShY,UAAU4Z,OAAOC,UAAY7B,EAAShY,UAAU/F,SAK3D+d,EAAShY,UAAU8Z,QAAU,WAM3B,IALA,IAGI3nB,EAHAgU,EAAQ,IAAI4T,IAEZF,EAAWlrB,KAAKsL,YAGZ9H,EAAO0nB,EAASznB,QAAcG,MACpC4T,EAAM8S,IAAI9mB,EAAK3C,MAAM,GAAI2C,EAAK3C,MAAM,IAQtC,OALAZ,OAAOO,eAAegX,EAAO,cAAe,CAC1C3W,MAAOwoB,EACP5oB,YAAY,IAGP+W,CACT,EAEsB,oBAAXyT,SACT5B,EAAShY,UAAU4Z,OAAOI,IAAI,+BAAiChC,EAAShY,UAAU8Z,SAYpF9B,EAAS9Z,KAAO,SAAS+b,EAAUhC,EAAMC,EAAQC,GAC/C,GAAIC,UAAUlnB,OAAS,GAGrB,GAAwB,iBAFxBinB,EAAWJ,EAAUmC,YAAYD,IAG/B,MAAM,IAAIzlB,MAAM,qHAEU,IAArB4jB,UAAUlnB,SACjBinB,EAAWF,EACXA,EAAO,KACPC,EAAS,MAGX,IAAIiC,EAAQ,IAAInC,EAASC,EAAMC,EAAQC,GAMvC,OAJAN,EAAQoC,GAAU,SAASzqB,EAAO4B,GAChC+oB,EAAMlB,IAAI7nB,EAAK5B,EACjB,IAEO2qB,CACT,EAKA7R,EAAOvY,QAAUioB,C,gBC1ajB,IAAIH,EAAU,EAAQ,KAElBC,EAAQ,EAAQ,MAoBpB,SAASoC,EAAY/Q,GACnB,MAA6B,iBAAlBA,EAAOjY,OACTiY,EAAOjY,OAEW,iBAAhBiY,EAAOwP,KACTxP,EAAOwP,UADhB,CAIF,CAqDA5oB,EAAQqqB,YAxER,SAAqBjR,GACnB,OAAO2G,MAAMC,QAAQ5G,IAAW2O,EAAMuC,aAAalR,EACrD,EAuEApZ,EAAQmqB,YAAcA,EACtBnqB,EAAQuqB,QA/CR,SAAiBnR,GACf,IAAIuQ,EAAIQ,EAAY/Q,GAEhBoR,EAAqB,iBAANb,EAAiB,IAAI5J,MAAM4J,GAAK,GAE/CpQ,EAAI,EAOR,OAJAuO,EAAQ1O,GAAQ,SAAS3Z,GACvB+qB,EAAMjR,KAAO9Z,CACf,IAEO+qB,CACT,EAmCAxqB,EAAQyqB,mBA3BR,SAA4BrR,GAC1B,IAAIuQ,EAAIQ,EAAY/Q,GAEhBsR,EAA0B,iBAANf,EACtB5B,EAAMQ,gBAAgBoB,GACtB5J,MAEEyK,EAAqB,iBAANb,EAAiB,IAAI5J,MAAM4J,GAAK,GAC/CgB,EAAuB,iBAANhB,EAAiB,IAAIe,EAAWf,GAAK,GAEtDpQ,EAAI,EAQR,OALAuO,EAAQ1O,GAAQ,SAAS3Z,GACvB+qB,EAAMjR,GAAK9Z,EACXkrB,EAAQpR,GAAKA,GACf,IAEO,CAACiR,EAAOG,EACjB,C,eCnEA,IAAIC,EAAmBlZ,KAAKuF,IAAI,EAAG,GAAK,EACpC4T,EAAoBnZ,KAAKuF,IAAI,EAAG,IAAM,EACtC6T,EAAoBpZ,KAAKuF,IAAI,EAAG,IAAM,EAEtC8T,EAA0BrZ,KAAKuF,IAAI,EAAG,GAAK,EAC3C+T,EAA2BtZ,KAAKuF,IAAI,EAAG,IAAM,EAC7CgU,EAA2BvZ,KAAKuF,IAAI,EAAG,IAAM,EAEjDjX,EAAQuoB,gBAAkB,SAASK,GACjC,IAAIsC,EAAWtC,EAAO,EAEtB,OAAIsC,GAAYN,EACPO,WAELD,GAAYL,EACPO,YAELF,GAAYJ,EACPO,YAEFC,YACT,EAEAtrB,EAAQurB,sBAAwB,SAAS3C,GACvC,IAAIsC,EAAWtC,EAAO,EAEtB,OAAIsC,GAAYH,EACPS,UAELN,GAAYF,EACPS,WAELP,GAAYD,EACPS,WAEFJ,YACT,EAQAtrB,EAAQ2rB,cAAgB,SAASlsB,GAG/B,OAAIA,KAAmB,EAARA,IAGa,IAAtBiS,KAAKka,KAAKnsB,GACRA,GAAS,KAAOA,IAAU,IACrB+rB,UAEL/rB,GAAS,OAASA,IAAU,MACvBgsB,WAEFC,WAIHjsB,GAAS,IACJ0rB,WAEL1rB,GAAS,MACJ2rB,YAEFC,YAMJC,YACT,EAUA,IAAIO,EAAgB,CAClBV,WAAY,EACZK,UAAW,EACXJ,YAAa,EACbK,WAAY,EACZJ,YAAa,EACbK,WAAY,EACZI,aAAc,EACdR,aAAc,GAIhBtrB,EAAQ+rB,yBAA2B,SAASvB,EAAOwB,GACjD,IAEIC,EACA1P,EACA/c,EACA+Z,EACAoQ,EANAuC,EAAU,KACVC,EAAc,EAOlB,IAAK5S,EAAI,EAAGoQ,EAAIa,EAAMrpB,OAAQoY,EAAIoQ,EAAGpQ,IACnC/Z,EAAIwsB,EAASA,EAAOxB,EAAMjR,IAAMiR,EAAMjR,GACtCgD,EAAIvc,EAAQ2rB,cAAcnsB,IAC1BysB,EAAIJ,EAActP,EAAExb,OAEZorB,IACNA,EAAcF,EACdC,EAAU3P,GAId,OAAO2P,CACT,EAQAlsB,EAAQsqB,aAAe,SAAS7qB,GAC9B,MAA8B,oBAAhB2sB,aAA+BA,YAAYC,OAAO5sB,EAClE,EAQAO,EAAQuQ,OAAS,WACf,IACIgJ,EACAxa,EACA4qB,EAHAxoB,EAAS,EAKb,IAAKoY,EAAI,EAAGoQ,EAAItB,UAAUlnB,OAAQoY,EAAIoQ,EAAGpQ,IACvCpY,GAAUknB,UAAU9O,GAAGpY,OAEzB,IAAIqpB,EAAQ,IAAKnC,UAAU,GAAc,YAAElnB,GAE3C,IAAKoY,EAAI,EAAGxa,EAAI,EAAGwa,EAAIoQ,EAAGpQ,IACxBiR,EAAMtB,IAAIb,UAAU9O,GAAIxa,GACxBA,GAAKspB,UAAU9O,GAAGpY,OAGpB,OAAOqpB,CACT,EAQAxqB,EAAQ2qB,QAAU,SAASxpB,GAKzB,IAJA,IAEIqpB,EAAQ,IAFOxqB,EAAQuoB,gBAAgBpnB,GAE/B,CAAiBA,GAEpBoY,EAAI,EAAGA,EAAIpY,EAAQoY,IAC1BiR,EAAMjR,GAAKA,EAEb,OAAOiR,CACT,C,UChLA,IAAI8B,EAA8C,oBAAhBF,YAC9BG,EAAmC,oBAAX1C,OAQ5B,SAAS/B,EAAQoC,EAAUT,GACzB,IAAIK,EAAU7qB,EAAGsa,EAAGoQ,EAAGpoB,EAEvB,IAAK2oB,EACH,MAAM,IAAIzlB,MAAM,0CAElB,GAAwB,mBAAbglB,EACT,MAAM,IAAIhlB,MAAM,8CAGlB,GACEsb,MAAMC,QAAQkK,IACboC,GAAwBF,YAAYC,OAAOnC,IACxB,iBAAbA,GACiB,uBAAxBA,EAASrpB,WAET,IAAK0Y,EAAI,EAAGoQ,EAAIO,EAAS/oB,OAAQoY,EAAIoQ,EAAGpQ,IACtCkQ,EAASS,EAAS3Q,GAAIA,QAK1B,GAAgC,mBAArB2Q,EAASpC,QAepB,GAREyE,GACA1C,OAAOC,YAAYI,GACM,mBAAlBA,EAAS7nB,OAEhB6nB,EAAWA,EAASL,OAAOC,aAIA,mBAAlBI,EAAS7nB,KAapB,IAAKpD,KAAKirB,EACJA,EAASpqB,eAAeb,IAC1BwqB,EAASS,EAASjrB,GAAIA,QAXxB,IAHA6qB,EAAWI,EACX3Q,EAAI,GAEoC,KAAhChY,EAAIuoB,EAASznB,QAAUG,MAC7BinB,EAASloB,EAAE9B,MAAO8Z,GAClBA,SApBF2Q,EAASpC,QAAQ2B,EAkCrB,CASA3B,EAAQ0E,oBAAsB,SAAStC,EAAUT,GAC/C,IAAIK,EAAU7qB,EAAGsa,EAAGoQ,EAAGpoB,EAEvB,IAAK2oB,EACH,MAAM,IAAIzlB,MAAM,sDAElB,GAAwB,mBAAbglB,EACT,MAAM,IAAIhlB,MAAM,0DAGlB,GACEsb,MAAMC,QAAQkK,IACboC,GAAwBF,YAAYC,OAAOnC,IACxB,iBAAbA,GACiB,uBAAxBA,EAASrpB,WAET,IAAK0Y,EAAI,EAAGoQ,EAAIO,EAAS/oB,OAAQoY,EAAIoQ,EAAGpQ,IACtCkQ,EAASS,EAAS3Q,GAAI,WAK1B,GAAI2Q,aAAoBuC,IACtBvC,EAASpC,SAAQ,SAASroB,GACxBgqB,EAAShqB,EAAO,KAClB,SAKF,GAAgC,mBAArByqB,EAASpC,QAepB,GAREyE,GACA1C,OAAOC,YAAYI,GACM,mBAAlBA,EAAS7nB,OAEhB6nB,EAAWA,EAASL,OAAOC,aAIA,mBAAlBI,EAAS7nB,KAapB,IAAKpD,KAAKirB,EACJA,EAASpqB,eAAeb,IAC1BwqB,EAASS,EAASjrB,GAAIA,QAXxB,IAHA6qB,EAAWI,EACX3Q,EAAI,GAEoC,KAAhChY,EAAIuoB,EAASznB,QAAUG,MAC7BinB,EAASloB,EAAE9B,MAAO,MAClB8Z,SApBF2Q,EAASpC,QAAQ2B,EAkCrB,EAKAlR,EAAOvY,QAAU8nB,C,WC9IjB,SAASD,EAASxlB,GAGhBxD,OAAOO,eAAeR,KAAM,QAAS,CACnC8tB,UAAU,EACVrtB,YAAY,EACZI,MAAO4C,IAITzD,KAAK4D,MAAO,CACd,CAQAqlB,EAAS5X,UAAU5N,KAAO,WACxB,GAAIzD,KAAK4D,KACP,MAAO,CAACA,MAAM,GAEhB,IAAIJ,EAAOxD,KAAK+tB,QAKhB,OAHIvqB,EAAKI,OACP5D,KAAK4D,MAAO,GAEPJ,CACT,EAKsB,oBAAXynB,SACThC,EAAS5X,UAAU4Z,OAAOC,UAAY,WACpC,OAAOlrB,IACT,GAQFipB,EAAS+E,GAAK,WACZ,IAAIC,EAAOxE,UACPsB,EAAIkD,EAAK1rB,OACToY,EAAI,EAER,OAAO,IAAIsO,GAAS,WAClB,OAAItO,GAAKoQ,EACA,CAACnnB,MAAM,GAET,CAACA,MAAM,EAAO/C,MAAOotB,EAAKtT,KACnC,GACF,EAOAsO,EAASiF,MAAQ,WACf,IAAIhD,EAAW,IAAIjC,EAAS,MAG5B,OAFAiC,EAAStnB,MAAO,EAETsnB,CACT,EAQAjC,EAASkF,GAAK,SAASttB,GACrB,OAAIA,aAAiBooB,GAIF,iBAAVpoB,GACG,OAAVA,GACsB,mBAAfA,EAAM4C,IAEjB,EAKAkW,EAAOvY,QAAU6nB,C,WCvGjB,MAAMmF,EAAW,wBACXC,EAAW,+EAMZjV,OAAOzC,UAAY2X,OAAO3X,WAC3ByC,OAAOzC,SAAW2X,OAAO3X,WAExByC,OAAOmV,YAAcD,OAAOC,aAC7BnV,OAAOmV,WAAaD,OAAOC,YAI/B,MAAMC,EAAW,CACb7K,KAAO,EACPC,cAAc,EACd6K,aAAc,IACdC,WAAW,GAwGf/U,EAAOvY,QApGP,SAAkBkmB,EAAK7hB,EAAU,CAAC,GAS9B,GADAA,EAAUxF,OAAOmM,OAAO,CAAC,EAAGoiB,EAAU/oB,IAClC6hB,GAAsB,iBAARA,EAAmB,OAAOA,EAE5C,IAAIqH,EAAcrH,EAAIvhB,OAKtB,QAAwBxF,IAArBkF,EAAQmpB,UAA0BnpB,EAAQmpB,SAASC,KAAKF,GAAa,OAAOrH,EAC1E,GAAI7hB,EAAQke,KAAOyK,EAASS,KAAKF,GAClC,OAAOvV,OAAOzC,SAASgY,EAAY,IAKlC,CAED,MAAM5T,EAAQsT,EAASrT,KAAK2T,GAC5B,GAAG5T,EAAM,CACL,MAAMiS,EAAOjS,EAAM,GACb6I,EAAe7I,EAAM,GAC3B,IAAI+T,EA6DhB,SAAmBC,GACf,GAAGA,IAAmC,IAAzBA,EAAOvR,QAAQ,KAKxB,MAHc,OADduR,EAASA,EAAOlsB,QAAQ,MAAO,KACXksB,EAAS,IACP,MAAdA,EAAO,GAAaA,EAAS,IAAIA,EACL,MAA5BA,EAAOA,EAAOxsB,OAAO,KAAawsB,EAASA,EAAO7S,OAAO,EAAE6S,EAAOxsB,OAAO,IAC1EwsB,EAEX,OAAOA,CACX,CAtEoCC,CAAUjU,EAAM,IAGxC,MAAM2T,EAAY3T,EAAM,IAAMA,EAAM,GACpC,IAAItV,EAAQme,cAAgBA,EAAarhB,OAAS,GAAKyqB,GAA0B,MAAlB2B,EAAW,GAAY,OAAOrH,EACxF,IAAI7hB,EAAQme,cAAgBA,EAAarhB,OAAS,IAAMyqB,GAA0B,MAAlB2B,EAAW,GAAY,OAAOrH,EAC/F,CACA,MAAM2H,EAAM7V,OAAOuV,GACbI,EAAS,GAAKE,EACpB,OAA8B,IAA3BF,EAAOlY,OAAO,SAGR6X,EAFFjpB,EAAQipB,UAAkBO,EACjB3H,GAIsB,IAA7BqH,EAAWnR,QAAQ,KAQV,MAAXuR,GAAyC,KAAtBD,GACdC,IAAWD,GACV9B,GAAQ+B,IAAW,IAAID,EAFyBG,EAG7C3H,EAGb1D,EAKIkL,IAAsBC,GACjB/B,EAAK8B,IAAsBC,EADKE,EAE5B3H,EAGbqH,IAAeI,GACVJ,IAAe3B,EAAK+B,EADKE,EAO1B3H,CACX,CAGJ,CACI,OAAOA,CAEf,CACJ,C,iBC1GA3N,EAAOvY,QAAU,EAAjB,K,8BCEU,EAAQ,MAAlB,IAuPIqD,EAtPAyqB,EAAM,EAAQ,MACdjf,EAAO,EAAQ,MACfC,EAAQ,EAAQ,MAChBif,EAAS,EAAQ,MAEjB3T,GADS,EAAQ,MACV,EAAQ,OAsCnB,SAAS4T,EAAe3pB,GACtB,IAAI4pB,EAAOrvB,KACXqvB,EAAK5pB,QAAUA,GAAW,CAAC,EAC3B4pB,EAAKC,aAAeD,EAAK5pB,QAAQ+R,OAAS,CAAC,EAC3C6X,EAAKhY,WAAagY,EAAK5pB,QAAQ4R,YAAcpH,EAAK+H,MAAMuX,kBACxDF,EAAKG,SAAW,GAChBH,EAAKI,QAAU,GAEfJ,EAAK5d,GAAG,QAAQ,SAAgBsE,EAAQU,EAAMC,EAAMgZ,GAElD,IADA,IAAIjqB,EAAUkqB,EAAUlZ,EAAMC,EAAMgZ,GAC3B/U,EAAI,EAAGD,EAAM2U,EAAKG,SAASjtB,OAAQoY,EAAID,IAAOC,EAAG,CACxD,IAAIiV,EAAUP,EAAKG,SAAS7U,GAC5B,GAAIiV,EAAQnZ,OAAShR,EAAQgR,MAAQmZ,EAAQlZ,OAASjR,EAAQiR,KAK5D,OAFA2Y,EAAKG,SAASK,OAAOlV,EAAG,QACxBiV,EAAQ1c,QAAQ4c,SAAS/Z,EAG7B,CACAA,EAAOV,UACPga,EAAKU,aAAaha,EACpB,GACF,CAuIA,SAASia,EAAmBvqB,EAASwqB,GACnC,IAAIZ,EAAOrvB,KACXovB,EAAe/d,UAAU6e,aAAa/uB,KAAKkuB,EAAM5pB,GAAS,SAASsQ,GACjE,IAAIoa,EAAa1qB,EAAQyN,QAAQkd,UAAU,QACvCC,EAAaC,EAAa,CAAC,EAAGjB,EAAK5pB,QAAS,CAC9CsQ,OAAQA,EACRwa,WAAYJ,EAAaA,EAAWttB,QAAQ,OAAQ,IAAM4C,EAAQgR,OAIhE+Z,EAAetB,EAAIuB,QAAQ,EAAGJ,GAClChB,EAAKI,QAAQJ,EAAKI,QAAQjS,QAAQzH,IAAWya,EAC7CP,EAAGO,EACL,GACF,CAGA,SAASb,EAAUlZ,EAAMC,EAAMgZ,GAC7B,MAAoB,iBAATjZ,EACF,CACLA,KAAMA,EACNC,KAAMA,EACNgZ,aAAcA,GAGXjZ,CACT,CAEA,SAAS6Z,EAAa9V,GACpB,IAAK,IAAIG,EAAI,EAAGD,EAAM+O,UAAUlnB,OAAQoY,EAAID,IAAOC,EAAG,CACpD,IAAI+V,EAAYjH,UAAU9O,GAC1B,GAAyB,iBAAd+V,EAET,IADA,IAAIpuB,EAAOrC,OAAOqC,KAAKouB,GACdjP,EAAI,EAAGkP,EAASruB,EAAKC,OAAQkf,EAAIkP,IAAUlP,EAAG,CACrD,IAAIphB,EAAIiC,EAAKmf,QACQlhB,IAAjBmwB,EAAUrwB,KACZma,EAAOna,GAAKqwB,EAAUrwB,GAE1B,CAEJ,CACA,OAAOma,CACT,CA3OApZ,EAAQ2W,aAMR,SAAsBtS,GACpB,IAAIsR,EAAQ,IAAIqY,EAAe3pB,GAE/B,OADAsR,EAAM7D,QAAUjD,EAAKiD,QACd6D,CACT,EATA3V,EAAQyW,cAWR,SAAuBpS,GACrB,IAAIsR,EAAQ,IAAIqY,EAAe3pB,GAI/B,OAHAsR,EAAM7D,QAAUjD,EAAKiD,QACrB6D,EAAMmZ,aAAeF,EACrBjZ,EAAMP,YAAc,IACbO,CACT,EAhBA3V,EAAQ0W,cAkBR,SAAuBrS,GACrB,IAAIsR,EAAQ,IAAIqY,EAAe3pB,GAE/B,OADAsR,EAAM7D,QAAUhD,EAAMgD,QACf6D,CACT,EArBA3V,EAAQwW,eAuBR,SAAwBnS,GACtB,IAAIsR,EAAQ,IAAIqY,EAAe3pB,GAI/B,OAHAsR,EAAM7D,QAAUhD,EAAMgD,QACtB6D,EAAMmZ,aAAeF,EACrBjZ,EAAMP,YAAc,IACbO,CACT,EA2BAyE,EAAKoV,SAASxB,EAAgBD,EAAO0B,cAErCzB,EAAe/d,UAAUyf,WAAa,SAAoBlb,EAAKa,EAAMC,EAAMgZ,GACzE,IAAIL,EAAOrvB,KACPyF,EAAU6qB,EAAa,CAACpd,QAAS0C,GAAMyZ,EAAK5pB,QAASkqB,EAAUlZ,EAAMC,EAAMgZ,IAE3EL,EAAKI,QAAQltB,QAAUvC,KAAKqX,WAE9BgY,EAAKG,SAASlW,KAAK7T,GAKrB4pB,EAAKa,aAAazqB,GAAS,SAASsQ,GAMlC,SAASgb,IACP1B,EAAK2B,KAAK,OAAQjb,EAAQtQ,EAC5B,CAEA,SAASwrB,EAAgB1b,GACvB8Z,EAAKU,aAAaha,GAClBA,EAAOmb,eAAe,OAAQH,GAC9Bhb,EAAOmb,eAAe,QAASD,GAC/Blb,EAAOmb,eAAe,cAAeD,EACvC,CAdAlb,EAAOtE,GAAG,OAAQsf,GAClBhb,EAAOtE,GAAG,QAASwf,GACnBlb,EAAOtE,GAAG,cAAewf,GACzBrb,EAAIka,SAAS/Z,EAYf,GACF,EAEAqZ,EAAe/d,UAAU6e,aAAe,SAAsBzqB,EAASwqB,GACrE,IAAIZ,EAAOrvB,KACPmxB,EAAc,CAAC,EACnB9B,EAAKI,QAAQnW,KAAK6X,GAElB,IAAIC,EAAiBd,EAAa,CAAC,EAAGjB,EAAKC,aAAc,CACvDhZ,OAAQ,UACR/Q,KAAME,EAAQgR,KAAO,IAAMhR,EAAQiR,KACnCK,OAAO,EACP1H,QAAS,CACPoH,KAAMhR,EAAQgR,KAAO,IAAMhR,EAAQiR,QAGnCjR,EAAQiqB,eACV0B,EAAe1B,aAAejqB,EAAQiqB,cAEpC0B,EAAe3Z,YACjB2Z,EAAe/hB,QAAU+hB,EAAe/hB,SAAW,CAAC,EACpD+hB,EAAe/hB,QAAQ,uBAAyB,SAC5C,IAAIC,OAAO8hB,EAAe3Z,WAAWxV,SAAS,WAGpDwC,EAAM,0BACN,IAAI4sB,EAAahC,EAAKnc,QAAQke,GAoB9B,SAASE,EAAU/nB,EAAKwM,EAAQxC,GAQ5B,IAUI/O,EAdN,OAHA6sB,EAAWE,qBACXxb,EAAOwb,qBAEgB,MAAnBhoB,EAAIG,YACNjF,EAAM,2DACJ8E,EAAIG,YACNqM,EAAOV,WACH7Q,EAAQ,IAAIqB,MAAM,yDACJ0D,EAAIG,aAChBwC,KAAO,aACbzG,EAAQyN,QAAQ8d,KAAK,QAASxsB,QAC9B6qB,EAAKU,aAAaoB,IAGhB5d,EAAKhR,OAAS,GAChBkC,EAAM,wCACNsR,EAAOV,WACH7Q,EAAQ,IAAIqB,MAAM,yCAChBqG,KAAO,aACbzG,EAAQyN,QAAQ8d,KAAK,QAASxsB,QAC9B6qB,EAAKU,aAAaoB,KAGpB1sB,EAAM,wCACN4qB,EAAKI,QAAQJ,EAAKI,QAAQjS,QAAQ2T,IAAgBpb,EAC3Cka,EAAGla,GACZ,CA9CAsb,EAAWG,6BAA8B,EACzCH,EAAWI,KAAK,YAMhB,SAAoBloB,GAElBA,EAAImoB,SAAU,CAChB,IARAL,EAAWI,KAAK,WAUhB,SAAmBloB,EAAKwM,EAAQxC,GAE9BzR,QAAQ6vB,UAAS,WACfL,EAAU/nB,EAAKwM,EAAQxC,EACzB,GACF,IAdA8d,EAAWI,KAAK,UAAWH,GAC3BD,EAAWI,KAAK,SA4ChB,SAAiBG,GACfP,EAAWE,qBAEX9sB,EAAM,wDACAmtB,EAAMjwB,QAASiwB,EAAMC,OAC3B,IAAIrtB,EAAQ,IAAIqB,MAAM,oDACW+rB,EAAMjwB,SACvC6C,EAAM0H,KAAO,aACbzG,EAAQyN,QAAQ8d,KAAK,QAASxsB,GAC9B6qB,EAAKU,aAAaoB,EACpB,IArDAE,EAAWnb,KAsDb,EAEAkZ,EAAe/d,UAAU0e,aAAe,SAAsBha,GAC5D,IAAI+b,EAAM9xB,KAAKyvB,QAAQjS,QAAQzH,GAC/B,IAAa,IAAT+b,EAAJ,CAGA9xB,KAAKyvB,QAAQI,OAAOiC,EAAK,GAEzB,IAAIlC,EAAU5vB,KAAKwvB,SAASuC,QACxBnC,GAGF5vB,KAAKkwB,aAAaN,GAAS,SAAS7Z,GAClC6Z,EAAQ1c,QAAQ4c,SAAS/Z,EAC3B,GATF,CAWF,EAiDEtR,EADE3C,QAAQ4D,IAAIssB,YAAc,aAAanD,KAAK/sB,QAAQ4D,IAAIssB,YAClD,WACN,IAAI/D,EAAO9M,MAAM9P,UAAU4gB,MAAM9wB,KAAKsoB,WACf,iBAAZwE,EAAK,GACdA,EAAK,GAAK,WAAaA,EAAK,GAE5BA,EAAKiE,QAAQ,WAEfC,QAAQ3tB,MAAMV,MAAMquB,QAASlE,EAC/B,EAEQ,WAAY,EAEtB7sB,EAAQqD,MAAQA,C,mLCjQhB,IAAI2tB,EAEAC,EAGAC,EAAa,EACbC,EAAa,EAkFjB,QAhFA,SAAY9sB,EAAS+sB,EAAKC,GACxB,IAAI9X,EAAI6X,GAAOC,GAAU,EACzB,MAAMC,EAAIF,GAAO,IAAIrR,MAAM,IAE3B,IAAI6H,GADJvjB,EAAUA,GAAW,CAAC,GACHujB,MAAQoJ,EACvBO,OAAgCpyB,IAArBkF,EAAQktB,SAAyBltB,EAAQktB,SAAWN,EAInE,GAAY,MAARrJ,GAA4B,MAAZ2J,EAAkB,CACpC,MAAMC,EAAYntB,EAAQotB,SAAWptB,EAAQqtB,KAAOA,EAAA,KAExC,MAAR9J,IAEFA,EAAOoJ,EAAU,CAAgB,EAAfQ,EAAU,GAAWA,EAAU,GAAIA,EAAU,GAAIA,EAAU,GAAIA,EAAU,GAAIA,EAAU,KAG3F,MAAZD,IAEFA,EAAWN,EAAiD,OAApCO,EAAU,IAAM,EAAIA,EAAU,IAE1D,CAMA,IAAIG,OAA0BxyB,IAAlBkF,EAAQstB,MAAsBttB,EAAQstB,MAAQpa,KAAKqa,MAG3DC,OAA0B1yB,IAAlBkF,EAAQwtB,MAAsBxtB,EAAQwtB,MAAQV,EAAa,EAEvE,MAAMW,EAAKH,EAAQT,GAAcW,EAAQV,GAAc,IAavD,GAXIW,EAAK,QAA0B3yB,IAArBkF,EAAQktB,WACpBA,EAAWA,EAAW,EAAI,QAKvBO,EAAK,GAAKH,EAAQT,SAAiC/xB,IAAlBkF,EAAQwtB,QAC5CA,EAAQ,GAINA,GAAS,IACX,MAAM,IAAIptB,MAAM,mDAGlBysB,EAAaS,EACbR,EAAaU,EACbZ,EAAYM,EAEZI,GAAS,YAET,MAAMI,GAA4B,KAAb,UAARJ,GAA6BE,GAAS,WACnDP,EAAE/X,KAAOwY,IAAO,GAAK,IACrBT,EAAE/X,KAAOwY,IAAO,GAAK,IACrBT,EAAE/X,KAAOwY,IAAO,EAAI,IACpBT,EAAE/X,KAAY,IAALwY,EAET,MAAMC,EAAML,EAAQ,WAAc,IAAQ,UAC1CL,EAAE/X,KAAOyY,IAAQ,EAAI,IACrBV,EAAE/X,KAAa,IAANyY,EAETV,EAAE/X,KAAOyY,IAAQ,GAAK,GAAM,GAE5BV,EAAE/X,KAAOyY,IAAQ,GAAK,IAEtBV,EAAE/X,KAAOgY,IAAa,EAAI,IAE1BD,EAAE/X,KAAkB,IAAXgY,EAET,IAAK,IAAIU,EAAI,EAAGA,EAAI,IAAKA,EACvBX,EAAE/X,EAAI0Y,GAAKrK,EAAKqK,GAGlB,OAAOb,IAAO,EAAA5mB,EAAA,GAAU8mB,EAC1B,E,aC1DA,QAhCA,SAAeY,GACb,KAAK,EAAA/W,EAAA,GAAS+W,GACZ,MAAMxsB,UAAU,gBAGlB,IAAIlG,EACJ,MAAMihB,EAAM,IAAI0K,WAAW,IAuB3B,OArBA1K,EAAI,IAAMjhB,EAAI+V,SAAS2c,EAAKrB,MAAM,EAAG,GAAI,OAAS,GAClDpQ,EAAI,GAAKjhB,IAAM,GAAK,IACpBihB,EAAI,GAAKjhB,IAAM,EAAI,IACnBihB,EAAI,GAAS,IAAJjhB,EAETihB,EAAI,IAAMjhB,EAAI+V,SAAS2c,EAAKrB,MAAM,EAAG,IAAK,OAAS,EACnDpQ,EAAI,GAAS,IAAJjhB,EAETihB,EAAI,IAAMjhB,EAAI+V,SAAS2c,EAAKrB,MAAM,GAAI,IAAK,OAAS,EACpDpQ,EAAI,GAAS,IAAJjhB,EAETihB,EAAI,IAAMjhB,EAAI+V,SAAS2c,EAAKrB,MAAM,GAAI,IAAK,OAAS,EACpDpQ,EAAI,GAAS,IAAJjhB,EAGTihB,EAAI,KAAOjhB,EAAI+V,SAAS2c,EAAKrB,MAAM,GAAI,IAAK,KAAO,cAAgB,IACnEpQ,EAAI,IAAMjhB,EAAI,WAAc,IAC5BihB,EAAI,IAAMjhB,IAAM,GAAK,IACrBihB,EAAI,IAAMjhB,IAAM,GAAK,IACrBihB,EAAI,IAAMjhB,IAAM,EAAI,IACpBihB,EAAI,IAAU,IAAJjhB,EACHihB,CACT,ECfe,SAAS,EAAC1f,EAAMoxB,EAASC,GACtC,SAASC,EAAa5yB,EAAO6yB,EAAWlB,EAAKC,GAS3C,GARqB,iBAAV5xB,IACTA,EAjBN,SAAuBymB,GACrBA,EAAMqM,SAAS7pB,mBAAmBwd,IAElC,MAAMsM,EAAQ,GAEd,IAAK,IAAIjZ,EAAI,EAAGA,EAAI2M,EAAI/kB,SAAUoY,EAChCiZ,EAAMta,KAAKgO,EAAIuM,WAAWlZ,IAG5B,OAAOiZ,CACT,CAOcE,CAAcjzB,IAGC,iBAAd6yB,IACTA,EAAY,EAAMA,IAGK,KAArBA,EAAUnxB,OACZ,MAAMuE,UAAU,oEAMlB,IAAI8sB,EAAQ,IAAIrH,WAAW,GAAK1rB,EAAM0B,QAOtC,GANAqxB,EAAMtJ,IAAIoJ,GACVE,EAAMtJ,IAAIzpB,EAAO6yB,EAAUnxB,QAC3BqxB,EAAQJ,EAASI,GACjBA,EAAM,GAAgB,GAAXA,EAAM,GAAYL,EAC7BK,EAAM,GAAgB,GAAXA,EAAM,GAAY,IAEzBpB,EAAK,CACPC,EAASA,GAAU,EAEnB,IAAK,IAAI9X,EAAI,EAAGA,EAAI,KAAMA,EACxB6X,EAAIC,EAAS9X,GAAKiZ,EAAMjZ,GAG1B,OAAO6X,CACT,CAEA,OAAO,EAAA5mB,EAAA,GAAUgoB,EACnB,CAGA,IACEH,EAAatxB,KAAOA,CACP,CAAb,MAAOoT,GAAM,CAKf,OAFAke,EAAaM,IA7CI,uCA8CjBN,EAAaljB,IA7CI,uCA8CVkjB,CACT,C,uBCnDA,MCTA,EADWO,EAAI,KAAM,IDArB,SAAaJ,GAOX,OANIzS,MAAMC,QAAQwS,GAChBA,EAAQtkB,OAAOC,KAAKqkB,GACM,iBAAVA,IAChBA,EAAQtkB,OAAOC,KAAKqkB,EAAO,SAGtB,eAAkB,OAAOK,OAAOL,GAAOM,QAChD,I,cEEA,MCTA,EADWF,EAAI,KAAM,IDArB,SAAcJ,GAOZ,OANIzS,MAAMC,QAAQwS,GAChBA,EAAQtkB,OAAOC,KAAKqkB,GACM,iBAAVA,IAChBA,EAAQtkB,OAAOC,KAAKqkB,EAAO,SAGtB,eAAkB,QAAQK,OAAOL,GAAOM,QACjD,IEVA,yCCUA,QARA,SAAiBZ,GACf,KAAK,EAAA/W,EAAA,GAAS+W,GACZ,MAAMxsB,UAAU,gBAGlB,OAAO6P,SAAS2c,EAAKpX,OAAO,GAAI,GAAI,GACtC,C,sECPA,MAAMiY,EAAY,IAAI5H,WAAW,KAEjC,IAAI6H,EAAUD,EAAU5xB,OACT,SAASuwB,IAMtB,OALIsB,EAAUD,EAAU5xB,OAAS,KAC/B,mBAAsB4xB,GACtBC,EAAU,GAGLD,EAAUlC,MAAMmC,EAASA,GAAW,GAC7C,C,4DCLA,MAAMC,EAAY,GAElB,IAAK,IAAI1Z,EAAI,EAAGA,EAAI,MAAOA,EACzB0Z,EAAU/a,MAAMqB,EAAI,KAAO1Y,SAAS,IAAIia,OAAO,IAmBjD,QAhBA,SAAmB2F,EAAK4Q,EAAS,GAG/B,MAAMa,GAAQe,EAAUxS,EAAI4Q,EAAS,IAAM4B,EAAUxS,EAAI4Q,EAAS,IAAM4B,EAAUxS,EAAI4Q,EAAS,IAAM4B,EAAUxS,EAAI4Q,EAAS,IAAM,IAAM4B,EAAUxS,EAAI4Q,EAAS,IAAM4B,EAAUxS,EAAI4Q,EAAS,IAAM,IAAM4B,EAAUxS,EAAI4Q,EAAS,IAAM4B,EAAUxS,EAAI4Q,EAAS,IAAM,IAAM4B,EAAUxS,EAAI4Q,EAAS,IAAM4B,EAAUxS,EAAI4Q,EAAS,IAAM,IAAM4B,EAAUxS,EAAI4Q,EAAS,KAAO4B,EAAUxS,EAAI4Q,EAAS,KAAO4B,EAAUxS,EAAI4Q,EAAS,KAAO4B,EAAUxS,EAAI4Q,EAAS,KAAO4B,EAAUxS,EAAI4Q,EAAS,KAAO4B,EAAUxS,EAAI4Q,EAAS,MAAMxd,cAM3f,KAAK,OAASqe,GACZ,MAAMxsB,UAAU,+BAGlB,OAAOwsB,CACT,C,uECHA,QApBA,SAAY7tB,EAAS+sB,EAAKC,GAExB,MAAM6B,GADN7uB,EAAUA,GAAW,CAAC,GACDotB,SAAWptB,EAAQqtB,KAAO,OAK/C,GAHAwB,EAAK,GAAe,GAAVA,EAAK,GAAY,GAC3BA,EAAK,GAAe,GAAVA,EAAK,GAAY,IAEvB9B,EAAK,CACPC,EAASA,GAAU,EAEnB,IAAK,IAAI9X,EAAI,EAAGA,EAAI,KAAMA,EACxB6X,EAAIC,EAAS9X,GAAK2Z,EAAK3Z,GAGzB,OAAO6X,CACT,CAEA,OAAO,OAAU8B,EACnB,C,8CCrBA,8HCMA,QAJA,SAAkBhB,GAChB,MAAuB,iBAATA,GAAqB,OAAWA,EAChD,C,wBCJA3Z,EAAOvY,QAAUwY,QAAQ,S,wBCAzBD,EAAOvY,QAAUwY,QAAQ,S,wBCAzBD,EAAOvY,QAAUwY,QAAQ,S,wBCAzBD,EAAOvY,QAAUwY,QAAQ,K,wBCAzBD,EAAOvY,QAAUwY,QAAQ,O,wBCAzBD,EAAOvY,QAAUwY,QAAQ,Q,wBCAzBD,EAAOvY,QAAUwY,QAAQ,M,wBCAzBD,EAAOvY,QAAUwY,QAAQ,K,wBCAzBD,EAAOvY,QAAUwY,QAAQ,O,wBCAzBD,EAAOvY,QAAUwY,QAAQ,M,wBCAzBD,EAAOvY,QAAUwY,QAAQ,O,GCCrB2a,EAA2B,CAAC,EAGhC,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBl0B,IAAjBm0B,EACH,OAAOA,EAAatzB,QAGrB,IAAIuY,EAAS4a,EAAyBE,GAAY,CACjDE,GAAIF,EACJG,QAAQ,EACRxzB,QAAS,CAAC,GAUX,OANAyzB,EAAoBJ,GAAUtzB,KAAKwY,EAAOvY,QAASuY,EAAQA,EAAOvY,QAASozB,GAG3E7a,EAAOib,QAAS,EAGTjb,EAAOvY,OACf,CCxBAozB,EAAoBnB,EAAK1Z,IACxB,IAAIyT,EAASzT,GAAUA,EAAO3Y,WAC7B,IAAO2Y,EAAiB,QACxB,IAAM,EAEP,OADA6a,EAAoBM,EAAE1H,EAAQ,CAAE1U,EAAG0U,IAC5BA,CAAM,ECLdoH,EAAoBM,EAAI,CAAC1zB,EAAS2zB,KACjC,IAAI,IAAItyB,KAAOsyB,EACXP,EAAoBr0B,EAAE40B,EAAYtyB,KAAS+xB,EAAoBr0B,EAAEiB,EAASqB,IAC5ExC,OAAOO,eAAeY,EAASqB,EAAK,CAAEhC,YAAY,EAAMC,IAAKq0B,EAAWtyB,IAE1E,ECND+xB,EAAoBQ,IAAOrb,KAC1BA,EAAS1Z,OAAOC,OAAOyZ,IACXsb,WAAUtb,EAAOsb,SAAW,IACxCh1B,OAAOO,eAAemZ,EAAQ,UAAW,CACxClZ,YAAY,EACZ6pB,IAAK,KACJ,MAAM,IAAIzkB,MAAM,0FAA4F8T,EAAOgb,GAAG,IAGjHhb,GCTR6a,EAAoBr0B,EAAI,CAAC6T,EAAKkhB,IAAUj1B,OAAOoR,UAAUnQ,eAAeC,KAAK6S,EAAKkhB,GCClFV,EAAoBW,EAAK/zB,IACH,oBAAX6pB,QAA0BA,OAAOmK,aAC1Cn1B,OAAOO,eAAeY,EAAS6pB,OAAOmK,YAAa,CAAEv0B,MAAO,WAE7DZ,OAAOO,eAAeY,EAAS,aAAc,CAAEP,OAAO,GAAO,E,+SCLnDw0B,E,WACX,SAAWA,GACPA,EAAkB,IAAI,MACtBA,EAAqB,OAAI,qBAC5B,CAHD,CAGGA,IAAiBA,EAAe,CAAC,IAC7B,MAAMC,EAAkB,CAACthB,EAAKvR,EAAK8yB,KACtC,GAAM9yB,KAAOuR,EAAb,CAEA,GAAiB,SAAbA,EAAIvR,GACJ,OAAO,EACX,GAAiB,UAAbuR,EAAIvR,GACJ,OAAO,EACX,MAAM,IAAIoD,MAAM,eAAe0vB,MAAS9yB,uCAAyCuR,EAAIvR,MALjE,CAKyE,ECRpF+yB,EAA6C,CACtDC,4BAA8B/vB,GAAQ4vB,EAAgB5vB,EAJhB,6BAIiD2vB,EAAaK,KACpGC,mBAAqBC,GAAYN,EAAgBM,EAJR,yBAIgDP,EAAaQ,QACtGC,SAAS,GCHAC,EAAwC,CACjDN,4BAA8B/vB,GAAQ4vB,EAAgB5vB,EAJrB,wBAIiD2vB,EAAaK,KAC/FC,mBAAqBC,GAAYN,EAAgBM,EAJb,oBAIgDP,EAAaQ,QACjGC,SAAS,GCLAE,EAA6B,CACtCP,4BAA8B/vB,GAAQA,EAAmB,WACzDiwB,mBAAqBC,GAAYA,EAAuB,OACxDE,QAAS,KACL,MAAM,IAAIjwB,MAAM,oBAAoB,GAG/BowB,EAAkC,CAC3CC,cAAe,eCVNC,EAAgBC,GAA6B,iBAAXA,IAAwBA,EAAOpV,WAAW,UAAYoV,EAAOC,SAAS,UCCxGC,EAAiBF,GAAWD,EAAaC,GAChD,CAAC,kBAAmB,YAAYvvB,SAASuvB,GACrC,YACAA,EAAOvzB,QAAQ,2BAA4B,IAC/CuzB,ECHOG,EAAuB3vB,IAChC,MAAM,OAAEwvB,EAAM,gBAAEI,GAAoB5vB,EACpC,IAAKwvB,EACD,MAAM,IAAIvwB,MAAM,qBAEpB,MAAO,IACAe,EACHwvB,OAAQK,UACJ,GAAsB,iBAAXL,EACP,OAAOE,EAAcF,GAEzB,MAAMM,QAAuBN,IAC7B,OAAOE,EAAcI,EAAe,EAExCF,gBAAiBC,UACb,MAAMC,EAAmC,iBAAXN,EAAsBA,QAAeA,IACnE,QAAID,EAAaO,KAGiB,mBAApBF,EAAiCpzB,QAAQC,UAAUmzB,GAAmBA,IAAiB,EAE5G,ECvBE,MAAM,EACTp0B,YAAYqD,GACRzF,KAAKsW,OAAS7Q,EAAQ6Q,QAAU,MAChCtW,KAAKgV,SAAWvP,EAAQuP,UAAY,YACpChV,KAAK0W,KAAOjR,EAAQiR,KACpB1W,KAAK22B,MAAQlxB,EAAQkxB,OAAS,CAAC,EAC/B32B,KAAKqP,QAAU5J,EAAQ4J,SAAW,CAAC,EACnCrP,KAAK42B,KAAOnxB,EAAQmxB,KACpB52B,KAAK6R,SAAWpM,EAAQoM,SACa,MAA/BpM,EAAQoM,SAASogB,OAAO,GACpB,GAAGxsB,EAAQoM,YACXpM,EAAQoM,SACZ,SACN7R,KAAKuF,KAAOE,EAAQF,KAAmC,MAA3BE,EAAQF,KAAK2f,OAAO,GAAa,IAAIzf,EAAQF,OAASE,EAAQF,KAAQ,GACtG,CACAiD,kBAAkB0K,GACd,IAAKA,EACD,OAAO,EACX,MAAM0C,EAAM1C,EACZ,MAAQ,WAAY0C,GAChB,aAAcA,GACd,aAAcA,GACd,SAAUA,GACc,iBAAjBA,EAAW,OACQ,iBAAnBA,EAAa,OAC5B,CACAihB,QACI,MAAMC,EAAS,IAAI,EAAY,IACxB92B,KACHqP,QAAS,IAAKrP,KAAKqP,WAO/B,IAAoBsnB,EAHZ,OAFIG,EAAOH,QACPG,EAAOH,OAICA,EAJkBG,EAAOH,MAKlC12B,OAAOqC,KAAKq0B,GAAO7d,QAAO,CAACie,EAAOC,KACrC,MAAMC,EAAQN,EAAMK,GACpB,MAAO,IACAD,EACH,CAACC,GAAY7V,MAAMC,QAAQ6V,GAAS,IAAIA,GAASA,EACpD,GACF,CAAC,KAVOH,CACX,ECjCJ,MAAMI,EAAwB,iBA2BvB,MAAMC,EAAiC,CAC1C3zB,KAAM,QACNgZ,KAAM,CAAC,qBAAsB,kBAC7Bra,KAAM,0BACNi1B,UAAU,GAEDC,EAA0B5xB,IAAY,CAC/C6xB,aAAeC,IAjCZ,IAAiCC,EAkChCD,EAAYlR,KAlCoBmR,EAkCQ/xB,EAAQ+xB,kBAjC5C/zB,GAASgzB,MAAOxI,IACpB,MAAM/a,EAAU+a,EAAK/a,QACrB,GAAI,aAAuBA,GAAU,CACjC,MAAM,KAAE0jB,EAAI,QAAEvnB,GAAY6D,EAC1B,GAAI0jB,IAGyC,IAFzC32B,OAAOqC,KAAK+M,GACP1I,KAAK2gB,GAAQA,EAAIrS,gBACjBuI,QAAQ0Z,GACb,IACI,MAAM30B,EAASi1B,EAAkBZ,GACjC1jB,EAAQ7D,QAAU,IACX6D,EAAQ7D,QACX,CAAC6nB,GAAwB7oB,OAAO9L,GAIxC,CADA,MAAOiC,GACP,CAER,CACA,OAAOf,EAAK,IACLwqB,EACH/a,WACF,GAWkEikB,EAA+B,IClC9FM,EAA+B,CACxCt1B,KAAM,yBACNqB,KAAM,cACNgZ,KAAM,CAAC,gBACP4a,UAAU,GAEDM,EAA6B,CACtCv1B,KAAM,uBACNqB,KAAM,YACNgZ,KAAM,CAAC,cACP4a,UAAU,GAEP,SAASO,EAAeC,EAAQC,EAAYC,GAC/C,MAAO,CACHR,aAAeS,IACXA,EAAa1R,ICjBa,EAAC5gB,EAASqyB,IAAiB,CAACr0B,EAAMu0B,IAAYvB,MAAOxI,IACvF,MAAM,SAAE1Z,SAAmB9Q,EAAKwqB,GAChC,IAEI,MAAO,CACH1Z,WACAhD,aAHiBumB,EAAavjB,EAAU9O,GAWhD,CALA,MAAOjB,GAIH,MAHAvE,OAAOO,eAAegE,EAAO,YAAa,CACtC3D,MAAO0T,IAEL/P,CACV,GDGyByzB,CAAuBL,EAAQE,GAAeL,GAC/DM,EAAa1R,IElBW,EAAC5gB,EAASoyB,IAAe,CAACp0B,EAAMu0B,IAAYvB,MAAOxI,IACnF,MAAMiK,EAAWF,EAAQG,YAAYC,KAAO3yB,EAAQ4yB,UAC9C5B,SAAYhxB,EAAQ4yB,UAAUL,EAAQG,WAAWC,KACjD3yB,EAAQyyB,SACd,IAAKA,EACD,MAAM,IAAIryB,MAAM,yCAEpB,MAAMqN,QAAgB2kB,EAAW5J,EAAKrnB,MAAO,IAAKnB,EAASyyB,aAC3D,OAAOz0B,EAAK,IACLwqB,EACH/a,WACF,EFOuBolB,CAAqBV,EAAQC,GAAaH,EAA2B,EAGlG,CGrBO,MAsBDa,EAAiB,uCACjBC,EAAqB,gBACrBC,EAAe,OAGRC,EAA6BC,GAAeJ,EAAe1J,KAAK8J,KAAgBH,EAAmB3J,KAAK8J,KAAgBF,EAAa5J,KAAK8J,GAC1IC,EAAmBD,IAC5B,MAAOE,EAAKC,EAAWC,EAAS3C,EAAQ4C,EAASC,GAAYN,EAAWnyB,MAAM,KACxE0yB,EAAgB,QAARL,GAAiBF,EAAWnyB,MAAM,KAAKjE,QAAU,EACzD42B,EAAqF,IAAxE,CAACN,EAAKC,EAAWC,EAASC,EAASC,GAAUxyB,OAAO2yB,SAAS72B,OAChF,GAAI22B,IAAUC,EACV,MAAM,IAAItzB,MAAM,gBAAgB8yB,yBAEpC,SAAe,QAARE,GAAmBC,GAAeC,GAAaC,GAAaC,EAAQ,ECnClEI,EAA4B,CAACC,EAAWC,EAA2B3B,KAC5E,MAAM4B,EAAiB/C,UACnB,MAAMgD,EAAc7B,EAAO0B,IAAc1B,EAAO2B,GAChD,MAA2B,mBAAhBE,EACAA,IAEJA,CAAW,EAEtB,MAAkB,aAAdH,GAA0D,aAA9BC,EACrB9C,UACH,MAAMyB,QAAiBsB,IACvB,GAAItB,GAAgC,iBAAbA,EAAuB,CAC1C,GAAI,QAASA,EACT,OAAOA,EAASE,IAAIhqB,KAExB,GAAI,aAAc8pB,EAAU,CACxB,MAAM,SAAErmB,EAAQ,SAAEmD,EAAQ,KAAE0B,EAAI,KAAEnR,GAAS2yB,EAC3C,MAAO,GAAGrmB,MAAamD,IAAW0B,EAAO,IAAMA,EAAO,KAAKnR,GAC/D,CACJ,CACA,OAAO2yB,CAAQ,EAGhBsB,CAAc,ECbZE,EAAgBjD,MAAOkD,EAAcC,EAAsBC,KACpE,MAAMC,EAAiB,CAAC,EAClBC,EAAeH,GAAsBI,sCAAwC,CAAC,EACpF,IAAK,MAAO73B,EAAM83B,KAAgBh6B,OAAOqL,QAAQyuB,GAC7C,OAAQE,EAAY1E,MAChB,IAAK,sBACDuE,EAAe33B,GAAQ83B,EAAYp5B,MACnC,MACJ,IAAK,gBACDi5B,EAAe33B,GAAQw3B,EAAaM,EAAY93B,MAChD,MACJ,IAAK,sBACL,IAAK,gBACD23B,EAAe33B,SAAck3B,EAA0BY,EAAY93B,KAAMA,EAAM03B,EAAlDR,GAC7B,MACJ,QACI,MAAM,IAAIxzB,MAAM,gDAAkDyI,KAAK1C,UAAUquB,IAS7F,OANyC,IAArCh6B,OAAOqC,KAAKy3B,GAAcx3B,QAC1BtC,OAAOmM,OAAO0tB,EAAgBD,GAEmB,OAAjDxrB,OAAOwrB,EAAaK,WAAWjlB,oBFhCLwhB,OAAOqD,IACrC,MAAMK,EAASL,GAAgBM,QAAU,GAIzC,GAHqC,iBAA1BN,EAAeM,SACtBN,EAAeM,OAASD,EAAOt3B,QAAQ,KAAMiH,mBAAmB,MAAMjH,QAAQ,MAAOiH,mBAAmB,OAExG8uB,EAAgBuB,IAChB,IAAsC,IAAlCL,EAAeO,eACf,MAAM,IAAIx0B,MAAM,+DAGd6yB,EAA0ByB,KACN,IAAzBA,EAAO3c,QAAQ,OAAgBnP,OAAOyrB,EAAeQ,UAAUtZ,WAAW,UAC3EmZ,EAAOllB,gBAAkBklB,GACzBA,EAAO53B,OAAS,KAChBu3B,EAAeO,gBAAiB,GAMpC,OAJIP,EAAeS,iCACfT,EAAeU,gCAAiC,EAChDV,EAAeW,aAAc,GAE1BX,CAAc,EEaXY,CAAmBZ,GAEtBA,CAAc,EClCZa,EAAqB,EAAG/C,SAAQmC,kBAClC,CAACt2B,EAAMu0B,IAAYvB,MAAOxI,IAC7B,MAAMiK,ODD6BzB,OAAOkD,EAAcC,EAAsBC,EAAc7B,KAChG,MAAM8B,QAAuBJ,EAAcC,EAAcC,EAAsBC,GAC/E,GAA6C,mBAAlCA,EAAae,iBACpB,MAAM,IAAI/0B,MAAM,uCAGpB,OADiBg0B,EAAae,iBAAiBd,EAAgB9B,EAChD,ECLY6C,CAA4B5M,EAAKrnB,MAAO,CAC3DozB,iCAAgC,IACrBD,GAEZ,IAAKnC,GAAUI,GAClBA,EAAQG,WAAaD,EACrBF,EAAQ8C,YAAc5C,EAASx2B,YAAYo5B,YAC3C,MAAMC,EAAa/C,EAAQ8C,cAAc,GAKzC,OAJIC,IACA/C,EAAwB,eAAI+C,EAAWC,cACvChD,EAAyB,gBAAI+C,EAAWE,aAErCx3B,EAAK,IACLwqB,GACL,ECfGiN,EAA4B,CACrC13B,KAAM,YACNgZ,KAAM,CAAC,sBAAuB,cAAe,YAC7Cra,KAAM,uBACNi1B,UAAU,EACV+D,SAAU,SACVC,aAAc1D,EAA2Bv1B,MAEhCk5B,EAAoB,CAACzD,EAAQmC,KAAiB,CACvDzC,aAAeC,IACXA,EAAY+D,cAAcX,EAAmB,CACzC/C,SACAmC,iBACAmB,EAA0B,ICfzB,EAAqBt0B,IAC9B,GAAqB,mBAAVA,EACP,OAAOA,EACX,MAAM20B,EAAcn4B,QAAQC,QAAQuD,GACpC,MAAO,IAAM20B,CAAW,ECHrB,MAAMC,EAAYpD,IACrB,GAAmB,iBAARA,EACP,OAAOoD,EAAS,IAAIjrB,IAAI6nB,IAE5B,MAAM,SAAEpjB,EAAQ,SAAE4B,EAAQ,KAAEF,EAAI,SAAE7E,EAAQ,OAAEgF,GAAWuhB,EACvD,IAAIzB,EAIJ,OAHI9f,IACA8f,ECRD,SAA0B8E,GAC7B,MAAM9E,EAAQ,CAAC,EAEf,GADA8E,EAAcA,EAAY54B,QAAQ,MAAO,IAErC,IAAK,MAAM64B,KAAQD,EAAYj1B,MAAM,KAAM,CACvC,IAAK/D,EAAK5B,EAAQ,MAAQ66B,EAAKl1B,MAAM,KACrC/D,EAAMk5B,mBAAmBl5B,GACrB5B,IACAA,EAAQ86B,mBAAmB96B,IAEzB4B,KAAOk0B,EAGJxV,MAAMC,QAAQuV,EAAMl0B,IACzBk0B,EAAMl0B,GAAK6W,KAAKzY,GAGhB81B,EAAMl0B,GAAO,CAACk0B,EAAMl0B,GAAM5B,GAN1B81B,EAAMl0B,GAAO5B,CAQrB,CAEJ,OAAO81B,CACX,CDdgBiF,CAAiB/kB,IAEtB,CACH7B,WACA0B,KAAMA,EAAOC,SAASD,QAAQnW,EAC9BsR,WACAtM,KAAMqR,EACN+f,QACH,EEdQkF,EAAyBj1B,IAClC,MAAMsoB,EAAMtoB,EAAMsoB,MAAO,GACnB,SAAEgJ,GAAatxB,EACfk1B,EAAqC,MAAZ5D,EAAmBzB,SCJ1B,CAACyB,GACD,iBAAbA,EACH,QAASA,EACFsD,EAAStD,EAASE,KAEtBF,EAEJsD,EAAStD,GDH8C6D,OAAmB,EAAkB7D,EAAlB,SAAiC33B,EAC5Gy7B,IAAqB9D,EAC3B,MAAO,IACAtxB,EACHsxB,SAAU4D,EACV5M,MACA8M,mBACAC,qBAAsB,EAAkBr1B,EAAMq1B,uBAAwB,GACtEzF,gBAAiB,EAAkB5vB,EAAM4vB,kBAAmB,GAC/D,EEdC0F,EAAyB,CAAC,gCAAiC,kCAC3DC,EAA4B,6BAC5BC,EAAWv7B,GAAU,CAAC,QAAS,KAAK2c,QAAQ3c,IAAU,EAC/Cw7B,EAAyC,CAClD5G,4BAA8B/vB,IAC1B,IAAK,IAAIiV,EAAI,EAAGA,EAAIuhB,EAAuB35B,OAAQoY,IAAK,CACpD,MAAM2hB,EAASJ,EAAuBvhB,GACtC,GAAI2hB,KAAU52B,EAAK,CACf,MAAM7E,EAAQ6E,EAAI42B,GAClB,GAAc,KAAVz7B,EACA,MAAMgF,MAAM,wBAAwBy2B,uCAA4Cz7B,MAEpF,OAAQu7B,EAAQv7B,EACpB,CACJ,GAEJ80B,mBAAqBC,IACjB,GAAIuG,KAA6BvG,EAAS,CACtC,MAAM/0B,EAAQ+0B,EAAiC,2BAC/C,QAAcr1B,IAAVM,EACA,MAAMgF,MAAM,2EAA6EhF,MAE7F,OAAQu7B,EAAQv7B,EACpB,GAEJi1B,aAASv1B,G,uBCxBN,MAAMg8B,EACTn6B,YAAYonB,GACRxpB,KAAKwrB,MAAQ,IAAI,IAAJ,CAAahC,EAC9B,CACAgT,YAAY/5B,GACR,MAAMg6B,EAAsBz8B,KAAKU,IAAI+B,GACrC,IAAKg6B,GAAsD,IAA/BA,EAAoBl6B,OAC5C,OAEJ,MAAMm6B,EAAYD,EAAoB91B,KAAKuxB,GAAaA,EAASyE,UACjE,OAAOD,EAAU5pB,KAAK8pB,MAAM9pB,KAAK+f,SAAW6J,EAAUn6B,QAC1D,CACA7B,IAAI+B,GACA,IAAKzC,KAAK2qB,IAAIloB,GACV,OAEJ,MAAM5B,EAAQb,KAAKwrB,MAAM9qB,IAAI+B,GAC7B,IAAK5B,EACD,OAEJ,MAAMmyB,EAAMra,KAAKqa,MACXyJ,EAAsB57B,EAAM4F,QAAQyxB,GAAalF,EAAMkF,EAAS2E,UACtE,GAAmC,IAA/BJ,EAAoBl6B,OAIxB,OAAOk6B,EAHHz8B,KAAK88B,OAAOr6B,EAIpB,CACA6nB,IAAI7nB,EAAKi6B,GACL,MAAM1J,EAAMra,KAAKqa,MACjBhzB,KAAKwrB,MAAMlB,IAAI7nB,EAAKi6B,EAAU/1B,KAAI,EAAGg2B,UAASI,2BAA2B,CACrEJ,UACAE,QAAS7J,EAA6B,GAAvB+J,EAA4B,QAEnD,CACAD,OAAOr6B,GACHzC,KAAKwrB,MAAMlB,IAAI7nB,EAAK,GACxB,CACAkoB,IAAIloB,GACA,IAAKzC,KAAKwrB,MAAMb,IAAIloB,GAChB,OAAO,EAEX,MAAMi6B,EAAY18B,KAAKwrB,MAAMZ,KAAKnoB,GAClC,QAAKi6B,GAGEA,EAAUn6B,OAAS,CAC9B,CACAoJ,QACI3L,KAAKwrB,MAAM7f,OACf,EC/CG,MAcMqxB,EAA8B,CACvC76B,KAAM,uBACNqB,KAAM,QACNy5B,SAAU,MACVzgB,KAAM,CAAC,QACP4a,UAAU,GAED8F,EAAuBz3B,IAAY,CAC5C6xB,aAAeC,IACXA,EAAYlR,IAvBgB,CAAC5gB,GAAahC,GAASgzB,MAAOxI,IAC9D,IAAK,aAAuBA,EAAK/a,SAC7B,OAAOzP,EAAKwqB,GAChB,MAAM,QAAE/a,GAAY+a,GACd,gBAAEkP,EAAkB,IAAO13B,EAAQ23B,eAAeC,UAAY,CAAC,EAQrE,OAPIF,EAAgB3f,QAAQ,OAAS,IAAMtK,EAAQ7D,QAAQ,sBAChD6D,EAAQ7D,QAAc,KAC7B6D,EAAQ7D,QAAQ,cAAgB,IAE1B6D,EAAQ7D,QAAc,OAC5B6D,EAAQ7D,QAAc,KAAI6D,EAAQ8B,UAE/BvR,EAAKwqB,EAAK,EAWGqP,CAAqB73B,GAAUu3B,EAA4B,ICRtEO,EAA0B,CACnCp7B,KAAM,mBACNqa,KAAM,CAAC,UACPhZ,KAAM,aACN4zB,UAAU,GAEDoG,EAAmB/3B,IAAY,CACxC6xB,aAAeC,IACXA,EAAYlR,KA3BkB,CAAC5iB,EAAMu0B,IAAYvB,MAAOxI,IAC5D,MAAM1Z,QAAiB9Q,EAAKwqB,IACtB,WAAEwP,EAAU,YAAEC,EAAW,OAAEC,EAAM,wBAAEC,EAAuB,yBAAEC,EAAwB,8BAAEC,EAAgC,CAAC,GAAO9F,GAC9H,gCAAE+F,EAA+B,iCAAEC,GAAqCF,EAC9E,IAAKH,EACD,OAAOppB,EAEX,GAA2B,mBAAhBopB,EAAOt5B,KAAqB,CACnC,MAAM,UAAE45B,KAAcC,GAA0B3pB,EAAShD,OACzDosB,EAAOt5B,KAAK,CACRo5B,aACAC,cACA92B,OAAQm3B,GAAmCH,GAAyB3P,EAAKrnB,OACzE2K,QAASysB,GAAoCH,GAA0BK,GACvEb,SAAUY,GAElB,CACA,OAAO1pB,CAAQ,GAUyBgpB,EAAwB,IC1B9DY,EAAuB,kBAqBhBC,EAAyC,CAClD56B,KAAM,QACNgZ,KAAM,CAAC,uBACPra,KAAM,+BACNi1B,UAAU,EACV6F,SAAU,OAEDoB,EAA+B54B,IAAY,CACpD6xB,aAAeC,IACXA,EAAYlR,IA3BwB,CAAC5gB,GAAahC,GAASgzB,MAAOxI,IACtE,MAAM,QAAE/a,GAAY+a,EACpB,IAAK,aAAuB/a,IACJ,SAApBzN,EAAQ64B,SACRprB,EAAQ7D,QAAQnO,eAAei9B,GAC/B,OAAO16B,EAAKwqB,GAEhB,MAAMsQ,EAAez8B,QAAQ4D,IAA4B,yBACnD84B,EAAU18B,QAAQ4D,IAAgB,iBAClC+4B,EAAkBnX,GAAuB,iBAARA,GAAoBA,EAAI/kB,OAAS,EAIxE,OAHIk8B,EAAeF,IAAiBE,EAAeD,KAC/CtrB,EAAQ7D,QAAQ8uB,mBAAwBK,GAErC/6B,EAAK,IACLwqB,EACH/a,WACF,EAWkBwrB,CAA6Bj5B,GAAU24B,EAAuC,IC/B/F,IAAI,GACX,SAAWO,GACPA,EAAsB,SAAI,WAC1BA,EAAsB,SAAI,UAC7B,CAHD,CAGG,IAAgB,EAAc,CAAC,IAC3B,MACMC,EAAqB,WCErBC,EAAyB,CAClC,yBACA,wBACA,yBACA,0BACA,yCACA,uBACA,mBACA,4BACA,WACA,qBACA,aACA,sBACA,2BACA,kCAESC,EAAwB,CAAC,aAAc,eAAgB,iBAAkB,2BACzEC,EAA+B,CAAC,IAAK,IAAK,IAAK,KAC/CC,EAA6B,CAAC,aAAc,QAAS,aCvBrD,EAAqBx6B,GAA8C,MAApCA,EAAMy5B,WAAWgB,gBACzDJ,EAAuBh4B,SAASrC,EAAMrC,OACN,GAAhCqC,EAAM06B,YAAYC,WACTC,GAAoB56B,GAAUs6B,EAAsBj4B,SAASrC,EAAMrC,OAC5E68B,EAA2Bn4B,SAASrC,GAAO0H,MAAQ,KACnD6yB,EAA6Bl4B,SAASrC,EAAMy5B,WAAWgB,gBAAkB,GCPtE,MAAM,GACT78B,YAAYqD,GACRzF,KAAKq/B,gBAAkB,EACvBr/B,KAAK+G,SAAU,EACf/G,KAAKs/B,YAAc,EACnBt/B,KAAKu/B,eAAiB,EACtBv/B,KAAKw/B,aAAe,EACpBx/B,KAAKy/B,cAAgB,EACrBz/B,KAAK0/B,WAAa,EAClB1/B,KAAK2/B,KAAOl6B,GAASk6B,MAAQ,GAC7B3/B,KAAK4/B,YAAcn6B,GAASm6B,aAAe,EAC3C5/B,KAAK6/B,YAAcp6B,GAASo6B,aAAe,GAC3C7/B,KAAK8/B,cAAgBr6B,GAASq6B,eAAiB,GAC/C9/B,KAAK+/B,OAASt6B,GAASs6B,QAAU,GACjC,MAAMC,EAAuBhgC,KAAKigC,0BAClCjgC,KAAKkgC,iBAAmBF,EACxBhgC,KAAKmgC,iBAAmBrtB,KAAK8pB,MAAM58B,KAAKigC,2BACxCjgC,KAAKogC,SAAWpgC,KAAK6/B,YACrB7/B,KAAKqgC,YAAcrgC,KAAK4/B,WAC5B,CACAK,0BACI,OAAOtnB,KAAKqa,MAAQ,GACxB,CACAyD,qBACI,OAAOz2B,KAAKsgC,mBAAmB,EACnC,CACA7J,yBAAyB8J,GACrB,GAAKvgC,KAAK+G,QAAV,CAIA,GADA/G,KAAKwgC,oBACDD,EAASvgC,KAAKq/B,gBAAiB,CAC/B,MAAMoB,GAAUF,EAASvgC,KAAKq/B,iBAAmBr/B,KAAKogC,SAAY,UAC5D,IAAIh9B,SAASC,GAAY4S,WAAW5S,EAASo9B,IACvD,CACAzgC,KAAKq/B,gBAAkBr/B,KAAKq/B,gBAAkBkB,CAN9C,CAOJ,CACAC,oBACI,MAAME,EAAY1gC,KAAKigC,0BACvB,IAAKjgC,KAAKy/B,cAEN,YADAz/B,KAAKy/B,cAAgBiB,GAGzB,MAAMC,GAAcD,EAAY1gC,KAAKy/B,eAAiBz/B,KAAKogC,SAC3DpgC,KAAKq/B,gBAAkBvsB,KAAKqF,IAAInY,KAAKqgC,YAAargC,KAAKq/B,gBAAkBsB,GACzE3gC,KAAKy/B,cAAgBiB,CACzB,CACAE,wBAAwBrsB,GACpB,IAAIssB,EAEJ,GADA7gC,KAAK8gC,qBACD,EAAkBvsB,GAAW,CAC7B,MAAMwsB,EAAa/gC,KAAK+G,QAAgC+L,KAAKqF,IAAInY,KAAKu/B,eAAgBv/B,KAAKogC,UAAzDpgC,KAAKu/B,eACvCv/B,KAAKs/B,YAAcyB,EACnB/gC,KAAKghC,sBACLhhC,KAAKkgC,iBAAmBlgC,KAAKigC,0BAC7BY,EAAiB7gC,KAAKihC,cAAcF,GACpC/gC,KAAKkhC,mBACT,MAEIlhC,KAAKghC,sBACLH,EAAiB7gC,KAAKmhC,aAAanhC,KAAKigC,2BAE5C,MAAMmB,EAAUtuB,KAAKqF,IAAI0oB,EAAgB,EAAI7gC,KAAKu/B,gBAClDv/B,KAAKqhC,sBAAsBD,EAC/B,CACAJ,sBACIhhC,KAAK0/B,WAAa1/B,KAAKshC,WAAWxuB,KAAKuF,IAAKrY,KAAKs/B,aAAe,EAAIt/B,KAAK2/B,MAAS3/B,KAAK8/B,cAAe,EAAI,GAC9G,CACAmB,cAAcF,GACV,OAAO/gC,KAAKshC,WAAWP,EAAY/gC,KAAK2/B,KAC5C,CACAwB,aAAaT,GACT,OAAO1gC,KAAKshC,WAAWthC,KAAK8/B,cAAgBhtB,KAAKuF,IAAIqoB,EAAY1gC,KAAKkgC,iBAAmBlgC,KAAK0/B,WAAY,GAAK1/B,KAAKs/B,YACxH,CACA4B,oBACIlhC,KAAK+G,SAAU,CACnB,CACAs6B,sBAAsBD,GAClBphC,KAAKwgC,oBACLxgC,KAAKogC,SAAWttB,KAAKC,IAAIquB,EAASphC,KAAK6/B,aACvC7/B,KAAKqgC,YAAcvtB,KAAKC,IAAIquB,EAASphC,KAAK4/B,aAC1C5/B,KAAKq/B,gBAAkBvsB,KAAKqF,IAAInY,KAAKq/B,gBAAiBr/B,KAAKqgC,YAC/D,CACAS,qBACI,MAAMnjB,EAAI3d,KAAKigC,0BACTsB,EAAazuB,KAAK8pB,MAAU,EAAJjf,GAAS,EAEvC,GADA3d,KAAKw/B,eACD+B,EAAavhC,KAAKmgC,iBAAkB,CACpC,MAAMqB,EAAcxhC,KAAKw/B,cAAgB+B,EAAavhC,KAAKmgC,kBAC3DngC,KAAKu/B,eAAiBv/B,KAAKshC,WAAWE,EAAcxhC,KAAK+/B,OAAS//B,KAAKu/B,gBAAkB,EAAIv/B,KAAK+/B,SAClG//B,KAAKw/B,aAAe,EACpBx/B,KAAKmgC,iBAAmBoB,CAC5B,CACJ,CACAD,WAAWrS,GACP,OAAOV,WAAWU,EAAIwS,QAAQ,GAClC,ECjGG,MCEMC,GAAuB,CAACC,EAAoBC,EAAmBC,EAAmBp8B,KAC3F,MAAMq8B,EAAeH,EACfI,EAAYt8B,GAASs8B,WDAL,ECChBC,EAAmBv8B,GAASu8B,kBDAJ,GCCxBC,EAAuBx8B,GAASw8B,sBCLI,MAC1C,IAAIC,EFFgC,IESpC,MAAO,CACHC,wBAP6BC,GACtBtvB,KAAK8pB,MAAM9pB,KAAKqF,IFHI,IEGqBrF,KAAK+f,SAAW,GAAKuP,EAAWF,IAOhFG,aALkB5B,IAClByB,EAAYzB,CAAK,EAKpB,EDN6D6B,GAC9D,IAEIC,EAFAC,EAAoBb,EACpBc,EAAa3vB,KAAKqF,IDPS,ICOgBypB,GAE3Cc,EAAab,GAAqB,EACtC,MAAMc,EAAqBC,GAA6B,cAAdA,EAA4BZ,EAAmBD,EAInFc,EAAkBD,GAAcD,EAAkBC,IAAcJ,EA0BtE,MAAO,CACHM,cA9BkB,IAAMJ,EA+BxBK,cA9BkB,IAAMN,EA+BxBO,iBA9BqB,IAAMT,EA+B3BM,iBACAI,mBA9BwBC,IACxB,MAAMN,EAAYM,EAAUN,UAC5B,IAAKC,EAAeD,GAChB,MAAM,IAAI/8B,MAAM,4BAEpB,MAAMs9B,EAAiBR,EAAkBC,GACnCV,EAA0B,eAAdU,EDpBiB,IAFH,ICuBhCX,EAAqBI,aAAaH,GAClC,MAAMkB,EAAqBnB,EAAqBE,wBAAwBO,GACxE,GAAIQ,EAAUG,eAAgB,CAC1B,MAAMC,EAA0BJ,EAAUG,eAAeE,UAAY5qB,KAAKqa,MAC1EyP,EAAa3vB,KAAKC,IAAIuwB,GAA2B,EAAGF,EACxD,MAEIX,EAAaW,EAKjB,OAHAV,IACAH,EAAgBY,EAChBX,GAAqBW,EACdA,CAAc,EAYrBK,mBAVwBC,IACxBjB,GAAqBiB,GDhCK,ECiC1BjB,EAAoB1vB,KAAKqF,IAAIqqB,EAAmBV,EAAa,EAShE,EE7CE,MAAM,GACT1/B,YAAYshC,GACR1jC,KAAK0jC,oBAAsBA,EAC3B1jC,KAAK2jC,KAAO,WACZ3jC,KAAK4jC,WAAalC,GHJU,IAHI,KGQhC1hC,KAAK0jC,oBAAsBA,CAC/B,CACAjN,+BAA+BoN,GAC3B,OAAO7jC,KAAK4jC,UAChB,CACAnN,gCAAgCqN,EAAcZ,GAC1C,MAAMa,QAAoB/jC,KAAKgkC,iBAC/B,GAAIhkC,KAAKikC,YAAYH,EAAcZ,EAAWa,GAE1C,OADAD,EAAab,mBAAmBC,GACzBY,EAEX,MAAM,IAAIj+B,MAAM,2BACpB,CACAq+B,cAAcj7B,GACVjJ,KAAK4jC,WAAWJ,mBAAmBv6B,EAAM+5B,mBAC7C,CACAvM,uBAEI,IACI,aAAaz2B,KAAK0jC,qBAKtB,CAHA,MAAOl/B,GAEH,OADA2tB,QAAQgS,KAAK,+DPzBW,CO2B5B,CACJ,CACAF,YAAYH,EAAcZ,EAAWa,GAEjC,OADiBD,EAAahB,gBACXiB,GACfD,EAAajB,eAAeK,EAAUN,YACtC5iC,KAAKokC,iBAAiBlB,EAAUN,UACxC,CACAwB,iBAAiBxB,GACb,MAAqB,eAAdA,GAA4C,cAAdA,CACzC,ECvCG,MAAMyB,GACTjiC,YAAYshC,EAAqBj+B,GAC7BzF,KAAK0jC,oBAAsBA,EAC3B1jC,KAAK2jC,KAAO,WACZ,MAAM,YAAEW,GAAgB7+B,GAAW,CAAC,EACpCzF,KAAKskC,YAAcA,GAAe,IAAI,GACtCtkC,KAAKukC,sBAAwB,IAAI,GAAsBb,EAC3D,CACAjN,+BAA+BoN,GAE3B,aADM7jC,KAAKskC,YAAYE,eAChBxkC,KAAKukC,sBAAsBE,yBAAyBZ,EAC/D,CACApN,gCAAgCqN,EAAcZ,GAE1C,OADAljC,KAAKskC,YAAY1D,wBAAwBsC,GAClCljC,KAAKukC,sBAAsBG,0BAA0BZ,EAAcZ,EAC9E,CACAgB,cAAcj7B,GACVjJ,KAAKskC,YAAY1D,wBAAwB,CAAC,GAC1C5gC,KAAKukC,sBAAsBL,cAAcj7B,EAC7C,ECpBG,MAEM07B,GAAkC,CAC3ClP,4BAA8B/vB,IAC1B,MAAM7E,EAAQ6E,EAAoB,iBAClC,IAAK7E,EACD,OACJ,MAAM+jC,EAAajuB,SAAS9V,GAC5B,GAAIuY,OAAOR,MAAMgsB,GACb,MAAM,IAAI/+B,MAAM,gEAAmEhF,MAEvF,OAAO+jC,CAAU,EAErBjP,mBAAqBC,IACjB,MAAM/0B,EAAQ+0B,EAA2B,aACzC,IAAK/0B,EACD,OACJ,MAAM+jC,EAAajuB,SAAS9V,GAC5B,GAAIuY,OAAOR,MAAMgsB,GACb,MAAM,IAAI/+B,MAAM,gEAA0EhF,MAE9F,OAAO+jC,CAAU,EAErB9O,QTpBgC,GSsBvB+O,GAAsBj+B,IAC/B,MAAM,cAAEk+B,GAAkBl+B,EACpBm9B,EAAc,EAAkBn9B,EAAMm9B,aTxBZ,GSyBhC,MAAO,IACAn9B,EACHm9B,cACAe,cAAerO,UACX,GAAIqO,EACA,OAAOA,EAGX,aADwB,EAAkBl+B,EAAMm+B,UAAxB,KACN,WACP,IAAIV,GAAsBN,GAE9B,IAAI,GAAsBA,EAAY,EAEpD,EAIQiB,GAAiC,CAC1CvP,4BAA8B/vB,GAAQA,EAAkB,eACxDiwB,mBAAqBC,GAAYA,EAAyB,WAC1DE,QAAS8I,GClDN,MAAM,GACTx8B,YAAYqD,GACRzF,KAAK0J,WAAajE,EAAQiE,WAC1B1J,KAAKqP,QAAU5J,EAAQ4J,SAAW,CAAC,EACnCrP,KAAK42B,KAAOnxB,EAAQmxB,IACxB,CACApuB,kBAAkB+L,GACd,IAAKA,EACD,OAAO,EACX,MAAM0wB,EAAO1wB,EACb,MAAkC,iBAApB0wB,EAAKv7B,YAAmD,iBAAjBu7B,EAAK51B,OAC9D,E,eCXG,MCyDD61B,GAAqBJ,QAAoE,IAA3CA,EAAcL,+BACX,IAA5CK,EAAcJ,gCACkB,IAAhCI,EAAcZ,cACnBiB,GAAoB3gC,IACtB,MAAM0+B,EAAY,CACdN,UAAWwC,GAAkB5gC,IAE3B6+B,EAAiBgC,GAAkB7gC,EAAM8gC,WAI/C,OAHIjC,IACAH,EAAUG,eAAiBA,GAExBH,CAAS,EAEdkC,GAAqB5gC,GACnB,EAAkBA,GACX,aACP46B,GAAiB56B,GACV,YVjEc,CAACA,IAC1B,QAAwCjE,IAApCiE,EAAMy5B,WAAWgB,eAA8B,CAC/C,MAAMv1B,EAAalF,EAAMy5B,UAAUgB,eACnC,OAAI,KAAOv1B,GAAcA,GAAc,MAAQ01B,GAAiB56B,EAIpE,CACA,OAAO,CAAK,EU0DR+gC,CAAc/gC,GACP,eACJ,eAEEghC,GAAyB,CAClCrjC,KAAM,kBACNqa,KAAM,CAAC,SACPhZ,KAAM,kBACNy5B,SAAU,OACV7F,UAAU,GAEDqO,GAAkBhgC,IAAY,CACvC6xB,aAAeC,IACXA,EAAYlR,IAnFW,CAAC5gB,GAAY,CAAChC,EAAMu0B,IAAYvB,MAAOxI,IAClE,IAAI6W,QAAsBr/B,EAAQq/B,gBAClC,MAAMf,QAAoBt+B,EAAQs+B,cAClC,IAAImB,GAAkBJ,GA8ClB,OAFIA,GAAenB,OACf3L,EAAQlmB,UAAY,IAAKkmB,EAAQlmB,WAAa,GAAK,CAAC,iBAAkBgzB,EAAcnB,QACjFmB,EAAcY,MAAMjiC,EAAMwqB,GA9CC,CAElC,IAAI2V,QAAmBkB,EAAcL,yBAAyBzM,EAAsB,cAChF2N,EAAY,IAAI9/B,MAChBu8B,EAAW,EACXwD,EAAkB,EACtB,MAAM,QAAE1yB,GAAY+a,EAIpB,IAHI,aAAuB/a,KACvBA,EAAQ7D,QRTgB,0BQSgB,aAGxC,IACQ,aAAuB6D,KACvBA,EAAQ7D,QRbE,mBQawB,WAAW+yB,EAAW,UAAU2B,KAEtE,MAAM,SAAExvB,EAAQ,OAAEhD,SAAiB9N,EAAKwqB,GAIxC,OAHA6W,EAAcZ,cAAcN,GAC5BryB,EAAO0sB,UAAUmE,SAAWA,EAAW,EACvC7wB,EAAO0sB,UAAU2H,gBAAkBA,EAC5B,CAAErxB,WAAUhD,SAoBvB,CAlBA,MAAO7N,GACH,MAAMmiC,EAAiBV,GAAiBzhC,GACxCiiC,GD/BWnhC,EC+BYd,aD9BdmC,MACVrB,EACPA,aAAiBvE,OACVA,OAAOmM,OAAO,IAAIvG,MAASrB,GACjB,iBAAVA,EACA,IAAIqB,MAAMrB,GACd,IAAIqB,MAAM,6BAA6BrB,KCyBlC,IACIo/B,QAAmBkB,EAAcJ,0BAA0Bd,EAAYiC,EAS3E,CAPA,MAAOC,GAMH,MALKH,EAAU1H,YACX0H,EAAU1H,UAAY,CAAC,GAE3B0H,EAAU1H,UAAUmE,SAAWA,EAAW,EAC1CuD,EAAU1H,UAAU2H,gBAAkBA,EAChCD,CACV,CACAvD,EAAWwB,EAAWd,gBACtB,MAAMrC,EAAQmD,EAAWb,gBACzB6C,GAAmBnF,QACb,IAAIr9B,SAASC,GAAY4S,WAAW5S,EAASo9B,IACvD,CAER,CDjDsB,IAACj8B,CCuDvB,EAiCoBuhC,CAAgBtgC,GAAU+/B,GAAuB,IAG5DH,GAAqB9wB,IAC9B,IAAK,cAAwBA,GACzB,OACJ,MAAMyxB,EAAuB/lC,OAAOqC,KAAKiS,EAASlF,SAAS42B,MAAMxjC,GAA8B,gBAAtBA,EAAIwS,gBAC7E,IAAK+wB,EACD,OACJ,MAAME,EAAa3xB,EAASlF,QAAQ22B,GAC9BG,EAAoB/sB,OAAO8sB,GACjC,IAAK9sB,OAAOR,MAAMutB,GACd,OAAO,IAAIxtB,KAAyB,IAApBwtB,GAEpB,OADuB,IAAIxtB,KAAKutB,EACX,ECtGlB,MAAME,WAAsBvgC,MAC/BzD,YAAYT,EAAS0kC,GAAc,GAC/Bl1B,MAAMxP,GACN3B,KAAKqmC,YAAcA,EACnBrmC,KAAKmC,KAAO,gBACZlC,OAAOmR,eAAepR,KAAMomC,GAAc/0B,UAC9C,CACA7I,YAAYhE,EAAO6hC,GAAc,GAC7B,OAAOpmC,OAAOmM,OAAO,IAAIpM,KAAKwE,EAAM7C,QAAS0kC,GAAc7hC,EAC/D,ECRG,MAAM8hC,WAAiCF,GAC1ChkC,YAAYT,EAAS0kC,GAAc,GAC/Bl1B,MAAMxP,EAAS0kC,GACfrmC,KAAKqmC,YAAcA,EACnBrmC,KAAKmC,KAAO,2BACZlC,OAAOmR,eAAepR,KAAMsmC,GAAyBj1B,UACzD,ECNG,MAAMk1B,WAA2BH,GACpChkC,YAAYT,EAAS0kC,GAAc,GAC/Bl1B,MAAMxP,EAAS0kC,GACfrmC,KAAKqmC,YAAcA,EACnBrmC,KAAKmC,KAAO,qBACZlC,OAAOmR,eAAepR,KAAMumC,GAAmBl1B,UACnD,ECNG,SAASm1B,MAASC,GACrB,MAAO,KACH,IAAIC,EAAUtjC,QAAQE,OAAO,IAAI8iC,GAAc,0BAC/C,IAAK,MAAMO,KAAYF,EACnBC,EAAUA,EAAQj9B,OAAO8L,IACrB,GAAIA,GAAK8wB,YACL,OAAOM,IAEX,MAAMpxB,CAAG,IAGjB,OAAOmxB,CAAO,CAEtB,CCdO,MCAME,GAAU,CAACD,EAAUE,EAAWC,KACzC,IAAIC,EACAnX,EACAoX,EACAC,GAAa,EACjB,MAAMC,EAAmBzQ,UAChB7G,IACDA,EAAU+W,KAEd,IACII,QAAiBnX,EACjBoX,GAAY,EACZC,GAAa,CAIjB,CAFA,QACIrX,OAAUrvB,CACd,CACA,OAAOwmC,CAAQ,EAEnB,YAAkBxmC,IAAdsmC,EACOpQ,MAAOhxB,IACLuhC,IAAavhC,GAAS0hC,eACvBJ,QAAiBG,KAEdH,GAGRtQ,MAAOhxB,IACLuhC,IAAavhC,GAAS0hC,eACvBJ,QAAiBG,KAEjBD,EACOF,EAEPD,IAAoBA,EAAgBC,IACpCE,GAAa,EACNF,GAEPF,EAAUE,UACJG,IACCH,GAEJA,EACV,EC3CCK,GAAe,CAAC,EAChBC,GAAe,CAAC,EACtB,IAAK,IAAI1sB,EAAI,EAAGA,EAAI,IAAKA,IAAK,CAC1B,IAAI2sB,EAAc3sB,EAAE1Y,SAAS,IAAIgT,cACN,IAAvBqyB,EAAY/kC,SACZ+kC,EAAc,IAAIA,KAEtBF,GAAazsB,GAAK2sB,EAClBD,GAAaC,GAAe3sB,CAChC,CAiBO,SAAS4sB,GAAM3T,GAClB,IAAI4T,EAAM,GACV,IAAK,IAAI7sB,EAAI,EAAGA,EAAIiZ,EAAMne,WAAYkF,IAClC6sB,GAAOJ,GAAaxT,EAAMjZ,IAE9B,OAAO6sB,CACX,CChCO,MAEMC,GAAuB,aAGvBC,GAAwB,kBACxBC,GAAoB,uBAEpBC,GAAc,gBACdC,GAAkBJ,GAAqBxyB,cAEvC6yB,GAAoB,CAACF,GAAaC,GADpB,QAEdE,GAAmBL,GAAsBzyB,cACzC+yB,GAAgB,uBAChBC,GAAeN,GAAkB1yB,cAEjCizB,GAA4B,CACrCC,eAAe,EACf,iBAAiB,EACjBC,YAAY,EACZC,QAAQ,EACR94B,MAAM,EACN,cAAc,EACd,gBAAgB,EAChB+4B,QAAQ,EACRC,SAAS,EACTC,IAAI,EACJC,SAAS,EACT,qBAAqB,EACrB/W,SAAS,EACT,cAAc,EACd,mBAAmB,GAEVgX,GAAuB,UACvBC,GAAqB,QAErBC,GAAuB,mBAEvBC,GAA6B,2BAG7BC,GAAsB,eCvC7BC,GAAkB,CAAC,EACnBC,GAAa,GACNC,GAAc,CAACC,EAAW9S,EAAQ2C,IAAY,GAAGmQ,KAAa9S,KAAU2C,iBAuB/EoQ,GAAO,CAACC,EAAMhjC,EAAQ8G,KACxB,MAAMm8B,EAAO,IAAID,EAAKhjC,GAEtB,OADAijC,EAAKpV,OAAO/mB,GACLm8B,EAAKnV,QAAQ,EC7BXoV,GAAsB,EAAGj6B,WAAWk6B,EAAmBC,KAChE,MAAMC,EAAY,CAAC,EACnB,IAAK,MAAMC,KAAczpC,OAAOqC,KAAK+M,GAASs6B,OAAQ,CAClD,GAA2BppC,MAAvB8O,EAAQq6B,GACR,SAEJ,MAAME,EAAsBF,EAAWz0B,eACnC20B,KAAuB1B,IACvBqB,GAAmB5e,IAAIif,IACvBlB,GAAqB7Z,KAAK+a,IAC1BjB,GAAmB9Z,KAAK+a,OACnBJ,GAAoBA,IAAoBA,EAAgB7e,IAAIif,MAIrEH,EAAUG,GAAuBv6B,EAAQq6B,GAAY3jC,OAAOlD,QAAQ,OAAQ,KAChF,CACA,OAAO4mC,CAAS,EClBPI,GAAaC,GAAQhgC,mBAAmBggC,GAAKjnC,QAAQ,WAAYknC,IACxEA,GAAahxB,GAAM,IAAIA,EAAE8a,WAAW,GAAG5xB,SAAS,IAAI0D,gBCD7CqkC,GAAiBC,GAAgC,mBAAhBzc,aAA8Byc,aAAezc,aAC/C,yBAAxCvtB,OAAOoR,UAAUpP,SAASd,KAAK8oC,GCEtBC,GAAiBzT,OAASpnB,UAASunB,QAAQuT,KACpD,IAAK,MAAMT,KAAczpC,OAAOqC,KAAK+M,GACjC,GAAIq6B,EAAWz0B,gBAAkB+yB,GAC7B,OAAO34B,EAAQq6B,GAGvB,GAAYnpC,MAARq2B,EACA,MAAO,mEAEN,GAAoB,iBAATA,GAAqBpJ,YAAYC,OAAOmJ,IAASoT,GAAcpT,GAAO,CAClF,MAAMwT,EAAW,IAAID,EAErB,OADAC,EAASnW,OAAO2C,GACT2Q,SAAY6C,EAASlW,SAChC,CACA,MLsB4B,kBKtBL,ECjBdmW,GAAe,EAAGh7B,UAASsnB,WAAU2T,MAAW,IACtDA,EACHj7B,QAAS,IAAKA,GACdsnB,MAAOA,EAAQ,GAAWA,QAASp2B,IAE1B,GAAco2B,GAAU12B,OAAOqC,KAAKq0B,GAAO7d,QAAO,CAACie,EAAOC,KACnE,MAAMC,EAAQN,EAAMK,GACpB,MAAO,IACAD,EACH,CAACC,GAAY7V,MAAMC,QAAQ6V,GAAS,IAAIA,GAASA,EACpD,GACF,CAAC,GCTS7nB,GAAkB8D,IAC3BA,EAAmC,mBAAlBA,EAAQ2jB,MAAuB3jB,EAAQ2jB,QAAUwT,GAAan3B,GAC/E,IAAK,MAAMw2B,KAAczpC,OAAOqC,KAAK4Q,EAAQ7D,SACrCy4B,GAAkBtqB,QAAQksB,EAAWz0B,gBAAkB,UAChD/B,EAAQ7D,QAAQq6B,GAG/B,OAAOx2B,CAAO,ECNLq3B,GAAUC,GACC,iBAATA,EACA,IAAI7xB,KAAY,IAAP6xB,GAEA,iBAATA,EACHpxB,OAAOoxB,GACA,IAAI7xB,KAAoB,IAAfS,OAAOoxB,IAEpB,IAAI7xB,KAAK6xB,GAEbA,ECFJ,MAAM,GACTpoC,aAAY,cAAEqoC,EAAa,YAAEC,EAAW,OAAEtU,EAAM,QAAE2C,EAAO,OAAE4R,EAAM,cAAEC,GAAgB,IAC/E5qC,KAAK+4B,QAAUA,EACf/4B,KAAK2qC,OAASA,EACd3qC,KAAK4qC,cAAgBA,EACrB5qC,KAAKyqC,cAAyC,kBAAlBA,GAA8BA,EAC1DzqC,KAAK6qC,eAAiB,EAAkBzU,GACxCp2B,KAAK8qC,mBAAqB,EAAkBJ,EAChD,CACAjU,cAAcsU,EAAiBtlC,EAAU,CAAC,GACtC,MAAM,YAAEulC,EAAc,IAAIryB,KAAM,UAAEsyB,EAAY,KAAI,kBAAE1B,EAAiB,mBAAE2B,EAAkB,gBAAE1B,EAAe,cAAExO,EAAa,eAAEmQ,GAAoB1lC,EACzIilC,QAAoB1qC,KAAK8qC,qBAC/B9qC,KAAKorC,4BAA4BV,GACjC,MAAMtU,EAAS4E,SAAwBh7B,KAAK6qC,kBACtC,SAAEQ,EAAQ,UAAEnC,GAAcoC,GAAWN,GAC3C,GAAIC,ETgBqB,OSfrB,OAAO7nC,QAAQE,OAAO,oGAE1B,MAAMwnB,EAAQme,GAAYC,EAAW9S,EAAQ+U,GAAkBnrC,KAAK+4B,SAC9D7lB,EC7BoB,EAACA,EAASzN,EAAU,CAAC,KACnD,MAAM,QAAE4J,EAAO,MAAEsnB,EAAQ,CAAC,GAA+B,mBAAlBzjB,EAAQ2jB,MAAuB3jB,EAAQ2jB,QAAUwT,GAAan3B,GACrG,IAAK,MAAM/Q,KAAQlC,OAAOqC,KAAK+M,GAAU,CACrC,MAAMk8B,EAAQppC,EAAK8S,cACO,WAAtBs2B,EAAMtZ,MAAM,EAAG,IAAoBxsB,EAAQylC,oBAAoBvgB,IAAI4gB,KACnE5U,EAAMx0B,GAAQkN,EAAQlN,UACfkN,EAAQlN,GAEvB,CACA,MAAO,IACA+Q,EACH7D,UACAsnB,QACH,EDgBmB6U,CAAmBp8B,GAAe27B,GAAkB,CAAEG,uBAClER,EAAYe,eACZv4B,EAAQyjB,MAAMgR,IAAqB+C,EAAYe,cAEnDv4B,EAAQyjB,MTlCqB,mBSkCUiS,GACvC11B,EAAQyjB,MTlCsB,oBSkCU,GAAG+T,EAAYgB,eAAe5gB,IACtE5X,EAAQyjB,MAAM8Q,cAAwB4D,EACtCn4B,EAAQyjB,MTjCmB,iBSiCUsU,EAAUhpC,SAAS,IACxD,MAAM0pC,EAAmBrC,GAAoBp2B,EAASq2B,EAAmBC,GAGzE,OAFAt2B,EAAQyjB,MTpC0B,uBSoCUiV,GAAuBD,GACnEz4B,EAAQyjB,MAAM+Q,yBAA+B1nC,KAAK6rC,aAAaR,EAAUvgB,EAAO9qB,KAAK8rC,cAAcpB,EAAatU,EAAQ8S,EAAWiC,GAAiBnrC,KAAK+rC,uBAAuB74B,EAASy4B,QAAwBzB,GAAea,EAAiB/qC,KAAK2qC,UAC/Oz3B,CACX,CACAujB,WAAWuV,EAAQvmC,GACf,MAAsB,iBAAXumC,EACAhsC,KAAKisC,WAAWD,EAAQvmC,GAE1BumC,EAAO38B,SAAW28B,EAAOE,QACvBlsC,KAAKmsC,UAAUH,EAAQvmC,GAGvBzF,KAAKosC,YAAYJ,EAAQvmC,EAExC,CACAgxB,iBAAgB,QAAEpnB,EAAO,QAAE68B,IAAW,YAAElB,EAAc,IAAIryB,KAAM,eAAE0zB,EAAc,cAAErR,EAAa,eAAEmQ,IAC7F,MAAM/U,EAAS4E,SAAwBh7B,KAAK6qC,kBACtC,UAAE3B,EAAS,SAAEmC,GAAaC,GAAWN,GACrClgB,EAAQme,GAAYC,EAAW9S,EAAQ+U,GAAkBnrC,KAAK+4B,SAC9DuT,QAAsBpC,GAAe,CAAE76B,QAAS,CAAC,EAAGunB,KAAMsV,GAAWlsC,KAAK2qC,QAC1EtB,EAAO,IAAIrpC,KAAK2qC,OACtBtB,EAAKpV,OAAO5kB,GACZ,MAAMk9B,EAAgBhF,SAAY8B,EAAKnV,UACjCsY,EAAe,CACjB3D,GACAwC,EACAvgB,EACAuhB,EACAE,EACAD,GACF/gC,KAAK,MACP,OAAOvL,KAAKisC,WAAWO,EAAc,CAAExB,cAAahQ,cAAe5E,EAAQ+U,kBAC/E,CACA1U,iBAAiB+V,GAAc,YAAExB,EAAc,IAAIryB,KAAM,cAAEqiB,EAAa,eAAEmQ,GAAmB,CAAC,GAC1F,MAAMT,QAAoB1qC,KAAK8qC,qBAC/B9qC,KAAKorC,4BAA4BV,GACjC,MAAMtU,EAAS4E,SAAwBh7B,KAAK6qC,kBACtC,UAAE3B,GAAcoC,GAAWN,GAC3B3B,EAAO,IAAIrpC,KAAK2qC,aAAa3qC,KAAK8rC,cAAcpB,EAAatU,EAAQ8S,EAAWiC,IAEtF,OADA9B,EAAKpV,OAAOuY,GACLjF,SAAY8B,EAAKnV,SAC5B,CACAuC,kBAAkBgW,GAAe,YAAEzB,EAAc,IAAIryB,KAAM,gBAAE6wB,EAAe,kBAAED,EAAiB,cAAEvO,EAAa,eAAEmQ,GAAoB,CAAC,GACjI,MAAMT,QAAoB1qC,KAAK8qC,qBAC/B9qC,KAAKorC,4BAA4BV,GACjC,MAAMtU,EAAS4E,SAAwBh7B,KAAK6qC,iBACtC33B,EAAU9D,GAAeq9B,IACzB,SAAEpB,EAAQ,UAAEnC,GAAcoC,GAAWN,GACrClgB,EAAQme,GAAYC,EAAW9S,EAAQ+U,GAAkBnrC,KAAK+4B,SACpE7lB,EAAQ7D,QAAQw4B,IAAmBwD,EAC/BX,EAAYe,eACZv4B,EAAQ7D,QAAQ44B,IAAgByC,EAAYe,cAEhD,MAAMiB,QAAoBxC,GAAeh3B,EAASlT,KAAK2qC,SE5FtC,EAACgC,EAAct9B,KACpCs9B,EAAeA,EAAa13B,cAC5B,IAAK,MAAMy0B,KAAczpC,OAAOqC,KAAK+M,GACjC,GAAIs9B,IAAiBjD,EAAWz0B,cAC5B,OAAO,EAGf,OAAO,CAAK,EFsFH23B,CAAU5E,GAAe90B,EAAQ7D,UAAYrP,KAAKyqC,gBACnDv3B,EAAQ7D,QAAQ24B,IAAiB0E,GAErC,MAAMf,EAAmBrC,GAAoBp2B,EAASq2B,EAAmBC,GACnEqD,QAAkB7sC,KAAK6rC,aAAaR,EAAUvgB,EAAO9qB,KAAK8rC,cAAcpB,EAAatU,EAAQ8S,EAAWiC,GAAiBnrC,KAAK+rC,uBAAuB74B,EAASy4B,EAAkBe,IAMtL,OALAx5B,EAAQ7D,QAAQu4B,IAER,+BAAc8C,EAAYgB,eAAe5gB,oBACxB8gB,GAAuBD,iBAC3BkB,IACd35B,CACX,CACA64B,uBAAuB74B,EAASy4B,EAAkBe,GAC9C,MAAMI,EAAgB7sC,OAAOqC,KAAKqpC,GAAkBhC,OACpD,MAAO,GAAGz2B,EAAQoD,WACxBtW,KAAK+sC,iBAAiB75B,OG1GS,GAAGyjB,QAAQ,CAAC,MACzC,MAAMr0B,EAAO,GACP0qC,EAAa,CAAC,EACpB,IAAK,MAAMvqC,KAAOxC,OAAOqC,KAAKq0B,GAAOgT,OAAQ,CACzC,GAAIlnC,EAAIwS,gBAAkB8yB,GACtB,SAEJzlC,EAAKgX,KAAK7W,GACV,MAAM5B,EAAQ81B,EAAMl0B,GACC,iBAAV5B,EACPmsC,EAAWvqC,GAAO,GAAGonC,GAAUpnC,MAAQonC,GAAUhpC,KAE5CsgB,MAAMC,QAAQvgB,KACnBmsC,EAAWvqC,GAAO5B,EACboxB,MAAM,GACN0X,OACA7wB,QAAO,CAACm0B,EAASpsC,IAAUosC,EAAQt7B,OAAO,CAAC,GAAGk4B,GAAUpnC,MAAQonC,GAAUhpC,QAAY,IACtF0K,KAAK,KAElB,CACA,OAAOjJ,EACFqE,KAAKlE,GAAQuqC,EAAWvqC,KACxBgE,QAAQumC,GAAeA,IACvBzhC,KAAK,IAAI,EHoFhB2hC,CAAkBh6B,OAClB45B,EAAcnmC,KAAKxE,GAAS,GAAGA,KAAQwpC,EAAiBxpC,OAASoJ,KAAK,YAEtEuhC,EAAcvhC,KAAK,SACnBmhC,GACE,CACAjW,yBAAyB4U,EAAU8B,EAAiBC,GAChD,MAAM/D,EAAO,IAAIrpC,KAAK2qC,OACtBtB,EAAKpV,OAAOmZ,GAEZ,MAAO,qBACb/B,MACA8B,MACA5F,SAJkC8B,EAAKnV,WAKrC,CACA6Y,kBAAiB,KAAExnC,IACf,GAAIvF,KAAK4qC,cAAe,CACpB,MAAMyC,EAAyB,GAC/B,IAAK,MAAMC,KAAe/nC,EAAKiB,MAAM,KACL,IAAxB8mC,GAAa/qC,QAEG,MAAhB+qC,IAEgB,OAAhBA,EACAD,EAAuB/vB,MAGvB+vB,EAAuB/zB,KAAKg0B,IAGpC,MAAMC,EAAiB,GAAGhoC,GAAMyb,WAAW,KAAO,IAAM,KAAKqsB,EAAuB9hC,KAAK,OAAO8hC,EAAuB9qC,OAAS,GAAKgD,GAAM8wB,SAAS,KAAO,IAAM,KAEjK,OADsBvsB,mBAAmByjC,GACpB1qC,QAAQ,OAAQ,IACzC,CACA,OAAO0C,CACX,CACAkxB,mBAAmB4U,EAAU8B,EAAiBK,EAAYJ,GACtD,MAAMZ,QAAqBxsC,KAAKytC,mBAAmBpC,EAAU8B,EAAiBC,GACxE/D,EAAO,IAAIrpC,KAAK2qC,aAAa6C,GAEnC,OADAnE,EAAKpV,OAAOuY,GACLjF,SAAY8B,EAAKnV,SAC5B,CACA4X,cAAcpB,EAAatU,EAAQ8S,EAAWnQ,GAC1C,MRnJqBtC,OAAOiX,EAAmBhD,EAAaxB,EAAW9S,EAAQ2C,KACnF,MACM4U,EAAW,GAAGzE,KAAa9S,KAAU2C,KAAWwO,SAD9B4B,GAAKuE,EAAmBhD,EAAYkD,gBAAiBlD,EAAYgB,iBACfhB,EAAYe,eACtF,GAAIkC,KAAY5E,GACZ,OAAOA,GAAgB4E,GAG3B,IADA3E,GAAW1vB,KAAKq0B,GACT3E,GAAWzmC,OD4BQ,WC3BfwmC,GAAgBC,GAAWjX,SAEtC,IAAItvB,EAAM,OAAOioC,EAAYkD,kBAC7B,IAAK,MAAMC,IAAY,CAAC3E,EAAW9S,EAAQ2C,EAAS+P,IAChDrmC,QAAY0mC,GAAKuE,EAAmBjrC,EAAKorC,GAE7C,OAAQ9E,GAAgB4E,GAAYlrC,CAAI,EQqI7BqpC,CAAc9rC,KAAK2qC,OAAQD,EAAaxB,EAAW9S,EAAQ2C,GAAW/4B,KAAK+4B,QACtF,CACAqS,4BAA4BV,GACxB,GAA2B,iBAAhBA,GAC4B,iBAA5BA,EAAYgB,aACoB,iBAAhChB,EAAYkD,gBACnB,MAAM,IAAI/nC,MAAM,0CAExB,EAEJ,MAAMylC,GAActY,IAChB,MAAMqY,GDnKcb,ECmKKxX,EDnKIuX,GAAOC,GACnCsD,cACAjrC,QAAQ,YAAa,MCiKQA,QAAQ,SAAU,IDnK7B,IAAC2nC,ECoKpB,MAAO,CACHa,WACAnC,UAAWmC,EAASpZ,MAAM,EAAG,GAChC,EAEC2Z,GAA0Bv8B,GAAYpP,OAAOqC,KAAK+M,GAASs6B,OAAOp+B,KAAK,KIrKhEwiC,GAAwBnnC,IACjC,MAAMonC,EAAkBpnC,EAAM8jC,YACxBuD,GAA4BrnC,EAAM8jC,aAClC9jC,EAAMsnC,0BAA0BtnC,IAChC,kBAAEunC,GAAoB,EAAI,kBAAEC,EAAoBxnC,EAAMwnC,mBAAqB,EAAC,OAAEzD,GAAW/jC,EAC/F,IAAIynC,EAqDJ,OAnDIA,EADAznC,EAAMynC,OACG,EAAkBznC,EAAMynC,QAE5BznC,EAAM0nC,mBACF,IAAM,EAAkB1nC,EAAMwvB,OAAxB,GACVvyB,MAAK4yB,MAAOL,GAAW,OACjBxvB,EAAM0nC,mBAAmBlY,EAAQ,CACpCI,sBAAuB5vB,EAAM4vB,kBAC7ByF,2BAA4Br1B,EAAMq1B,0BAC/B,CAAC,EACR7F,KAECvyB,MAAK,EAAE0qC,EAAYnY,MACpB,MAAM,cAAE4E,EAAa,eAAEmQ,GAAmBoD,EAC1C3nC,EAAMo0B,cAAgBp0B,EAAMo0B,eAAiBA,GAAiB5E,EAC9DxvB,EAAMq0B,YAAcr0B,EAAMq0B,aAAekQ,GAAkBvkC,EAAMszB,UACjE,MAAMsU,EAAS,IACR5nC,EACH8jC,YAAasD,EACb5X,OAAQxvB,EAAMo0B,cACdjC,QAASnyB,EAAMq0B,YACf0P,SACAC,cAAeuD,GAGnB,OAAO,IADYvnC,EAAM6nC,mBAAqB,IACxBD,EAAO,IAIxB/X,MAAOsE,IAOZ,MAAMC,GANND,EAAa96B,OAAOmM,OAAO,CAAC,EAAG,CAC3BjK,KAAM,QACN84B,YAAar0B,EAAMq0B,aAAer0B,EAAM8nC,mBACxC1T,oBAAqB,EAAkBp0B,EAAMwvB,OAAxB,GACrB10B,WAAY,CAAC,GACdq5B,IAC8BC,cAC3BmQ,EAAiBpQ,EAAWE,YAClCr0B,EAAMo0B,cAAgBp0B,EAAMo0B,eAAiBA,EAC7Cp0B,EAAMq0B,YAAcr0B,EAAMq0B,aAAekQ,GAAkBvkC,EAAMszB,UACjE,MAAMsU,EAAS,IACR5nC,EACH8jC,YAAasD,EACb5X,OAAQxvB,EAAMo0B,cACdjC,QAASnyB,EAAMq0B,YACf0P,SACAC,cAAeuD,GAGnB,OAAO,IADYvnC,EAAM6nC,mBAAqB,IACxBD,EAAO,EAG9B,IACA5nC,EACHwnC,oBACAD,oBACAzD,YAAasD,EACbK,SACH,EA4BCJ,GAA+BvD,GACN,mBAAhBA,EACA9D,GAAQ8D,GAAcA,QAA2CnqC,IAA3BmqC,EAAYiE,YACrDjE,EAAYiE,WAAWpL,UAAY5qB,KAAKqa,MAhGnB,MAgGsD0X,QAA2CnqC,IAA3BmqC,EAAYiE,aAExG,EAAkBjE,GCrGhBkE,GAAwBR,GAAsB,IAAIz1B,KAAKA,KAAKqa,MAAQob,GCCpES,GAA8B,CAACC,EAAWC,KACnD,MAAMC,EAAgBr2B,KAAKF,MAAMq2B,GACjC,MCFyB,EAACA,EAAWV,IAAsBt7B,KAAKm8B,IAAIL,GAAqBR,GAAmB7K,UAAYuL,IAAc,IDElII,CAAcF,EAAeD,GACtBC,EAAgBr2B,KAAKqa,MAEzB+b,CAAwB,EEuB7BI,GAAiB56B,GAAa,cAAwBA,GAAYA,EAASlF,SAAS+/B,MAAQ76B,EAASlF,SAASsJ,UAAOpY,EAC9G8uC,GAA2B,CACpCltC,KAAM,oBACNqa,KAAM,CAAC,YAAa,WACpB2e,SAAU,QACVC,aAAc,kBACdhE,UAAU,GAEDkY,GAAoB7pC,IAAY,CACzC6xB,aAAeC,IACXA,EAAY+D,cApCa,CAAC71B,GAAY,CAAChC,EAAMu0B,IAAYvB,eAAgBxI,GAC7E,IAAK,aAAuBA,EAAK/a,SAC7B,OAAOzP,EAAKwqB,GAChB,MAAM8M,EAAa/C,EAAQG,YAAYz2B,YAAYo5B,cAAc,GAC3DyU,EAA2C,WAArBxU,GAAY54B,KAAoB44B,GAAYyU,kBAAkBjkC,KAAK,UAAOhL,EAChG8tC,QAAe5oC,EAAQ4oC,OAAOtT,GAC9BxpB,QAAe9N,EAAK,IACnBwqB,EACH/a,cAAem7B,EAAOrhB,KAAKiB,EAAK/a,QAAS,CACrC83B,YAAa4D,GAAqBnpC,EAAQ2oC,mBAC1CpT,cAAeuU,GAAuBvX,EAAwB,eAC9DmT,eAAgBnT,EAAyB,oBAE9CvuB,OAAOjF,IACN,MAAMirC,EAAajrC,EAAMkrC,YAAcP,GAAc3qC,EAAM8gC,WAI3D,MAHImK,IACAhqC,EAAQ2oC,kBAAoBS,GAA4BY,EAAYhqC,EAAQ2oC,oBAE1E5pC,CAAK,IAETmrC,EAAaR,GAAc59B,EAAOgD,UAIxC,OAHIo7B,IACAlqC,EAAQ2oC,kBAAoBS,GAA4Bc,EAAYlqC,EAAQ2oC,oBAEzE78B,CACX,EAWkCq+B,CAAkBnqC,GAAU4pC,GAAyB,ICvChF,SAASQ,GAAuBjpC,GACnC,MAAO,IACAA,EACHkpC,gBAAkD,iBAA1BlpC,EAAMkpC,gBAA+B,CAAC,CAAClpC,EAAMkpC,kBAAoBlpC,EAAMkpC,gBAEvG,CCLO,MAAMC,GAAa,aACbC,GAAmB,mBAEnBC,GAAkB,yCC4BzBC,GAAkB,EAAE/tC,EAAMoxB,MAC5B,MAAM4c,EAAuBhuC,EAAKqb,QAAQ,KACpCyH,EAAS9iB,EAAK2a,UAAU,EAAGqzB,GACjC,IAAIC,EAASjuC,EAAK2a,UAAUqzB,EAAuB,GAInD,MAHe,QAAXlrB,IACAmrB,EAASA,EAAOn7B,eAEb,CAACgQ,EAAQmrB,EAAQ7c,GACnB9sB,QAAQiG,GAASA,GAAQA,EAAKnK,OAAS,IACvCoE,KAAK+F,GAASA,GAAM7J,QAAQotC,GAAiB,OAC7C1kC,KAAK,IAAI,EAEL8kC,GAAgC,CACzCluC,KAAM,yBACNqB,KAAM,QACNy5B,SAAU,MACVzgB,KAAM,CAAC,iBAAkB,cACzB4a,UAAU,GAEDkZ,GAAsB1Y,IAAW,CAC1CN,aAAeC,IAjDgB,IAAC9xB,EAkD5B8xB,EAAYlR,KAlDgB5gB,EAkDQmyB,EAlDI,CAACn0B,EAAMu0B,IAAYvB,MAAOxI,IACtE,MAAM,QAAE/a,GAAY+a,EACpB,IAAK,aAAuB/a,GACxB,OAAOzP,EAAKwqB,GAChB,MAAM,QAAE5e,GAAY6D,EACdpB,EAAYkmB,GAASlmB,WAAWnL,IAAIupC,KAAoB,GACxDK,SAA0B9qC,EAAQ+qC,4BAA4B7pC,IAAIupC,IAClEJ,EAAkBrqC,GAASqqC,iBAAiBnpC,IAAIupC,KAAoB,GACpEO,EAAoB,IAAIF,KAAqBz+B,KAAcg+B,GAAiBvkC,KDRjE,KCSXmlC,EAAgB,IACfH,EAAiB9pC,QAAQkqC,GAAYA,EAAQ3vB,WAAW,iBACxD8uB,GACLvkC,KDZe,KCwBjB,MAXwB,YAApB9F,EAAQ64B,SACJoS,IACArhC,EAAQ2gC,IAAoB3gC,EAAQ2gC,IAC9B,GAAG3gC,EAAQ0gC,OAAeW,IAC1BA,GAEVrhC,EAAQ0gC,IAAcU,GAGtBphC,EAAQ2gC,IAAoBS,EAEzBhtC,EAAK,IACLwqB,EACH/a,WACF,GAuB+Cm9B,GAA8B,ICpD5E,MAAMO,GACTC,QAAU,CACVpsC,QAAU,CACVJ,OAAS,CACT8/B,OAAS,CACT3/B,QAAU,ECLP,MAAMssC,GAAiB,KAC1B,IAAIC,EAAkB,GAClBC,EAAkB,GACtB,MAAMC,EAAiB,IAAIpjB,IAgCrBqjB,EAAWC,IACbJ,EAAgB7nB,SAASkoB,IACrBD,EAAQ9qB,IAAI+qB,EAAMC,WAAY,IAAKD,GAAQ,IAE/CJ,EAAgB9nB,SAASkoB,IACrBD,EAAQ7V,cAAc8V,EAAMC,WAAY,IAAKD,GAAQ,IAElDD,GAELG,EAAgC/hC,IAClC,MAAMgiC,EAAyB,GAkB/B,OAjBAhiC,EAAKiiC,OAAOtoB,SAASkoB,IACW,IAAxBA,EAAMI,OAAOjvC,QAAuC,IAAvB6uC,EAAMK,MAAMlvC,OACzCgvC,EAAuBj4B,KAAK83B,GAG5BG,EAAuBj4B,QAAQg4B,EAA6BF,GAChE,IAEJG,EAAuBj4B,KAAK/J,GAC5BA,EAAKkiC,MAAMC,UAAUxoB,SAASkoB,IACE,IAAxBA,EAAMI,OAAOjvC,QAAuC,IAAvB6uC,EAAMK,MAAMlvC,OACzCgvC,EAAuBj4B,KAAK83B,GAG5BG,EAAuBj4B,QAAQg4B,EAA6BF,GAChE,IAEGG,CAAsB,EAE3BI,EAAoB,CAACltC,GAAQ,KAC/B,MAAMmtC,EAA4B,GAC5BC,EAA4B,GAC5BC,EAA2B,CAAC,EAClCf,EAAgB7nB,SAASkoB,IACrB,MAAMW,EAAkB,IACjBX,EACHI,OAAQ,GACRC,MAAO,IAEPM,EAAgB5vC,OAChB2vC,EAAyBC,EAAgB5vC,MAAQ4vC,GACrDH,EAA0Bt4B,KAAKy4B,EAAgB,IAEnDf,EAAgB9nB,SAASkoB,IACrB,MAAMW,EAAkB,IACjBX,EACHI,OAAQ,GACRC,MAAO,IAEPM,EAAgB5vC,OAChB2vC,EAAyBC,EAAgB5vC,MAAQ4vC,GACrDF,EAA0Bv4B,KAAKy4B,EAAgB,IAEnDF,EAA0B3oB,SAASkoB,IAC/B,GAAIA,EAAMhW,aAAc,CACpB,MAAMA,EAAe0W,EAAyBV,EAAMhW,cACpD,QAAqB76B,IAAjB66B,EAA4B,CAC5B,GAAI32B,EACA,OAEJ,MAAM,IAAIoB,MAAM,GAAGurC,EAAMhW,yCAAyCgW,EAAMjvC,MAAQ,0BAA0BivC,EAAMjW,YAAYiW,EAAMhW,eACtI,CACuB,UAAnBgW,EAAMjW,UACNC,EAAaqW,MAAMn4B,KAAK83B,GAEL,WAAnBA,EAAMjW,UACNC,EAAaoW,OAAOl4B,KAAK83B,EAEjC,KAEJ,MAAMY,GAtGI1mC,EAsGasmC,EAtGDtmC,EAAQq+B,MAAK,CAACjxB,EAAGga,IAAMuf,GAAYvf,EAAElvB,MAAQyuC,GAAYv5B,EAAElV,OACjF0uC,GAAgBxf,EAAEuK,UAAY,UAAYiV,GAAgBx5B,EAAEukB,UAAY,aAsGnEt2B,IAAI2qC,GACJx4B,QAAO,CAACq5B,EAAWC,KACpBD,EAAU74B,QAAQ84B,GACXD,IACR,IA3GM,IAAC7mC,EA4GV,OAAO0mC,CAAS,EAEdngB,EAAQ,CACVxL,IAAK,CAACgrB,EAAY5rC,EAAU,CAAC,KACzB,MAAM,KAAEtD,EAAI,SAAEi1B,GAAa3xB,EACrB2rC,EAAQ,CACV5tC,KAAM,aACNy5B,SAAU,SACVoU,gBACG5rC,GAEP,GAAItD,EAAM,CACN,GAAI8uC,EAAetmB,IAAIxoB,GAAO,CAC1B,IAAKi1B,EACD,MAAM,IAAIvxB,MAAM,8BAA8B1D,MAClD,MAAMkwC,EAAkBtB,EAAgBuB,WAAWlB,GAAUA,EAAMjvC,OAASA,IACtEowC,EAAaxB,EAAgBsB,GACnC,GAAIE,EAAW/uC,OAAS4tC,EAAM5tC,MAAQ+uC,EAAWtV,WAAamU,EAAMnU,SAChE,MAAM,IAAIp3B,MAAM,IAAI1D,sBAAyBowC,EAAWtV,wBAAwBsV,EAAW/uC,+DAC5C4tC,EAAMnU,wBAAwBmU,EAAM5tC,cAEvFutC,EAAgBlhB,OAAOwiB,EAAiB,EAC5C,CACApB,EAAe5qB,IAAIlkB,EACvB,CACA4uC,EAAgBz3B,KAAK83B,EAAM,EAE/B9V,cAAe,CAAC+V,EAAY5rC,KACxB,MAAM,KAAEtD,EAAI,SAAEi1B,GAAa3xB,EACrB2rC,EAAQ,CACVC,gBACG5rC,GAEP,GAAItD,EAAM,CACN,GAAI8uC,EAAetmB,IAAIxoB,GAAO,CAC1B,IAAKi1B,EACD,MAAM,IAAIvxB,MAAM,8BAA8B1D,MAClD,MAAMkwC,EAAkBrB,EAAgBsB,WAAWlB,GAAUA,EAAMjvC,OAASA,IACtEowC,EAAavB,EAAgBqB,GACnC,GAAIE,EAAWnX,eAAiBgW,EAAMhW,cAAgBmX,EAAWpX,WAAaiW,EAAMjW,SAChF,MAAM,IAAIt1B,MAAM,IAAI1D,iBAAoBowC,EAAWpX,aAAaoX,EAAWnX,yEAC5CgW,EAAMjW,aAAaiW,EAAMhW,6BAE5D4V,EAAgBnhB,OAAOwiB,EAAiB,EAC5C,CACApB,EAAe5qB,IAAIlkB,EACvB,CACA6uC,EAAgB13B,KAAK83B,EAAM,EAE/Bva,MAAO,IAAMqa,EAAQJ,MACrB0B,IAAMC,IACFA,EAAOnb,aAAazF,EAAM,EAE9B6gB,OAASC,GACmB,iBAAbA,EAhKE,CAACA,IAClB,IAAIC,GAAY,EAChB,MAAMC,EAAYzB,IACVA,EAAMjvC,MAAQivC,EAAMjvC,OAASwwC,IAC7BC,GAAY,EACZ3B,EAAenU,OAAO6V,IACf,GAMf,OAFA5B,EAAkBA,EAAgBtqC,OAAOosC,GACzC7B,EAAkBA,EAAgBvqC,OAAOosC,GAClCD,CAAS,EAqJDE,CAAaH,GAnJN,CAACA,IACvB,IAAIC,GAAY,EAChB,MAAMC,EAAYzB,GACVA,EAAMC,aAAesB,IACrBC,GAAY,EACRxB,EAAMjvC,MACN8uC,EAAenU,OAAOsU,EAAMjvC,OACzB,GAMf,OAFA4uC,EAAkBA,EAAgBtqC,OAAOosC,GACzC7B,EAAkBA,EAAgBvqC,OAAOosC,GAClCD,CAAS,EAwIDG,CAAkBJ,GAEjCK,YAAcL,IACV,IAAIC,GAAY,EAChB,MAAMC,EAAYzB,IACd,MAAM,KAAE50B,EAAI,KAAEra,GAASivC,EACvB,OAAI50B,IAAQA,EAAK3V,SAAS8rC,KAClBxwC,GACA8uC,EAAenU,OAAO36B,GAC1BywC,GAAY,GACL,EAEA,EAIf,OAFA7B,EAAkBA,EAAgBtqC,OAAOosC,GACzC7B,EAAkBA,EAAgBvqC,OAAOosC,GAClCD,CAAS,EAEpBjhC,OAASpC,IACL,MAAMunB,EAASoa,EAAQJ,MAEvB,OADAha,EAAO0b,IAAIjjC,GACJunB,CAAM,EAEjBQ,aAAc4Z,EACd+B,SAAU,IACCtB,GAAkB,GAAMhrC,KAAKusC,GACzBA,EAAG/wC,KAAO,MAAQ+wC,EAAG12B,MAAQ,IAAIjR,KAAK,OAGrDlI,QAAS,CAACuR,EAASojB,KACf,IAAK,MAAMqZ,KAAcM,IACpBhrC,KAAKyqC,GAAUA,EAAMC,aACrBK,UACD98B,EAAUy8B,EAAWz8B,EAASojB,GAElC,OAAOpjB,CAAO,GAGtB,OAAOid,CAAK,EAEVogB,GAAc,CAChBkB,WAAY,EACZC,UAAW,EACXnyB,MAAO,EACPoyB,gBAAiB,EACjBC,YAAa,GAEXpB,GAAkB,CACpBqB,KAAM,EACNC,OAAQ,EACRC,IAAK,GC1NF,MAAMC,GACTtxC,YAAYw1B,GACR53B,KAAK2zC,gBAAkB7C,KACvB9wC,KAAK43B,OAASA,CAClB,CACAgc,KAAKnyC,EAASoyC,EAAa5jB,GACvB,MAAMxqB,EAAiC,mBAAhBouC,EAA6BA,OAActzC,EAC5DsqB,EAAkC,mBAAhBgpB,EAA6BA,EAAc5jB,EAC7Drb,EAAUnT,EAAQqyC,kBAAkB9zC,KAAK2zC,gBAAiB3zC,KAAK43B,OAAQnyB,GAC7E,IAAIolB,EAMA,OAAOjW,EAAQnT,GAASoC,MAAM5C,GAAWA,EAAOsQ,SALhDqD,EAAQnT,GACHoC,MAAM5C,GAAW4pB,EAAS,KAAM5pB,EAAOsQ,UAAUgE,GAAQsV,EAAStV,KAClE9L,OAAM,QAKnB,CACA4L,UACQrV,KAAK43B,OAAOwF,eAAe/nB,SAC3BrV,KAAK43B,OAAOwF,eAAe/nB,SACnC,ECrBG,MAAMxT,GACTO,cACIpC,KAAK2zC,gBAAkB7C,IAC3B,ECJG,MAAM,GAAmB,6BCUnBiD,GAAiBlzC,IAC1B,GAAIA,QAAJ,CAGA,GAAqB,iBAAVA,EAAoB,CAI3B,GAHc,IAAVA,GAAyB,IAAVA,GACf88B,GAAOwG,KAAK6P,GAAkB,gCAAgCnzC,MAAUA,MAE9D,IAAVA,EACA,OAAO,EAEX,GAAc,IAAVA,EACA,OAAO,CAEf,CACA,GAAqB,iBAAVA,EAAoB,CAC3B,MAAMozC,EAAQpzC,EAAMoU,cAIpB,GAHc,UAAVg/B,GAA+B,SAAVA,GACrBtW,GAAOwG,KAAK6P,GAAkB,gCAAgCnzC,MAAUA,MAE9D,UAAVozC,EACA,OAAO,EAEX,GAAc,SAAVA,EACA,OAAO,CAEf,CACA,GAAqB,kBAAVpzC,EACP,OAAOA,EAEX,MAAM,IAAIiG,UAAU,gCAAgCjG,MAAUA,IA3B9D,CA2BsE,EAE7DqzC,GAAgBrzC,IACzB,GAAIA,QAAJ,CAGA,GAAqB,iBAAVA,EAAoB,CAC3B,MAAMszC,EAAS5lB,WAAW1tB,GAC1B,IAAKuY,OAAOR,MAAMu7B,GAId,OAHI9lC,OAAO8lC,KAAY9lC,OAAOxN,IAC1B88B,GAAOwG,KAAK6P,GAAkB,wCAAwCnzC,MAEnEszC,CAEf,CACA,GAAqB,iBAAVtzC,EACP,OAAOA,EAEX,MAAM,IAAIiG,UAAU,+BAA+BjG,MAAUA,IAb7D,CAaqE,EAEnEuzC,GAAYthC,KAAKuhC,KAAK,GAAK,KAAO,EAAI,IAAM,KACrCC,GAAiBzzC,IAC1B,MAAM0zC,EAAWL,GAAarzC,GAC9B,QAAiBN,IAAbg0C,IAA2Bn7B,OAAOR,MAAM27B,IAAaA,IAAaC,KAAYD,KAAcC,KACxF1hC,KAAKm8B,IAAIsF,GAAYH,GACrB,MAAM,IAAIttC,UAAU,8BAA8BjG,KAG1D,OAAO0zC,CAAQ,EAENE,GAAc5zC,IACvB,GAAIA,QAAJ,CAGA,GAAIuY,OAAOs7B,UAAU7zC,KAAWuY,OAAOR,MAAM/X,GACzC,OAAOA,EAEX,MAAM,IAAIiG,UAAU,gCAAgCjG,MAAUA,IAJ9D,CAIsE,EAG7D8zC,GAAe9zC,GAAU+zC,GAAe/zC,EAAO,IAC/Cg0C,GAAeh0C,GAAU+zC,GAAe/zC,EAAO,IAC/Ci0C,GAAcj0C,GAAU+zC,GAAe/zC,EAAO,GACrD+zC,GAAiB,CAAC/zC,EAAOmpB,KAC3B,MAAMuqB,EAAWE,GAAW5zC,GAC5B,QAAiBN,IAAbg0C,GAA0BQ,GAAQR,EAAUvqB,KAAUuqB,EACtD,MAAM,IAAIztC,UAAU,YAAYkjB,sBAAyBnpB,KAE7D,OAAO0zC,CAAQ,EAEbQ,GAAU,CAACl0C,EAAOmpB,KACpB,OAAQA,GACJ,KAAK,GACD,OAAO8C,WAAWkB,GAAGntB,GAAO,GAChC,KAAK,GACD,OAAOgsB,WAAWmB,GAAGntB,GAAO,GAChC,KAAK,EACD,OAAO+rB,UAAUoB,GAAGntB,GAAO,GACnC,EAESm0C,GAAgB,CAACn0C,EAAOo0C,KACjC,GAAIp0C,QAAuC,CACvC,GAAIo0C,EACA,MAAM,IAAInuC,UAAU,iCAAiCmuC,KAEzD,MAAM,IAAInuC,UAAU,4BACxB,CACA,OAAOjG,CAAK,EAEHq0C,GAAgBr0C,IACzB,GAAIA,QACA,OAEJ,GAAqB,iBAAVA,IAAuBsgB,MAAMC,QAAQvgB,GAC5C,OAAOA,EAEX,MAAMs0C,EAAeh0B,MAAMC,QAAQvgB,GAAS,eAAiBA,EAC7D,MAAM,IAAIiG,UAAU,wBAAwBquC,MAAiBt0C,IAAQ,EAE5Du0C,GAAgBv0C,IACzB,GAAIA,QAAJ,CAGA,GAAqB,iBAAVA,EACP,OAAOA,EAEX,GAAI,CAAC,UAAW,SAAU,UAAUgG,gBAAgBhG,GAEhD,OADA88B,GAAOwG,KAAK6P,GAAkB,+BAA+BnzC,MAAUA,MAChEwN,OAAOxN,GAElB,MAAM,IAAIiG,UAAU,+BAA+BjG,MAAUA,IAR7D,CAQqE,EAE5Dw0C,GAAex0C,IACxB,GAAIA,QACA,OAEJ,MAAMy0C,EAAWJ,GAAar0C,GACxB00C,EAAUt1C,OAAOqL,QAAQgqC,GAC1B7uC,QAAO,EAAE,CAAE7F,KAAY,MAALA,IAClB+F,KAAI,EAAEtG,KAAOA,IAClB,GAAuB,IAAnBk1C,EAAQhzC,OACR,MAAM,IAAIuE,UAAU,kEAExB,GAAIyuC,EAAQhzC,OAAS,EACjB,MAAM,IAAIuE,UAAU,sDAAsDyuC,oBAE9E,OAAOD,CAAQ,EAebE,GAAe,oEACfC,GAAe50C,IACjB,MAAMsa,EAAUta,EAAMka,MAAMy6B,IAC5B,GAAgB,OAAZr6B,GAAoBA,EAAQ,GAAG5Y,SAAW1B,EAAM0B,OAChD,MAAM,IAAIuE,UAAU,0CAExB,OAAOynB,WAAW1tB,EAAM,EAEf60C,GAAsB70C,GACX,iBAATA,EACA80C,GAAiB90C,GAErBqzC,GAAarzC,GAUlB80C,GAAoB90C,IACtB,OAAQA,GACJ,IAAK,MACD,OAAO+0C,IACX,IAAK,WACD,OAAOpB,IACX,IAAK,YACD,OAAQA,IACZ,QACI,MAAM,IAAI3uC,MAAM,gCAAgChF,KACxD,EASSg1C,GAAoBh1C,GAElB8zC,GADU,iBAAV9zC,EACY40C,GAAY50C,GAEhBA,GAcjBmzC,GAAqBryC,GAChB0M,OAAO,IAAIvH,UAAUnF,GAASkwB,OAASlwB,GACzC6E,MAAM,MACNyrB,MAAM,EAAG,GACTxrB,QAAQ9D,IAAOA,EAAEkE,SAAS,uBAC1B0E,KAAK,MAEDoyB,GAAS,CAClBwG,KAAMhS,QAAQgS,MClOZ2R,GAAS,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAe7F,MAAMC,GAAU,IAAI37B,OAAO,wEACd47B,GAAwBn1C,IACjC,GAAIA,QACA,OAEJ,GAAqB,iBAAVA,EACP,MAAM,IAAIiG,UAAU,oDAExB,MAAMiU,EAAQg7B,GAAQ/6B,KAAKna,GAC3B,IAAKka,EACD,MAAM,IAAIjU,UAAU,oCAExB,MAAOmvC,EAAGC,EAASC,EAAUC,EAAQC,EAAOC,EAASC,EAASC,GAA0Bz7B,EAClF07B,EDkLsB,CAAC51C,GAElBg0C,GADU,iBAAVh0C,EACY40C,GAAY50C,GAEhBA,GCtLN,CAAiB61C,GAAmBR,IAC3CS,EAAQC,GAAeT,EAAU,QAAS,EAAG,IAC7CU,EAAMD,GAAeR,EAAQ,MAAO,EAAG,IAC7C,OAAOU,GAAUL,EAAME,EAAOE,EAAK,CAAER,QAAOC,UAASC,UAASC,0BAAyB,EAqDrFM,GAAY,CAACL,EAAME,EAAOE,EAAKrM,KACjC,MAAMuM,EAAgBJ,EAAQ,EAE9B,OADAK,GAAmBP,EAAMM,EAAeF,GACjC,IAAIl+B,KAAKA,KAAKs+B,IAAIR,EAAMM,EAAeF,EAAKD,GAAepM,EAAK6L,MAAO,OAAQ,EAAG,IAAKO,GAAepM,EAAK8L,QAAS,SAAU,EAAG,IAAKM,GAAepM,EAAK+L,QAAS,UAAW,EAAG,IAAKW,GAAkB1M,EAAKgM,yBAAyB,EAwB3OW,GAAgB,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAC7DH,GAAqB,CAACP,EAAME,EAAOE,KACrC,IAAIO,EAAUD,GAAcR,GAI5B,GAHc,IAAVA,GAAeU,GAAWZ,KAC1BW,EAAU,IAEVP,EAAMO,EACN,MAAM,IAAItwC,UAAU,mBAAmBgvC,GAAOa,SAAaF,MAASI,IACxE,EAEEQ,GAAcZ,GACTA,EAAO,GAAM,IAAMA,EAAO,KAAQ,GAAKA,EAAO,KAAQ,GAE3DG,GAAiB,CAAC/1C,EAAO00B,EAAM0e,EAAOqD,KACxC,MAAMC,EDuFqB,CAAC12C,GAEjBi0C,GADU,iBAAVj0C,EACW40C,GAAY50C,GAEhBA,GC3FF22C,CAAgBd,GAAmB71C,IACnD,GAAI02C,EAAUtD,GAASsD,EAAUD,EAC7B,MAAM,IAAIxwC,UAAU,GAAGyuB,qBAAwB0e,SAAaqD,gBAEhE,OAAOC,CAAO,EAEZL,GAAqBr2C,GACnBA,QACO,EAE+B,IDkBZ,CAACA,GAEpByzC,GADS,iBAATzzC,EACc40C,GAAY50C,GAEhBA,GCtBd42C,CAAmB,KAAO52C,GAE/B61C,GAAsB71C,IACxB,IAAI62C,EAAM,EACV,KAAOA,EAAM72C,EAAM0B,OAAS,GAA2B,MAAtB1B,EAAMqkB,OAAOwyB,IAC1CA,IAEJ,OAAY,IAARA,EACO72C,EAEJA,EAAMoxB,MAAMylB,EAAI,ECnJpB,MAAMC,WAAyB9xC,MAClCzD,YAAYqD,GACR0L,MAAM1L,EAAQ9D,SACd1B,OAAOmR,eAAepR,KAAM23C,GAAiBtmC,WAC7CrR,KAAKmC,KAAOsD,EAAQtD,KACpBnC,KAAK43C,OAASnyC,EAAQmyC,OACtB53C,KAAKi+B,UAAYx4B,EAAQw4B,SAC7B,EAEG,MAAM4Z,GAA2B,CAACC,EAAWC,EAAY,CAAC,KAC7D93C,OAAOqL,QAAQysC,GACVtxC,QAAO,EAAE,CAAE7F,UAAaL,IAANK,IAClBsoB,SAAQ,EAAE7oB,EAAGO,MACML,MAAhBu3C,EAAUz3C,IAAoC,KAAjBy3C,EAAUz3C,KACvCy3C,EAAUz3C,GAAKO,EACnB,IAEJ,MAAMe,EAAUm2C,EAAUn2C,SAAWm2C,EAAUE,SAAW,eAG1D,OAFAF,EAAUn2C,QAAUA,SACbm2C,EAAUE,QACVF,CAAS,ECnBP,GAAoB,EAAGvmC,SAAQ0mC,aAAYC,gBAAeC,gBACnE,MAAMla,EAAYma,GAAoB7mC,GAChC7H,EAAau0B,EAAUgB,eAAiBhB,EAAUgB,eAAiB,QAAK1+B,EACxEgU,EAAW,IAAI2jC,EAAc,CAC/B/1C,KAAM81C,EAAW/rC,MAAQ+rC,EAAWI,MAAQF,GAAazuC,GAAc,eACvEkuC,OAAQ,SACR3Z,cAEJ,MAAM4Z,GAAyBtjC,EAAU0jC,EAAW,EAElDG,GAAuB7mC,IAAW,CACpC0tB,eAAgB1tB,EAAO7H,WACvB4uC,UAAW/mC,EAAOlC,QAAQ,qBAAuBkC,EAAOlC,QAAQ,sBAAwBkC,EAAOlC,QAAQ,oBACvGkpC,kBAAmBhnC,EAAOlC,QAAQ,cAClCmpC,KAAMjnC,EAAOlC,QAAQ,iBCfZopC,GAA6B9U,IACtC,OAAQA,GACJ,IAAK,WAUL,IAAK,eACD,MAAO,CACHoB,UAAW,WACX2T,kBAAmB,MAR3B,IAAK,YACD,MAAO,CACH3T,UAAW,WACX2T,kBAAmB,MAO3B,IAAK,SACD,MAAO,CACH3T,UAAW,WACX2T,kBAAmB,KAE3B,QACI,MAAO,CAAC,EAChB,ECxBJ,IAAIC,IAAiB,EACd,MAAMC,GAAmCrlB,IACxCA,IAAYolB,IAAkBhiC,SAAS4c,EAAQzW,UAAU,EAAGyW,EAAQ/V,QAAQ,OAAS,KACrFm7B,IAAiB,EACrB,ECJG,SAASE,GAA2BvxB,GACvC,OAAOxd,mBAAmBwd,GAAKzkB,QAAQ,YAAY,SAAUkW,GACzD,MAAO,IAAMA,EAAE8a,WAAW,GAAG5xB,SAAS,IAAI0D,aAC9C,GACJ,CCJO,MAAMmzC,GAAwB9kC,IAEjC,IAAK,MAAMvR,KAAOuR,EACVA,EAAI9S,eAAeuB,SAAmClC,IAA3ByT,EAAIvR,GAAKic,SACpC1K,EAAIvR,GAAOuR,EAAIvR,GAAKic,SAEK,iBAAb1K,EAAIvR,IAAkC,OAAbuR,EAAIvR,KACzCuR,EAAIvR,GAAOq2C,GAAqB9kC,EAAIvR,KAG5C,OAAOuR,CAAG,ECVD+kC,GAAgB,WACzB,MAAMC,EAAQ/4C,OAAOg5C,eAAej5C,MAAMoC,YACpC82C,EAAcC,SAASC,KAAKt1C,MAAMuK,OAAQ,CAAC,QAASob,YACpD4vB,EAAW,IAAIH,EAErB,OADAj5C,OAAOmR,eAAeioC,EAAUL,EAAM3nC,WAC/BgoC,CACX,EACAN,GAAc1nC,UAAYpR,OAAOC,OAAOmO,OAAOgD,UAAW,CACtDjP,YAAa,CACTvB,MAAOk4C,GACPt4C,YAAY,EACZqtB,UAAU,EACVwrB,cAAc,KAGtBr5C,OAAOmR,eAAe2nC,GAAe1qC,QCf9B,SAAS1H,GAAI4yC,EAAMC,EAAMC,GAC5B,IAAIj/B,EACA/T,EACAszB,EACJ,QAAoB,IAATyf,QAAwC,IAATC,EACtCj/B,EAAS,CAAC,EACVuf,EAAewf,MAEd,CAED,GADA/+B,EAAS++B,EACW,mBAATC,EAGP,OAFA/yC,EAAS+yC,EACTzf,EAAe0f,EACRC,GAAcl/B,EAAQ/T,EAAQszB,GAGrCA,EAAeyf,CAEvB,CACA,IAAK,MAAM/2C,KAAOxC,OAAOqC,KAAKy3B,GAAe,CACzC,IAAK5Y,MAAMC,QAAQ2Y,EAAat3B,IAAO,CACnC+X,EAAO/X,GAAOs3B,EAAat3B,GAC3B,QACJ,CACA,IAAKgE,EAAQ5F,GAASk5B,EAAat3B,GACnC,GAAqB,mBAAV5B,EAAsB,CAC7B,IAAI84C,EACJ,MAAMC,OAAiCr5C,IAAXkG,GAA8C,OAArBkzC,EAAS94C,KACxDg5C,EAAwC,mBAAXpzC,KAA2BA,OAAO,IAA+B,mBAAXA,KAA2BA,EAChHmzC,EACAp/B,EAAO/X,GAAOk3C,EAETE,IACLr/B,EAAO/X,GAAO5B,IAEtB,KACK,CACD,MAAM+4C,OAAiCr5C,IAAXkG,GAAiC,MAAT5F,EAC9Cg5C,EAAwC,mBAAXpzC,KAA2BA,EAAO5F,IAA8B,mBAAX4F,KAA2BA,GAC/GmzC,GAAuBC,KACvBr/B,EAAO/X,GAAO5B,EAEtB,CACJ,CACA,OAAO2Z,CACX,CACO,MAODk/B,GAAgB,CAACl/B,EAAQ/T,EAAQszB,IAC5BpzB,GAAI6T,EAAQva,OAAOqL,QAAQyuB,GAAcjhB,QAAO,CAACghC,GAAgBr3C,EAAK5B,MACrEsgB,MAAMC,QAAQvgB,GACdi5C,EAAcr3C,GAAO5B,EAIjBi5C,EAAcr3C,GADG,mBAAV5B,EACc,CAAC4F,EAAQ5F,KAGT,CAAC4F,EAAQ5F,GAG/Bi5C,IACR,CAAC,IClED,MAAMC,WAAiC,GAC1C33C,YAAYqD,GACR0L,MAAM1L,GACNxF,OAAOmR,eAAepR,KAAM+5C,GAAyB1oC,UACzD,ECJG,IAAI2oC,GAMAC,GAMAC,GAMAC,GAMAC,GAKAC,GAKAC,GAMAC,GAKAC,GAQAC,GAOAC,GA+BAC,GAOAC,GAMAC,GA2EAC,GAiBAC,GA4BAC,GAKAC,GAKAC,GAKAC,GAiBAC,GAKAC,GA4CAC,GAOAC,GAUAC,GAiBAC,GAOAC,GAsBAC,GAoBAC,GAKAC,GAMAC,GA6BAC,GAQAC,GAMAC,GAkBAC,GA8FAC,GAmEAC,IA5mBX,SAAWpC,GACPA,EAAqB,IAAI,MACzBA,EAAwB,OAAI,SAC5BA,EAAqB,IAAI,KAC5B,CAJD,CAIGA,KAAoBA,GAAkB,CAAC,IAE1C,SAAWC,GACPA,EAAuB,EAAI,IAC3BA,EAAuB,EAAI,IAC3BA,EAAuB,EAAI,GAC9B,CAJD,CAIGA,KAAwBA,GAAsB,CAAC,IAElD,SAAWC,GACPA,EAAwB,UAAI,YAC5BA,EAAuB,SAAI,WAC3BA,EAAsB,QAAI,SAC7B,CAJD,CAIGA,KAAiBA,GAAe,CAAC,IAEpC,SAAWC,GACPA,EAAuB,WAAI,aAC3BA,EAAmB,OAAI,SACvBA,EAAiB,KAAI,MACxB,CAJD,CAIGA,KAAeA,GAAa,CAAC,IAEhC,SAAWC,GACPA,EAA6B,gBAAI,kBACjCA,EAAyB,YAAI,aAChC,CAHD,CAGGA,KAAgBA,GAAc,CAAC,IAElC,SAAWC,GACPA,EAAc,KAAI,OAClBA,EAAe,MAAI,OACtB,CAHD,CAGGA,KAAYA,GAAU,CAAC,IAE1B,SAAWC,GACPA,EAAoB,IAAI,MACxBA,EAAwB,QAAI,UAC5BA,EAA0B,UAAI,WACjC,CAJD,CAIGA,KAAmBA,GAAiB,CAAC,IAExC,SAAWC,GACPA,EAAgB,OAAI,SACpBA,EAAa,IAAI,KACpB,CAHD,CAGGA,KAAYA,GAAU,CAAC,IAE1B,SAAWC,GACPA,EAAoB,SAAI,WACxBA,EAAqB,UAAI,YACzBA,EAAmB,QAAI,UACvBA,EAAoB,SAAI,WACxBA,EAAoB,SAAI,UAC3B,CAND,CAMGA,KAAcA,GAAY,CAAC,IAE9B,SAAWC,GACPA,EAA0B,UAAI,YAC9BA,EAAmC,mBAAI,qBACvCA,EAA0B,UAAI,YAC9BA,EAA0B,UAAI,WACjC,CALD,CAKGA,KAAmBA,GAAiB,CAAC,IAExC,SAAWC,GACPA,EAA2B,SAAI,WAC/BA,EAA4B,UAAI,YAChCA,EAA0B,QAAI,UAC9BA,EAA2B,SAAI,UAClC,CALD,CAKGA,KAAqBA,GAAmB,CAAC,KA0B5C,SAAWC,GACPA,EAAsB,IAAI,MAC1BA,EAA6B,WAAI,aACjCA,EAAyB,OAAI,SAC7BA,EAAuB,KAAI,MAC9B,CALD,CAKGA,KAAqBA,GAAmB,CAAC,IAE5C,SAAWC,GACPA,EAAgC,QAAI,UACpCA,EAA6B,KAAI,OACjCA,EAA8B,MAAI,OACrC,CAJD,CAIGA,KAA2BA,GAAyB,CAAC,IAExD,SAAWC,GACPA,EAA0C,aAAI,eAC9CA,EAAoD,uBAAI,yBACxDA,EAA2C,cAAI,gBAC/CA,EAAiD,oBAAI,sBACrDA,EAA6D,gCAAI,kCACjEA,EAA2D,8BAAI,gCAC/DA,EAAkD,qBAAI,uBACtDA,EAA8C,iBAAI,mBAClDA,EAA6C,gBAAI,kBACjDA,EAAiD,oBAAI,sBACrDA,EAA6C,gBAAI,iBACpD,CAZD,CAYGA,KAAgCA,GAA8B,CAAC,IAC3D,MAAMwB,WAA4B,GACrCj6C,YAAYk6C,GACRnrC,MAAM,CACFhP,KAAM,sBACNy1C,OAAQ,YACL0E,IAEPt8C,KAAKmC,KAAO,sBACZnC,KAAK43C,OAAS,SACd33C,OAAOmR,eAAepR,KAAMq8C,GAAoBhrC,UACpD,EAEG,MAAMkrC,WAA6B,GACtCn6C,YAAYk6C,GACRnrC,MAAM,CACFhP,KAAM,uBACNy1C,OAAQ,YACL0E,IAEPt8C,KAAKmC,KAAO,uBACZnC,KAAK43C,OAAS,SACd33C,OAAOmR,eAAepR,KAAMu8C,GAAqBlrC,UACrD,EAEG,MAAMmrC,WAAiC,GAC1Cp6C,YAAYk6C,GACRnrC,MAAM,CACFhP,KAAM,2BACNy1C,OAAQ,YACL0E,IAEPt8C,KAAKmC,KAAO,2BACZnC,KAAK43C,OAAS,SACd33C,OAAOmR,eAAepR,KAAMw8C,GAAyBnrC,WACrDrR,KAAKg4C,QAAUsE,EAAKtE,OACxB,EAEG,MAAMyE,WAA+C,GACxDr6C,YAAYk6C,GACRnrC,MAAM,CACFhP,KAAM,yCACNy1C,OAAQ,YACL0E,IAEPt8C,KAAKmC,KAAO,yCACZnC,KAAK43C,OAAS,SACd33C,OAAOmR,eAAepR,KAAMy8C,GAAuCprC,UACvE,EAEG,MAAMqrC,WAAkC,GAC3Ct6C,YAAYk6C,GACRnrC,MAAM,CACFhP,KAAM,4BACNy1C,OAAQ,YACL0E,IAEPt8C,KAAKmC,KAAO,4BACZnC,KAAK43C,OAAS,SACd33C,OAAOmR,eAAepR,KAAM08C,GAA0BrrC,UAC1D,GAGJ,SAAWypC,GACPA,EAAkC,KAAI,OACtCA,EAAkC,KAAI,MACzC,CAHD,CAGGA,KAAgCA,GAA8B,CAAC,IAC3D,MAAM6B,WAAiD,GAC1Dv6C,YAAYk6C,GACRnrC,MAAM,CACFhP,KAAM,2CACNy1C,OAAQ,YACL0E,IAEPt8C,KAAKmC,KAAO,2CACZnC,KAAK43C,OAAS,SACd33C,OAAOmR,eAAepR,KAAM28C,GAAyCtrC,UACzE,GAGJ,SAAW0pC,GACPA,EAAgC,YAAI,cACpCA,EAA4B,QAAI,UAChCA,EAA6B,SAAI,WACjCA,EAAuB,GAAI,KAC3BA,EAAuB,GAAI,KAC3BA,EAAuB,GAAI,KAC3BA,EAAuB,GAAI,KAC3BA,EAAuB,GAAI,KAC3BA,EAAuB,GAAI,KAC3BA,EAAuB,GAAI,KAC3BA,EAAiC,aAAI,eACrCA,EAA6B,SAAI,WACjCA,EAAyB,KAAI,MAChC,CAdD,CAcGA,KAAuBA,GAAqB,CAAC,IACzC,MAAM6B,WAAwC,GACjDx6C,YAAYk6C,GACRnrC,MAAM,CACFhP,KAAM,kCACNy1C,OAAQ,YACL0E,IAEPt8C,KAAKmC,KAAO,kCACZnC,KAAK43C,OAAS,SACd33C,OAAOmR,eAAepR,KAAM48C,GAAgCvrC,UAChE,GAGJ,SAAW2pC,GACPA,EAAyB,IAAI,MAC7BA,EAAwB,GAAI,IAC/B,CAHD,CAGGA,KAAwBA,GAAsB,CAAC,IAElD,SAAWC,GACPA,EAA6C,QAAI,UACjDA,EAA0C,KAAI,MACjD,CAHD,CAGGA,KAAwCA,GAAsC,CAAC,IAElF,SAAWC,GACPA,EAAkC,SAAI,WACtCA,EAAiC,QAAI,SACxC,CAHD,CAGGA,KAA4BA,GAA0B,CAAC,IAE1D,SAAWC,GACPA,EAAoC,SAAI,WACxCA,EAAmC,QAAI,SAC1C,CAHD,CAGGA,KAA8BA,GAA4B,CAAC,KAc9D,SAAWC,GACPA,EAAmC,QAAI,UACvCA,EAAkC,OAAI,QACzC,CAHD,CAGGA,KAA8BA,GAA4B,CAAC,IAE9D,SAAWC,GACPA,EAAoC,SAAI,WACxCA,EAAqC,UAAI,YACzCA,EAAmC,QAAI,UACvCA,EAAoC,SAAI,WACxCA,EAAkC,OAAI,QACzC,CAND,CAMGA,KAA8BA,GAA4B,CAAC,KAsC9D,SAAWC,GACPA,EAA0B,OAAI,SAC9BA,EAA4B,SAAI,WAChCA,EAA4B,SAAI,WAChCA,EAA4B,SAAI,UACnC,CALD,CAKGA,KAAsBA,GAAoB,CAAC,IAE9C,SAAWC,GACPA,EAAsB,OAAI,SAC1BA,EAAwB,SAAI,WAC5BA,EAA+B,gBAAI,kBACnCA,EAAwB,SAAI,WAC5BA,EAAmD,oCAAI,sCACvDA,EAA+B,gBAAI,kBACnCA,EAAwB,SAAI,UAC/B,CARD,CAQGA,KAAkBA,GAAgB,CAAC,IAEtC,SAAWC,GACPA,EAAqB,SAAI,WACzBA,EAAuC,2BAAI,4BAC9C,CAHD,CAGGA,KAAeA,GAAa,CAAC,KAchC,SAAWC,GACPA,EAAoB,OAAI,SACxBA,EAAsB,SAAI,WAC1BA,EAAsB,SAAI,WAC1BA,EAAsB,SAAI,UAC7B,CALD,CAKGA,KAAgBA,GAAc,CAAC,IAElC,SAAWC,GACPA,EAAoB,OAAI,SACxBA,EAAsB,SAAI,WAC1BA,EAAuB,UAAI,YAC3BA,EAAsB,SAAI,WAC1BA,EAAsB,SAAI,WAC1BA,EAAiD,oCAAI,sCACrDA,EAAsB,SAAI,UAC7B,CARD,CAQGA,KAAgBA,GAAc,CAAC,KAclC,SAAWC,GACPA,EAAqB,QAAI,UACzBA,EAAqB,QAAI,UACzBA,EAAkB,KAAI,OACtBA,EAAyB,YAAI,cAC7BA,EAAyB,YAAI,aAChC,CAND,CAMGA,KAAgBA,GAAc,CAAC,IAC3B,MAAMkB,WAAqC,GAC9Cz6C,YAAYk6C,GACRnrC,MAAM,CACFhP,KAAM,+BACNy1C,OAAQ,YACL0E,IAEPt8C,KAAKmC,KAAO,+BACZnC,KAAK43C,OAAS,SACd33C,OAAOmR,eAAepR,KAAM68C,GAA6BxrC,UAC7D,GAGJ,SAAWuqC,GACPA,EAA4B,cAAI,gBAChCA,EAAkB,IAAI,KACzB,CAHD,CAGGA,KAAiBA,GAAe,CAAC,IAEpC,SAAWC,GACPA,EAAwB,UAAI,YAC5BA,EAAqB,OAAI,SACzBA,EAA0B,YAAI,aACjC,CAJD,CAIGA,KAAiBA,GAAe,CAAC,IAEpC,SAAWC,GACPA,EAAuB,OAAI,SAC3BA,EAAoB,IAAI,KAC3B,CAHD,CAGGA,KAAmBA,GAAiB,CAAC,KA0BxC,SAAWC,GACPA,EAAwB,UAAI,YAC5BA,EAAyB,WAAI,aAC7BA,EAAwB,UAAI,YAC5BA,EAAqB,OAAI,SACzBA,EAA0B,YAAI,aACjC,CAND,CAMGA,KAAiBA,GAAe,CAAC,IAEpC,SAAWC,GACPA,EAA2B,KAAI,OAC/BA,EAA2B,KAAI,OAC/BA,EAA2B,KAAI,MAClC,CAJD,CAIGA,KAAyBA,GAAuB,CAAC,IAEpD,SAAWC,GACPA,EAAiB,IAAI,MACrBA,EAA2B,cAAI,gBAC/BA,EAAiB,IAAI,KACxB,CAJD,CAIGA,KAAgBA,GAAc,CAAC,KAclC,SAAWC,GACPA,EAA0B,OAAI,SAC9BA,EAA4B,SAAI,WAChCA,EAA6B,UAAI,YACjCA,EAAiC,cAAI,gBACrCA,EAA4B,SAAI,UACnC,CAND,CAMGA,KAAsBA,GAAoB,CAAC,KAwF9C,SAAWC,GACPA,EAAuB,eAAI,iBAC3BA,EAAiC,yBAAI,2BACrCA,EAAc,MAAI,QAClBA,EAA4B,oBAAI,qBACnC,CALD,CAKGA,KAAWA,GAAS,CAAC,KA8DxB,SAAWC,GACPA,EAAeU,MAAQ,CAACj8C,EAAOk8C,SACXx8C,IAAZM,EAAMm8C,EACCD,EAAQC,EAAEn8C,EAAMm8C,QACXz8C,IAAZM,EAAMo8C,EACCF,EAAQE,EAAEp8C,EAAMo8C,QACX18C,IAAZM,EAAMq8C,EACCH,EAAQG,EAAEr8C,EAAMq8C,QACV38C,IAAbM,EAAMs8C,GACCJ,EAAQI,GAAGt8C,EAAMs8C,SACX58C,IAAbM,EAAMu8C,GACCL,EAAQK,GAAGv8C,EAAMu8C,SACX78C,IAAbM,EAAMw8C,GACCN,EAAQM,GAAGx8C,EAAMw8C,SACZ98C,IAAZM,EAAMy8C,EACCP,EAAQO,EAAEz8C,EAAMy8C,QACX/8C,IAAZM,EAAM8gB,EACCo7B,EAAQp7B,EAAE9gB,EAAM8gB,QACRphB,IAAfM,EAAM08C,KACCR,EAAQQ,KAAK18C,EAAM08C,WACXh9C,IAAfM,EAAM28C,KACCT,EAAQS,KAAK38C,EAAM28C,MACvBT,EAAQ9G,EAAEp1C,EAAM48C,SAAS,GAAI58C,EAAM48C,SAAS,GAE1D,CAxBD,CAwBGrB,KAAmBA,GAAiB,CAAC,IAejC,MA4MMsB,GAA8C1pC,IAAQ,IAC5DA,IAKM2pC,GAA+C3pC,IAAQ,IAC7DA,IAiQM4pC,GAAoC5pC,QAC/BzT,IAAVyT,EAAIgpC,EACG,CAAEA,EAAGhpC,EAAIgpC,QACNz8C,IAAVyT,EAAIipC,EACG,CAAEA,EAAGjpC,EAAIipC,QACN18C,IAAVyT,EAAIkpC,EACG,CAAEA,EAAGlpC,EAAIkpC,QACL38C,IAAXyT,EAAImpC,GACG,CAAEA,GAAInpC,EAAImpC,SACN58C,IAAXyT,EAAIopC,GACG,CAAEA,GAAIppC,EAAIopC,SACN78C,IAAXyT,EAAIqpC,GACG,CAAEA,GAAIrpC,EAAIqpC,SACP98C,IAAVyT,EAAIspC,EACG,CACHA,EAAGr9C,OAAOqL,QAAQ0I,EAAIspC,GAAGxkC,QAAO,CAAC+kC,GAAMp7C,EAAK5B,MAAag9C,EAAIp7C,GAAOm7C,GAAiC/8C,GAASg9C,IAAM,CAAC,SAE/Gt9C,IAAVyT,EAAI2N,EACG,CAAEA,EAAG3N,EAAI2N,EAAEhb,KAAK+F,GAASkxC,GAAiClxC,WACpDnM,IAAbyT,EAAIupC,KACG,CAAEA,KAAMvpC,EAAIupC,WACNh9C,IAAbyT,EAAIwpC,KACG,CAAEA,KAAMxpC,EAAIwpC,WACFj9C,IAAjByT,EAAIypC,SACG,CAAE,CAACzpC,EAAIypC,SAAS,IAAK,gBADhC,EAyDSK,GAA2C9pC,IAAQ,IACzDA,KACCA,EAAI+pC,mBAAqB,CACzBA,kBAAmB99C,OAAOqL,QAAQ0I,EAAI+pC,mBAAmBjlC,QAAO,CAAC+kC,GAAMp7C,EAAK5B,MAAag9C,EAAIp7C,GAAOm7C,GAAiC/8C,GAASg9C,IAAM,CAAC,MAyDhJG,GAA4ChqC,IAAQ,IAC1DA,KACCA,EAAIiqC,OAAS,CAAEA,MAAOL,GAAiC5pC,EAAIiqC,WAC3DjqC,EAAIkqC,oBAAsB,CAC1BA,mBAAoBlqC,EAAIkqC,mBAAmBv3C,KAAK+F,GAASkxC,GAAiClxC,QA8FrFyxC,GAAsCnqC,IAAQ,IACpDA,KACCA,EAAIoqC,YAAc,CAClBA,WAAYn+C,OAAOqL,QAAQ0I,EAAIoqC,YAAYtlC,QAAO,CAAC+kC,GAAMp7C,EAAK5B,MAAag9C,EAAIp7C,GAAOm7C,GAAiC/8C,GAASg9C,IAAM,CAAC,OAEvI7pC,EAAIqqC,uBAAyB,CAC7BA,sBAAuBP,GAAwC9pC,EAAIqqC,0BAoF9DC,GAAqCtqC,IAAQ,IACnDA,KACCA,EAAIuqC,KAAO,CACXA,IAAKt+C,OAAOqL,QAAQ0I,EAAIuqC,KAAKzlC,QAAO,CAAC+kC,GAAMp7C,EAAK5B,MAAag9C,EAAIp7C,GAAOm7C,GAAiC/8C,GAASg9C,IAAM,CAAC,OAEzH7pC,EAAIwqC,kBAAoB,CACxBA,iBAAkBv+C,OAAOqL,QAAQ0I,EAAIwqC,kBAAkB1lC,QAAO,CAAC+kC,GAAMp7C,EAAK5B,MAAag9C,EAAIp7C,GApT7C,CAACuR,IAAQ,IACxDA,KACCA,EAAIiqC,OAAS,CAAEA,MAAOL,GAAiC5pC,EAAIiqC,UAkTuCQ,CAAuC59C,GAASg9C,IAAM,CAAC,OAEzJ7pC,EAAI0qC,UAAY,CAChBA,SAAUz+C,OAAOqL,QAAQ0I,EAAI0qC,UAAU5lC,QAAO,CAAC+kC,GAAMp7C,EAAK5B,MAAag9C,EAAIp7C,GAAOu7C,GAAyCn9C,GAASg9C,IAAM,CAAC,OAE3I7pC,EAAI2qC,2BAA6B,CACjCA,0BAA2B1+C,OAAOqL,QAAQ0I,EAAI2qC,2BAA2B7lC,QAAO,CAAC+kC,GAAMp7C,EAAK5B,MAAag9C,EAAIp7C,GAAOm7C,GAAiC/8C,GAASg9C,IAAM,CAAC,MClcvKe,GAAsDnoB,MAAOllB,EAAQymB,KACvE,MAAM6mB,EAAe,IACdttC,EACHqlB,WAAYkoB,GAAevtC,EAAOqlB,KAAMoB,IAEtCmgB,EAAY4G,GAAsBxtC,EAAQstC,EAAajoB,MACvDqhB,EAAa4G,EAAajoB,KAChC,GAAkB,CACdrlB,SACA0mC,aACAC,cAAe,GACfC,aACF,EAygDA6G,GAA+CvoB,MAAOllB,EAAQymB,KAChE,MAAM6mB,EAAe,IACdttC,EACHqlB,WAAYkoB,GAAevtC,EAAOqlB,KAAMoB,IAEtCmgB,EAAY4G,GAAsBxtC,EAAQstC,EAAajoB,MAC7D,OAAQuhB,GACJ,IAAK,kCACL,IAAK,yDACD,YAAY8G,GAA8DJ,EAAc7mB,GAC5F,IAAK,sBACL,IAAK,6CACD,YAAYknB,GAAkDL,EAAc7mB,GAChF,IAAK,2BACL,IAAK,kDACD,YAAYmnB,GAAuDN,EAAc7mB,GACrF,IAAK,2CACL,IAAK,kEACD,YAAYonB,GAAuEP,EAAc7mB,GACrG,IAAK,yCACL,IAAK,gEACD,YAAYqnB,GAAqER,EAAc7mB,GACnG,IAAK,uBACL,IAAK,8CACD,YAAYsnB,GAAmDT,EAAc7mB,GACjF,IAAK,4BACL,IAAK,mDACD,YAAYunB,GAAwDV,EAAc7mB,GACtF,IAAK,+BACL,IAAK,sDACD,YAAYwnB,GAA2DX,EAAc7mB,GACzF,QACI,MAAMigB,EAAa4G,EAAajoB,KAChC,GAAkB,CACdrlB,SACA0mC,aACAC,cAAe,GACfC,cAEZ,EAwJE8G,GAAgExoB,MAAOooB,EAAc7mB,KACvF,MAAMpB,EAAOioB,EAAajoB,KACpB6oB,EAAeC,GAAsD9oB,EAAMoB,GAC3E8f,EAAY,IAAI8E,GAAgC,CAClD3e,UAAW,GAAoB4gB,MAC5BY,IAEP,OAAO,GAA2B3H,EAAWlhB,EAAK,EA4FhDsoB,GAAoDzoB,MAAOooB,EAAc7mB,KAC3E,MAAMpB,EAAOioB,EAAajoB,KACpB6oB,EAAeE,GAA0C/oB,EAAMoB,GAC/D8f,EAAY,IAAIuE,GAAoB,CACtCpe,UAAW,GAAoB4gB,MAC5BY,IAEP,OAAO,GAA2B3H,EAAWlhB,EAAK,EAEhDuoB,GAAyD1oB,MAAOooB,EAAc7mB,KAChF,MAAMpB,EAAOioB,EAAajoB,KACpB6oB,EAAeG,GAA+ChpB,EAAMoB,GACpE8f,EAAY,IAAI0E,GAAyB,CAC3Cve,UAAW,GAAoB4gB,MAC5BY,IAEP,OAAO,GAA2B3H,EAAWlhB,EAAK,EAoBhDwoB,GAAyE3oB,MAAOooB,EAAc7mB,KAChG,MAAMpB,EAAOioB,EAAajoB,KACpB6oB,EAAeI,GAA+DjpB,EAAMoB,GACpF8f,EAAY,IAAI6E,GAAyC,CAC3D1e,UAAW,GAAoB4gB,MAC5BY,IAEP,OAAO,GAA2B3H,EAAWlhB,EAAK,EAoBhDyoB,GAAuE5oB,MAAOooB,EAAc7mB,KAC9F,MAAMpB,EAAOioB,EAAajoB,KACpB6oB,EAAeK,GAA6DlpB,EAAMoB,GAClF8f,EAAY,IAAI2E,GAAuC,CACzDxe,UAAW,GAAoB4gB,MAC5BY,IAEP,OAAO,GAA2B3H,EAAWlhB,EAAK,EAoBhD0oB,GAAqD7oB,MAAOooB,EAAc7mB,KAC5E,MAAMpB,EAAOioB,EAAajoB,KACpB6oB,EAAeM,GAA2CnpB,EAAMoB,GAChE8f,EAAY,IAAIyE,GAAqB,CACvCte,UAAW,GAAoB4gB,MAC5BY,IAEP,OAAO,GAA2B3H,EAAWlhB,EAAK,EAWhD2oB,GAA0D9oB,MAAOooB,EAAc7mB,KACjF,MAAMpB,EAAOioB,EAAajoB,KACpB6oB,EAAeO,GAAgDppB,EAAMoB,GACrE8f,EAAY,IAAI4E,GAA0B,CAC5Cze,UAAW,GAAoB4gB,MAC5BY,IAEP,OAAO,GAA2B3H,EAAWlhB,EAAK,EAsChD4oB,GAA6D/oB,MAAOooB,EAAc7mB,KACpF,MAAMpB,EAAOioB,EAAajoB,KACpB6oB,EAAeQ,GAAmDrpB,EAAMoB,GACxE8f,EAAY,IAAI+E,GAA6B,CAC/C5e,UAAW,GAAoB4gB,MAC5BY,IAEP,OAAO,GAA2B3H,EAAWlhB,EAAK,EA+BhDspB,GAAuC,CAACt5C,EAAOoxB,IAC1C/3B,OAAOqL,QAAQ1E,GAAOkS,QAAO,CAAC+kC,GAAMp7C,EAAK5B,MAC9B,OAAVA,IAGJg9C,EAAIp7C,GAAO09C,GAAyCt/C,EAAOm3B,IAFhD6lB,IAIZ,CAAC,GAEFuC,GAAqC,CAACx5C,EAAOoxB,IACxCokB,GAAeU,MAAMl2C,EAAO,CAC/Bs2C,EAAIr8C,IAAU,CAAGq8C,EAAGllB,EAAQqoB,cAAcx/C,KAC1C28C,KAAO38C,IAAU,CAAG28C,KAAM38C,IAC1Bw8C,GAAKx8C,IAAU,CAAGw8C,GAAIiD,GAA4Cz/C,EAAOm3B,KACzErW,EAAI9gB,IAAU,CAAG8gB,EAAG4+B,GAAuC1/C,EAAOm3B,KAClEslB,EAAIz8C,IAAU,CAAGy8C,EAAGkD,GAAsC3/C,EAAOm3B,KACjEilB,EAAIp8C,IAAU,CAAGo8C,EAAGp8C,IACpBu8C,GAAKv8C,IAAU,CAAGu8C,GAAIqD,GAA4C5/C,EAAOm3B,KACzEulB,KAAO18C,IAAU,CAAG08C,KAAM18C,IAC1Bm8C,EAAIn8C,IAAU,CAAGm8C,EAAGn8C,IACpBs8C,GAAKt8C,IAAU,CAAGs8C,GAAIuD,GAA4C7/C,EAAOm3B,KACzEie,EAAG,CAAC9zC,EAAMtB,KAAU,CAAGsB,KAAMtB,MAG/B8/C,GAAyC,CAAC/5C,EAAOoxB,IAC5CpxB,EACFH,QAAQ/C,GAAW,MAALA,IACdiD,KAAKyqC,GACCgP,GAAmChP,EAAOpZ,KAGnDmoB,GAA2C,CAACv5C,EAAOoxB,KAC9C,IACiB,MAAhBpxB,EAAMg6C,QAAkB,CAAEA,OAAQh6C,EAAMg6C,WACzB,MAAfh6C,EAAMq3C,OAAiB,CAAEA,MAAOmC,GAAmCx5C,EAAMq3C,MAAOjmB,MAkFtFsoB,GAA8C,CAAC15C,EAAOoxB,IACjDpxB,EACFH,QAAQ/C,GAAW,MAALA,IACdiD,KAAKyqC,GACCpZ,EAAQqoB,cAAcjP,KA+L/ByP,GAA+C,CAACj6C,EAAOoxB,KAClD,CAAC,GAkEN8oB,GAA2C,CAACl6C,EAAOoxB,IAC9C/3B,OAAOqL,QAAQ1E,GAAOkS,QAAO,CAAC+kC,GAAMp7C,EAAK5B,MAC9B,OAAVA,IAGJg9C,EAAIp7C,GAAOs+C,GAA2ClgD,EAAOm3B,IAFlD6lB,IAIZ,CAAC,GAEFkD,GAA6C,CAACn6C,EAAOoxB,KAChD,IAC6B,MAA5BpxB,EAAMs3C,oBAA8B,CACpCA,mBAAoByC,GAAuC/5C,EAAMs3C,mBAAoBlmB,OAEzD,MAA5BpxB,EAAMm0C,oBAA8B,CAAEA,mBAAoBn0C,EAAMm0C,uBAChD,MAAhBn0C,EAAMo6C,QAAkB,CAAEA,OAAQp6C,EAAMo6C,WACzB,MAAfp6C,EAAMq3C,OAAiB,CAAEA,MAAOmC,GAAmCx5C,EAAMq3C,MAAOjmB,MAgBtFipB,GAAiD,CAACr6C,EAAOoxB,IACpD/3B,OAAOqL,QAAQ1E,GAAOkS,QAAO,CAAC+kC,GAAMp7C,EAAK5B,MAC9B,OAAVA,IAGJg9C,EAAIp7C,GAAO5B,GAFAg9C,IAIZ,CAAC,GAEFqD,GAAkD,CAACt6C,EAAOoxB,IACrD/3B,OAAOqL,QAAQ1E,GAAOkS,QAAO,CAAC+kC,GAAMp7C,EAAK5B,MAC9B,OAAVA,IAGJg9C,EAAIp7C,GAAO29C,GAAmCv/C,EAAOm3B,IAF1C6lB,IAIZ,CAAC,GA+HFsD,GAA0B,CAACv6C,EAAOoxB,IAC7B/3B,OAAOqL,QAAQ1E,GAAOkS,QAAO,CAAC+kC,GAAMp7C,EAAK5B,MAC9B,OAAVA,IAGJg9C,EAAIp7C,GAAO29C,GAAmCv/C,EAAOm3B,IAF1C6lB,IAIZ,CAAC,GAkDF0C,GAAyC,CAAC35C,EAAOoxB,IAC5CpxB,EACFH,QAAQ/C,GAAW,MAALA,IACdiD,KAAKyqC,GACCgP,GAAmChP,EAAOpZ,KAyEnDwoB,GAAwC,CAAC55C,EAAOoxB,IAC3C/3B,OAAOqL,QAAQ1E,GAAOkS,QAAO,CAAC+kC,GAAMp7C,EAAK5B,MAC9B,OAAVA,IAGJg9C,EAAIp7C,GAAO29C,GAAmCv/C,EAAOm3B,IAF1C6lB,IAIZ,CAAC,GASF4C,GAA8C,CAAC75C,EAAOoxB,IACjDpxB,EACFH,QAAQ/C,GAAW,MAALA,IACdiD,KAAKyqC,GACCA,IA2WTsP,GAA8C,CAAC95C,EAAOoxB,IACjDpxB,EACFH,QAAQ/C,GAAW,MAALA,IACdiD,KAAKyqC,GACCA,IA+KTgQ,GAAsC,CAACx6C,EAAOoxB,KACzC,IAC2B,MAA1BpxB,EAAM43C,kBAA4B,CAClCA,iBAAkB0B,GAAqCt5C,EAAM43C,iBAAkBxmB,OAElD,MAA7BpxB,EAAMy6C,qBAA+B,CAAEA,oBAAqBz6C,EAAMy6C,wBACrC,MAA7Bz6C,EAAMo0C,qBAA+B,CAAEA,oBAAqBp0C,EAAMo0C,wBAChD,MAAlBp0C,EAAM83C,UAAoB,CAAEA,SAAUoC,GAAyCl6C,EAAM83C,SAAU1mB,OAC7D,MAAlCpxB,EAAM06C,0BAAoC,CAC1CA,yBAA0BL,GAA+Cr6C,EAAM06C,yBAA0BtpB,OAEtE,MAAnCpxB,EAAM+3C,2BAAqC,CAC3CA,0BAA2BuC,GAAgDt6C,EAAM+3C,0BAA2B3mB,OAE/F,MAAbpxB,EAAM23C,KAAe,CAAEA,IAAK4C,GAAwBv6C,EAAM23C,IAAKvmB,OAC/B,MAAhCpxB,EAAMg0C,wBAAkC,CAAEA,uBAAwBh0C,EAAMg0C,2BACnC,MAArCh0C,EAAMk0C,6BAAuC,CAC7CA,4BAA6Bl0C,EAAMk0C,gCAEb,MAAtBl0C,EAAM26C,cAAwB,CAAEA,aAAc36C,EAAM26C,iBACjC,MAAnB36C,EAAM46C,WAAqB,CAAEA,UAAW56C,EAAM46C,cACpB,MAA1B56C,EAAM66C,kBAA4B,CAAEA,iBAAkB76C,EAAM66C,oBAwGlEC,GAAqC,CAACnwC,EAAQymB,IACzC/3B,OAAOqL,QAAQiG,GAAQuH,QAAO,CAAC+kC,GAAMp7C,EAAK5B,MAC/B,OAAVA,IAGJg9C,EAAIp7C,GAAOk/C,GAAqC,GAAc9gD,GAAQm3B,IAF3D6lB,IAIZ,CAAC,GAaF8D,GAAuC,CAACpwC,EAAQymB,IAClC,MAAZzmB,EAAO2rC,EACA,CACHA,EAAGllB,EAAQ4pB,cAAcrwC,EAAO2rC,SAGH38C,IAAjC,GAAgBgR,EAAOisC,MAChB,CAAEA,KAAM,GAAgBjsC,EAAOisC,OAEzB,MAAbjsC,EAAO8rC,GACA,CACHA,GAAIwE,GAA8CtwC,EAAO8rC,GAAIrlB,IAGrD,MAAZzmB,EAAOoQ,EACA,CACHA,EAAGmgC,GAAyCvwC,EAAOoQ,EAAGqW,IAG9C,MAAZzmB,EAAO+rC,EACA,CACHA,EAAGyE,GAAwCxwC,EAAO+rC,EAAGtlB,SAG5Bz3B,IAA7B,GAAegR,EAAO0rC,GACf,CAAEA,EAAG,GAAe1rC,EAAO0rC,IAErB,MAAb1rC,EAAO6rC,GACA,CACHA,GAAI4E,GAA8CzwC,EAAO6rC,GAAIplB,SAGhCz3B,IAAjC,GAAgBgR,EAAOgsC,MAChB,CAAEA,KAAM,GAAgBhsC,EAAOgsC,YAETh9C,IAA7B,GAAegR,EAAOyrC,GACf,CAAEA,EAAG,GAAezrC,EAAOyrC,IAErB,MAAbzrC,EAAO4rC,GACA,CACHA,GAAI8E,GAA8C1wC,EAAO4rC,GAAInlB,IAG9D,CAAEylB,SAAUx9C,OAAOqL,QAAQiG,GAAQ,IAyLxCswC,GAAgD,CAACtwC,EAAQymB,KAC3D,MAAMkqB,GAAU3wC,GAAU,IACrB9K,QAAQ/C,GAAW,MAALA,IACdiD,KAAKyqC,GACQ,OAAVA,EACO,KAEJpZ,EAAQ4pB,cAAcxQ,KAEjC,OAAO8Q,CAAM,EAoBXC,GAAiC,CAAC5wC,EAAQymB,KACrC,CACHoqB,cAAe,GAAqB7wC,EAAO6wC,eAC3CC,kBAAmB,GAAqB9wC,EAAO8wC,mBAC/CC,mBAAoB,GAAqB/wC,EAAO+wC,sBAGlD5C,GAAwD,CAACnuC,EAAQymB,KAC5D,CACHr2B,QAAS,GAAe4P,EAAO5P,WAGjC4gD,GAAyC,CAAChxC,EAAQymB,KAC7C,CACHoqB,cAAe,GAAqB7wC,EAAO6wC,eAC3CI,uBAAyD,MAAjCjxC,EAAOixC,uBACzBC,GAAkDlxC,EAAOixC,uBAAwBxqB,QACjFz3B,EACNmiD,sBAAuD,MAAhCnxC,EAAOmxC,sBACxBD,GAAkDlxC,EAAOmxC,sBAAuB1qB,QAChFz3B,EACN8hD,kBAAmB,GAAqB9wC,EAAO8wC,mBAC/CM,MAAuB,MAAhBpxC,EAAOoxC,MAAgBR,GAA+B5wC,EAAOoxC,YAAkBpiD,EACtFihD,UAAW,GAAejwC,EAAOiwC,WACjCc,mBAAoB,GAAqB/wC,EAAO+wC,sBAwJlDM,GAAkD,CAACrxC,EAAQymB,KACtD,CACH6qB,UAA+B,MAApBtxC,EAAOsxC,UAAoBC,GAAgCvxC,EAAOsxC,UAAW7qB,QAAWz3B,IA8ErGuiD,GAAkC,CAACvxC,EAAQymB,KAC7C,MAAMkqB,GAAU3wC,GAAU,IACrB9K,QAAQ/C,GAAW,MAALA,IACdiD,KAAKyqC,GACQ,OAAVA,EACO,KAXoB,EAAC7/B,EAAQymB,KACrC,CACH2E,QAAS,GAAeprB,EAAOorB,SAC/BI,qBAAsB,GAAaxrB,EAAOwrB,wBAUnCgmB,CAA+B3R,KAE1C,OAAO8Q,CAAM,EAkSXvC,GAA4C,CAACpuC,EAAQymB,KAChD,CACHr2B,QAAS,GAAe4P,EAAO5P,WAGjCi+C,GAAiD,CAACruC,EAAQymB,KACrD,CACHggB,QAAS,GAAezmC,EAAOymC,WAajCgL,GAAsD,CAACzxC,EAAQymB,IAC1D/3B,OAAOqL,QAAQiG,GAAQuH,QAAO,CAAC+kC,GAAMp7C,EAAK5B,MAC/B,OAAVA,IAGJg9C,EAAIp7C,GAAOk/C,GAAqC,GAAc9gD,GAAQm3B,IAF3D6lB,IAIZ,CAAC,GAEFoF,GAA8C,CAAC1xC,EAAQymB,KAClD,CACH+lB,kBAA+C,MAA5BxsC,EAAOwsC,kBACpBiF,GAAoDzxC,EAAOwsC,kBAAmB/lB,QAC9Ez3B,EACN2iD,oBAAmD,MAA9B3xC,EAAO2xC,oBACtBC,GAAsD5xC,EAAO2xC,oBAAqBlrB,QAClFz3B,IAuBR4iD,GAAwD,CAAC5xC,EAAQymB,KACnE,MAAMkqB,GAAU3wC,GAAU,IACrB9K,QAAQ/C,GAAW,MAALA,IACdiD,KAAKyqC,GACQ,OAAVA,EACO,KAEJ,GAAqBA,KAEhC,OAAO8Q,CAAM,EAEXrC,GAAiE,CAACtuC,EAAQymB,KACrE,CACHr2B,QAAS,GAAe4P,EAAO5P,WA8GjCmgD,GAA2C,CAACvwC,EAAQymB,KACtD,MAAMkqB,GAAU3wC,GAAU,IACrB9K,QAAQ/C,GAAW,MAALA,IACdiD,KAAKyqC,GACQ,OAAVA,EACO,KAEJuQ,GAAqC,GAAcvQ,GAAQpZ,KAEtE,OAAOkqB,CAAM,EA2FXH,GAA0C,CAACxwC,EAAQymB,IAC9C/3B,OAAOqL,QAAQiG,GAAQuH,QAAO,CAAC+kC,GAAMp7C,EAAK5B,MAC/B,OAAVA,IAGJg9C,EAAIp7C,GAAOk/C,GAAqC,GAAc9gD,GAAQm3B,IAF3D6lB,IAIZ,CAAC,GAaFmE,GAAgD,CAACzwC,EAAQymB,KAC3D,MAAMkqB,GAAU3wC,GAAU,IACrB9K,QAAQ/C,GAAW,MAALA,IACdiD,KAAKyqC,GACQ,OAAVA,EACO,KAEJ,GAAeA,KAE1B,OAAO8Q,CAAM,EAwDXpC,GAA+D,CAACvuC,EAAQymB,KACnE,CACHr2B,QAAS,GAAe4P,EAAO5P,WAqOjCo+C,GAA6C,CAACxuC,EAAQymB,KACjD,CACHr2B,QAAS,GAAe4P,EAAO5P,WAQjCq+C,GAAkD,CAACzuC,EAAQymB,KACtD,CACHr2B,QAAS,GAAe4P,EAAO5P,WA6CjC8gD,GAAoD,CAAClxC,EAAQymB,IACxD/3B,OAAOqL,QAAQiG,GAAQuH,QAAO,CAAC+kC,GAAMp7C,EAAK5B,MAC/B,OAAVA,IAGJg9C,EAAIp7C,GAAO0/C,GAA+BthD,IAF/Bg9C,IAIZ,CAAC,GA2DFoE,GAAgD,CAAC1wC,EAAQymB,KAC3D,MAAMkqB,GAAU3wC,GAAU,IACrB9K,QAAQ/C,GAAW,MAALA,IACdiD,KAAKyqC,GACQ,OAAVA,EACO,KAEJ,GAAeA,KAE1B,OAAO8Q,CAAM,EAyJXjC,GAAqD,CAAC1uC,EAAQymB,KACzD,CACHr2B,QAAS,GAAe4P,EAAO5P,WA+CjCyhD,GAAyC,CAAC7xC,EAAQymB,KAC7C,CACHomB,WAAiC,MAArB7sC,EAAO6sC,WAAqBsD,GAAmCnwC,EAAO6sC,WAAYpmB,QAAWz3B,EACzG8iD,iBAA6C,MAA3B9xC,EAAO8xC,iBACnBd,GAAuChxC,EAAO8xC,iBAAkBrrB,QAChEz3B,EACN89C,sBAAuD,MAAhC9sC,EAAO8sC,sBACxB4E,GAA4C1xC,EAAO8sC,sBAAuBrmB,QAC1Ez3B,IAyCR,GAAuBgR,IAAW,CACpC0tB,eAAgB1tB,EAAO7H,WACvB4uC,UAAW/mC,EAAOlC,QAAQ,qBAAuBkC,EAAOlC,QAAQ,sBAAwBkC,EAAOlC,QAAQ,oBACvGkpC,kBAAmBhnC,EAAOlC,QAAQ,cAClCmpC,KAAMjnC,EAAOlC,QAAQ,iBAEnBi0C,GAAc,CAACC,EAAa,IAAIh3B,WAAcyL,IAC5CurB,aAAsBh3B,WACfnpB,QAAQC,QAAQkgD,GAEpBvrB,EAAQwrB,gBAAgBD,IAAengD,QAAQC,QAAQ,IAAIkpB,YAGhEk3B,GAAsBhtB,MAAOuB,EAAS3oB,EAAS9J,EAAMm+C,EAAkB9sB,KACzE,MAAM,SAAE5hB,EAAQ,SAAEnD,EAAW,QAAO,KAAE6E,EAAMnR,KAAMo+C,SAAmB3rB,EAAQE,WACvE5f,EAAW,CACbzG,WACAmD,WACA0B,OACAJ,OAAQ,OACR/Q,KAAMo+C,EAASttB,SAAS,KAAOstB,EAAS1xB,MAAM,GAAI,GAAK1sB,EAAOo+C,EAAWp+C,EACzE8J,WAQJ,YANyB9O,IAArBmjD,IACAprC,EAAStD,SAAW0uC,QAEXnjD,IAATq2B,IACAte,EAASse,KAAOA,GAEb,IAAI,EAActe,EAAS,EAEhCsrC,GAAY,CAACL,EAAYvrB,IAnBL,EAACurB,EAAYvrB,IAAYsrB,GAAYC,EAAYvrB,GAASn0B,MAAM+yB,GAASoB,EAAQ6rB,YAAYjtB,KAmB5EktB,CAAkBP,EAAYvrB,GAASn0B,MAAMopC,GAChFA,EAAQ1qC,OACD+L,KAAKmK,MAAMw0B,GAEf,CAAC,IAEN6R,GAAiBroB,MAAOstB,EAAW/rB,KACrC,MAAMn3B,QAAc+iD,GAAUG,EAAW/rB,GAEzC,OADAn3B,EAAMc,QAAUd,EAAMc,SAAWd,EAAMm3C,QAChCn3C,CAAK,EAEVk+C,GAAwB,CAACxtC,EAAQrE,KACnC,MACM82C,EAAqBC,IACvB,IAAIC,EAAaD,EAajB,MAZ0B,iBAAfC,IACPA,EAAaA,EAAWjiD,YAExBiiD,EAAW1mC,QAAQ,MAAQ,IAC3B0mC,EAAaA,EAAW19C,MAAM,KAAK,IAEnC09C,EAAW1mC,QAAQ,MAAQ,IAC3B0mC,EAAaA,EAAW19C,MAAM,KAAK,IAEnC09C,EAAW1mC,QAAQ,MAAQ,IAC3B0mC,EAAaA,EAAW19C,MAAM,KAAK,IAEhC09C,CAAU,EAEfC,GAjBW1jC,EAiBSlP,EAAOlC,QAjBR5M,EAiBiB,mBAjBTxC,OAAOqC,KAAKme,GAAQwlB,MAAM5lC,GAAMA,EAAE4U,gBAAkBxS,EAAIwS,iBAAzE,IAACwL,EAAQhe,EAkBzB,YAAkBlC,IAAd4jD,EACOH,EAAkBzyC,EAAOlC,QAAQ80C,SAE1B5jD,IAAd2M,EAAKhB,KACE83C,EAAkB92C,EAAKhB,WAEX3L,IAAnB2M,EAAa,OACN82C,EAAkB92C,EAAa,aAD1C,CAEA,ECrqMG,MAAMk3C,WAAiC,GAC1ChiD,YAAYwE,GACRuK,QACAnR,KAAK4G,MAAQA,CACjB,CACA4B,0CACI,MAAO,CACH67C,QAAS,CAAE9uB,KAAM,gBAAiBpzB,KAAM,mBACxCm4B,SAAU,CAAE/E,KAAM,gBAAiBpzB,KAAM,YACzCmiD,OAAQ,CAAE/uB,KAAM,gBAAiBpzB,KAAM,UACvCoiD,aAAc,CAAEhvB,KAAM,gBAAiBpzB,KAAM,wBAErD,CACA2xC,kBAAkBvc,EAAaitB,EAAe/+C,GAC1CzF,KAAK2zC,gBAAgBnB,IAAI7a,EAAe6sB,EAAexkD,KAAKozC,UAAWpzC,KAAKszC,cAC5EtzC,KAAK2zC,gBAAgBnB,IAAInX,EAAkBmpB,EAAeJ,GAAyBpqB,qCACnF,MAAMnI,EAAQ0F,EAAY5lB,OAAO3R,KAAK2zC,kBAChC,OAAEhW,GAAW6mB,EAGbC,EAA0B,CAC5B9mB,SACAF,WAJe,iBAKfC,YAJgB,2BAKhBE,wBAAyB8f,GACzB7f,yBAA0B8f,KAExB,eAAEvgB,GAAmBonB,EAC3B,OAAO3yB,EAAMxuB,SAAS6P,GAAYkqB,EAAesnB,OAAOxxC,EAAQA,QAASzN,GAAW,CAAC,IAAIg/C,EAC7F,CACArR,UAAUxsC,EAAOoxB,GACb,MD6EoDvB,OAAO7vB,EAAOoxB,KAKtE,IAAIpB,EAEJ,OADAA,EAAOtoB,KAAK1C,UAAUi1C,GAA6Cj6C,EAAOoxB,IACnEyrB,GAAoBzrB,EANX,CACZ,eAAgB,6BAChB,eAAgB,uCAIyB,SAAKz3B,EAAWq2B,EAAK,ECpFvD+tB,CAA6C/9C,EAAOoxB,EAC/D,CACAsb,YAAY/hC,EAAQymB,GAChB,MDw8BsDvB,OAAOllB,EAAQymB,KACzE,GAAIzmB,EAAO7H,YAAc,IACrB,OAAOk1C,GAAoDrtC,EAAQymB,GAEvE,MAAM9qB,QAAa02C,GAAUryC,EAAOqlB,KAAMoB,GAC1C,IAAI1f,EAAW,CAAC,EAChBA,EAAWsqC,GAAgD11C,EAAM8qB,GACjE,MAAMzjB,EAAW,CACb0pB,UAAW,GAAoB1sB,MAC5B+G,GAEP,OAAOlV,QAAQC,QAAQkR,EAAS,ECn9BrBqwC,CAA+CrzC,EAAQymB,EAClE,ECxCG,M,aCCA,MAAM6sB,WAA4B,GACrCziD,YAAYqD,GACR0L,MAAM1L,GACNxF,OAAOmR,eAAepR,KAAM6kD,GAAoBxzC,UACpD,ECJG,MAAMyzC,WAA8B,GACvC1iD,YAAYk6C,GACRnrC,MAAM,CACFhP,KAAM,wBACNy1C,OAAQ,YACL0E,IAEPt8C,KAAKmC,KAAO,wBACZnC,KAAK43C,OAAS,SACd33C,OAAOmR,eAAepR,KAAM8kD,GAAsBzzC,UACtD,EAEG,MAAM0zC,WAAyC,GAClD3iD,YAAYk6C,GACRnrC,MAAM,CACFhP,KAAM,mCACNy1C,OAAQ,YACL0E,IAEPt8C,KAAKmC,KAAO,mCACZnC,KAAK43C,OAAS,SACd33C,OAAOmR,eAAepR,KAAM+kD,GAAiC1zC,UACjE,EAEG,MAAM2zC,WAAsC,GAC/C5iD,YAAYk6C,GACRnrC,MAAM,CACFhP,KAAM,gCACNy1C,OAAQ,YACL0E,IAEPt8C,KAAKmC,KAAO,gCACZnC,KAAK43C,OAAS,SACd33C,OAAOmR,eAAepR,KAAMglD,GAA8B3zC,UAC9D,EAEG,MAAM4zC,WAAgC,GACzC7iD,YAAYk6C,GACRnrC,MAAM,CACFhP,KAAM,0BACNy1C,OAAQ,YACL0E,IAEPt8C,KAAKmC,KAAO,0BACZnC,KAAK43C,OAAS,SACd33C,OAAOmR,eAAepR,KAAMilD,GAAwB5zC,UACxD,EAEG,MAAM6zC,WAAkC,GAC3C9iD,YAAYk6C,GACRnrC,MAAM,CACFhP,KAAM,4BACNy1C,OAAQ,YACL0E,IAEPt8C,KAAKmC,KAAO,4BACZnC,KAAK43C,OAAS,SACd33C,OAAOmR,eAAepR,KAAMklD,GAA0B7zC,UAC1D,EAEG,MAAM8zC,WAAsC,GAC/C/iD,YAAYk6C,GACRnrC,MAAM,CACFhP,KAAM,gCACNy1C,OAAQ,YACL0E,IAEPt8C,KAAKmC,KAAO,gCACZnC,KAAK43C,OAAS,SACd33C,OAAOmR,eAAepR,KAAMmlD,GAA8B9zC,UAC9D,EAEG,MAAM+zC,WAAuC,GAChDhjD,YAAYk6C,GACRnrC,MAAM,CACFhP,KAAM,iCACNy1C,OAAQ,YACL0E,IAEPt8C,KAAKmC,KAAO,iCACZnC,KAAK43C,OAAS,SACd33C,OAAOmR,eAAepR,KAAMolD,GAA+B/zC,UAC/D,EAcG,MASMg0C,GAAuCrxC,IAAQ,IACrDA,IAKMsxC,GAAwCtxC,IAAQ,IACtDA,IAQMuxC,GAAsDvxC,IAAQ,IACpEA,IAEMwxC,GAAuDxxC,IAAQ,IACrEA,I,eCxHA,MA6GDyxC,GAA6ChvB,MAAOllB,EAAQymB,KAC9D,MAAM6mB,EAAe,IACdttC,EACHqlB,WAAY,GAAerlB,EAAOqlB,KAAMoB,IAEtCmgB,EAAYuN,GAAmBn0C,EAAQstC,EAAajoB,MAC1D,OAAQuhB,GACJ,IAAK,wBACL,IAAK,0CACD,YAAYwN,GAAkD9G,EAAc7mB,GAChF,IAAK,0BACL,IAAK,qDACD,YAAY4tB,GAA6D/G,EAAc7mB,GAC3F,IAAK,uBACL,IAAK,kDACD,YAAY6tB,GAA0DhH,EAAc7mB,GACxF,IAAK,0BACL,IAAK,4CACD,YAAY8tB,GAAoDjH,EAAc7mB,GAClF,QACI,MAAMigB,EAAa4G,EAAajoB,KAChC,GAAkB,CACdrlB,SACA0mC,WAAYA,EAAWpyC,MACvBqyC,cAAe,GACfC,cAEZ,EA+DE4N,GAA4DtvB,MAAOllB,EAAQymB,KAC7E,MAAM6mB,EAAe,IACdttC,EACHqlB,WAAY,GAAerlB,EAAOqlB,KAAMoB,IAEtCmgB,EAAYuN,GAAmBn0C,EAAQstC,EAAajoB,MAC1D,OAAQuhB,GACJ,IAAK,wBACL,IAAK,0CACD,YAAYwN,GAAkD9G,EAAc7mB,GAChF,IAAK,wBACL,IAAK,mDACD,YAAYguB,GAA2DnH,EAAc7mB,GACzF,IAAK,mBACL,IAAK,8CACD,YAAYiuB,GAAsDpH,EAAc7mB,GACpF,IAAK,uBACL,IAAK,kDACD,YAAYkuB,GAA0DrH,EAAc7mB,GACxF,IAAK,0BACL,IAAK,qDACD,YAAY4tB,GAA6D/G,EAAc7mB,GAC3F,IAAK,uBACL,IAAK,kDACD,YAAY6tB,GAA0DhH,EAAc7mB,GACxF,IAAK,0BACL,IAAK,4CACD,YAAY8tB,GAAoDjH,EAAc7mB,GAClF,QACI,MAAMigB,EAAa4G,EAAajoB,KAChC,GAAkB,CACdrlB,SACA0mC,WAAYA,EAAWpyC,MACvBqyC,cAAe,GACfC,cAEZ,EAiKEwN,GAAoDlvB,MAAOooB,EAAc7mB,KAC3E,MAAMpB,EAAOioB,EAAajoB,KACpB6oB,EAAe0G,GAA0CvvB,EAAK/wB,MAAOmyB,GACrE8f,EAAY,IAAIgN,GAAsB,CACxC7mB,UAAW,GAAoB4gB,MAC5BY,IAEP,OAAO,GAA2B3H,EAAWlhB,EAAK,EAEhDovB,GAA6DvvB,MAAOooB,EAAc7mB,KACpF,MAAMpB,EAAOioB,EAAajoB,KACpB6oB,EAAe2G,GAAmDxvB,EAAK/wB,MAAOmyB,GAC9E8f,EAAY,IAAIsN,GAA+B,CACjDnnB,UAAW,GAAoB4gB,MAC5BY,IAEP,OAAO,GAA2B3H,EAAWlhB,EAAK,EAEhDqvB,GAAwDxvB,MAAOooB,EAAc7mB,KAC/E,MAAMpB,EAAOioB,EAAajoB,KACpB6oB,EAAe4G,GAA8CzvB,EAAK/wB,MAAOmyB,GACzE8f,EAAY,IAAIoN,GAA0B,CAC5CjnB,UAAW,GAAoB4gB,MAC5BY,IAEP,OAAO,GAA2B3H,EAAWlhB,EAAK,EAWhDsvB,GAA4DzvB,MAAOooB,EAAc7mB,KACnF,MAAMpB,EAAOioB,EAAajoB,KACpB6oB,EAAe6G,GAAkD1vB,EAAK/wB,MAAOmyB,GAC7E8f,EAAY,IAAIqN,GAA8B,CAChDlnB,UAAW,GAAoB4gB,MAC5BY,IAEP,OAAO,GAA2B3H,EAAWlhB,EAAK,EAEhDgvB,GAA+DnvB,MAAOooB,EAAc7mB,KACtF,MAAMpB,EAAOioB,EAAajoB,KACpB6oB,EAAe8G,GAAqD3vB,EAAK/wB,MAAOmyB,GAChF8f,EAAY,IAAIiN,GAAiC,CACnD9mB,UAAW,GAAoB4gB,MAC5BY,IAEP,OAAO,GAA2B3H,EAAWlhB,EAAK,EAEhDivB,GAA4DpvB,MAAOooB,EAAc7mB,KACnF,MAAMpB,EAAOioB,EAAajoB,KACpB6oB,EAAe+G,GAAkD5vB,EAAK/wB,MAAOmyB,GAC7E8f,EAAY,IAAIkN,GAA8B,CAChD/mB,UAAW,GAAoB4gB,MAC5BY,IAEP,OAAO,GAA2B3H,EAAWlhB,EAAK,EAEhDkvB,GAAsDrvB,MAAOooB,EAAc7mB,KAC7E,MAAMpB,EAAOioB,EAAajoB,KACpB6oB,EAAegH,GAA4C7vB,EAAK/wB,MAAOmyB,GACvE8f,EAAY,IAAImN,GAAwB,CAC1ChnB,UAAW,GAAoB4gB,MAC5BY,IAEP,OAAO,GAA2B3H,EAAWlhB,EAAK,EAEhD8vB,GAAsC,CAAC9/C,EAAOoxB,KAChD,MAAM1sB,EAAU,CAAC,EAOjB,GANqB,MAAjB1E,EAAM+/C,UACNr7C,EAAiB,QAAI1E,EAAM+/C,SAEF,MAAzB//C,EAAMggD,kBACNt7C,EAAyB,gBAAI1E,EAAMggD,iBAEf,MAApBhgD,EAAMigD,WAAoB,CAC1B,MAAMC,EAAgBC,GAA2CngD,EAAMigD,WAAY7uB,GAClD,IAA7BpxB,EAAMigD,YAAYtkD,SAClB+I,EAAQu7C,WAAa,IAEzB5mD,OAAOqL,QAAQw7C,GAAe59B,SAAQ,EAAEzmB,EAAK5B,MAEzCyK,EADY,cAAc7I,KACX5B,CAAK,GAE5B,CAOA,GANoB,MAAhB+F,EAAMogD,SACN17C,EAAgB,OAAI1E,EAAMogD,QAED,MAAzBpgD,EAAMqgD,kBACN37C,EAAyB,gBAAI1E,EAAMqgD,iBAErB,MAAdrgD,EAAMsgD,KAAc,CACpB,MAAMJ,EAAgBK,GAA8BvgD,EAAMsgD,KAAMlvB,GACrC,IAAvBpxB,EAAMsgD,MAAM3kD,SACZ+I,EAAQ47C,KAAO,IAEnBjnD,OAAOqL,QAAQw7C,GAAe59B,SAAQ,EAAEzmB,EAAK5B,MAEzCyK,EADY,QAAQ7I,KACL5B,CAAK,GAE5B,CACA,GAA+B,MAA3B+F,EAAMwgD,kBAA2B,CACjC,MAAMN,EAAgBO,GAAiCzgD,EAAMwgD,kBAAmBpvB,GACxC,IAApCpxB,EAAMwgD,mBAAmB7kD,SACzB+I,EAAQ87C,kBAAoB,IAEhCnnD,OAAOqL,QAAQw7C,GAAe59B,SAAQ,EAAEzmB,EAAK5B,MAEzCyK,EADY,qBAAqB7I,KAClB5B,CAAK,GAE5B,CAaA,OAZwB,MAApB+F,EAAM0gD,aACNh8C,EAAoB,WAAI1E,EAAM0gD,YAER,MAAtB1gD,EAAM2gD,eACNj8C,EAAsB,aAAI1E,EAAM2gD,cAEb,MAAnB3gD,EAAM4gD,YACNl8C,EAAmB,UAAI1E,EAAM4gD,WAEL,MAAxB5gD,EAAM6gD,iBACNn8C,EAAwB,eAAI1E,EAAM6gD,gBAE/Bn8C,CAAO,EA+BZo8C,GAAqD,CAAC9gD,EAAOoxB,KAC/D,MAAM1sB,EAAU,CAAC,EAajB,GAZqB,MAAjB1E,EAAM+/C,UACNr7C,EAAiB,QAAI1E,EAAM+/C,SAEF,MAAzB//C,EAAMggD,kBACNt7C,EAAyB,gBAAI1E,EAAMggD,iBAET,MAA1BhgD,EAAM+gD,mBACNr8C,EAA0B,iBAAI1E,EAAM+gD,kBAEhB,MAApB/gD,EAAMghD,aACNt8C,EAAoB,WAAI1E,EAAMghD,YAEV,MAApBhhD,EAAMigD,WAAoB,CAC1B,MAAMC,EAAgBC,GAA2CngD,EAAMigD,WAAY7uB,GAClD,IAA7BpxB,EAAMigD,YAAYtkD,SAClB+I,EAAQu7C,WAAa,IAEzB5mD,OAAOqL,QAAQw7C,GAAe59B,SAAQ,EAAEzmB,EAAK5B,MAEzCyK,EADY,cAAc7I,KACX5B,CAAK,GAE5B,CAOA,OANoB,MAAhB+F,EAAMogD,SACN17C,EAAgB,OAAI1E,EAAMogD,QAED,MAAzBpgD,EAAMqgD,kBACN37C,EAAyB,gBAAI1E,EAAMqgD,iBAEhC37C,CAAO,EAkEZy7C,GAA6C,CAACngD,EAAOoxB,KACvD,MAAM1sB,EAAU,CAAC,EACjB,IAAIu8C,EAAU,EACd,IAAK,MAAMzW,KAASxqC,EAAO,CACvB,GAAc,OAAVwqC,EACA,SAEJ,MAAM0V,EAAgBgB,GAAuC1W,EAAOpZ,GACpE/3B,OAAOqL,QAAQw7C,GAAe59B,SAAQ,EAAEzmB,EAAK5B,MACzCyK,EAAQ,UAAUu8C,KAAWplD,KAAS5B,CAAK,IAE/CgnD,GACJ,CACA,OAAOv8C,CAAO,EAEZw8C,GAAyC,CAAClhD,EAAOoxB,KACnD,MAAM1sB,EAAU,CAAC,EAIjB,OAHiB,MAAb1E,EAAMiyB,MACNvtB,EAAa,IAAI1E,EAAMiyB,KAEpBvtB,CAAO,EAEZy8C,GAAwB,CAACnhD,EAAOoxB,KAClC,MAAM1sB,EAAU,CAAC,EAOjB,OANiB,MAAb1E,EAAM23C,MACNjzC,EAAa,IAAI1E,EAAM23C,KAER,MAAf33C,EAAMq3C,QACN3yC,EAAe,MAAI1E,EAAMq3C,OAEtB3yC,CAAO,EAEZ+7C,GAAmC,CAACzgD,EAAOoxB,KAC7C,MAAM1sB,EAAU,CAAC,EACjB,IAAIu8C,EAAU,EACd,IAAK,MAAMzW,KAASxqC,EACF,OAAVwqC,IAGJ9lC,EAAQ,UAAUu8C,KAAazW,EAC/ByW,KAEJ,OAAOv8C,CAAO,EAEZ67C,GAAgC,CAACvgD,EAAOoxB,KAC1C,MAAM1sB,EAAU,CAAC,EACjB,IAAIu8C,EAAU,EACd,IAAK,MAAMzW,KAASxqC,EAAO,CACvB,GAAc,OAAVwqC,EACA,SAEJ,MAAM0V,EAAgBiB,GAAsB3W,GAC5CnxC,OAAOqL,QAAQw7C,GAAe59B,SAAQ,EAAEzmB,EAAK5B,MACzCyK,EAAQ,UAAUu8C,KAAWplD,KAAS5B,CAAK,IAE/CgnD,GACJ,CACA,OAAOv8C,CAAO,EAEZ08C,GAAsC,CAACz2C,EAAQymB,KACjD,MAAM1f,EAAW,CACb2vC,mBAAe1nD,EACf2nD,SAAK3nD,GAQT,YANgCA,IAA5BgR,EAAsB,gBACtB+G,EAAS2vC,cAAgB,GAAe12C,EAAsB,qBAE5ChR,IAAlBgR,EAAY,MACZ+G,EAAS4vC,IAAM,GAAe32C,EAAY,MAEvC+G,CAAQ,EAEb6vC,GAAyC,CAAC52C,EAAQymB,KACpD,MAAM1f,EAAW,CACb8vC,iBAAa7nD,EACb8nD,qBAAiB9nD,EACjB+nD,sBAAkB/nD,EAClBknD,oBAAgBlnD,GAcpB,YAZ8BA,IAA1BgR,EAAoB,cACpB+G,EAAS8vC,YAAcG,GAAgCh3C,EAAoB,YAAGymB,SAEhDz3B,IAA9BgR,EAAwB,kBACxB+G,EAAS+vC,gBAAkBL,GAAoCz2C,EAAwB,uBAExDhR,IAA/BgR,EAAyB,mBACzB+G,EAASgwC,iBAAmB,GAAmB/2C,EAAyB,wBAE3ChR,IAA7BgR,EAAuB,iBACvB+G,EAASmvC,eAAiB,GAAel2C,EAAuB,iBAE7D+G,CAAQ,EA2CbkwC,GAAwD,CAACj3C,EAAQymB,KACnE,MAAM1f,EAAW,CACb8vC,iBAAa7nD,EACbkoD,iCAA6BloD,EAC7B8nD,qBAAiB9nD,EACjB+nD,sBAAkB/nD,EAClBmoD,cAAUnoD,EACVooD,cAAUpoD,EACVknD,oBAAgBlnD,GAuBpB,YArB8BA,IAA1BgR,EAAoB,cACpB+G,EAAS8vC,YAAcG,GAAgCh3C,EAAoB,YAAGymB,SAEpCz3B,IAA1CgR,EAAoC,8BACpC+G,EAASmwC,4BAA8B,GAAel3C,EAAoC,mCAE5DhR,IAA9BgR,EAAwB,kBACxB+G,EAAS+vC,gBAAkBL,GAAoCz2C,EAAwB,uBAExDhR,IAA/BgR,EAAyB,mBACzB+G,EAASgwC,iBAAmB,GAAmB/2C,EAAyB,wBAEjDhR,IAAvBgR,EAAiB,WACjB+G,EAASowC,SAAW,GAAen3C,EAAiB,gBAE7BhR,IAAvBgR,EAAiB,WACjB+G,EAASqwC,SAAW,GAAep3C,EAAiB,gBAEvBhR,IAA7BgR,EAAuB,iBACvB+G,EAASmvC,eAAiB,GAAel2C,EAAuB,iBAE7D+G,CAAQ,EAEbiwC,GAAkC,CAACh3C,EAAQymB,KAC7C,MAAM1f,EAAW,CACbswC,iBAAaroD,EACbsoD,qBAAiBtoD,EACjBuoD,kBAAcvoD,EACdwoD,gBAAYxoD,GAchB,YAZ8BA,IAA1BgR,EAAoB,cACpB+G,EAASswC,YAAc,GAAer3C,EAAoB,mBAE5BhR,IAA9BgR,EAAwB,kBACxB+G,EAASuwC,gBAAkB,GAAet3C,EAAwB,uBAEvChR,IAA3BgR,EAAqB,eACrB+G,EAASwwC,aAAe,GAAev3C,EAAqB,oBAEnChR,IAAzBgR,EAAmB,aACnB+G,EAASywC,WAAa,GAAgB,GAAuBx3C,EAAmB,cAE7E+G,CAAQ,EAWb6tC,GAA4C,CAAC50C,EAAQymB,KACvD,MAAM1f,EAAW,CACb3W,aAASpB,GAKb,YAH0BA,IAAtBgR,EAAgB,UAChB+G,EAAS3W,QAAU,GAAe4P,EAAgB,UAE/C+G,CAAQ,EAmEb8tC,GAAqD,CAAC70C,EAAQymB,KAChE,MAAM1f,EAAW,CACb3W,aAASpB,GAKb,YAH0BA,IAAtBgR,EAAgB,UAChB+G,EAAS3W,QAAU,GAAe4P,EAAgB,UAE/C+G,CAAQ,EAEb+tC,GAAgD,CAAC90C,EAAQymB,KAC3D,MAAM1f,EAAW,CACb3W,aAASpB,GAKb,YAH0BA,IAAtBgR,EAAgB,UAChB+G,EAAS3W,QAAU,GAAe4P,EAAgB,UAE/C+G,CAAQ,EAWbguC,GAAoD,CAAC/0C,EAAQymB,KAC/D,MAAM1f,EAAW,CACb3W,aAASpB,GAKb,YAH0BA,IAAtBgR,EAAgB,UAChB+G,EAAS3W,QAAU,GAAe4P,EAAgB,UAE/C+G,CAAQ,EAEbiuC,GAAuD,CAACh1C,EAAQymB,KAClE,MAAM1f,EAAW,CACb3W,aAASpB,GAKb,YAH0BA,IAAtBgR,EAAgB,UAChB+G,EAAS3W,QAAU,GAAe4P,EAAgB,UAE/C+G,CAAQ,EAEbkuC,GAAoD,CAACj1C,EAAQymB,KAC/D,MAAM1f,EAAW,CACb3W,aAASpB,GAKb,YAH0BA,IAAtBgR,EAAgB,UAChB+G,EAAS3W,QAAU,GAAe4P,EAAgB,UAE/C+G,CAAQ,EAEbmuC,GAA8C,CAACl1C,EAAQymB,KACzD,MAAM1f,EAAW,CACb3W,aAASpB,GAKb,YAH0BA,IAAtBgR,EAAgB,UAChB+G,EAAS3W,QAAU,GAAe4P,EAAgB,UAE/C+G,CAAQ,EAEb,GAAuB/G,IAAW,CACpC0tB,eAAgB1tB,EAAO7H,WACvB4uC,UAAW/mC,EAAOlC,QAAQ,qBAAuBkC,EAAOlC,QAAQ,sBAAwBkC,EAAOlC,QAAQ,oBACvGkpC,kBAAmBhnC,EAAOlC,QAAQ,cAClCmpC,KAAMjnC,EAAOlC,QAAQ,iBAQnB,GAAoB,CAACk0C,EAAYvrB,IANnB,EAACurB,EAAa,IAAIh3B,WAAcyL,IAC5CurB,aAAsBh3B,WACfnpB,QAAQC,QAAQkgD,GAEpBvrB,EAAQwrB,gBAAgBD,IAAengD,QAAQC,QAAQ,IAAIkpB,YAEnB,CAAYg3B,EAAYvrB,GAASn0B,MAAM+yB,GAASoB,EAAQ6rB,YAAYjtB,KACjH,GAAsBH,MAAOuB,EAAS3oB,EAAS9J,EAAMm+C,EAAkB9sB,KACzE,MAAM,SAAE5hB,EAAQ,SAAEnD,EAAW,QAAO,KAAE6E,EAAMnR,KAAMo+C,SAAmB3rB,EAAQE,WACvE5f,EAAW,CACbzG,WACAmD,WACA0B,OACAJ,OAAQ,OACR/Q,KAAMo+C,EAASttB,SAAS,KAAOstB,EAAS1xB,MAAM,GAAI,GAAK1sB,EAAOo+C,EAAWp+C,EACzE8J,WAQJ,YANyB9O,IAArBmjD,IACAprC,EAAStD,SAAW0uC,QAEXnjD,IAATq2B,IACAte,EAASse,KAAOA,GAEb,IAAI,EAActe,EAAS,EAEhC,GAAY,CAACirC,EAAYvrB,IAAY,GAAkBurB,EAAYvrB,GAASn0B,MAAMopC,IACpF,GAAIA,EAAQ1qC,OAAQ,CAChB,MAAMymD,EAAS,IAAI,GAAAlvC,UAAU,CACzB0E,oBAAqB,GACrBsF,cAAc,EACdnF,kBAAkB,EAClBoF,mBAAmB,EACnBR,eAAe,EACfE,YAAY,EACZvE,kBAAmB,CAAC+2B,EAAGvzC,IAAwB,KAAfA,EAAIqD,QAAiBrD,EAAImE,SAAS,MAAQ,QAAKtG,IAEnFyoD,EAAO3gC,UAAU,MAAO,MACxB2gC,EAAO3gC,UAAU,MAAO,MACxB,MAAM4gC,EAAYD,EAAOvwC,MAAMw0B,GACzBvuB,EAAe,QACfjc,EAAMxC,OAAOqC,KAAK2mD,GAAW,GAC7BC,EAAoBD,EAAUxmD,GAKpC,OAJIymD,EAAkBxqC,KAClBwqC,EAAkBzmD,GAAOymD,EAAkBxqC,UACpCwqC,EAAkBxqC,IAEtB,GAAuBwqC,EAClC,CACA,MAAO,CAAC,CAAC,IAEP,GAAiBzyB,MAAOstB,EAAW/rB,KACrC,MAAMn3B,QAAc,GAAUkjD,EAAW/rB,GAIzC,OAHIn3B,EAAMgF,QACNhF,EAAMgF,MAAMlE,QAAUd,EAAMgF,MAAMlE,SAAWd,EAAMgF,MAAMmyC,SAEtDn3C,CAAK,EAEVsoD,GAA6BC,GAAgBnpD,OAAOqL,QAAQ89C,GAC7DziD,KAAI,EAAElE,EAAK5B,KAAW,GAA6B4B,GAAO,IAAM,GAA6B5B,KAC7F0K,KAAK,KACJm6C,GAAqB,CAACn0C,EAAQrE,SACR3M,IAApB2M,EAAKrH,MAAMwyC,KACJnrC,EAAKrH,MAAMwyC,KAEG,KAArB9mC,EAAO7H,WACA,gBADX,EC9hCG,MAAM2/C,WAA0B,GACnCjnD,YAAYwE,GACRuK,QACAnR,KAAK4G,MAAQA,CACjB,CACA4B,0CACI,MAAO,CACH8gD,kBAAmB,CAAE/zB,KAAM,gBAAiBpzB,KAAM,qBAClDkiD,QAAS,CAAE9uB,KAAM,gBAAiBpzB,KAAM,mBACxCm4B,SAAU,CAAE/E,KAAM,gBAAiBpzB,KAAM,YACzCmiD,OAAQ,CAAE/uB,KAAM,gBAAiBpzB,KAAM,UACvCoiD,aAAc,CAAEhvB,KAAM,gBAAiBpzB,KAAM,wBAErD,CACA2xC,kBAAkBvc,EAAaitB,EAAe/+C,GAC1CzF,KAAK2zC,gBAAgBnB,IAAI7a,EAAe6sB,EAAexkD,KAAKozC,UAAWpzC,KAAKszC,cAC5EtzC,KAAK2zC,gBAAgBnB,IAAInX,EAAkBmpB,EAAe6E,GAAkBrvB,qCAC5Eh6B,KAAK2zC,gBAAgBnB,IAAIlD,GAAiBkV,IAC1C,MAAM3yB,EAAQ0F,EAAY5lB,OAAO3R,KAAK2zC,kBAChC,OAAEhW,GAAW6mB,EAGbC,EAA0B,CAC5B9mB,SACAF,WAJe,YAKfC,YAJgB,oBAKhBE,wBAAyBynB,GACzBxnB,yBAA0BynB,KAExB,eAAEloB,GAAmBonB,EAC3B,OAAO3yB,EAAMxuB,SAAS6P,GAAYkqB,EAAesnB,OAAOxxC,EAAQA,QAASzN,GAAW,CAAC,IAAIg/C,EAC7F,CACArR,UAAUxsC,EAAOoxB,GACb,MDlC2CvB,OAAO7vB,EAAOoxB,KAI7D,IAAIpB,EAMJ,OALAA,EAAOuyB,GAA0B,IAC1BzC,GAAoC9/C,EAAOoxB,GAC9C4oB,OAAQ,aACR2I,QAAS,eAEN,GAAoBvxB,EATX,CACZ,eAAgB,qCAQyB,SAAKz3B,EAAWq2B,EAAK,ECwBvD4yB,CAAoC5iD,EAAOoxB,EACtD,CACAsb,YAAY/hC,EAAQymB,GAChB,MD2D6CvB,OAAOllB,EAAQymB,KAChE,GAAIzmB,EAAO7H,YAAc,IACrB,OAAO+7C,GAA2Cl0C,EAAQymB,GAE9D,MAAM9qB,QAAa,GAAUqE,EAAOqlB,KAAMoB,GAC1C,IAAI1f,EAAW,CAAC,EAChBA,EAAW6vC,GAAuCj7C,EAAKu8C,iBAAkBzxB,GACzE,MAAMzjB,EAAW,CACb0pB,UAAW,GAAoB1sB,MAC5B+G,GAEP,OAAOlV,QAAQC,QAAQkR,EAAS,ECtErBm1C,CAAsCn4C,EAAQymB,EACzD,ECtCG,MAAM2xB,WAAyC,GAClDvnD,YAAYwE,GACRuK,QACAnR,KAAK4G,MAAQA,CACjB,CACA4B,0CACI,MAAO,CACH8gD,kBAAmB,CAAE/zB,KAAM,gBAAiBpzB,KAAM,qBAClDkiD,QAAS,CAAE9uB,KAAM,gBAAiBpzB,KAAM,mBACxCm4B,SAAU,CAAE/E,KAAM,gBAAiBpzB,KAAM,YACzCmiD,OAAQ,CAAE/uB,KAAM,gBAAiBpzB,KAAM,UACvCoiD,aAAc,CAAEhvB,KAAM,gBAAiBpzB,KAAM,wBAErD,CACA2xC,kBAAkBvc,EAAaitB,EAAe/+C,GAC1CzF,KAAK2zC,gBAAgBnB,IAAI7a,EAAe6sB,EAAexkD,KAAKozC,UAAWpzC,KAAKszC,cAC5EtzC,KAAK2zC,gBAAgBnB,IAAInX,EAAkBmpB,EAAemF,GAAiC3vB,qCAC3F,MAAMnI,EAAQ0F,EAAY5lB,OAAO3R,KAAK2zC,kBAChC,OAAEhW,GAAW6mB,EAGbC,EAA0B,CAC5B9mB,SACAF,WAJe,YAKfC,YAJgB,mCAKhBE,wBAAyB2nB,GACzB1nB,yBAA0B2nB,KAExB,eAAEpoB,GAAmBonB,EAC3B,OAAO3yB,EAAMxuB,SAAS6P,GAAYkqB,EAAesnB,OAAOxxC,EAAQA,QAASzN,GAAW,CAAC,IAAIg/C,EAC7F,CACArR,UAAUxsC,EAAOoxB,GACb,MFR0DvB,OAAO7vB,EAAOoxB,KAI5E,IAAIpB,EAMJ,OALAA,EAAOuyB,GAA0B,IAC1BzB,GAAmD9gD,EAAOoxB,GAC7D4oB,OAAQ,4BACR2I,QAAS,eAEN,GAAoBvxB,EATX,CACZ,eAAgB,qCAQyB,SAAKz3B,EAAWq2B,EAAK,EEFvDgzB,CAAmDhjD,EAAOoxB,EACrE,CACAsb,YAAY/hC,EAAQymB,GAChB,MFuJ4DvB,OAAOllB,EAAQymB,KAC/E,GAAIzmB,EAAO7H,YAAc,IACrB,OAAOq8C,GAA0Dx0C,EAAQymB,GAE7E,MAAM9qB,QAAa,GAAUqE,EAAOqlB,KAAMoB,GAC1C,IAAI1f,EAAW,CAAC,EAChBA,EAAWkwC,GAAsDt7C,EAAK28C,gCAAiC7xB,GACvG,MAAMzjB,EAAW,CACb0pB,UAAW,GAAoB1sB,MAC5B+G,GAEP,OAAOlV,QAAQC,QAAQkR,EAAS,EElKrBu1C,CAAqDv4C,EAAQymB,EACxE,ECvCJ,MAAM+xB,GAA6B,YAC7BC,GAAyB5zB,GACL,mBAAXA,OACW71B,IAAX61B,EAAuB2zB,GAA6B3zB,EAExDK,UACH,IACI,aAAaL,GAIjB,CAFA,MAAO1yB,GACH,OAAOqmD,EACX,GAGKE,GAAwB,CAACC,EAAYC,KAC9C,IAAIC,EACAC,EACJ,OAAO5zB,MAAO6zB,EAAa9b,KAEvB,GADA6b,EAAqBC,GAChBF,EAAW,CACZ,MAAM,OAAEzsB,EAAM,OAAEvH,EAAM,eAAEgH,GAAmB8sB,EAC3CE,EAAY,IAAID,EAAc,CAC1BxsB,SACAuQ,0BAA2B,IAAMzX,SAAY4zB,EAC7Cj0B,OAAQ4zB,GAAsB5zB,GAAU8zB,EAAW9zB,WAC/CgH,EAAiB,CAAEA,kBAAmB,CAAC,GAEnD,CACA,MAAM,YAAEgrB,SAAsBgC,EAAUxW,KAAK,IAAIyV,GAAkB7a,IACnE,IAAK4Z,IAAgBA,EAAYQ,cAAgBR,EAAYS,gBACzD,MAAM,IAAIhjD,MAAM,uDAAuD2oC,EAAOmY,WAElF,MAAO,CACHjb,YAAa0c,EAAYQ,YACzBhb,gBAAiBwa,EAAYS,gBAC7Bpd,aAAc2c,EAAYU,aAC1Bna,WAAYyZ,EAAYW,WAC3B,CACJ,EAEQwB,GAAuC,CAACL,EAAYC,KAC7D,IAAIC,EACJ,OAAO3zB,MAAO+X,IACV,IAAK4b,EAAW,CACZ,MAAM,OAAEzsB,EAAM,OAAEvH,EAAM,eAAEgH,GAAmB8sB,EAC3CE,EAAY,IAAID,EAAc,CAC1BxsB,SACAvH,OAAQ4zB,GAAsB5zB,GAAU8zB,EAAW9zB,WAC/CgH,EAAiB,CAAEA,kBAAmB,CAAC,GAEnD,CACA,MAAM,YAAEgrB,SAAsBgC,EAAUxW,KAAK,IAAI+V,GAAiCnb,IAClF,IAAK4Z,IAAgBA,EAAYQ,cAAgBR,EAAYS,gBACzD,MAAM,IAAIhjD,MAAM,sEAAsE2oC,EAAOmY,WAEjG,MAAO,CACHjb,YAAa0c,EAAYQ,YACzBhb,gBAAiBwa,EAAYS,gBAC7Bpd,aAAc2c,EAAYU,aAC1Bna,WAAYyZ,EAAYW,WAC3B,CACJ,E,aC1DQyB,GAAU,IAAM/zB,UACzB,MAAMiV,EAAc5pC,QAAQ4D,IAAW,kBACjCkoC,EAAkB9rC,QAAQ4D,IAAc,sBACxC+lC,EAAe3pC,QAAQ4D,IAAe,kBACtC+kD,EAAS3oD,QAAQ4D,IAAkB,0BACzC,GAAIgmC,GAAekC,EACf,MAAO,CACHlC,cACAkC,qBACInC,GAAgB,CAAEA,mBAClBgf,GAAU,CAAE9b,WAAY,IAAIh2B,KAAK8xC,KAG7C,MAAM,IAAInkB,GAAyB,mDAAmD,E,0BChBnF,MAAMokB,GAAa,KACtB,MAAM,KAAEC,EAAI,YAAEC,EAAW,SAAEC,EAAQ,UAAEC,EAAY,KAAK,GAAA7gD,OAAUnI,QAAQ4D,IACxE,OAAIilD,IAEAC,IAEAC,EACO,GAAGC,IAAYD,KACnB,KAAAE,YAAS,ECRPC,GAAkBC,GAASA,EAAKr1B,SAAW9zB,QAAQ4D,IAAe,aADhD,U,eCExB,MAAMwlD,GAAuBv2B,IAChC,MACMw2B,GADS,KAAAC,YAAW,QACDn3B,OAAOU,GAAIT,OAAO,OAC3C,OAAO,KAAA3oB,MAAKm/C,KAAc,OAAQ,MAAO,QAAS,GAAGS,SAAiB,E,eCJ1E,MAAM,SAAEE,IAAa,YACRC,GAAsB70B,MAAO9B,IACtC,MAAM42B,EAAmBL,GAAoBv2B,GACvC62B,QAAqBH,GAASE,EAAkB,QACtD,OAAOj9C,KAAKmK,MAAM+yC,EAAa,ECHtBC,GAAoB,IAAM3pD,QAAQ4D,IAAmB,kBAAK,KAAA6F,MAAKm/C,KAAc,OAAQ,UCArFgB,GAAyB,IAAM5pD,QAAQ4D,IAAwB,8BAAK,KAAA6F,MAAKm/C,KAAc,OAAQ,eCHtGiB,GAAkB,+BACXC,GAAkB1+C,GAASjN,OAAOqL,QAAQ4B,GAClDzG,QAAO,EAAEhE,KAASkpD,GAAgB98B,KAAKpsB,KACvCqW,QAAO,CAAC+kC,GAAMp7C,EAAK5B,MAAW,IAAMg9C,EAAK,CAAC8N,GAAgB3wC,KAAKvY,GAAK,IAAK5B,KAAU,IAChFqM,EAAK4oB,SAAW,CAAEA,QAAS5oB,EAAK4oB,WCJlC+1B,GAAuB,CAAC,YAAa,qBAC9BC,GAAYC,IACrB,MAAMplD,EAAM,CAAC,EACb,IAAIqlD,EACJ,IAAK,IAAIt9C,KAAQq9C,EAAQvlD,MAAM,SAAU,CACrCkI,EAAOA,EAAKlI,MAAM,cAAc,GAAGT,OAEnC,GAD8B,MAAZ2I,EAAK,IAAwC,MAA1BA,EAAKA,EAAKnM,OAAS,IAGpD,GADAypD,EAAiBt9C,EAAKoO,UAAU,EAAGpO,EAAKnM,OAAS,GAC7CspD,GAAqBhlD,SAASmlD,GAC9B,MAAM,IAAInmD,MAAM,+BAA+BmmD,WAGlD,GAAIA,EAAgB,CACrB,MAAMC,EAAoBv9C,EAAK8O,QAAQ,KACjCxB,EAAQ,EACR9F,EAAMxH,EAAKnM,OAAS,EAE1B,IAD4C,IAAvB0pD,GAA4BA,IAAsBjwC,GAASiwC,IAAsB/1C,EACpF,CACd,MAAO/T,EAAMtB,GAAS,CAClB6N,EAAKoO,UAAU,EAAGmvC,GAAmBlmD,OACrC2I,EAAKoO,UAAUmvC,EAAoB,GAAGlmD,QAE1CY,EAAIqlD,GAAkBrlD,EAAIqlD,IAAmB,CAAC,EAC9CrlD,EAAIqlD,GAAgB7pD,GAAQtB,CAChC,CACJ,CACJ,CACA,OAAO8F,CAAG,GC3BN0kD,SAAQ,IAAK,YACfa,GAAmB,CAAC,EACbC,GAAa5mD,IACjB2mD,GAAiB3mD,KAClB2mD,GAAiB3mD,GAAQ,GAASA,EAAM,SAErC2mD,GAAiB3mD,ICFtB6mD,GAAe,KAAM,CAAG,GACjBC,GAAwB51B,MAAOw0B,EAAO,CAAC,KAChD,MAAM,SAAEqB,EAAWZ,KAAwB,eAAEa,EAAiBd,MAAwBR,EAChFuB,QAAoBppD,QAAQqpD,IAAI,CAClCN,GAAUI,GAAgB1oD,KAAKioD,IAAUjoD,KAAK+nD,IAAgBniD,MAAM2iD,IACpED,GAAUG,GAAUzoD,KAAKioD,IAAUriD,MAAM2iD,MAE7C,MAAO,CACHM,WAAYF,EAAY,GACxBG,gBAAiBH,EAAY,GAChC,ECfCI,GAAqB,mCACdC,GAAqB3/C,GAASjN,OAAOqL,QAAQ4B,GACrDzG,QAAO,EAAEhE,KAASmqD,GAAmB/9B,KAAKpsB,KAC1CqW,QAAO,CAAC+kC,GAAMp7C,EAAK5B,MAAW,IAAMg9C,EAAK,CAAC+O,GAAmB5xC,KAAKvY,GAAK,IAAK5B,KAAU,CAAC,GCCtF,GAAe,KAAM,CAAG,GACjBisD,GAAqBr2B,MAAOw0B,EAAO,CAAC,IAAMkB,GAAUlB,EAAKsB,gBAAkBd,MACnF5nD,KAAKioD,IACLjoD,KAAKgpD,IACLpjD,MAAM,ICPEsjD,GAAkBt2B,MAAOw0B,IAClC,MAAMuB,QAAoBH,GAAsBpB,GAChD,MAAO,IACAuB,EAAYE,cACZF,EAAYG,gBAClB,ECNC,GAA+B/yC,QAAQ,OCAvC,GAA+BA,QAAQ,U,eCGtC,SAASozC,GAAYvnD,GACxB,OAAO,IAAIrC,SAAQ,CAACC,EAASC,KACzB,MAAMsS,GAAM,KAAA1C,SAAQ,CAChBoD,OAAQ,SACL7Q,EACHuP,SAAUvP,EAAQuP,UAAUnS,QAAQ,aAAc,QAEtD+S,EAAInE,GAAG,SAAU8D,IACbjS,EAAOrD,OAAOmM,OAAO,IAAIg6B,GAAc,kDAAmD7wB,IAC1FK,EAAIP,SAAS,IAEjBO,EAAInE,GAAG,WAAW,KACdnO,EAAO,IAAI8iC,GAAc,gDACzBxwB,EAAIP,SAAS,IAEjBO,EAAInE,GAAG,YAAalI,IAChB,MAAM,WAAEG,EAAa,KAAQH,GACzBG,EAAa,KAAO,KAAOA,KAC3BpG,EAAOrD,OAAOmM,OAAO,IAAIg6B,GAAc,0DAA2D,CAAE18B,gBACpGkM,EAAIP,WAER,MAAM43C,EAAS,GACf1jD,EAAIkI,GAAG,QAASC,IACZu7C,EAAO3zC,KAAK5H,EAAM,IAEtBnI,EAAIkI,GAAG,OAAO,KACVpO,EAAQ,GAAAiM,OAAA,OAAc29C,IACtBr3C,EAAIP,SAAS,GACf,IAENO,EAAIM,KAAK,GAEjB,CCnCO,MAAMg3C,GAAqBjjB,GAAQ7Q,QAAQ6Q,IAC/B,iBAARA,GACoB,iBAApBA,EAAI2e,aACoB,iBAAxB3e,EAAI4e,iBACU,iBAAd5e,EAAIkjB,OACe,iBAAnBljB,EAAI8e,WACFqE,GAAuBC,IAAU,CAC1C3hB,YAAa2hB,EAAMzE,YACnBhb,gBAAiByf,EAAMxE,gBACvBpd,aAAc4hB,EAAMF,MACpBxe,WAAY,IAAIh2B,KAAK00C,EAAMtE,cCRlBuE,GAAyB,EAAGzkD,aADN,EACwC0kD,UAF5C,QAE6E,CAAG1kD,aAAY0kD,YCF9G7nB,GAAQ,CAAC8nB,EAAS3kD,KAC3B,IAAI69B,EAAU8mB,IACd,IAAK,IAAI7yC,EAAI,EAAGA,EAAI9R,EAAY8R,IAC5B+rB,EAAUA,EAAQj9B,MAAM+jD,GAE5B,OAAO9mB,CAAO,ECCL+mB,GAAoB,qCACpBC,GAAwB,yCACxBC,GAAsB,oCACtBC,GAAwB,CAAC3C,EAAO,CAAC,KAC1C,MAAM,QAAEsC,EAAO,WAAE1kD,GAAeykD,GAAuBrC,GACvD,MAAO,IAAMvlB,IAAMjP,UACf,MAAM9tB,QAAuBklD,KACvBC,EAAgBx/C,KAAKmK,YAAYs1C,GAAmBR,EAAS5kD,IACnE,IAAKukD,GAAkBY,GACnB,MAAM,IAAIxnB,GAAyB,6DAEvC,OAAO8mB,GAAoBU,EAAc,GAC1CjlD,EAAW,EAEZklD,GAAqBt3B,MAAO82B,EAAS9nD,KACnC3D,QAAQ4D,IAAIioD,MACZloD,EAAQ4J,QAAU,IACX5J,EAAQ4J,QACX2+C,cAAelsD,QAAQ4D,IAAIioD,MAOnC,aAJqBX,GAAY,IAC1BvnD,EACH8nD,aAEUtrD,UAAU,EAGtBgsD,GAAmB,CACrBC,WAAW,EACX,aAAa,GAEXC,GAAuB,CACzB,SAAS,EACT,UAAU,GAERN,GAAap3B,UACf,GAAI30B,QAAQ4D,IAAIgoD,IACZ,MAAO,CACH14C,SAZI,gBAaJzP,KAAMzD,QAAQ4D,IAAIgoD,KAG1B,GAAI5rD,QAAQ4D,IAAI+nD,IAAoB,CAChC,MAAMtZ,GAAS,KAAA17B,OAAM3W,QAAQ4D,IAAI+nD,KACjC,IAAKtZ,EAAOn/B,YAAcm/B,EAAOn/B,YAAYi5C,IACzC,MAAM,IAAI3nB,GAAyB,GAAG6N,EAAOn/B,+DAA+D,GAEhH,IAAKm/B,EAAOtiC,YAAcsiC,EAAOtiC,YAAYs8C,IACzC,MAAM,IAAI7nB,GAAyB,GAAG6N,EAAOtiC,+DAA+D,GAEhH,MAAO,IACAsiC,EACHz9B,KAAMy9B,EAAOz9B,KAAOC,SAASw9B,EAAOz9B,KAAM,SAAMnW,EAExD,CACA,MAAM,IAAI+lC,GACN,wEAAQonB,SAA4BD,kCAChB,EAAM,EC9DrB,GAAcW,IAAiBC,MADC,mBACUD,EAAgB33B,eAAkB23B,KvEF9DE,EuEEiGF,EvEFjF,IAAMhrD,QAAQC,QAAQirD,IAAvC,IAACA,CuEE8G,ECE5HC,GAAa,EAAG94B,8BAA6BE,qBAAoBG,QAASs4B,GAAgB5J,EAAgB,CAAC,KAAM5d,UAAQJ,ICH9GgoB,EDG4H/4B,ECHzGgB,UACvC,IACI,MAAMmB,EAAS42B,EAAe1sD,QAAQ4D,KACtC,QAAenF,IAAXq3B,EACA,MAAM,IAAI/xB,MAEd,OAAO+xB,CAIX,CAFA,MAAOl0B,GACH,MAAM,IAAI4iC,GAAyB5iC,EAAE/B,SAAW,8DAA8D6sD,IAClH,ICTiC,EAACC,GAAkBv4B,gBAAgB,YAAa+0B,GAAS,CAAC,IAAMx0B,UACjG,MAAMb,EAAUo1B,GAAeC,IACzB,WAAEyB,EAAU,gBAAEC,SAA0BN,GAAsBpB,GAC9DyD,EAAyB/B,EAAgB/2B,IAAY,CAAC,EACtD+4B,EAAoBjC,EAAW92B,IAAY,CAAC,EAC5Cg5B,EAAkC,WAAlB14B,EAChB,IAAKw4B,KAA2BC,GAChC,IAAKA,KAAsBD,GACjC,IACI,MAAMj1B,EAAcg1B,EAAeG,GACnC,QAAoBruD,IAAhBk5B,EACA,MAAM,IAAI5zB,MAEd,OAAO4zB,CAKX,CAHA,MAAO/1B,GACH,MAAM,IAAI4iC,GAAyB5iC,EAAE/B,SACjC,kCAAkCi0B,6CAAmD64B,IAC7F,GFhB8KI,CAAsBl5B,EAAoB6uB,GAAgB,GAAW4J,KCHhO,IAACI,CDG8O,EGJ/P,IAAIl0B,IACX,SAAWA,GACPA,EAAe,KAAI,yBACnBA,EAAe,KAAI,wBACtB,CAHD,CAGGA,KAAaA,GAAW,CAAC,ICJrB,MAEMw0B,GAA0B,CACnCr5B,4BAA8B/vB,GAAQA,EAAqB,kCAC3DiwB,mBAAqBC,GAAYA,EAA4B,8BAC7DE,aAASv1B,GCLN,IAAIwuD,IACX,SAAWA,GACPA,EAAmB,KAAI,OACvBA,EAAmB,KAAI,MAC1B,CAHD,CAGGA,KAAiBA,GAAe,CAAC,ICH7B,MAEMC,GAA+B,CACxCv5B,4BAA8B/vB,GAAQA,EAA0B,uCAChEiwB,mBAAqBC,GAAYA,EAAiC,mCAClEE,QAASi5B,GAAaE,MCAbC,GAA8Bz4B,SAAY+E,QAAgB2zB,YAAmCC,MACpGD,GAAwB14B,SAAY83B,GAAWO,GAAXP,GACpCa,GAA4B34B,UAC9B,MAAM44B,QAAqBd,GAAWS,GAAXT,GAC3B,OAAQc,GACJ,KAAKN,GAAaE,KACd,OAAO,QACX,KAAKF,GAAaO,KACd,OAAO,QACX,QACI,MAAM,IAAIzpD,MAAM,8BAA8BwpD,kBAAkCpvD,OAAO+qB,OAAO+jC,OACtG,ECdSQ,GAAyC,CAAC7kB,EAAa/M,KAChE,MAAM6xB,EAJwC,IAK1C18C,KAAK8pB,MAJmD,IAI7C9pB,KAAK+f,UACd48B,EAAgB,IAAI92C,KAAKA,KAAKqa,MAA0B,IAAlBw8B,GAC5C7xB,EAAOwG,KAAK,sSAGZ,MAAMurB,EAAqBhlB,EAAYglB,oBAAsBhlB,EAAYiE,WACzE,MAAO,IACAjE,KACCglB,EAAqB,CAAEA,sBAAuB,CAAC,EACnD/gB,WAAY8gB,EACf,ECRCE,GAAY,8CAELC,GAAuB,CAAC3E,EAAO,CAAC,ICRN,EAACtkB,EAAUlhC,EAAU,CAAC,KACzD,MAAMk4B,EAASl4B,GAASk4B,QAAUxL,QAClC,IAAI09B,EACJ,OAAOp5B,UACH,IAAIiU,EACJ,IACIA,QAAoB/D,IAChB+D,EAAYiE,YAAcjE,EAAYiE,WAAWpL,UAAY5qB,KAAKqa,QAClE0X,EAAc6kB,GAAuC7kB,EAAa/M,GAW1E,CARA,MAAOj6B,GACH,IAAImsD,EAKA,MAAMnsD,EAJNi6B,EAAOwG,KAAK,4BAA6BzgC,GACzCgnC,EAAc6kB,GAAuCM,EAAiBlyB,EAK9E,CAEA,OADAkyB,EAAkBnlB,EACXA,CAAW,CACrB,EDd8ColB,CAAwBC,GAAwB9E,GAAO,CAAEttB,OAAQstB,EAAKttB,SACnHoyB,GAA2B9E,IAC7B,IAAI+E,GAAoB,EACxB,MAAM,QAAEzC,EAAO,WAAE1kD,GAAeykD,GAAuBrC,GACjDgF,EAAiBx5B,MAAO5tB,EAAYpD,KACtC,MAAMmwB,SAAiB8P,IAAMjP,UACzB,IAAIb,EACJ,IACIA,QAAgBs6B,GAAWzqD,EAO/B,CALA,MAAO8P,GAIH,MAHuB,MAAnBA,EAAI7L,aACJsmD,GAAoB,GAElBz6C,CACV,CACA,OAAOqgB,CAAO,GACf/sB,IAAa9C,OAChB,OAAO2/B,IAAMjP,UACT,IAAI42B,EACJ,IACIA,QAAc8C,GAA0Bv6B,EAASnwB,EAOrD,CALA,MAAO8P,GAIH,MAHuB,MAAnBA,EAAI7L,aACJsmD,GAAoB,GAElBz6C,CACV,CACA,OAAO83C,CAAK,GACbxkD,EAAW,EAElB,OAAO4tB,UACH,MAAMyB,QAAiBg3B,KACvB,GAAIc,EACA,OAAOC,EAAepnD,EAAY,IAAKqvB,EAAUq1B,YAEhD,CACD,IAAItkD,EACJ,IACIA,SAAemnD,GAAiB,IAAKl4B,EAAUq1B,aAAYtrD,UAY/D,CAVA,MAAOuC,GACH,GAA0B,MAAtBA,GAAOkF,WACP,MAAMzJ,OAAOmM,OAAO5H,EAAO,CACvB7C,QAAS,8CAMjB,OAH2B,iBAAlB6C,EAAM7C,SAA8B,CAAC,IAAK,IAAK,KAAKkF,SAASrC,EAAMkF,eACxEsmD,GAAoB,GAEjBC,EAAepnD,EAAY,IAAKqvB,EAAUq1B,WACrD,CACA,OAAO0C,EAAepnD,EAAY,IAC3BqvB,EACH7oB,QAAS,CACL,2BAA4BpG,GAEhCskD,WAER,EACH,EAEC6C,GAAmB35B,MAAOhxB,GAAYunD,GAAY,IACjDvnD,EACHF,KAlEoB,oBAmEpB+Q,OAAQ,MACRjH,QAAS,CACL,uCAAwC,WAG1C6gD,GAAaz5B,MAAOhxB,UAAmBunD,GAAY,IAAKvnD,EAASF,KAAMoqD,MAAc1tD,WACrFkuD,GAA4B15B,MAAOb,EAASnwB,KAC9C,MAAMqoD,EAAgBx/C,KAAKmK,aAAau0C,GAAY,IAC7CvnD,EACHF,KAAMoqD,GAAY/5B,KAClB3zB,YACJ,IAAKirD,GAAkBY,GACnB,MAAM,IAAIxnB,GAAyB,6DAEvC,OAAO8mB,GAAoBU,EAAc,EE9EvCuC,GAAiCpmB,GAAsC,iBAAvBA,EAAIqmB,qBAAgE,IAA1BrmB,EAAIsmB,kBAC9FC,GAAmCvmB,GAAyC,iBAA1BA,EAAIsmB,wBAAgE,IAAvBtmB,EAAIqmB,eAC5FG,GAA+Bh6B,MAAOi6B,EAAaC,EAAUlrD,EAASmrD,EAAkB,CAAC,KAClG,MAAM1jD,EAAOyjD,EAASD,GACtB,IAAKjrD,EAAQorD,YACT,MAAM,IAAIvqB,GAAyB,WAAWoqB,kFAA4F,GAE9I,MAAM,eAAEJ,GAAmBpjD,EAC3B,GAAIojD,GAAkBA,KAAkBM,EACpC,MAAM,IAAItqB,GACN,kEAAI0kB,GAAevlD,yBACnBxF,OAAOqC,KAAKsuD,GAAiBrlD,KAAK,OAAO,GAEjD,MAAMulD,EAAsBR,EACtBS,GAAmBT,EAAgBK,EAAUlrD,EAAS,IACjDmrD,EACH,CAACN,IAAiB,ICxBS,EAACU,EAAkBN,KACtD,MAAMO,EAAqB,CACvBC,aAActD,GACduD,oBAAqBvB,GACrBwB,YAAa5G,IAEjB,GAAIwG,KAAoBC,EACpB,OAAOA,EAAmBD,KAG1B,MAAM,IAAI1qB,GAAyB,4CAA4CoqB,UAAoBM,kEAEvG,EDcMK,CAAwBnkD,EAAKqjD,kBAAmBG,EAAhDW,GACA7iB,EAAS,CACXmY,QAASz5C,EAAKokD,SACd1K,gBAAiB15C,EAAKqkD,mBAAqB,cAAc54C,KAAKqa,QAC9Ds0B,WAAYp6C,EAAKskD,cAEf,WAAEC,GAAevkD,EACvB,GAAIukD,EAAY,CACZ,IAAKhsD,EAAQisD,gBACT,MAAM,IAAIprB,GAAyB,WAAWoqB,kFAA4F,GAE9IliB,EAAO+Y,aAAekK,EACtBjjB,EAAOgZ,gBAAkB/hD,EAAQisD,gBAAgBD,EACrD,CACA,MAAMnH,QAAoBwG,EAC1B,OAAOrrD,EAAQorD,YAAYvG,EAAa9b,EAAO,EE5C7C,GAA+B50B,QAAQ,iB,eCAtC,MCIM+3C,GAA4Bl7B,MAAOi6B,EAAaC,KACzD,MAAM/6B,EAAU+6B,EAASD,GACzB,IAAIC,EAASD,GAwBT,MAAM,IAAIpqB,GAAyB,WAAWoqB,oDAxBvB,CACvB,MAAMkB,EAAoBh8B,EAA4B,mBACtD,QAA0Br1B,IAAtBqxD,EAkBA,MAAM,IAAItrB,GAAyB,WAAWoqB,yCAlBb,CACjC,MAAMmB,GAAc,KAAAC,WAAU,GAAA92C,MAC9B,IACI,MAAM,OAAEjZ,SAAiB8vD,EAAYD,GACrC,IAAI1kD,EACJ,IACIA,EAAOoB,KAAKmK,MAAM1W,EAAOgE,OAI7B,CAFA,MACI,MAAMF,MAAM,WAAW6qD,8CAC3B,CACA,MDnB8B,EAACA,EAAaxjD,KACxD,GAAqB,IAAjBA,EAAKq8C,QACL,MAAM1jD,MAAM,WAAW6qD,kDAE3B,QAAyBnwD,IAArB2M,EAAK07C,kBAAsDroD,IAAzB2M,EAAK27C,gBACvC,MAAMhjD,MAAM,WAAW6qD,sDAE3B,GAAIxjD,EAAK67C,WAAY,CACjB,MAAMgJ,EAAc,IAAIp5C,KAExB,GADmB,IAAIA,KAAKzL,EAAK67C,YAChBgJ,EACb,MAAMlsD,MAAM,WAAW6qD,qDAE/B,CACA,MAAO,CACHhlB,YAAax+B,EAAK07C,YAClBhb,gBAAiB1gC,EAAK27C,mBAClB37C,EAAK47C,cAAgB,CAAErd,aAAcv+B,EAAK47C,iBAC1C57C,EAAK67C,YAAc,CAAEpa,WAAY,IAAIh2B,KAAKzL,EAAK67C,aACtD,ECAkBiJ,CAA+BtB,EAAaxjD,EAIvD,CAFA,MAAO1I,GACH,MAAM,IAAI8hC,GAAyB9hC,EAAM7C,QAC7C,CACJ,CAIJ,CAGA,EC7BSswD,GAAc,CAAChH,EAAO,CAAC,IAAMx0B,UACtC,MAAMk6B,QAAiB5D,GAAgB9B,GACvC,OAAO0G,GAA0B3G,GAAeC,GAAO0F,EAAS,ECJvDuB,GAAgBjoB,GAAQA,IACH,iBAAtBA,EAAIkoB,eACsB,iBAAvBloB,EAAImoB,gBACgB,iBAApBnoB,EAAIooB,aACe,iBAAnBpoB,EAAIqoB,YACkB,iBAAtBroB,EAAIsoB,e,aCHNC,GAAkB,CAAC5rD,EAAO6rB,EAAS,EAAGlwB,EAASqE,EAAM6O,WAAagd,KAC3E,IAAKuX,GAAcpjC,GACf,MAAM,IAAIE,UAAU,kEAAkEF,MAAUA,MAEpG,OAAO,GAAA0I,OAAA,KAAY1I,EAAO6rB,EAAQlwB,EAAO,EAEhCkwD,GAAa,CAAC7rD,EAAOsB,KAC9B,GAAqB,iBAAVtB,EACP,MAAM,IAAIE,UAAU,qEAAqEF,MAAUA,MAEvG,OAAOsB,EAAW,GAAAoH,OAAA,KAAY1I,EAAOsB,GAAY,GAAAoH,OAAA,KAAY1I,EAAM,ECThE,MAAM8rD,GACTtwD,YAAYuwD,EAAqBvsD,GAC7BpG,KAAKqpC,KAAOjjC,GAAS,KAAAwsD,YAAWD,EAAqBE,GAAezsD,KAAW,KAAAglD,YAAWuH,EAC9F,CACA1+B,OAAO6+B,EAAQ5qD,GACXlI,KAAKqpC,KAAKpV,OAAO4+B,GAAeC,EAAQ5qD,GAC5C,CACAgsB,SACI,OAAO9wB,QAAQC,QAAQrD,KAAKqpC,KAAKnV,SACrC,EAEJ,SAAS2+B,GAAeE,EAAQ7qD,GAC5B,OAAI,GAAAoH,OAAA,SAAgByjD,GACTA,EAEW,iBAAXA,EACAN,GAAWM,EAAQ7qD,GAE1BslB,YAAYC,OAAOslC,GACZP,GAAgBO,EAAOC,OAAQD,EAAOE,WAAYF,EAAOt9C,YAE7D+8C,GAAgBO,EAC3B,C,eCzBO,MAAM,GAA6B,CAAC,aAAc,QAAS,aCA5D,GAAyB1jD,IAC3B,MAAM6jD,EAAqB,CAAC,EAC5B,IAAK,MAAM/wD,KAAQlC,OAAOqC,KAAK+M,GAAU,CACrC,MAAM8jD,EAAe9jD,EAAQlN,GAC7B+wD,EAAmB/wD,GAAQgf,MAAMC,QAAQ+xC,GAAgBA,EAAa5nD,KAAK,KAAO4nD,CACtF,CACA,OAAOD,CAAkB,ECNvB,GAA+Bt5C,QAAQ,UCY7C,SAASw5C,GAAUpG,EAAap2B,GACxBA,aAAgB,GAAAy8B,SAChBz8B,EAAKzgB,KAAK62C,GAELp2B,EACLo2B,EAAY92C,IAAI5G,OAAOC,KAAKqnB,IAG5Bo2B,EAAY92C,KAEpB,CCbO,MAAMo9C,GACTlxD,YAAYqD,GACRzF,KAAKq9B,SAAW,CAAEF,gBAAiB,YACnCn9B,KAAKw5B,eAAiB,IAAIp2B,SAAQ,CAACC,EAASC,KACjB,mBAAZmC,EACPA,IACK5B,MAAM0vD,IACPlwD,EAAQrD,KAAKwzD,qBAAqBD,GAAU,IAE3C9pD,MAAMnG,GAGXD,EAAQrD,KAAKwzD,qBAAqB/tD,GACtC,GAER,CACA+tD,qBAAqB/tD,GACjB,MAAM,kBAAEizC,EAAiB,cAAEhmC,EAAa,UAAE+gD,EAAS,WAAEC,GAAejuD,GAAW,CAAC,EAGhF,MAAO,CACHizC,oBACAhmC,gBACA+gD,UAAWA,GAAa,IAAI,SAAO,CAAEzgD,UALvB,KAKkCqE,WAJjC,KAKfq8C,WAAYA,GAAc,IAAI,SAAQ,CAAE1gD,UAN1B,KAMqCqE,WALpC,KAOvB,CACAhC,UACIrV,KAAK43B,QAAQ67B,WAAWp+C,UACxBrV,KAAK43B,QAAQ87B,YAAYr+C,SAC7B,CACAohB,aAAavjB,GAAS,YAAEygD,GAAgB,CAAC,GAIrC,OAHK3zD,KAAK43B,SACN53B,KAAK43B,aAAe53B,KAAKw5B,gBAEtB,IAAIp2B,SAAQ,CAACC,EAASC,KACzB,IAAKtD,KAAK43B,OACN,MAAM,IAAI/xB,MAAM,oDAEpB,GAAI8tD,GAAaC,QAAS,CACtB,MAAMC,EAAa,IAAIhuD,MAAM,mBAG7B,OAFAguD,EAAW1xD,KAAO,kBAClBmB,EAAOuwD,EAEX,CACA,MAAMC,EAA6B,WAArB5gD,EAAQrB,SAChBkiD,ECtDX,SAA0Bp9B,GAC7B,MAAMq9B,EAAQ,GACd,IAAK,IAAIvxD,KAAOxC,OAAOqC,KAAKq0B,GAAOgT,OAAQ,CACvC,MAAM9oC,EAAQ81B,EAAMl0B,GAEpB,GADAA,EAAMonC,GAAUpnC,GACZ0e,MAAMC,QAAQvgB,GACd,IAAK,IAAI8Z,EAAI,EAAGs5C,EAAOpzD,EAAM0B,OAAQoY,EAAIs5C,EAAMt5C,IAC3Cq5C,EAAM16C,KAAK,GAAG7W,KAAOonC,GAAUhpC,EAAM8Z,WAGxC,CACD,IAAIu5C,EAAUzxD,GACV5B,GAA0B,iBAAVA,KAChBqzD,GAAW,IAAIrqB,GAAUhpC,MAE7BmzD,EAAM16C,KAAK46C,EACf,CACJ,CACA,OAAOF,EAAMzoD,KAAK,IACtB,CDmCgC,CAAiB2H,EAAQyjB,OAAS,CAAC,GACjDw9B,EAAmB,CACrB9kD,QAAS6D,EAAQ7D,QACjBoH,KAAMvD,EAAQ8B,SACdsB,OAAQpD,EAAQoD,OAChB/Q,KAAMwuD,EAAc,GAAG7gD,EAAQ3N,QAAQwuD,IAAgB7gD,EAAQ3N,KAC/DmR,KAAMxD,EAAQwD,KACdK,MAAO+8C,EAAQ9zD,KAAK43B,OAAO87B,WAAa1zD,KAAK43B,OAAO67B,WAGlD79C,GADck+C,EAAQ,WAAY,YAChBK,GAAmB5qD,IACvC,MAAM6qD,EAAe,IAAI,GAAa,CAClC1qD,WAAYH,EAAIG,aAAe,EAC/B2F,QAAS,GAAsB9F,EAAI8F,SACnCunB,KAAMrtB,IAEVlG,EAAQ,CAAEkR,SAAU6/C,GAAe,IAEvCx+C,EAAInE,GAAG,SAAU8D,IACT,YAAoCA,EAAIrJ,MACxC5I,EAAOrD,OAAOmM,OAAOmJ,EAAK,CAAEpT,KAAM,kBAGlCmB,EAAOiS,EACX,IE/EoB,EAACrC,EAAS5P,EAAQ+wD,EAAc,KAC3DA,GAGLnhD,EAAQzB,GAAG,UAAWsE,IAClB,GAAIA,EAAOu+C,WAAY,CACnB,MAAMC,EAAYt+C,YAAW,KACzB/C,EAAQmC,UACR/R,EAAOrD,OAAOmM,OAAO,IAAIvG,MAAM,6DAA6DwuD,QAAmB,CAC3GlyD,KAAM,iBACP,GACJkyD,GACHt+C,EAAOtE,GAAG,WAAW,KACjB+iD,aAAaD,EAAU,GAE/B,IACF,EFiEME,CAAqB7+C,EAAKtS,EAAQtD,KAAK43B,OAAO8gB,mBGjF1B,EAACxlC,EAAS5P,EAAQ+wD,EAAc,KAC5DnhD,EAAQ+C,WAAWo+C,GAAa,KAC5BnhD,EAAQmC,UACR/R,EAAOrD,OAAOmM,OAAO,IAAIvG,MAAM,8BAA8BwuD,QAAmB,CAAElyD,KAAM,iBAAkB,GAC5G,EH8EMuyD,CAAiB9+C,EAAKtS,EAAQtD,KAAK43B,OAAOllB,eACtCihD,IACAA,EAAYgB,QAAU,KAClB/+C,EAAIg/C,QACJ,MAAMf,EAAa,IAAIhuD,MAAM,mBAC7BguD,EAAW1xD,KAAO,aAClBmB,EAAOuwD,EAAW,GDvF/B,SAA0B7G,EAAa95C,GAE3B,kBADAA,EAAQ7D,QAAgB,QAAK6D,EAAQ7D,QAAgB,QAEhE29C,EAAYv7C,GAAG,YAAY,KACvB2hD,GAAUpG,EAAa95C,EAAQ0jB,KAAK,IAIxCw8B,GAAUpG,EAAa95C,EAAQ0jB,KAEvC,CCgFY,CAAiBhhB,EAAK1C,EAAQ,GAEtC,EI7FiC0G,QAAQ,SCCtC,MAAMi7C,WAAkB,GAAAC,SAC3B1yD,cACI+O,SAASsY,WACTzpB,KAAK+0D,cAAgB,EACzB,CACAC,OAAOtjD,EAAOxJ,EAAU2iB,GACpB7qB,KAAK+0D,cAAcz7C,KAAK5H,GACxBmZ,GACJ,ECRG,MAAM24B,GAAmB9vC,GAAW,IAAItQ,SAAQ,CAACC,EAASC,KAC7D,MAAM2xD,EAAY,IAAIJ,GACtBnhD,EAAOyC,KAAK8+C,GACZvhD,EAAOjC,GAAG,SAAU8D,IAChB0/C,EAAU/+C,MACV5S,EAAOiS,EAAI,IAEf0/C,EAAUxjD,GAAG,QAASnO,GACtB2xD,EAAUxjD,GAAG,UAAU,WACnB,MAAMmiB,EAAQ,IAAIrH,WAAWjd,OAAOqC,OAAO3R,KAAK+0D,gBAChD1xD,EAAQuwB,EACZ,GAAE,ICXOshC,GAAuBt+B,IAChC,IAAKA,EACD,OAAO,EAEX,GAAoB,iBAATA,EACP,OAAOtnB,OAAOC,KAAKqnB,GAAMr0B,OAExB,GAA+B,iBAApBq0B,EAAKnhB,WACjB,OAAOmhB,EAAKnhB,WAEX,GAAyB,iBAAdmhB,EAAK5M,KACjB,OAAO4M,EAAK5M,KAEX,GAAyB,iBAAd4M,EAAKrxB,MAAqB+J,OAAO6lD,SAASv+B,EAAKrxB,MAC3D,OAAO,KAAA6vD,WAAUx+B,EAAKrxB,MAAMykB,KAE3B,GAAuB,iBAAZ4M,EAAKy+B,GACjB,OAAO,KAAAC,WAAU1+B,EAAKy+B,IAAIrrC,KAE9B,MAAM,IAAInkB,MAAM,sCAAsC+wB,IAAO,ECpB3D,GAA+Bhd,QAAQ,W,cCItC,MAEM22B,GAAmB,EAAGrW,YAAWq7B,oBAC1C,MAAMC,EAAW,CACb,CAAC,aAAcD,GACf,CAAC,OAAM,KAAAE,eAAc,KAAAC,YACrB,CAAC,WACD,CAAC,YAAa,GAAG,GAAAC,SAAA,SAEfC,GAAe,UACjBA,GACAJ,EAASl8C,KAAKs8C,GAEd17B,GACAs7B,EAASl8C,KAAK,CAAC,OAAO4gB,IAAaq7B,IAEnC,GAAA7vD,IAAA,mBACA8vD,EAASl8C,KAAK,CAAC,YAAY,GAAA5T,IAAA,sBAE/B,MAAMmwD,EAAetH,GAAW,CAC5B94B,4BAA8B/vB,GAAQA,EAAsB,kBAC5DiwB,mBAAqBC,GAAYA,EApBP,iBAqB1BE,aAASv1B,GAHQguD,GAKrB,IAAIuH,EACJ,OAAOr/B,UACH,IAAKq/B,EAAmB,CACpB,MAAMC,QAAcF,EACpBC,EAAoBC,EAAQ,IAAIP,EAAU,CAAC,OAAOO,MAAY,IAAIP,EACtE,CACA,OAAOM,CAAiB,CAC3B,EClCQE,GAAYpvD,IACrB,MAAM4rB,EAAMigC,GAAW7rD,EAAO,QAC9B,OAAO,IAAI2lB,WAAWiG,EAAIwgC,OAAQxgC,EAAIygC,WAAYzgC,EAAI/c,WAAa8W,WAAW0pC,kBAAkB,EAEvFC,GAAUtvD,GAAU4rD,GAAgB5rD,EAAMosD,OAAQpsD,EAAMqsD,WAAYrsD,EAAM6O,YAAYxT,SAAS,QCJtGk0D,GAAe,yBACRC,GAAcxvD,IACvB,GAAoB,EAAfA,EAAMrE,OAAc,GAAM,EAC3B,MAAM,IAAIuE,UAAU,uCAExB,IAAKqvD,GAAan7C,KAAKpU,GACnB,MAAM,IAAIE,UAAU,0BAExB,MAAMksD,EAASP,GAAW7rD,EAAO,UACjC,OAAO,IAAI2lB,WAAWymC,EAAOA,OAAQA,EAAOC,WAAYD,EAAOv9C,WAAW,ECTjE4gD,GAAYzvD,GAAU4rD,GAAgB5rD,EAAMosD,OAAQpsD,EAAMqsD,WAAYrsD,EAAM6O,YAAYxT,SAAS,U,mmGCAxG,WAAEq0D,IAAe,GACjBC,GAAoBD,GAAWrwB,MAAMnN,GAA+B,QAAjBA,EAAUnE,KACtDmE,GAAaj4B,IACtB,IAAK,MAAMi4B,KAAaw9B,GAAY,CAChC,MAAM,QAAEE,EAAO,QAAEC,GAAY39B,EAC7B,IAAK,MAAO1C,EAAQsgC,KAAez2D,OAAOqL,QAAQkrD,GAC9C,GAAIpgC,IAAWv1B,EACX,MAAO,IACA41D,KACAC,EAInB,CACA,IAAK,MAAM59B,KAAaw9B,GAAY,CAChC,MAAM,YAAEK,EAAW,QAAEF,GAAY39B,EACjC,GAAI,IAAI1e,OAAOu8C,GAAa9nC,KAAKhuB,GAC7B,MAAO,IACA41D,EAGf,CACA,IAAKF,GACD,MAAM,IAAI1wD,MAAM,qHAGpB,MAAO,IACA0wD,GAAkBE,QACxB,EC7BQG,GAAU,YCAhB,SAASC,GAAcjwD,GAC1B,MAAqB,iBAAVA,GAA+B,MAATA,EACtBA,EAEP,QAASA,EACF,IAAIiwD,GAAcjwD,EAAMkwD,OAE/B,OAAQlwD,EACD,GAAGA,EAAMM,OAAON,EAAMmwD,MAAQ,IAAIpwD,IAAIkwD,IAAetrD,KAAK,SAE9D+C,KAAK1C,UAAUhF,EAAO,KAAM,EACvC,CCXO,MAAMowD,WAAsBnxD,MAC/BzD,YAAYT,GACRwP,MAAMxP,GACN3B,KAAKmC,KAAO,eAChB,ECJJ,MAAM80D,GAAc,IAAI78C,OAAO,oGAClB88C,GAAer2D,GAAUo2D,GAAYpoC,KAAKhuB,IAAWA,EAAMmgB,WAAW,MAAQngB,EAAMw1B,SAAS,KCDpG8gC,GAAyB,IAAI/8C,OAAO,qCAC7Bg9C,GAAmB,CAACv2D,EAAOw2D,GAAkB,KACtD,IAAKA,EACD,OAAOF,GAAuBtoC,KAAKhuB,GAEvC,MAAMy2D,EAASz2D,EAAM2F,MAAM,KAC3B,IAAK,MAAM8G,KAASgqD,EAChB,IAAKF,GAAiB9pD,GAClB,OAAO,EAGf,OAAO,CAAI,ECTFiqD,GAA4B,CAAC12D,EAAOw2D,GAAkB,KAC/D,GAAIA,EAAiB,CACjB,IAAK,MAAM/pD,KAASzM,EAAM2F,MAAM,KAC5B,IAAK+wD,GAA0BjqD,GAC3B,OAAO,EAGf,OAAO,CACX,CACA,QAAK8pD,GAAiBv2D,OAGlBA,EAAM0B,OAAS,GAAK1B,EAAM0B,OAAS,MAGnC1B,IAAUA,EAAMoU,gBAGhBiiD,GAAYr2D,IAGL,ECvBF22D,GAAY32D,IACrB,MAAM42D,EAAW52D,EAAM2F,MAAM,KAC7B,GAAIixD,EAASl1D,OAAS,EAClB,OAAO,KACX,MAAOs2B,EAAKC,EAAWC,EAAS3C,EAAQshC,KAAcC,GAAcF,EACpE,MAAY,QAAR5+B,GAA+B,KAAdC,GAAgC,KAAZC,GAAoC,KAAlB4+B,EAAW,GAC3D,KACJ,CACH7+B,YACAC,UACA3C,SACAshC,YACAC,WAAYA,EAAW,GAAG9wD,SAAS,KAAO8wD,EAAW,GAAGnxD,MAAM,KAAOmxD,EACxE,ECbQC,GAAgB,CAACC,EAAQC,IAAWD,IAAWC,ECE/CC,GAAU,CAACl3D,EAAO0E,ICDA,CAACA,IAC5B,MAAMyuD,EAAQzuD,EAAKiB,MAAM,KACnBwxD,EAAW,GACjB,IAAK,MAAMC,KAAQjE,EAAO,CACtB,MAAMkE,EAAqBD,EAAKz6C,QAAQ,KACxC,IAA4B,IAAxB06C,EAA2B,CAC3B,GAAID,EAAKz6C,QAAQ,OAASy6C,EAAK11D,OAAS,EACpC,MAAM,IAAIy0D,GAAc,UAAUzxD,4BAEtC,MAAM4yD,EAAaF,EAAKhmC,MAAMimC,EAAqB,GAAI,GACvD,GAAI9+C,OAAOR,MAAMjC,SAASwhD,IACtB,MAAM,IAAInB,GAAc,yBAAyBmB,gBAAyB5yD,MAEnD,IAAvB2yD,GACAF,EAAS1+C,KAAK2+C,EAAKhmC,MAAM,EAAGimC,IAEhCF,EAAS1+C,KAAK6+C,EAClB,MAEIH,EAAS1+C,KAAK2+C,EAEtB,CACA,OAAOD,CAAQ,EDrBqBI,CAAgB7yD,GAAMuT,QAAO,CAAC+kC,EAAKtiC,KACvE,GAAmB,iBAARsiC,EACP,MAAM,IAAImZ,GAAc,UAAUz7C,UAAchW,oBAAuB+I,KAAK1C,UAAU/K,OAErF,OAAIsgB,MAAMC,QAAQy8B,GACZA,EAAIlnC,SAAS4E,IAEjBsiC,EAAItiC,EAAM,GAClB1a,GEVUw3D,GAASx3D,GAAmB,MAATA,ECAnBy3D,GAAOz3D,IAAWA,ECAxB,IAAI03D,IACX,SAAWA,GACPA,EAAwB,KAAI,OAC5BA,EAAyB,MAAI,OAChC,CAHD,CAGGA,KAAsBA,GAAoB,CAAC,ICF9C,MAAMC,GAAgB,CAClB,CAACD,GAAkBE,MAAO,GAC1B,CAACF,GAAkBG,OAAQ,KAElBC,GAAY93D,IACrB,MAAM+3D,EAAY,MACd,IACI,GAAI/3D,aAAiB0P,IACjB,OAAO1P,EAEX,GAAqB,iBAAVA,GAAsB,aAAcA,EAAO,CAClD,MAAM,SAAEmU,EAAQ,KAAE0B,EAAI,SAAE7E,EAAW,GAAE,KAAEtM,EAAO,GAAE,MAAEoxB,EAAQ,CAAC,GAAM91B,EAC3Du3B,EAAM,IAAI7nB,IAAI,GAAGsB,MAAamD,IAAW0B,EAAO,IAAIA,IAAS,KAAKnR,KAIxE,OAHA6yB,EAAIvhB,OAAS5W,OAAOqL,QAAQqrB,GACvBhwB,KAAI,EAAEtG,EAAGO,KAAO,GAAGP,KAAKO,MACxB2K,KAAK,KACH6sB,CACX,CACA,OAAO,IAAI7nB,IAAI1P,EAInB,CAFA,MAAO2D,GACH,OAAO,IACX,CACH,EAlBiB,GAmBlB,IAAKo0D,EAED,OADAzmC,QAAQ3tB,MAAM,mBAAmB8J,KAAK1C,UAAU/K,uBACzC,KAEX,MAAMg4D,EAAYD,EAAUxqD,MACtB,KAAEqI,EAAI,SAAEzB,EAAQ,SAAE4B,EAAQ,SAAE/E,EAAQ,OAAEgF,GAAW+hD,EACvD,GAAI/hD,EACA,OAAO,KAEX,MAAMiiD,EAASjnD,EAASogB,MAAM,GAAI,GAClC,IAAKhyB,OAAO+qB,OAAOutC,IAAmB1xD,SAASiyD,GAC3C,OAAO,KAEX,MAAMC,EAAO7B,GAAYliD,GAIzB,MAAO,CACH8jD,SACAE,UAHc,GAAGviD,IAFYoiD,EAAUhyD,SAAS,GAAG4P,KAAQ+hD,GAAcM,OACvD,iBAAVj4D,GAAsBA,EAAMgG,SAAS,GAAG4P,KAAQ+hD,GAAcM,MACnB,IAAIN,GAAcM,KAAY,KAIjFvzD,KAAMqR,EACN22B,eAAgB32B,EAASyf,SAAS,KAAOzf,EAAW,GAAGA,KACvDmiD,OACH,ECjDQE,GAAe,CAACpB,EAAQC,IAAWD,IAAWC,ECA9Ch7C,GAAY,CAAClW,EAAOoV,EAAOk9C,EAAMxnB,IACtC11B,GAASk9C,GAAQtyD,EAAMrE,OAAS22D,EACzB,KAENxnB,EAGE9qC,EAAMkW,UAAUlW,EAAMrE,OAAS22D,EAAMtyD,EAAMrE,OAASyZ,GAFhDpV,EAAMkW,UAAUd,EAAOk9C,GCLzBC,GAAat4D,GAAUiJ,mBAAmBjJ,GAAOgC,QAAQ,YAAakW,GAAM,IAAIA,EAAE8a,WAAW,GAAG5xB,SAAS,IAAI0D,kBCC7GyzD,GAAmB,CAACC,EAAU5zD,KACvC,MAAM6zD,EAAuB,GACvBC,EAAkB,IACjB9zD,EAAQq0B,kBACRr0B,EAAQ+zD,iBAEf,IAAIC,EAAe,EACnB,KAAOA,EAAeJ,EAAS92D,QAAQ,CACnC,MAAMm3D,EAAoBL,EAAS77C,QAAQ,IAAKi8C,GAChD,IAA2B,IAAvBC,EAA0B,CAC1BJ,EAAqBhgD,KAAK+/C,EAASpnC,MAAMwnC,IACzC,KACJ,CACAH,EAAqBhgD,KAAK+/C,EAASpnC,MAAMwnC,EAAcC,IACvD,MAAMC,EAAoBN,EAAS77C,QAAQ,IAAKk8C,GAChD,IAA2B,IAAvBC,EAA0B,CAC1BL,EAAqBhgD,KAAK+/C,EAASpnC,MAAMynC,IACzC,KACJ,CACwC,MAApCL,EAASK,EAAoB,IAAkD,MAApCL,EAASM,EAAoB,KACxEL,EAAqBhgD,KAAK+/C,EAASpnC,MAAMynC,EAAoB,EAAGC,IAChEF,EAAeE,EAAoB,GAEvC,MAAMC,EAAgBP,EAASv8C,UAAU48C,EAAoB,EAAGC,GAChE,GAAIC,EAAc/yD,SAAS,KAAM,CAC7B,MAAOgzD,EAAS77C,GAAY47C,EAAcpzD,MAAM,KAChD8yD,EAAqBhgD,KAAKy+C,GAAQwB,EAAgBM,GAAU77C,GAChE,MAEIs7C,EAAqBhgD,KAAKigD,EAAgBK,IAE9CH,EAAeE,EAAoB,CACvC,CACA,OAAOL,EAAqB/tD,KAAK,GAAG,EC9B3BuuD,GAAqB,CAAC9lD,EAAK+lD,EAASt0D,KAC7C,GAAmB,iBAARuO,EACP,OAAOolD,GAAiBplD,EAAKvO,GAE5B,GAAIuO,EAAQ,GACb,OAAOgmD,GAAahmD,EAAKvO,GAExB,GAAIuO,EAAS,IACd,MCZyB,GAAG8iD,OAAOrxD,KACf,IACjBA,EAAQq0B,kBACRr0B,EAAQ+zD,iBAEQ1C,IDOZmD,CAAkBjmD,EAAKvO,GAElC,MAAM,IAAIuxD,GAAc,IAAI+C,OAAa1rD,OAAO2F,6CAA+C,EEZtFgmD,GAAe,EAAG9yD,KAAI6vD,QAAQtxD,KACvC,MAAMy0D,EAAgBnD,EAAKpwD,KAAKsjC,GAAQ,CAAC,UAAW,UAAUpjC,gBAAgBojC,GAAOA,EAAM6vB,GAAmB7vB,EAAK,MAAOxkC,KAC1H,OAAOyB,EAAGV,MAAM,KAAKsS,QAAO,CAAC+kC,EAAKp7C,IAAQo7C,EAAIp7C,IAAM,EAA7CyE,IAAqDgzD,EAAc,ECDjEC,GAAoB,EAAG/tD,YAAWguD,GAAU30D,KACrD,GAAI2G,GAAUA,KAAU3G,EAAQ+zD,gBAC5B,MAAM,IAAIxC,GAAc,IAAI5qD,8CAEhC,MAAMvL,EAAQm5D,GAAaI,EAAQ30D,GAEnC,OADAA,EAAQk4B,QAAQl5B,QAAQmyD,GAAS,sBAAsBC,GAAcuD,QAAavD,GAAch2D,MACzF,CACHI,OAAkB,KAAVJ,KAAwBA,KAClB,MAAVuL,GAAkB,CAAEiuD,SAAU,CAAEl4D,KAAMiK,EAAQvL,UACrD,ECVQy5D,GAAqB,CAACC,EAAa,GAAI90D,KAChD,MAAM+0D,EAA4B,CAAC,EACnC,IAAK,MAAMC,KAAaF,EAAY,CAChC,MAAM,OAAEt5D,EAAM,SAAEo5D,GAAaF,GAAkBM,EAAW,IACnDh1D,EACH+zD,gBAAiB,IACV/zD,EAAQ+zD,mBACRgB,KAGX,IAAKv5D,EACD,MAAO,CAAEA,UAETo5D,IACAG,EAA0BH,EAASl4D,MAAQk4D,EAASx5D,MACpD4E,EAAQk4B,QAAQl5B,QAAQmyD,GAAS,WAAWyD,EAASl4D,WAAW00D,GAAcwD,EAASx5D,UAE/F,CACA,MAAO,CAAEI,QAAQ,EAAMu4D,gBAAiBgB,EAA2B,EClB1DE,GAAqB,CAACrrD,EAAS5J,IAAYxF,OAAOqL,QAAQ+D,GAASyJ,QAAO,CAAC+kC,GAAMsG,EAAWwW,MAAe,IACjH9c,EACH,CAACsG,GAAYwW,EAAUh0D,KAAKi0D,IACxB,MAAMC,EAAgBf,GAAmBc,EAAgB,qBAAsBn1D,GAC/E,GAA6B,iBAAlBo1D,EACP,MAAM,IAAI7D,GAAc,WAAW7S,aAAqB0W,sBAE5D,OAAOA,CAAa,OAExB,CAAC,GCRQC,GAAsB,CAACtyC,EAAU/iB,KAC1C,GAAI0b,MAAMC,QAAQoH,GACd,OAAOA,EAAS7hB,KAAKo0D,GAAkBD,GAAoBC,EAAet1D,KAE9E,cAAe+iB,GACX,IAAK,SACD,OAAO4wC,GAAiB5wC,EAAU/iB,GACtC,IAAK,SACD,GAAiB,OAAb+iB,EACA,MAAM,IAAIwuC,GAAc,iCAAiCxuC,KAE7D,OAAOwyC,GAAsBxyC,EAAU/iB,GAC3C,IAAK,UACD,OAAO+iB,EACX,QACI,MAAM,IAAIwuC,GAAc,6CAA6CxuC,GAC7E,EClBSwyC,GAAwB,CAACt5D,EAAY+D,IAAYxF,OAAOqL,QAAQ5J,GAAYoX,QAAO,CAAC+kC,GAAMod,EAAaC,MAAiB,IAC9Hrd,EACH,CAACod,GAAcH,GAAoBI,EAAaz1D,MAChD,CAAC,GCFQ01D,GAAiB,CAACC,EAAa31D,KACxC,MAAM41D,EAAavB,GAAmBsB,EAAa,eAAgB31D,GACnE,GAA0B,iBAAf41D,EACP,IACI,OAAO,IAAI9qD,IAAI8qD,EAKnB,CAHA,MAAO72D,GAEH,MADA2tB,QAAQ3tB,MAAM,gCAAgC62D,IAAc72D,GACtDA,CACV,CAEJ,MAAM,IAAIwyD,GAAc,6CAA6CqE,EAAa,ECRzEC,GAAuB,CAACC,EAAc91D,KAC/C,MAAM,WAAE80D,EAAU,SAAEriC,GAAaqjC,GAC3B,OAAEt6D,EAAM,gBAAEu4D,GAAoBc,GAAmBC,EAAY90D,GACnE,IAAKxE,EACD,OAEJ,MAAMu6D,EAAsB,IACrB/1D,EACH+zD,gBAAiB,IAAK/zD,EAAQ+zD,mBAAoBA,KAEhD,IAAEphC,EAAG,WAAE12B,EAAU,QAAE2N,GAAY6oB,EAErC,OADAzyB,EAAQk4B,QAAQl5B,QAAQmyD,GAAS,qCAAqCC,GAAc3+B,MAC7E,IACY33B,MAAX8O,GAAwB,CACxBA,QAASqrD,GAAmBrrD,EAASmsD,OAEvBj7D,MAAdmB,GAA2B,CAC3BA,WAAYs5D,GAAsBt5D,EAAY85D,IAElDpjC,IAAK+iC,GAAe/iC,EAAKojC,GAC5B,ECtBQC,GAAoB,CAACC,EAAWj2D,KACzC,MAAM,WAAE80D,EAAU,MAAE/1D,GAAUk3D,GACxB,OAAEz6D,EAAM,gBAAEu4D,GAAoBc,GAAmBC,EAAY90D,GACnE,GAAKxE,EAGL,MAAM,IAAI+1D,GAAc8C,GAAmBt1D,EAAO,QAAS,IACpDiB,EACH+zD,gBAAiB,IAAK/zD,EAAQ+zD,mBAAoBA,KACnD,ECVMmC,GAAmB,CAACC,EAAUn2D,KACvC,MAAM,WAAE80D,EAAU,MAAEsB,GAAUD,GACxB,OAAE36D,EAAM,gBAAEu4D,GAAoBc,GAAmBC,EAAY90D,GACnE,GAAKxE,EAGL,OAAO66D,GAAcD,EAAO,IACrBp2D,EACH+zD,gBAAiB,IAAK/zD,EAAQ+zD,mBAAoBA,IACpD,ECPOsC,GAAgB,CAACD,EAAOp2D,KACjC,IAAK,MAAMs2D,KAAQF,EACf,GAAkB,aAAdE,EAAKxmC,KAAqB,CAC1B,MAAMymC,EAAsBV,GAAqBS,EAAMt2D,GACvD,GAAIu2D,EACA,OAAOA,CAEf,MACK,GAAkB,UAAdD,EAAKxmC,KACVkmC,GAAkBM,EAAMt2D,OAEvB,IAAkB,SAAds2D,EAAKxmC,KAOV,MAAM,IAAIyhC,GAAc,0BAA0B+E,KAPvB,CAC3B,MAAMC,EAAsBL,GAAiBI,EAAMt2D,GACnD,GAAIu2D,EACA,OAAOA,CAEf,CAGA,CAEJ,MAAM,IAAIhF,GAAc,0BAA0B,ECtBzCiF,GAAkB,CAACC,EAAez2D,KAC3C,MAAM,eAAEq0B,EAAc,OAAE6D,GAAWl4B,GAC7B,WAAE02D,EAAU,MAAEN,GAAUK,EAC9Bz2D,EAAQk4B,QAAQl5B,QAAQmyD,GAAS,2BAA2BC,GAAc/8B,MAC1E,MAAMsiC,EAAoBn8D,OAAOqL,QAAQ6wD,GACpC11D,QAAO,EAAE,CAAE7F,KAAoB,MAAbA,EAAEk1B,UACpBnvB,KAAI,EAAEtG,EAAGO,KAAO,CAACP,EAAGO,EAAEk1B,WAC3B,GAAIsmC,EAAkB75D,OAAS,EAC3B,IAAK,MAAO85D,EAAUC,KAAsBF,EACxCtiC,EAAeuiC,GAAYviC,EAAeuiC,IAAaC,EAG/D,MAAMC,EAAiBt8D,OAAOqL,QAAQ6wD,GACjC11D,QAAO,EAAE,CAAE7F,KAAOA,EAAEgF,WACpBe,KAAI,EAAEtG,KAAOA,IAClB,IAAK,MAAMm8D,KAAiBD,EACxB,GAAqC,MAAjCziC,EAAe0iC,GACf,MAAM,IAAIxF,GAAc,gCAAgCwF,MAGhE,MAAMtkC,EAAW4jC,GAAcD,EAAO,CAAE/hC,iBAAgB6D,SAAQ67B,gBAAiB,CAAC,IAClF,GAAI/zD,EAAQq0B,gBAAgBQ,SACxB,IACI,MAAMmiC,EAAgB,IAAIlsD,IAAI9K,EAAQq0B,eAAeQ,WAC/C,SAAEzoB,EAAQ,KAAE6E,GAAS+lD,EAC3BvkC,EAASE,IAAIvmB,SAAWA,EACxBqmB,EAASE,IAAI1hB,KAAOA,CAGxB,CADA,MAAOhT,GACP,CAGJ,OADA+B,EAAQk4B,QAAQl5B,QAAQmyD,GAAS,sBAAsBC,GAAc3+B,MAC9DA,CAAQ,ECnCb7K,GAAI,WAAYqvC,GAAI,KAAMvnC,GAAI,OAAQxyB,GAAI,MAC1C+V,GAAI,kBAAmBga,GAAI,OAAQ3Z,GAAI,QAAS+b,GAAI,WAAYpxB,GAAI,CAAE,CAAC2pB,KAAI,EAAO,KAAQ,UAAYsvC,GAAI,CAAE,CAACtvC,KAAI,EAAM,SAAW,EAAO,KAAQ,WAAauvC,GAAI,CAAE,CAACj6D,IAAI,YAAck6D,GAAI,CAAE,CAACH,IAAI,gBAAiB,CAACvnC,IAAI,CAAC,CAAE,CAACxyB,IAAI,YAAa,IAASgY,GAAI,CAAE,CAAC+hD,IAAI,gBAAiB,CAACvnC,IAAI,CAAC,CAAE,CAACxyB,IAAI,iBAAkB,IAAS8e,GAAI,CAAC,EAAGphB,GAAI,CAAE,CAACq8D,IAAI,gBAAiB,CAACvnC,IAAI,EAAC,EAAM,CAAE,CAACunC,IAAI,UAAW,CAACvnC,IAAI,CAAC,CAAE,CAACxyB,IAAI+V,IAAK,mBAAsBqS,GAAI,CAAE,CAAC2xC,IAAI,gBAAiB,CAACvnC,IAAI,EAAC,EAAM,CAAE,CAACunC,IAAI,UAAW,CAACvnC,IAAI,CAAC,CAAE,CAACxyB,IAAI+V,IAAK,wBAA2BtY,GAAI,CAACw8D,IAAIvpC,GAAI,CAACwpC,IAAI18D,GAAI,CAACwa,IAE3hBmiD,GADC,CAAEvpC,QAAS,MAAO4oC,WAAY,CAAE7X,OAAQ5gD,GAAG6gD,aAAcoY,GAAGtY,QAASsY,GAAGriC,SAAU52B,IAAKm4D,MAAO,CAAC,CAAEtB,WAAY,CAAC,CAAE,CAACmC,IAAI,gBAAiB,CAACvnC,IAAI,CAAC,CAAE,CAACxyB,IAAI,WAAayJ,OAAQsM,KAAM6c,KAAM7C,GAAGmpC,MAAO,CAAC,CAAEtB,WAAY,CAAC,CAAE,CAACmC,IAAI,QAAS,CAACvnC,IAAI/0B,IAAK,CAAE,CAACs8D,IAAI,WAAY,CAACvnC,IAAI/0B,GAAGgM,OAAQ,QAAUmpB,KAAM7C,GAAGmpC,MAAO,CAAC,CAAEtB,WAAYlnC,GAAG7uB,MAAO,oEAAqE+wB,KAAMxc,IAAK,CAAEwc,KAAM7C,GAAGmpC,MAAO,CAAC,CAAEtB,WAAYp6D,GAAGqE,MAAO,yEAA0E+wB,KAAMxc,IAAK,CAAEmf,SAAU,CAAEE,IAAKwkC,GAAGl7D,WAAY+f,GAAGpS,QAASoS,IAAK8T,KAAMT,QAAW,CAAEylC,WAAY,CAACsC,GAAGliD,IAAI4a,KAAM7C,GAAGmpC,MAAO,CAAC,CAAEtB,WAAY,CAACl6D,GAAG0qB,IAAIwK,KAAM7C,GAAGmpC,MAAO,CAAC,CAAE3jC,SAAU,CAAEE,IAAK,wEAAyE12B,WAAY+f,GAAGpS,QAASoS,IAAK8T,KAAMT,MAAQ,CAAEtwB,MAAO,kFAAmF+wB,KAAMxc,MAAQ,CAAEwhD,WAAYlnC,GAAGkC,KAAM7C,GAAGmpC,MAAO,CAAC,CAAEtB,WAAY,CAACl6D,IAAIk1B,KAAM7C,GAAGmpC,MAAO,CAAC,CAAEtmC,KAAM7C,GAAGmpC,MAAO,CAAC,CAAE3jC,SAAU,CAAEE,IAAK,+DAAgE12B,WAAY+f,GAAGpS,QAASoS,IAAK8T,KAAMT,QAAW,CAAEtwB,MAAO,2DAA4D+wB,KAAMxc,MAAQ,CAAEwhD,WAAYp6D,GAAGo1B,KAAM7C,GAAGmpC,MAAO,CAAC,CAAEtB,WAAY,CAACxvC,IAAIwK,KAAM7C,GAAGmpC,MAAO,CAAC,CAAE3jC,SAAU,CAAEE,IAAK,mEAAoE12B,WAAY+f,GAAGpS,QAASoS,IAAK8T,KAAMT,MAAQ,CAAEtwB,MAAO,qEAAsE+wB,KAAMxc,MAAQ,CAAEmf,SAAU,CAAEE,IAAK,0DAA2D12B,WAAY+f,GAAGpS,QAASoS,IAAK8T,KAAMT,QCArlDioC,GAA0B,CAACjjC,EAAgB9B,EAAU,CAAC,IACxDikC,GAAgBa,GAAS,CAC5BhjC,eAAgBA,EAChB6D,OAAQ3F,EAAQ2F,SCDXq/B,GAAwB,CAAC,YAAa,eAAgB,SAAU,WAAY,UCF5EC,GAAoC,CAC7CxnC,4BAA8B/vB,GACnBA,EAAyB,kBAEpCiwB,mBAAqBC,GACVA,EAAgC,cAE3CE,QAAS,UCHAonC,GAA4B,EAAG9mC,SAASm4B,GAAWv4B,GAA6BmnC,eAAe5O,GAAW0O,KAAwC,CAAC,IAAMr2B,IAAQnQ,UAC1K,MAAMkN,EAA+B,mBAAjBw5B,QAAoCA,IAAiBA,EACzE,OAAQx5B,GAAM1uB,eACV,IAAK,OACD,OAAOmoD,GAA4BhnC,GACvC,IAAK,YACL,IAAK,eACL,IAAK,SACL,IAAK,WACL,IAAK,SACD,OAAOhzB,QAAQC,QAAQsgC,GAAM05B,qBACjC,UAAK98D,EACD,OAAO6C,QAAQC,QAAQ,UAC3B,QACI,MAAM,IAAIwC,MAAM,gDAAgDm3D,GAAsBzxD,KAAK,cAAco4B,KACjH,IAEEy5B,GAA8B3mC,MAAO6mC,IACvC,GAAIA,EAAc,CACd,MAAMC,EAAyC,mBAAjBD,QAAoCA,IAAiBA,EAC7EE,QAAuBC,KAC7B,OAAKD,EAGDD,IAAmBC,EACZ,YAGA,eANA,UAQf,CACA,MAAO,UAAU,EAEfC,GAAsBhnC,UACxB,GAAI30B,QAAQ4D,IAAqB,oBAAM5D,QAAQ4D,IAAkB,YAAK5D,QAAQ4D,IAA0B,oBACpG,OAAO5D,QAAQ4D,IAAkB,YAAK5D,QAAQ4D,IAA0B,mBAE5E,IAAK5D,QAAQ4D,IAAqB,0BAC9B,IACI,MAAMwyB,QAAiBg3B,KACvB,aAAclC,GAAY,IAAK90B,EAAU3yB,KFzCrB,wCEyCgDtD,UAGxE,CADA,MAAOyB,GACP,CACJ,ECpCS,GAAoBk0B,IAC7BghB,GAAgC92C,QAAQyxB,SACxC,MAAM4pC,EAAeD,GAA0BtlC,GACzC8lC,EAAwB,IAAMP,IAAet5D,KAAK40C,IAClDklB,ECdsB,CAAC/lC,IAAW,CACxCgmC,WAAY,aACZhc,cAAehqB,GAAQgqB,eAAiBwU,GACxC/V,cAAezoB,GAAQyoB,eAAiBgW,GACxCwH,kBAAmBjmC,GAAQimC,oBAAqB,EAChDjjC,iBAAkBhD,GAAQgD,kBAAoBmiC,GAC9Cp/B,OAAQ/F,GAAQ+F,QAAU,IAAIiT,GAC9B1W,UAAWtC,GAAQsC,WAAa,MAChC7B,UAAWT,GAAQS,WAAamD,IDML,CAAuB5D,GAClD,MAAO,IACA+lC,KACA/lC,EACH0G,QAAS,OACT6+B,eACA3lC,kBAAmBI,GAAQJ,mBAAqB09B,GAChD1kB,yBAA0B5Y,GAAQ4Y,0BAC9BD,GAAiB,CAAErW,UAAWyjC,EAAmBzjC,UAAWq7B,cAAe,KAC/ExxB,YAAanM,GAAQmM,aAAe,GAAeY,IACnDvO,OAAQwB,GAAQxB,QAAU,GAAeJ,EAA4BC,GACrEmH,eAAgBxF,GAAQwF,gBAAkB,IAAI,GAAesgC,GAC7D34B,UAAWnN,GAAQmN,WACf,GAAe,IACRC,GACHlP,QAASW,gBAAmBinC,KAAyB34B,WAAanG,IAE1E+L,OAAQ/S,GAAQ+S,QAAU+nB,GAAKtZ,KAAK,KAAM,UAC1CoK,gBAAiB5rB,GAAQ4rB,iBAAmBA,GAC5CvnB,qBAAsBrE,GAAQqE,sBAAwB,GAAezG,GACrEgB,gBAAiBoB,GAAQpB,iBAAmB,GAAeT,GAC3D+nC,YAAalmC,GAAQkmC,aAAe9H,GACpCnS,YAAajsB,GAAQisB,aAAeqS,GACvC,EE9BE,MAAM6H,WAAkB,GAC3B37D,YAAYoiD,GACR,MAAMwZ,EAAY,GAAmBxZ,GAC/ByZ,GCdkCx4D,EDcUu4D,ECb/C,IACAv4D,EACHw2B,qBAAsBx2B,EAAQw2B,uBAAwB,EACtDzF,gBAAiB/wB,EAAQ+wB,kBAAmB,EAC5CkY,mBAAoB,iBALmB,IAACjpC,EDexC,MAAMy4D,EAAY3nC,EAAoB0nC,GAChCE,EAAYtiC,EAAsBqiC,GAGlCE,EAAYvuB,GAFAhL,GAAmBs5B,IAGrChtD,MAAMitD,GACNp+D,KAAK43B,OAASwmC,EACdp+D,KAAK2zC,gBAAgBnB,IAAI/M,GAAezlC,KAAK43B,SAC7C53B,KAAK2zC,gBAAgBnB,IAAInb,EAAuBr3B,KAAK43B,SACrD53B,KAAK2zC,gBAAgBnB,IAAItV,EAAoBl9B,KAAK43B,SAClD53B,KAAK2zC,gBAAgBnB,IAAIhV,EAAgBx9B,KAAK43B,SAC9C53B,KAAK2zC,gBAAgBnB,IAAInU,EAA4Br+B,KAAK43B,SAC1D53B,KAAK2zC,gBAAgBnB,IAAIlC,GAAmBtwC,KAAK43B,QACrD,CACAviB,UACIlE,MAAMkE,SACV,EE9BG,MAAMgpD,WAA4B,GACrCj8D,YAAYqD,GACR0L,MAAM1L,GACNxF,OAAOmR,eAAepR,KAAMq+D,GAAoBhtD,UACpD,ECHG,MAAMitD,WAAgC,GACzCl8D,YAAYk6C,GACRnrC,MAAM,CACFhP,KAAM,0BACNy1C,OAAQ,YACL0E,IAEPt8C,KAAKmC,KAAO,0BACZnC,KAAK43C,OAAS,SACd33C,OAAOmR,eAAepR,KAAMs+D,GAAwBjtD,UACxD,EAEG,MAAM,WAAkC,GAC3CjP,YAAYk6C,GACRnrC,MAAM,CACFhP,KAAM,4BACNy1C,OAAQ,YACL0E,IAEPt8C,KAAKmC,KAAO,4BACZnC,KAAK43C,OAAS,SACd33C,OAAOmR,eAAepR,KAAM,GAA0BqR,UAC1D,EAEG,MAAMktD,WAAiC,GAC1Cn8D,YAAYk6C,GACRnrC,MAAM,CACFhP,KAAM,2BACNy1C,OAAQ,YACL0E,IAEPt8C,KAAKmC,KAAO,2BACZnC,KAAK43C,OAAS,SACd33C,OAAOmR,eAAepR,KAAMu+D,GAAyBltD,UACzD,EAEG,MAAMmtD,WAA8B,GACvCp8D,YAAYk6C,GACRnrC,MAAM,CACFhP,KAAM,wBACNy1C,OAAQ,YACL0E,IAEPt8C,KAAKmC,KAAO,wBACZnC,KAAK43C,OAAS,SACd33C,OAAOmR,eAAepR,KAAMw+D,GAAsBntD,UACtD,EAEG,MAGMotD,GAA+CzqD,IAAQ,IAC7DA,KACCA,EAAI0qD,aAAe,CAAEA,YAAa,MAE7BC,GAAqC3qD,IAAQ,IACnDA,KACCA,EAAI45B,iBAAmB,CAAEA,gBAAiB,OAC1C55B,EAAIy3B,cAAgB,CAAEA,aAAc,MAE/BmzB,GAAgD5qD,IAAQ,IAC9DA,KACCA,EAAI6qD,iBAAmB,CAAEA,gBAAiBF,GAAkC3qD,EAAI6qD,oBCqClFC,GAAyDroC,MAAOllB,EAAQymB,KAC1E,MAAM6mB,EAAe,IACdttC,EACHqlB,WAAY,GAAerlB,EAAOqlB,KAAMoB,IAEtCmgB,EAAY,GAAsB5mC,EAAQstC,EAAajoB,MAC7D,OAAQuhB,GACJ,IAAK,0BACL,IAAK,4CACD,YAAY4mB,GAAwDlgB,EAAc7mB,GACtF,IAAK,4BACL,IAAK,8CACD,YAAYgnC,GAA0DngB,EAAc7mB,GACxF,IAAK,2BACL,IAAK,6CACD,YAAYinC,GAAyDpgB,EAAc7mB,GACvF,IAAK,wBACL,IAAK,0CACD,YAAYknC,GAAsDrgB,EAAc7mB,GACpF,QACI,MAAMigB,EAAa4G,EAAajoB,KAChC,GAAkB,CACdrlB,SACA0mC,aACAC,cAAe,GACfC,cAEZ,EAgIE,GAAM,GACN4mB,GAA0DtoC,MAAOooB,EAAc7mB,KACjF,MAAM1f,EAAW,GAAI,CAAC,GAChBpL,EAAO2xC,EAAajoB,KACN,MAAhB1pB,EAAKvL,UACL2W,EAAS3W,QAAU,GAAeuL,EAAKvL,UAE3C,MAAMm2C,EAAY,IAAIwmB,GAAwB,CAC1CrgC,UAAW,GAAoB4gB,MAC5BvmC,IAEP,OAAO,GAA2Bw/B,EAAW+G,EAAajoB,KAAK,EAE7DooC,GAA4DvoC,MAAOooB,EAAc7mB,KACnF,MAAM1f,EAAW,GAAI,CAAC,GAChBpL,EAAO2xC,EAAajoB,KACN,MAAhB1pB,EAAKvL,UACL2W,EAAS3W,QAAU,GAAeuL,EAAKvL,UAE3C,MAAMm2C,EAAY,IAAI,GAA0B,CAC5C7Z,UAAW,GAAoB4gB,MAC5BvmC,IAEP,OAAO,GAA2Bw/B,EAAW+G,EAAajoB,KAAK,EAE7DqoC,GAA2DxoC,MAAOooB,EAAc7mB,KAClF,MAAM1f,EAAW,GAAI,CAAC,GAChBpL,EAAO2xC,EAAajoB,KACN,MAAhB1pB,EAAKvL,UACL2W,EAAS3W,QAAU,GAAeuL,EAAKvL,UAE3C,MAAMm2C,EAAY,IAAIymB,GAAyB,CAC3CtgC,UAAW,GAAoB4gB,MAC5BvmC,IAEP,OAAO,GAA2Bw/B,EAAW+G,EAAajoB,KAAK,EAE7DsoC,GAAwDzoC,MAAOooB,EAAc7mB,KAC/E,MAAM1f,EAAW,GAAI,CAAC,GAChBpL,EAAO2xC,EAAajoB,KACN,MAAhB1pB,EAAKvL,UACL2W,EAAS3W,QAAU,GAAeuL,EAAKvL,UAE3C,MAAMm2C,EAAY,IAAI0mB,GAAsB,CACxCvgC,UAAW,GAAoB4gB,MAC5BvmC,IAEP,OAAO,GAA2Bw/B,EAAW+G,EAAajoB,KAAK,EAoB7DuoC,GAA0C,CAAC5tD,EAAQymB,KAC9C,CACH0T,YAAa,GAAen6B,EAAOm6B,aACnCiD,WAAY,GAAap9B,EAAOo9B,YAChCf,gBAAiB,GAAer8B,EAAOq8B,iBACvCnC,aAAc,GAAel6B,EAAOk6B,gBAoBtC,GAAuBl6B,IAAW,CACpC0tB,eAAgB1tB,EAAO7H,WACvB4uC,UAAW/mC,EAAOlC,QAAQ,qBAAuBkC,EAAOlC,QAAQ,sBAAwBkC,EAAOlC,QAAQ,oBACvGkpC,kBAAmBhnC,EAAOlC,QAAQ,cAClCmpC,KAAMjnC,EAAOlC,QAAQ,iBAEnB,GAAc,CAACk0C,EAAa,IAAIh3B,WAAcyL,IAC5CurB,aAAsBh3B,WACfnpB,QAAQC,QAAQkgD,GAEpBvrB,EAAQwrB,gBAAgBD,IAAengD,QAAQC,QAAQ,IAAIkpB,YAGhE6yC,GAA6Bv+D,KAAUA,SAE/B,KAAVA,GACEZ,OAAOo/D,oBAAoBx+D,GAAOgG,SAAS,WAA6B,GAAhBhG,EAAM0B,QAC9DtC,OAAOo/D,oBAAoBx+D,GAAOgG,SAAS,SAAyB,GAAdhG,EAAMmpB,MAC5D,GAAY,CAACu5B,EAAYvrB,IANL,EAACurB,EAAYvrB,IAAY,GAAYurB,EAAYvrB,GAASn0B,MAAM+yB,GAASoB,EAAQ6rB,YAAYjtB,KAM5E,CAAkB2sB,EAAYvrB,GAASn0B,MAAMopC,GAChFA,EAAQ1qC,OACD+L,KAAKmK,MAAMw0B,GAEf,CAAC,IAEN,GAAiBxW,MAAOstB,EAAW/rB,KACrC,MAAMn3B,QAAc,GAAUkjD,EAAW/rB,GAEzC,OADAn3B,EAAMc,QAAUd,EAAMc,SAAWd,EAAMm3C,QAChCn3C,CAAK,EAEV,GAAwB,CAAC0Q,EAAQrE,KACnC,MACM82C,EAAqBC,IACvB,IAAIC,EAAaD,EAajB,MAZ0B,iBAAfC,IACPA,EAAaA,EAAWjiD,YAExBiiD,EAAW1mC,QAAQ,MAAQ,IAC3B0mC,EAAaA,EAAW19C,MAAM,KAAK,IAEnC09C,EAAW1mC,QAAQ,MAAQ,IAC3B0mC,EAAaA,EAAW19C,MAAM,KAAK,IAEnC09C,EAAW1mC,QAAQ,MAAQ,IAC3B0mC,EAAaA,EAAW19C,MAAM,KAAK,IAEhC09C,CAAU,EAEfC,GAjBW1jC,EAiBSlP,EAAOlC,QAjBR5M,EAiBiB,mBAjBTxC,OAAOqC,KAAKme,GAAQwlB,MAAM5lC,GAAMA,EAAE4U,gBAAkBxS,EAAIwS,iBAAzE,IAACwL,EAAQhe,EAkBzB,YAAkBlC,IAAd4jD,EACOH,EAAkBzyC,EAAOlC,QAAQ80C,SAE1B5jD,IAAd2M,EAAKhB,KACE83C,EAAkB92C,EAAKhB,WAEX3L,IAAnB2M,EAAa,OACN82C,EAAkB92C,EAAa,aAD1C,CAEA,EC/YG,MAAMoyD,WAAkC,GAC3Cl9D,YAAYwE,GACRuK,QACAnR,KAAK4G,MAAQA,CACjB,CACA4B,0CACI,MAAO,CACH67C,QAAS,CAAE9uB,KAAM,gBAAiBpzB,KAAM,mBACxCm4B,SAAU,CAAE/E,KAAM,gBAAiBpzB,KAAM,YACzCmiD,OAAQ,CAAE/uB,KAAM,gBAAiBpzB,KAAM,UACvCoiD,aAAc,CAAEhvB,KAAM,gBAAiBpzB,KAAM,wBAErD,CACA2xC,kBAAkBvc,EAAaitB,EAAe/+C,GAC1CzF,KAAK2zC,gBAAgBnB,IAAI7a,EAAe6sB,EAAexkD,KAAKozC,UAAWpzC,KAAKszC,cAC5EtzC,KAAK2zC,gBAAgBnB,IAAInX,EAAkBmpB,EAAe8a,GAA0BtlC,qCACpF,MAAMnI,EAAQ0F,EAAY5lB,OAAO3R,KAAK2zC,kBAChC,OAAEhW,GAAW6mB,EAGbC,EAA0B,CAC5B9mB,SACAF,WAJe,YAKfC,YAJgB,4BAKhBE,wBAAyB6gC,GACzB5gC,yBAA0B+gC,KAExB,eAAExhC,GAAmBonB,EAC3B,OAAO3yB,EAAMxuB,SAAS6P,GAAYkqB,EAAesnB,OAAOxxC,EAAQA,QAASzN,GAAW,CAAC,IAAIg/C,EAC7F,CACArR,UAAUxsC,EAAOoxB,GACb,MDhCuDvB,OAAO7vB,EAAOoxB,KACzE,MAAM,SAAEhjB,EAAQ,SAAEnD,EAAW,QAAO,KAAE6E,EAAMnR,KAAMo+C,SAAmB3rB,EAAQE,WACvE7oB,EAAU,GAAI,CAAC,EAAG+vD,GAA2B,CAC/C,yBAA0Bx4D,EAAM83D,cAE9Ba,EAAe,GAAG5b,GAAUttB,SAAS,KAAOstB,EAAS1xB,MAAM,GAAI,GAAK0xB,GAAY,4BAChFhtB,EAAQ,GAAI,CACd6oC,UAAW,CAAC,CAAE,GAAgB54D,EAAM64D,SAAU,aAC9CC,WAAY,CAAC,CAAE,GAAgB94D,EAAM8wD,UAAW,gBAGpD,OAAO,IAAI,EAAc,CACrB7lD,WACAmD,WACA0B,OACAJ,OAAQ,MACRjH,UACA9J,KAAMg6D,EACN5oC,QACAC,UATAA,GAUF,ECYS+oC,CAAgD/4D,EAAOoxB,EAClE,CACAsb,YAAY/hC,EAAQymB,GAChB,MDiDyDvB,OAAOllB,EAAQymB,KAC5E,GAA0B,MAAtBzmB,EAAO7H,YAAsB6H,EAAO7H,YAAc,IAClD,OAAOo1D,GAAuDvtD,EAAQymB,GAE1E,MAAM1f,EAAW,GAAI,CACjB2lB,UAAW,GAAoB1sB,KAE7BrE,EAAO,GAAgB,SAAqB,GAAUqE,EAAOqlB,KAAMoB,IAAW,QAIpF,OAH4B,MAAxB9qB,EAAK2xD,kBACLvmD,EAASumD,gBAAkBM,GAAwCjyD,EAAK2xD,gBAAiB7mC,IAEtF1f,CAAQ,EC5DJsnD,CAAkDruD,EAAQymB,EACrE,ECxCG,MACM6nC,GAAkB,kFCAxB,MAAMC,WAAgC,GACzC19D,YAAYqD,GACR0L,MAAM1L,GACNxF,OAAOmR,eAAepR,KAAM8/D,GAAwBzuD,UACxD,ECJG,MAAM0uD,WAA8B,GACvC39D,YAAYk6C,GACRnrC,MAAM,CACFhP,KAAM,wBACNy1C,OAAQ,YACL0E,IAEPt8C,KAAKmC,KAAO,wBACZnC,KAAK43C,OAAS,SACd33C,OAAOmR,eAAepR,KAAM+/D,GAAsB1uD,WAClDrR,KAAKwE,MAAQ83C,EAAK93C,MAClBxE,KAAKggE,kBAAoB1jB,EAAK0jB,iBAClC,EAEG,MAAMC,WAAsC,GAC/C79D,YAAYk6C,GACRnrC,MAAM,CACFhP,KAAM,gCACNy1C,OAAQ,YACL0E,IAEPt8C,KAAKmC,KAAO,gCACZnC,KAAK43C,OAAS,SACd33C,OAAOmR,eAAepR,KAAMigE,GAA8B5uD,WAC1DrR,KAAKwE,MAAQ83C,EAAK93C,MAClBxE,KAAKggE,kBAAoB1jB,EAAK0jB,iBAClC,EAEG,MAAM,WAA8B,GACvC59D,YAAYk6C,GACRnrC,MAAM,CACFhP,KAAM,wBACNy1C,OAAQ,YACL0E,IAEPt8C,KAAKmC,KAAO,wBACZnC,KAAK43C,OAAS,SACd33C,OAAOmR,eAAepR,KAAM,GAAsBqR,WAClDrR,KAAKwE,MAAQ83C,EAAK93C,MAClBxE,KAAKggE,kBAAoB1jB,EAAK0jB,iBAClC,EAEG,MAAME,WAAgC,GACzC99D,YAAYk6C,GACRnrC,MAAM,CACFhP,KAAM,0BACNy1C,OAAQ,YACL0E,IAEPt8C,KAAKmC,KAAO,0BACZnC,KAAK43C,OAAS,SACd33C,OAAOmR,eAAepR,KAAMkgE,GAAwB7uD,WACpDrR,KAAKwE,MAAQ83C,EAAK93C,MAClBxE,KAAKggE,kBAAoB1jB,EAAK0jB,iBAClC,EAEG,MAAMG,WAA+B,GACxC/9D,YAAYk6C,GACRnrC,MAAM,CACFhP,KAAM,yBACNy1C,OAAQ,YACL0E,IAEPt8C,KAAKmC,KAAO,yBACZnC,KAAK43C,OAAS,SACd33C,OAAOmR,eAAepR,KAAMmgE,GAAuB9uD,WACnDrR,KAAKwE,MAAQ83C,EAAK93C,MAClBxE,KAAKggE,kBAAoB1jB,EAAK0jB,iBAClC,EAEG,MAAMI,WAA8B,GACvCh+D,YAAYk6C,GACRnrC,MAAM,CACFhP,KAAM,wBACNy1C,OAAQ,YACL0E,IAEPt8C,KAAKmC,KAAO,wBACZnC,KAAK43C,OAAS,SACd33C,OAAOmR,eAAepR,KAAMogE,GAAsB/uD,WAClDrR,KAAKwE,MAAQ83C,EAAK93C,MAClBxE,KAAKggE,kBAAoB1jB,EAAK0jB,iBAClC,EAEG,MAAM,WAAgC,GACzC59D,YAAYk6C,GACRnrC,MAAM,CACFhP,KAAM,0BACNy1C,OAAQ,YACL0E,IAEPt8C,KAAKmC,KAAO,0BACZnC,KAAK43C,OAAS,SACd33C,OAAOmR,eAAepR,KAAM,GAAwBqR,WACpDrR,KAAKwE,MAAQ83C,EAAK93C,MAClBxE,KAAKggE,kBAAoB1jB,EAAK0jB,iBAClC,EAEG,MAAMK,WAA8B,GACvCj+D,YAAYk6C,GACRnrC,MAAM,CACFhP,KAAM,wBACNy1C,OAAQ,YACL0E,IAEPt8C,KAAKmC,KAAO,wBACZnC,KAAK43C,OAAS,SACd33C,OAAOmR,eAAepR,KAAMqgE,GAAsBhvD,WAClDrR,KAAKwE,MAAQ83C,EAAK93C,MAClBxE,KAAKggE,kBAAoB1jB,EAAK0jB,iBAClC,EAEG,MAAMM,WAA0B,GACnCl+D,YAAYk6C,GACRnrC,MAAM,CACFhP,KAAM,oBACNy1C,OAAQ,YACL0E,IAEPt8C,KAAKmC,KAAO,oBACZnC,KAAK43C,OAAS,SACd33C,OAAOmR,eAAepR,KAAMsgE,GAAkBjvD,WAC9CrR,KAAKwE,MAAQ83C,EAAK93C,MAClBxE,KAAKggE,kBAAoB1jB,EAAK0jB,iBAClC,EAEG,MAAMO,WAAoC,GAC7Cn+D,YAAYk6C,GACRnrC,MAAM,CACFhP,KAAM,8BACNy1C,OAAQ,YACL0E,IAEPt8C,KAAKmC,KAAO,8BACZnC,KAAK43C,OAAS,SACd33C,OAAOmR,eAAepR,KAAMugE,GAA4BlvD,WACxDrR,KAAKwE,MAAQ83C,EAAK93C,MAClBxE,KAAKggE,kBAAoB1jB,EAAK0jB,iBAClC,EAEG,MAAMQ,WAAsC,GAC/Cp+D,YAAYk6C,GACRnrC,MAAM,CACFhP,KAAM,gCACNy1C,OAAQ,YACL0E,IAEPt8C,KAAKmC,KAAO,gCACZnC,KAAK43C,OAAS,SACd33C,OAAOmR,eAAepR,KAAMwgE,GAA8BnvD,WAC1DrR,KAAKwE,MAAQ83C,EAAK93C,MAClBxE,KAAKggE,kBAAoB1jB,EAAK0jB,iBAClC,EAgBG,MAAMS,GAAwCzsD,IAAQ,IACtDA,IAEM0sD,GAAyC1sD,IAAQ,IACvDA,ICzED2sD,GAAkDlqC,MAAOllB,EAAQymB,KACnE,MAAM6mB,EAAe,IACdttC,EACHqlB,WAAY,GAAerlB,EAAOqlB,KAAMoB,IAEtCmgB,EAAY,GAAsB5mC,EAAQstC,EAAajoB,MAC7D,OAAQuhB,GACJ,IAAK,wBACL,IAAK,8CACD,YAAYyoB,GAAsD/hB,EAAc7mB,GACpF,IAAK,gCACL,IAAK,sDACD,YAAY6oC,GAA8DhiB,EAAc7mB,GAC5F,IAAK,wBACL,IAAK,8CACD,YAAY8oC,GAAsDjiB,EAAc7mB,GACpF,IAAK,0BACL,IAAK,gDACD,YAAY+oC,GAAwDliB,EAAc7mB,GACtF,IAAK,yBACL,IAAK,+CACD,YAAYgpC,GAAuDniB,EAAc7mB,GACrF,IAAK,wBACL,IAAK,8CACD,YAAYipC,GAAsDpiB,EAAc7mB,GACpF,IAAK,0BACL,IAAK,gDACD,YAAY,GAAwD6mB,EAAc7mB,GACtF,IAAK,wBACL,IAAK,8CACD,YAAYkpC,GAAsDriB,EAAc7mB,GACpF,IAAK,oBACL,IAAK,0CACD,YAAYmpC,GAAkDtiB,EAAc7mB,GAChF,IAAK,8BACL,IAAK,oDACD,YAAYopC,GAA4DviB,EAAc7mB,GAC1F,IAAK,gCACL,IAAK,sDACD,YAAYqpC,GAA8DxiB,EAAc7mB,GAC5F,QACI,MAAMigB,EAAa4G,EAAajoB,KAChC,GAAkB,CACdrlB,SACA0mC,aACAC,cAAe,GACfC,cAEZ,EAuHE,GAAM,GACNyoB,GAAwDnqC,MAAOooB,EAAc7mB,KAC/E,MAAM1f,EAAW,GAAI,CAAC,GAChBpL,EAAO2xC,EAAajoB,KACR,MAAd1pB,EAAK1I,QACL8T,EAAS9T,MAAQ,GAAe0I,EAAK1I,QAEX,MAA1B0I,EAAK8yD,oBACL1nD,EAAS0nD,kBAAoB,GAAe9yD,EAAK8yD,oBAErD,MAAMloB,EAAY,IAAIioB,GAAsB,CACxC9hC,UAAW,GAAoB4gB,MAC5BvmC,IAEP,OAAO,GAA2Bw/B,EAAW+G,EAAajoB,KAAK,EAE7DiqC,GAAgEpqC,MAAOooB,EAAc7mB,KACvF,MAAM1f,EAAW,GAAI,CAAC,GAChBpL,EAAO2xC,EAAajoB,KACR,MAAd1pB,EAAK1I,QACL8T,EAAS9T,MAAQ,GAAe0I,EAAK1I,QAEX,MAA1B0I,EAAK8yD,oBACL1nD,EAAS0nD,kBAAoB,GAAe9yD,EAAK8yD,oBAErD,MAAMloB,EAAY,IAAImoB,GAA8B,CAChDhiC,UAAW,GAAoB4gB,MAC5BvmC,IAEP,OAAO,GAA2Bw/B,EAAW+G,EAAajoB,KAAK,EAE7DkqC,GAAwDrqC,MAAOooB,EAAc7mB,KAC/E,MAAM1f,EAAW,GAAI,CAAC,GAChBpL,EAAO2xC,EAAajoB,KACR,MAAd1pB,EAAK1I,QACL8T,EAAS9T,MAAQ,GAAe0I,EAAK1I,QAEX,MAA1B0I,EAAK8yD,oBACL1nD,EAAS0nD,kBAAoB,GAAe9yD,EAAK8yD,oBAErD,MAAMloB,EAAY,IAAI,GAAsB,CACxC7Z,UAAW,GAAoB4gB,MAC5BvmC,IAEP,OAAO,GAA2Bw/B,EAAW+G,EAAajoB,KAAK,EAE7DmqC,GAA0DtqC,MAAOooB,EAAc7mB,KACjF,MAAM1f,EAAW,GAAI,CAAC,GAChBpL,EAAO2xC,EAAajoB,KACR,MAAd1pB,EAAK1I,QACL8T,EAAS9T,MAAQ,GAAe0I,EAAK1I,QAEX,MAA1B0I,EAAK8yD,oBACL1nD,EAAS0nD,kBAAoB,GAAe9yD,EAAK8yD,oBAErD,MAAMloB,EAAY,IAAIooB,GAAwB,CAC1CjiC,UAAW,GAAoB4gB,MAC5BvmC,IAEP,OAAO,GAA2Bw/B,EAAW+G,EAAajoB,KAAK,EAE7DoqC,GAAyDvqC,MAAOooB,EAAc7mB,KAChF,MAAM1f,EAAW,GAAI,CAAC,GAChBpL,EAAO2xC,EAAajoB,KACR,MAAd1pB,EAAK1I,QACL8T,EAAS9T,MAAQ,GAAe0I,EAAK1I,QAEX,MAA1B0I,EAAK8yD,oBACL1nD,EAAS0nD,kBAAoB,GAAe9yD,EAAK8yD,oBAErD,MAAMloB,EAAY,IAAIqoB,GAAuB,CACzCliC,UAAW,GAAoB4gB,MAC5BvmC,IAEP,OAAO,GAA2Bw/B,EAAW+G,EAAajoB,KAAK,EAiB7DqqC,GAAwDxqC,MAAOooB,EAAc7mB,KAC/E,MAAM1f,EAAW,GAAI,CAAC,GAChBpL,EAAO2xC,EAAajoB,KACR,MAAd1pB,EAAK1I,QACL8T,EAAS9T,MAAQ,GAAe0I,EAAK1I,QAEX,MAA1B0I,EAAK8yD,oBACL1nD,EAAS0nD,kBAAoB,GAAe9yD,EAAK8yD,oBAErD,MAAMloB,EAAY,IAAIsoB,GAAsB,CACxCniC,UAAW,GAAoB4gB,MAC5BvmC,IAEP,OAAO,GAA2Bw/B,EAAW+G,EAAajoB,KAAK,EAE7D,GAA0DH,MAAOooB,EAAc7mB,KACjF,MAAM1f,EAAW,GAAI,CAAC,GAChBpL,EAAO2xC,EAAajoB,KACR,MAAd1pB,EAAK1I,QACL8T,EAAS9T,MAAQ,GAAe0I,EAAK1I,QAEX,MAA1B0I,EAAK8yD,oBACL1nD,EAAS0nD,kBAAoB,GAAe9yD,EAAK8yD,oBAErD,MAAMloB,EAAY,IAAI,GAAwB,CAC1C7Z,UAAW,GAAoB4gB,MAC5BvmC,IAEP,OAAO,GAA2Bw/B,EAAW+G,EAAajoB,KAAK,EAE7DsqC,GAAwDzqC,MAAOooB,EAAc7mB,KAC/E,MAAM1f,EAAW,GAAI,CAAC,GAChBpL,EAAO2xC,EAAajoB,KACR,MAAd1pB,EAAK1I,QACL8T,EAAS9T,MAAQ,GAAe0I,EAAK1I,QAEX,MAA1B0I,EAAK8yD,oBACL1nD,EAAS0nD,kBAAoB,GAAe9yD,EAAK8yD,oBAErD,MAAMloB,EAAY,IAAIuoB,GAAsB,CACxCpiC,UAAW,GAAoB4gB,MAC5BvmC,IAEP,OAAO,GAA2Bw/B,EAAW+G,EAAajoB,KAAK,EAE7DuqC,GAAoD1qC,MAAOooB,EAAc7mB,KAC3E,MAAM1f,EAAW,GAAI,CAAC,GAChBpL,EAAO2xC,EAAajoB,KACR,MAAd1pB,EAAK1I,QACL8T,EAAS9T,MAAQ,GAAe0I,EAAK1I,QAEX,MAA1B0I,EAAK8yD,oBACL1nD,EAAS0nD,kBAAoB,GAAe9yD,EAAK8yD,oBAErD,MAAMloB,EAAY,IAAIwoB,GAAkB,CACpCriC,UAAW,GAAoB4gB,MAC5BvmC,IAEP,OAAO,GAA2Bw/B,EAAW+G,EAAajoB,KAAK,EAE7DwqC,GAA8D3qC,MAAOooB,EAAc7mB,KACrF,MAAM1f,EAAW,GAAI,CAAC,GAChBpL,EAAO2xC,EAAajoB,KACR,MAAd1pB,EAAK1I,QACL8T,EAAS9T,MAAQ,GAAe0I,EAAK1I,QAEX,MAA1B0I,EAAK8yD,oBACL1nD,EAAS0nD,kBAAoB,GAAe9yD,EAAK8yD,oBAErD,MAAMloB,EAAY,IAAIyoB,GAA4B,CAC9CtiC,UAAW,GAAoB4gB,MAC5BvmC,IAEP,OAAO,GAA2Bw/B,EAAW+G,EAAajoB,KAAK,EAE7DyqC,GAAgE5qC,MAAOooB,EAAc7mB,KACvF,MAAM1f,EAAW,GAAI,CAAC,GAChBpL,EAAO2xC,EAAajoB,KACR,MAAd1pB,EAAK1I,QACL8T,EAAS9T,MAAQ,GAAe0I,EAAK1I,QAEX,MAA1B0I,EAAK8yD,oBACL1nD,EAAS0nD,kBAAoB,GAAe9yD,EAAK8yD,oBAErD,MAAMloB,EAAY,IAAI0oB,GAA8B,CAChDviC,UAAW,GAAoB4gB,MAC5BvmC,IAEP,OAAO,GAA2Bw/B,EAAW+G,EAAajoB,KAAK,EAE7D0qC,GAA+B,CAAC16D,EAAOoxB,IAClCpxB,EACFH,QAAQ/C,GAAW,MAALA,IACdiD,KAAKyqC,GACCA,IAGT,GAAuB7/B,IAAW,CACpC0tB,eAAgB1tB,EAAO7H,WACvB4uC,UAAW/mC,EAAOlC,QAAQ,qBAAuBkC,EAAOlC,QAAQ,sBAAwBkC,EAAOlC,QAAQ,oBACvGkpC,kBAAmBhnC,EAAOlC,QAAQ,cAClCmpC,KAAMjnC,EAAOlC,QAAQ,iBAQnB,GAAoB,CAACk0C,EAAYvrB,IANnB,EAACurB,EAAa,IAAIh3B,WAAcyL,IAC5CurB,aAAsBh3B,WACfnpB,QAAQC,QAAQkgD,GAEpBvrB,EAAQwrB,gBAAgBD,IAAengD,QAAQC,QAAQ,IAAIkpB,YAEnB,CAAYg3B,EAAYvrB,GAASn0B,MAAM+yB,GAASoB,EAAQ6rB,YAAYjtB,KAMjH,GAAY,CAAC2sB,EAAYvrB,IAAY,GAAkBurB,EAAYvrB,GAASn0B,MAAMopC,GAChFA,EAAQ1qC,OACD+L,KAAKmK,MAAMw0B,GAEf,CAAC,IAEN,GAAiBxW,MAAOstB,EAAW/rB,KACrC,MAAMn3B,QAAc,GAAUkjD,EAAW/rB,GAEzC,OADAn3B,EAAMc,QAAUd,EAAMc,SAAWd,EAAMm3C,QAChCn3C,CAAK,EAEV,GAAwB,CAAC0Q,EAAQrE,KACnC,MACM82C,EAAqBC,IACvB,IAAIC,EAAaD,EAajB,MAZ0B,iBAAfC,IACPA,EAAaA,EAAWjiD,YAExBiiD,EAAW1mC,QAAQ,MAAQ,IAC3B0mC,EAAaA,EAAW19C,MAAM,KAAK,IAEnC09C,EAAW1mC,QAAQ,MAAQ,IAC3B0mC,EAAaA,EAAW19C,MAAM,KAAK,IAEnC09C,EAAW1mC,QAAQ,MAAQ,IAC3B0mC,EAAaA,EAAW19C,MAAM,KAAK,IAEhC09C,CAAU,EAEfC,GAjBW1jC,EAiBSlP,EAAOlC,QAjBR5M,EAiBiB,mBAjBTxC,OAAOqC,KAAKme,GAAQwlB,MAAM5lC,GAAMA,EAAE4U,gBAAkBxS,EAAIwS,iBAAzE,IAACwL,EAAQhe,EAkBzB,YAAkBlC,IAAd4jD,EACOH,EAAkBzyC,EAAOlC,QAAQ80C,SAE1B5jD,IAAd2M,EAAKhB,KACE83C,EAAkB92C,EAAKhB,WAEX3L,IAAnB2M,EAAa,OACN82C,EAAkB92C,EAAa,aAD1C,CAEA,EC1fG,MAAMq0D,WAA2B,GACpCn/D,YAAYwE,GACRuK,QACAnR,KAAK4G,MAAQA,CACjB,CACA4B,0CACI,MAAO,CACH67C,QAAS,CAAE9uB,KAAM,gBAAiBpzB,KAAM,mBACxCm4B,SAAU,CAAE/E,KAAM,gBAAiBpzB,KAAM,YACzCmiD,OAAQ,CAAE/uB,KAAM,gBAAiBpzB,KAAM,UACvCoiD,aAAc,CAAEhvB,KAAM,gBAAiBpzB,KAAM,wBAErD,CACA2xC,kBAAkBvc,EAAaitB,EAAe/+C,GAC1CzF,KAAK2zC,gBAAgBnB,IAAI7a,EAAe6sB,EAAexkD,KAAKozC,UAAWpzC,KAAKszC,cAC5EtzC,KAAK2zC,gBAAgBnB,IAAInX,EAAkBmpB,EAAe+c,GAAmBvnC,qCAC7E,MAAMnI,EAAQ0F,EAAY5lB,OAAO3R,KAAK2zC,kBAChC,OAAEhW,GAAW6mB,EAGbC,EAA0B,CAC5B9mB,SACAF,WAJe,gBAKfC,YAJgB,qBAKhBE,wBAAyB6iC,GACzB5iC,yBAA0B6iC,KAExB,eAAEtjC,GAAmBonB,EAC3B,OAAO3yB,EAAMxuB,SAAS6P,GAAYkqB,EAAesnB,OAAOxxC,EAAQA,QAASzN,GAAW,CAAC,IAAIg/C,EAC7F,CACArR,UAAUxsC,EAAOoxB,GACb,MDhCgDvB,OAAO7vB,EAAOoxB,KAClE,MAAM,SAAEhjB,EAAQ,SAAEnD,EAAW,QAAO,KAAE6E,EAAMnR,KAAMo+C,SAAmB3rB,EAAQE,WAIvEqnC,EAAe,GAAG5b,GAAUttB,SAAS,KAAOstB,EAAS1xB,MAAM,GAAI,GAAK0xB,GAAY,WACtF,IAAI/sB,EAWJ,OAVAA,EAAOtoB,KAAK1C,UAAU,IACI,MAAlBhF,EAAM46D,UAAoB,CAAEA,SAAU56D,EAAM46D,aACtB,MAAtB56D,EAAM66D,cAAwB,CAAEA,aAAc76D,EAAM66D,iBACtC,MAAd76D,EAAMsF,MAAgB,CAAEA,KAAMtF,EAAMsF,SAChB,MAApBtF,EAAM86D,YAAsB,CAAEA,WAAY96D,EAAM86D,eAC7B,MAAnB96D,EAAM+6D,WAAqB,CAAEA,UAAW/6D,EAAM+6D,cACzB,MAArB/6D,EAAMg7D,aAAuB,CAAEA,YAAah7D,EAAMg7D,gBAC5B,MAAtBh7D,EAAMi7D,cAAwB,CAAEA,aAAcj7D,EAAMi7D,iBACrC,MAAfj7D,EAAMkkB,OAAiB,CAAEA,MAAOw2C,GAA6B16D,EAAMkkB,MAAOkN,MAE3E,IAAI,EAAc,CACrBnmB,WACAmD,WACA0B,OACAJ,OAAQ,OACRjH,QApBY,CACZ,eAAgB,oBAoBhB9J,KAAMg6D,EACN3oC,QACF,ECOSkrC,CAAyCl7D,EAAOoxB,EAC3D,CACAsb,YAAY/hC,EAAQymB,GAChB,MDoCkDvB,OAAOllB,EAAQymB,KACrE,GAA0B,MAAtBzmB,EAAO7H,YAAsB6H,EAAO7H,YAAc,IAClD,OAAOi3D,GAAgDpvD,EAAQymB,GAEnE,MAAM1f,EAAW,GAAI,CACjB2lB,UAAW,GAAoB1sB,KAE7BrE,EAAO,GAAgB,SAAqB,GAAUqE,EAAOqlB,KAAMoB,IAAW,QAgBpF,OAfwB,MAApB9qB,EAAKwxD,cACLpmD,EAASomD,YAAc,GAAexxD,EAAKwxD,cAEzB,MAAlBxxD,EAAK+9B,YACL3yB,EAAS2yB,UAAY,GAAc/9B,EAAK+9B,YAExB,MAAhB/9B,EAAK60D,UACLzpD,EAASypD,QAAU,GAAe70D,EAAK60D,UAElB,MAArB70D,EAAK20D,eACLvpD,EAASupD,aAAe,GAAe30D,EAAK20D,eAE1B,MAAlB30D,EAAK80D,YACL1pD,EAAS0pD,UAAY,GAAe90D,EAAK80D,YAEtC1pD,CAAQ,EC3DJ2pD,CAA2C1wD,EAAQymB,EAC9D,ECxCG,M,aCAD,GAAI,WAAY,GAAI,KAAM,GAAI,OAAQ,GAAI,MAC1C,GAAI,kBAAmB,GAAI,OAAQ,GAAI,QAAS,GAAI,WAAY,GAAI,CAAE,CAAC,KAAI,EAAO,KAAQ,UAAY,GAAI,CAAE,CAAC,KAAI,EAAM,SAAW,EAAO,KAAQ,WAAa,GAAI,CAAE,CAAC,IAAI,YAAc,GAAI,CAAE,CAAC,IAAI,gBAAiB,CAAC,IAAI,CAAC,CAAE,CAAC,IAAI,YAAa,IAAS,GAAI,CAAE,CAAC,IAAI,gBAAiB,CAAC,IAAI,CAAC,CAAE,CAAC,IAAI,iBAAkB,IAAS,GAAI,CAAC,EAAG,GAAI,CAAE,CAAC,IAAI,gBAAiB,CAAC,IAAI,EAAC,EAAM,CAAE,CAAC,IAAI,UAAW,CAAC,IAAI,CAAC,CAAE,CAAC,IAAI,IAAK,mBAAsB,GAAI,CAAE,CAAC,IAAI,gBAAiB,CAAC,IAAI,EAAC,EAAM,CAAE,CAAC,IAAI,UAAW,CAAC,IAAI,CAAC,CAAE,CAAC,IAAI,IAAK,wBAA2B,GAAI,CAAC,IAAI,GAAI,CAAC,IAAI,GAAI,CAAC,IAE3hB,GADC,CAAEzE,QAAS,MAAO4oC,WAAY,CAAE7X,OAAQ,GAAGC,aAAc,GAAGF,QAAS,GAAG/pB,SAAU,IAAKuhC,MAAO,CAAC,CAAEtB,WAAY,CAAC,CAAE,CAAC,IAAI,gBAAiB,CAAC,IAAI,CAAC,CAAE,CAAC,IAAI,WAAanuD,OAAQ,KAAMmpB,KAAM,GAAGsmC,MAAO,CAAC,CAAEtB,WAAY,CAAC,CAAE,CAAC,IAAI,QAAS,CAAC,IAAI,IAAK,CAAE,CAAC,IAAI,WAAY,CAAC,IAAI,GAAGnuD,OAAQ,QAAUmpB,KAAM,GAAGsmC,MAAO,CAAC,CAAEtB,WAAY,GAAG/1D,MAAO,oEAAqE+wB,KAAM,IAAK,CAAEA,KAAM,GAAGsmC,MAAO,CAAC,CAAEtB,WAAY,GAAG/1D,MAAO,yEAA0E+wB,KAAM,IAAK,CAAE2C,SAAU,CAAEE,IAAK,GAAG12B,WAAY,GAAG2N,QAAS,IAAKkmB,KAAM,QAAW,CAAEglC,WAAY,CAAC,GAAG,IAAIhlC,KAAM,GAAGsmC,MAAO,CAAC,CAAEtB,WAAY,CAAC,GAAG,IAAIhlC,KAAM,GAAGsmC,MAAO,CAAC,CAAE3jC,SAAU,CAAEE,IAAK,kEAAmE12B,WAAY,GAAG2N,QAAS,IAAKkmB,KAAM,MAAQ,CAAE/wB,MAAO,kFAAmF+wB,KAAM,MAAQ,CAAEglC,WAAY,GAAGhlC,KAAM,GAAGsmC,MAAO,CAAC,CAAEtB,WAAY,CAAC,IAAIhlC,KAAM,GAAGsmC,MAAO,CAAC,CAAEtmC,KAAM,GAAGsmC,MAAO,CAAC,CAAE3jC,SAAU,CAAEE,IAAK,yDAA0D12B,WAAY,GAAG2N,QAAS,IAAKkmB,KAAM,QAAW,CAAE/wB,MAAO,2DAA4D+wB,KAAM,MAAQ,CAAEglC,WAAY,GAAGhlC,KAAM,GAAGsmC,MAAO,CAAC,CAAEtB,WAAY,CAAC,IAAIhlC,KAAM,GAAGsmC,MAAO,CAAC,CAAE3jC,SAAU,CAAEE,IAAK,6DAA8D12B,WAAY,GAAG2N,QAAS,IAAKkmB,KAAM,MAAQ,CAAE/wB,MAAO,qEAAsE+wB,KAAM,MAAQ,CAAE2C,SAAU,CAAEE,IAAK,oDAAqD12B,WAAY,GAAG2N,QAAS,IAAKkmB,KAAM,QCA7jD,GAA0B,CAACuE,EAAgB9B,EAAU,CAAC,IACxDikC,GAAgB,GAAS,CAC5BniC,eAAgBA,EAChB6D,OAAQ3F,EAAQ2F,SCSX,GAAoB/F,IAC7BghB,GAAgC92C,QAAQyxB,SACxC,MAAM4pC,EAAeD,GAA0BtlC,GACzC8lC,EAAwB,IAAMP,IAAet5D,KAAK40C,IAClDklB,ECdsB,CAAC/lC,IAAW,CACxCgmC,WAAY,aACZhc,cAAehqB,GAAQgqB,eAAiBwU,GACxC/V,cAAezoB,GAAQyoB,eAAiBgW,GACxCwH,kBAAmBjmC,GAAQimC,oBAAqB,EAChDjjC,iBAAkBhD,GAAQgD,kBAAoB,GAC9C+C,OAAQ/F,GAAQ+F,QAAU,IAAIiT,GAC9B1W,UAAWtC,GAAQsC,WAAa,WAChC7B,UAAWT,GAAQS,WAAamD,IDML,CAAuB5D,GAClD,MAAO,IACA+lC,KACA/lC,EACH0G,QAAS,OACT6+B,eACA3lC,kBAAmBI,GAAQJ,mBAAqB09B,GAChD1kB,yBAA0B5Y,GAAQ4Y,0BAC9BD,GAAiB,CAAErW,UAAWyjC,EAAmBzjC,UAAWq7B,cAAe,KAC/ExxB,YAAanM,GAAQmM,aAAe,GAAeY,IACnDvO,OAAQwB,GAAQxB,QAAU,GAAeJ,EAA4BC,GACrEmH,eAAgBxF,GAAQwF,gBAAkB,IAAI,GAAesgC,GAC7D34B,UAAWnN,GAAQmN,WACf,GAAe,IACRC,GACHlP,QAASW,gBAAmBinC,KAAyB34B,WAAanG,IAE1E+L,OAAQ/S,GAAQ+S,QAAU+nB,GAAKtZ,KAAK,KAAM,UAC1CoK,gBAAiB5rB,GAAQ4rB,iBAAmBA,GAC5CvnB,qBAAsBrE,GAAQqE,sBAAwB,GAAezG,GACrEgB,gBAAiBoB,GAAQpB,iBAAmB,GAAeT,GAC3D+nC,YAAalmC,GAAQkmC,aAAe9H,GACpCnS,YAAajsB,GAAQisB,aAAeqS,GACvC,EE9BE,MAAMgM,WAAsB,GAC/B9/D,YAAYoiD,GACR,MAAMwZ,EAAY,GAAmBxZ,GAC/ByZ,GLdkCx4D,EKcUu4D,ELb/C,IACAv4D,EACHw2B,qBAAsBx2B,EAAQw2B,uBAAwB,EACtDzF,gBAAiB/wB,EAAQ+wB,kBAAmB,EAC5CkY,mBAAoB,eALmB,IAACjpC,EKexC,MAAMy4D,EAAY3nC,EAAoB0nC,GAChCE,EAAYtiC,EAAsBqiC,GAGlCE,EAAYvuB,GAFAhL,GAAmBs5B,IAGrChtD,MAAMitD,GACNp+D,KAAK43B,OAASwmC,EACdp+D,KAAK2zC,gBAAgBnB,IAAI/M,GAAezlC,KAAK43B,SAC7C53B,KAAK2zC,gBAAgBnB,IAAInb,EAAuBr3B,KAAK43B,SACrD53B,KAAK2zC,gBAAgBnB,IAAItV,EAAoBl9B,KAAK43B,SAClD53B,KAAK2zC,gBAAgBnB,IAAIhV,EAAgBx9B,KAAK43B,SAC9C53B,KAAK2zC,gBAAgBnB,IAAInU,EAA4Br+B,KAAK43B,SAC1D53B,KAAK2zC,gBAAgBnB,IAAIlC,GAAmBtwC,KAAK43B,QACrD,CACAviB,UACIlE,MAAMkE,SACV,EC9BJ,MAAM8sD,GAAqB,CAAC,ECCfC,GAAqB,CAACC,EAAUC,KACzC,MAAMC,EDDsB,CAACD,IAC7B,GAAIH,GAAmBG,GACnB,OAAOH,GAAmBG,GAE9B,MAAMC,EAAgB,IAAIL,GAAc,CAAE9rC,OAAQksC,IAElD,OADAH,GAAmBG,GAAaC,EACzBA,CAAa,ECLEC,CAAiBF,GACvC,OAAOC,EAAc3uB,KAAK,IAAI2tB,GAAmB,CAC7CC,SAAUa,EAASb,SACnBC,aAAcY,EAASZ,aACvBI,aAAcQ,EAASR,aACvBF,UAAW,kBACZ,ECPMc,GAAuBx5D,IAChC,GAAIA,EAAM0lC,YAAc1lC,EAAM0lC,WAAWpL,UAAY5qB,KAAKqa,MACtD,MAAM,IAAIuT,GAAmB,qBAAqBs5B,MAAmB,EACzE,ECHS6C,GAAmB,CAACjgE,EAAK5B,EAAO8hE,GAAa,KACtD,QAAqB,IAAV9hE,EACP,MAAM,IAAI0lC,GAAmB,0BAA0B9jC,kBAAoBkgE,EAAa,mBAAqB,OAAO9C,MAAmB,EAC3I,GCHE,UAAEr1D,IAAc,YCKhBo4D,GAAyB,IAAIjqD,KAAK,GAC3BkqD,GAAU,CAAC5X,EAAO,CAAC,IAAMx0B,UAClC,MAAMk6B,QAAiB5D,GAAgB9B,GACjCyF,EAAc1F,GAAeC,GAC7Br1B,EAAU+6B,EAASD,GACzB,IAAK96B,EACD,MAAM,IAAI2Q,GAAmB,YAAYmqB,qDAA+D,GAEvG,IAAK96B,EAAqB,YAC3B,MAAM,IAAI2Q,GAAmB,YAAYmqB,kDAE7C,MAAMoS,EAAiBltC,EAAqB,YAEtCmtC,SADoBjW,GAAmB7B,IACd6X,GAC/B,IAAKC,EACD,MAAM,IAAIx8B,GAAmB,gBAAgBu8B,qDAAkE,GAEnH,IAAK,MAAME,IAAyB,CAAC,gBAAiB,cAClD,IAAKD,EAAWC,GACZ,MAAM,IAAIz8B,GAAmB,gBAAgBu8B,oCAAiDE,OAA2B,GAG7GD,EAA0B,cAA9C,MACMT,EAAYS,EAAuB,WACzC,IAAIV,EACJ,IACIA,QAAiB/W,GAAoBwX,EAIzC,CAFA,MAAOp/D,GACH,MAAM,IAAI6iC,GAAmB,iDAAiDmqB,kCAA4CmP,MAAmB,EACjJ,CACA6C,GAAiB,cAAeL,EAAS3D,aACzCgE,GAAiB,YAAaL,EAASY,WACvC,MAAM,YAAEvE,EAAW,UAAEuE,GAAcZ,EAC7Ba,EAAgB,CAAEj6D,MAAOy1D,EAAa/vB,WAAY,IAAIh2B,KAAKsqD,IACjE,GAAIC,EAAcv0B,WAAWpL,UAAY5qB,KAAKqa,MhB1ClB,IgB2CxB,OAAOkwC,EAEX,GAAIvqD,KAAKqa,MAAQ4vC,GAAuBr/B,UAAY,IAEhD,OADAk/B,GAAoBS,GACbA,EAEXR,GAAiB,WAAYL,EAASb,UAAU,GAChDkB,GAAiB,eAAgBL,EAASZ,cAAc,GACxDiB,GAAiB,eAAgBL,EAASR,cAAc,GACxD,IACIe,GAAuBO,QAAQxqD,KAAKqa,OACpC,MAAMowC,QAAwBhB,GAAmBC,EAAUC,GAC3DI,GAAiB,cAAeU,EAAgB1E,aAChDgE,GAAiB,YAAaU,EAAgBn4B,WAC9C,MAAMo4B,EAAqB,IAAI1qD,KAAKA,KAAKqa,MAAoC,IAA5BowC,EAAgBn4B,WACjE,SDvD2B,EAACtW,EAAI0tC,KACpC,MAAMiB,EAAgBpY,GAAoBv2B,GACpC4uC,EAAcj1D,KAAK1C,UAAUy2D,EAAU,KAAM,GACnD,OAAO73D,GAAU84D,EAAeC,EAAY,ECqD9BC,CAAoBV,EAAgB,IACnCT,EACH3D,YAAa0E,EAAgB1E,YAC7BuE,UAAWI,EAAmBv1B,cAC9B+zB,aAAcuB,EAAgBvB,cAItC,CADA,MAAOr9D,GACP,CACA,MAAO,CACHyE,MAAOm6D,EAAgB1E,YACvB/vB,WAAY00B,EAMpB,CAHA,MAAO7+D,GAEH,OADAi+D,GAAoBS,GACbA,CACX,GCvEEO,IAA+B,EACxBC,GAAwBjtC,OAASktC,cAAaZ,aAAYa,eAActB,YAAWuB,cAAaC,YAAWluC,cACpH,IAAI3sB,EACJ,MAAM86D,EAAiB,gFACvB,GAAIhB,EACA,IACI,MAAMiB,QAAe,GAAoB,CAAEpuC,WAAtB,GACrB3sB,EAAQ,CACJy1D,YAAasF,EAAO/6D,MACpBg6D,UAAW,IAAItqD,KAAKqrD,EAAOr1B,YAAYb,cAK/C,CAFA,MAAOpqC,GACH,MAAM,IAAI4iC,GAAyB5iC,EAAE/B,QAAS8hE,GAClD,MAGA,IACIx6D,QAAcqiD,GAAoBqY,EAItC,CAFA,MAAOjgE,GACH,MAAM,IAAI4iC,GAAyB,4DAA4Dy9B,IAAkBN,GACrH,CAEJ,GAAI,IAAI9qD,KAAK1P,EAAMg6D,WAAW1/B,UAAY5qB,KAAKqa,OAzB1B,IA0BjB,MAAM,IAAIsT,GAAyB,6DAA6Dy9B,IAAkBN,IAEtH,MAAM,YAAE/E,GAAgBz1D,EAClBg7D,EAAMH,GAAa,IAAI/F,GAAU,CAAE3nC,OAAQksC,IACjD,IAAI4B,EACJ,IACIA,QAAgBD,EAAIrwB,KAAK,IAAI0rB,GAA0B,CACnD5H,UAAWkM,EACXnE,SAAUoE,EACVnF,gBAKR,CAFA,MAAOh7D,GACH,MAAM4iC,GAAyB/2B,KAAK7L,EAAG+/D,GAC3C,CACA,MAAQ5E,iBAAiB,YAAEnzB,EAAW,gBAAEkC,EAAe,aAAEnC,EAAY,WAAEkD,GAAe,CAAC,GAAMu1B,EAC7F,KAAKx4B,GAAgBkC,GAAoBnC,GAAiBkD,GACtD,MAAM,IAAIrI,GAAyB,+CAAgDm9B,IAEvF,MAAO,CAAE/3B,cAAakC,kBAAiBnC,eAAckD,WAAY,IAAIh2B,KAAKg2B,GAAa,EChD9Ew1B,GAAsBvuC,IAC/B,MAAM,cAAEu8B,EAAa,eAAEC,EAAc,WAAEE,EAAU,cAAEC,GAAkB38B,EACrE,KAAKu8B,GAAkBC,GAAmBE,GAAeC,GACrD,MAAM,IAAIjsB,GACN,iJAAuDrmC,OAAOqC,KAAKszB,GAASrqB,KAAK,6FAA6F,GAEtL,OAAOqqB,CAAO,ECFLwuC,GAAU,CAACnZ,EAAO,CAAC,IAAMx0B,UAClC,MAAM,YAAEktC,EAAW,aAAEC,EAAY,UAAEtB,EAAS,YAAEuB,EAAW,UAAEC,EAAS,WAAEf,GAAe9X,EAC/EyF,EAAc1F,GAAeC,GACnC,GAAK0Y,GAAgBC,GAAiBtB,GAAcuB,GAAgBd,EAiC/D,IAAKY,GAAgBC,GAAiBtB,GAAcuB,EAKrD,OAAOH,GAAsB,CACzBC,cACAZ,aACAa,eACAtB,YACAuB,cACAC,YACAluC,QAAS86B,IAXb,MAAM,IAAIpqB,GAAyB,+HAavC,CA/CgF,CAC5E,MACM1Q,SADiBm3B,GAAgB9B,IACdyF,GACzB,IAAK96B,EACD,MAAM,IAAI0Q,GAAyB,WAAWoqB,oBAElD,IAAKwB,GAAat8B,GACd,MAAM,IAAI0Q,GAAyB,WAAWoqB,6CAElD,GAAI96B,GAASy8B,YAAa,CACtB,MACMgS,SADoBvX,GAAmB7B,IACjBr1B,EAAQy8B,aAC9BiS,EAAc,8BAA8B5T,qBAA+B96B,EAAQy8B,cACzF,GAAIiQ,GAAaA,IAAc+B,EAAQ/R,WACnC,MAAM,IAAIhsB,GAAyB,yBAA2Bg+B,GAAa,GAE/E,GAAIX,GAAeA,IAAgBU,EAAQlS,cACvC,MAAM,IAAI7rB,GAAyB,4BAA8Bg+B,GAAa,GAElF1uC,EAAQ08B,WAAa+R,EAAQ/R,WAC7B18B,EAAQu8B,cAAgBkS,EAAQlS,aACpC,CACA,MAAM,cAAEA,EAAa,eAAEC,EAAc,WAAEE,EAAU,cAAEC,EAAa,YAAEF,GAAgB8R,GAAmBvuC,GACrG,OAAO8tC,GAAsB,CACzBC,YAAaxR,EACb4Q,WAAY1Q,EACZuR,aAAcxR,EACdkQ,UAAWhQ,EACXuR,YAAatR,EACbuR,UAAWA,EACXluC,QAAS86B,GAEjB,CAeA,ECvDS6T,GAAwBt6B,GAAQ7Q,QAAQ6Q,IAClC,iBAARA,GAC0B,iBAA1BA,EAAIu6B,mBAC0B,iBAA9Bv6B,EAAIw6B,uBACX,CAAC,YAAa,UAAUjnD,eAAeysB,EAAIy6B,oBAAsB,EACxDC,GAA4B/uC,GAAYxyB,QAAQC,QAAQ,CACjEqoC,YAAa9V,EAAQ4uC,kBACrB52B,gBAAiBhY,EAAQ6uC,sBACzBh5B,aAAc7V,EAAQ8uC,oBCFbE,GAAgB,CAAC3Z,EAAO,CAAC,IAAMx0B,SACjCouC,GAAiB5Z,GAEtB4Z,GAAoB5Z,IACtB,MAAM6Z,EAAuB7Z,GAAM6Z,sBAAwBhjE,QAAQ4D,IAAkB,4BAC/Eq/D,EAAU9Z,GAAM8Z,SAAWjjE,QAAQ4D,IAAgB,aACnDs/D,EAAkB/Z,GAAM+Z,iBAAmBljE,QAAQ4D,IAAyB,sBAClF,IAAKo/D,IAAyBC,EAC1B,MAAM,IAAIz+B,GAAyB,4CAEvC,MCfwB,CAAC2kB,GAAS,KAClC,MAAM,QAAE8Z,EAAO,gBAAEC,EAAe,iBAAEC,EAAgB,WAAEC,EAAU,WAAEC,EAAU,OAAEC,EAAM,gBAAEC,EAAe,2BAAEC,GAAgCra,EACrI,IAAKqa,EACD,MAAM,IAAIh/B,GAAyB,aAAay+B,2FACM,GAE1D,OAAOO,EAA2B,CAC9B3e,QAASoe,EACTne,gBAAiBoe,GAAmB,sBAAsBrsD,KAAKqa,QAC/D20B,iBAAkBsd,EAClBrd,WAAYsd,EACZre,WAAYse,EACZne,OAAQoe,EACRne,gBAAiBoe,GACnB,EDCKE,CAAa,IACbta,EACHga,kBAAkB,KAAAO,cAAaV,EAAsB,CAAE58D,SAAU,UACjE68D,UACAC,mBAJGO,EAKH,EEfKxU,GAAqBt6B,MAAOi6B,EAAaC,EAAUlrD,EAASmrD,EAAkB,CAAC,KACxF,MAAM1jD,EAAOyjD,EAASD,GACtB,GAAIzwD,OAAOqC,KAAKsuD,GAAiBruD,OAAS,GAAKgiE,GAAqBr3D,GAChE,OAAOy3D,GAAyBz3D,GAEpC,G/FPgC+8B,E+FOR/8B,E/FPgBksB,QAAQ6Q,IACjC,iBAARA,GACiB,iBAAjBA,EAAIqnB,UACX,CAAC,YAAa,UAAU9zC,eAAeysB,EAAIsnB,oBAAsB,GACjE,CAAC,YAAa,UAAU/zC,eAAeysB,EAAIunB,cAAgB,GAC3D,CAAC,YAAa,UAAUh0C,eAAeysB,EAAIwnB,aAAe,IACzDpB,GAA8BpmB,IAAQumB,GAAgCvmB,I+FEnE,OAAOwmB,GAA6BC,EAAaC,EAAUlrD,EAASmrD,G/FRzC,IAAC3mB,E+FUhC,GAAIs6B,GAAqBr3D,GACrB,OAAOy3D,GAAyBz3D,GAEpC,GChBgC,CAAC+8B,GAAQ7Q,QAAQ6Q,IAClC,iBAARA,GACgC,iBAAhCA,EAAIw7B,yBACa,iBAAjBx7B,EAAIqnB,UACX,CAAC,YAAa,UAAU9zC,eAAeysB,EAAIsnB,oBAAsB,EDY7DmU,CAAqBx4D,GACrB,MCZqCupB,OAAOb,EAASnwB,IAAYm/D,GAAc,CACnFE,qBAAsBlvC,EAAQ6vC,wBAC9BV,QAASnvC,EAAQ07B,SACjB0T,gBAAiBpvC,EAAQ27B,kBACzB+T,2BAA4B7/D,EAAQ6/D,4BAJiCV,GDY1De,CAA8Bz4D,EAAMzH,GAE/C,GEnB4B,CAACwkC,GAAQ7Q,QAAQ6Q,IAC9B,iBAARA,GAC2B,iBAA3BA,EAAI27B,mBFiBPC,CAAiB34D,GACjB,MEjBiCupB,OAAOhxB,EAASmwB,IAAYq8B,GAAY,IAC1ExsD,EACHmwB,WAFiEq8B,GFiBtD,CAA0BxsD,EAASirD,GAE9C,GAAIwB,GAAahlD,GACb,MGtB6B,CAACA,IAClC,MAAM,cAAEilD,EAAa,eAAEC,EAAc,YAAEC,EAAW,WAAEC,EAAU,cAAEC,GAAkB4R,GAAmBj3D,GACrG,OAAOk3D,GAAQ,CACXT,YAAaxR,EACbyR,aAAcxR,EACd2Q,WAAY1Q,EACZiQ,UAAWhQ,EACXuR,YAAatR,GALV6R,EAMH,EHcO0B,CAAsB54D,GAEjC,MAAM,IAAIo5B,GAAyB,WAAWoqB,6DAAuE,EIlB5GqV,GAAkB,CAAC9a,EAAO,CAAC,IAAMrkB,GAAQJ,MAAUykB,EAAKr1B,SAAW9zB,QAAQ4D,IAAe,YAAI,GAAK,CAAC8kD,MAAa4Z,GAAQnZ,GCN/G,EAACA,EAAO,CAAC,IAAMx0B,UAClC,MAAMk6B,QAAiB5D,GAAgB9B,GACvC,OAAO8F,GAAmB/F,GAAeC,GAAO0F,EAAU1F,EAAK,EDI0E+a,CAAQ/a,GAAOgH,GAAYhH,GAAO2Z,GAAc3Z,GEL/J,CAACA,GACvBnpD,QAAQ4D,IAAIgoD,KAA0B5rD,QAAQ4D,IAAI+nD,IAC3CG,GAAsB3C,GAE7BnpD,QAAQ4D,IAAqB,0BACtB+wB,UACH,MAAM,IAAI6P,GAAyB,gDAAgD,EAGpFspB,GAAqB3E,GFJoKgb,CAAehb,IAAOx0B,UACtN,MAAM,IAAI6P,GAAyB,iDAAiD,EAAM,KACzFoE,QAA2CnqC,IAA3BmqC,EAAYiE,YAA4BjE,EAAYiE,WAAWpL,UAAY5qB,KAAKqa,MAAQ,MAAS0X,QAA2CnqC,IAA3BmqC,EAAYiE,aGV5Iu3B,GAAI,WAAYC,GAAI,KAAMC,GAAI,OAAQt8C,GAAI,MAAOnI,GAAI,aAAc27B,GAAI,UAClD,GAAI,kBAAmB,GAAI,OAAQ,GAAI,gBAAiB,GAAI,eAAgB,GAAI,4BAA6B,GAAI,QAAS,GAAI,MAAO,GAAI,YAAa,GAAI,WAAY,GAAI,mDAAoD,GAAI,QAAS,GAAI,UAAW,GAAI,CAAE,CAAC4oB,KAAI,EAAO,KAAQ,UAAY,GAAI,CAAE,CAACA,KAAI,EAAM,SAAW,EAAO,KAAQ,WAAa,GAAI,CAAE,CAACp8C,IAAI,UAAY,GAAI,CAAE,CAACA,IAAI,WAAa,GAAI,CAAE,CAACA,IAAI,gBAAkBnM,GAAI,CAAE,CAACwoD,IAAI,QAAS,CAACC,IAAI,CAAC,CAAE,CAACt8C,IAAI,cAAiBu8C,GAAI,CAAE,CAACv8C,IAAI,YAAclpB,GAAI,CAAE,IAAO,GAAG,CAAC+gB,IAAI,CAAE,YAAe,CAAC,CAAE,KAAQ,GAAG,YAAe,GAAG,cAAiB,MAAQ,CAAC27B,IAAI,CAAC,GAAKgpB,GAAI,CAAC,EAAG5/D,GAAI,CAAE,CAACy/D,IAAI,GAAG,CAACC,IAAI,CAAC,IAAG,IAASG,GAAI,CAAE,CAACJ,IAAI,GAAG,CAACC,IAAI,CAAC,IAAG,IAASI,GAAI,CAAE,CAACL,IAAI,GAAG,CAACC,IAAI,EAAC,EAAM,CAAE,CAACD,IAAI,GAAG,CAACC,IAAI,CAAC,CAAE,CAACt8C,IAAI,IAAK,mBAAsB28C,GAAI,CAAE,CAAC38C,IAAI,IAAKozB,GAAI,CAAE,CAACipB,IAAI,GAAG,CAACC,IAAI,EAAC,EAAM,CAAE,CAACD,IAAI,GAAG,CAACC,IAAI,CAACK,GAAG,wBAA2BC,GAAI,CAAE,IAAO,GAAG,CAAC/kD,IAAI,CAAC,EAAG,CAAC27B,IAAI,CAAC,GAAcqpB,GAAI,CAAC,CAAE,CAACR,IAAI,GAAG,CAACC,IAAI,CAAC,GAAG,gBAAkBQ,GAAI,CAAClgE,IAAImgE,GAAI,CAACN,IAEx7B,GADC,CAAEhzC,QAAS,MAAO4oC,WAAY,CAAE7X,OAAQ,GAAGC,aAAc,GAAGF,QAAS,GAAG/pB,SAAU,GAAGgvB,kBAAmB,IAAKuS,MAAO,CAAC,CAAEtB,WAAY,CAAC,CAAE,CAAC4L,IAAI,gBAAiB,CAACC,IAAI,CAAC,IAAIh6D,OAAQ,KAAMmpB,KAAM,GAAGsmC,MAAO,CAAC,CAAEtB,WAAY,CAAC,CAAE,CAAC4L,IAAI,GAAG,CAACC,IAAI,CAAC,CAAE,CAACt8C,IAAI,sBADpO,IACiQ,CAAE,CAACq8C,IAAI,GAAG,CAACC,IAAI,CAAC,GAD5R,QACqS,CAAE,CAACD,IAAI,GAAG,CAACC,IAAI,CAAC,GADrT,QAC8T,CAAE,CAACD,IAAI,MAAO,CAACC,IAAI,CAACzoD,MAAO4X,KAAM,GAAGsmC,MAAO,CAAC,CAAEtB,WAAY,CAAC,CAAE,CAAC4L,IAAI,GAAG,CAACC,IAAI,CAAC,GAAG,oBAAsBluC,SAAUt3B,GAAG20B,KAAM,IAAK,CAAEglC,WAAY,CAAC,CAAE,CAAC4L,IAAI,GAAG,CAACC,IAAI,CAAC,GAAG,gBAAkBluC,SAAUt3B,GAAG20B,KAAM,IAAK,CAAEglC,WAAY,CAAC,CAAE,CAAC4L,IAAI,GAAG,CAACC,IAAI,CAAC,GAAG,oBAAsBluC,SAAUt3B,GAAG20B,KAAM,IAAK,CAAEglC,WAAY,CAAC,CAAE,CAAC4L,IAAI,GAAG,CAACC,IAAI,CAAC,GAAG,oBAAsBluC,SAAUt3B,GAAG20B,KAAM,IAAK,CAAEglC,WAAYoM,GAAGzuC,SAAUt3B,GAAG20B,KAAM,IAAK,CAAEglC,WAAY,CAAC,CAAE,CAAC4L,IAAI,GAAG,CAACC,IAAI,CAAC,GAAG,kBAAoBluC,SAAUt3B,GAAG20B,KAAM,IAAK,CAAEglC,WAAY,CAAC,CAAE,CAAC4L,IAAI,GAAG,CAACC,IAAI,CAAC,GAAG,kBAAoBluC,SAAUt3B,GAAG20B,KAAM,IAAK,CAAEglC,WAAY,CAAC,CAAE,CAAC4L,IAAI,GAAG,CAACC,IAAI,CAAC,GAAG,gBAAkBluC,SAAUt3B,GAAG20B,KAAM,IAAK,CAAEglC,WAAY,CAAC,CAAE,CAAC4L,IAAI,GAAG,CAACC,IAAI,CAAC,GAAG,eAAiBluC,SAAUt3B,GAAG20B,KAAM,IAAK,CAAEglC,WAAY,CAAC,CAAE,CAAC4L,IAAI,GAAG,CAACC,IAAI,CAAC,GAAG,eAAiBluC,SAAUt3B,GAAG20B,KAAM,IAAK,CAAEglC,WAAY,CAAC,CAAE,CAAC4L,IAAI,GAAG,CAACC,IAAI,CAAC,GAAG,eAAiBluC,SAAUt3B,GAAG20B,KAAM,IAAK,CAAEglC,WAAY,CAAC,CAAE,CAAC4L,IAAI,GAAG,CAACC,IAAI,CAAC,GAAG,eAAiBluC,SAAUt3B,GAAG20B,KAAM,IAAK,CAAEglC,WAAY,CAAC,CAAE,CAAC4L,IAAI,GAAG,CAACC,IAAI,CAAC,GAAG,MAAOluC,SAAUt3B,GAAG20B,KAAM,IAAK,CAAEglC,WAAY,CAAC,CAAE,CAAC4L,IAAI,GAAG,CAACC,IAAI,CAAC,GAAG,eAAiBluC,SAAUt3B,GAAG20B,KAAM,IAAK,CAAEglC,WAAY,CAAC,CAAE,CAAC4L,IAAI,GAAG,CAACC,IAAI,CAAC,GAAG,eAAiBluC,SAAUt3B,GAAG20B,KAAM,IAAK,CAAEglC,WAAY,CAAC,CAAE,CAAC4L,IAAI,GAAG,CAACC,IAAI,CAAC,GAAG,eAAiBluC,SAAUt3B,GAAG20B,KAAM,IAAK,CAAE2C,SAAU,CAAEE,IAAK,GAAG,CAACzW,IAAI,CAAEmZ,YAAa,CAAC,CAAE34B,KAAM,GAAG84B,YAAa,GAAGD,cAAe,cAAiB,CAACsiB,IAAIgpB,IAAK/wC,KAAM,MAAQ,CAAEglC,WAAY,CAAC58C,GAAG,CAAE,CAACwoD,IAAI,WAAY,CAACC,IAD3yB,CAACC,IACizBj6D,OAAQ,QAAUmpB,KAAM,GAAGsmC,MAAO,CAAC,CAAEtB,WAAYqM,GAAGpiE,MAAO,oEAAqE+wB,KAAM,IAAK,CAAEA,KAAM,GAAGsmC,MAAO,CAAC,CAAEtB,WAAYsM,GAAGriE,MAAO,yEAA0E+wB,KAAM,IAAK,CAAE2C,SAAU,CAAEE,IAAKiuC,GAAG,CAAC1kD,IAAI2kD,GAAG,CAAChpB,IAAIgpB,IAAK/wC,KAAM,QAAW,CAAEglC,WAAY,CAAC7zD,GAAG6/D,IAAIhxC,KAAM,GAAGsmC,MAAO,CAAC,CAAEtB,WAAY,CAACiM,GAAGtpB,IAAI3nB,KAAM,GAAGsmC,MAAO,CAAC,CAAE3jC,SAAU,CAAEE,IAAK,iEAAkE,CAACzW,IAAI2kD,GAAG,CAAChpB,IAAIgpB,IAAK/wC,KAAM,MAAQ,CAAE/wB,MAAO,kFAAmF+wB,KAAM,MAAQ,CAAEglC,WAAYqM,GAAGrxC,KAAM,GAAGsmC,MAAO,CAAC,CAAEtB,WAAY,CAACiM,IAAIjxC,KAAM,GAAGsmC,MAAO,CAAC,CAAEtmC,KAAM,GAAGsmC,MAAO,CAAC,CAAEtB,WAAY,CAAC,CAAE,CAAC4L,IAAI,GAAG,CAACC,IAAI,CAAC,aAAc,CAAE,CAACD,IAAI,GAAG,CAACC,IAAI,CAACK,GAAG,YAAevuC,SAAUwuC,GAAGnxC,KAAM,IAAK,CAAE2C,SAAU,CAAEE,IAAK,wDAAyD,CAACzW,IAAI2kD,GAAG,CAAChpB,IAAIgpB,IAAK/wC,KAAM,QAAW,CAAE/wB,MAAO,2DAA4D+wB,KAAM,MAAQ,CAAEglC,WAAYsM,GAAGtxC,KAAM,GAAGsmC,MAAO,CAAC,CAAEtB,WAAY,CAACrd,IAAI3nB,KAAM,GAAGsmC,MAAO,CAAC,CAAE3jC,SAAU,CAAEE,IAAK,4DAA6D,CAACzW,IAAI2kD,GAAG,CAAChpB,IAAIgpB,IAAK/wC,KAAM,MAAQ,CAAE/wB,MAAO,qEAAsE+wB,KAAM,MAAQ,CAAEA,KAAM,GAAGsmC,MAAO,CAAC,CAAEtB,WAAYoM,GAAGzuC,SAAU,CAAEE,IAAK,GAAG,CAACzW,IAAI,CAAEmZ,YAAa,CAAC,CAAE34B,KAAM,GAAG64B,cAAe,GAAGC,YAAa,MAAQ,CAACqiB,IAAIgpB,IAAK/wC,KAAM,IAAK,CAAE2C,SAAUwuC,GAAGnxC,KAAM,UCA5lG,GAA0B,CAACuE,EAAgB9B,EAAU,CAAC,IACxDikC,GAAgB,GAAS,CAC5BniC,eAAgBA,EAChB6D,OAAQ3F,EAAQ2F,SCWX,GAAoB/F,IAC7BghB,GAAgC92C,QAAQyxB,SACxC,MAAM4pC,EAAeD,GAA0BtlC,GACzC8lC,EAAwB,IAAMP,IAAet5D,KAAK40C,IAClDklB,EChBsB,CAAC/lC,IAAW,CACxCgmC,WAAY,aACZhc,cAAehqB,GAAQgqB,eAAiBwU,GACxC/V,cAAezoB,GAAQyoB,eAAiBgW,GACxCwH,kBAAmBjmC,GAAQimC,oBAAqB,EAChDjjC,iBAAkBhD,GAAQgD,kBAAoB,GAC9C+C,OAAQ/F,GAAQ+F,QAAU,IAAIiT,GAC9B1W,UAAWtC,GAAQsC,WAAa,MAChC7B,UAAWT,GAAQS,WAAamD,IDQL,CAAuB5D,GAClD,MAAO,IACA+lC,KACA/lC,EACH0G,QAAS,OACT6+B,eACA3lC,kBAAmBI,GAAQJ,mBAAqB09B,GAChDhnB,0BAA2BtW,GAAQsW,4B1IsCOvH,E0ItCwD,G1IsC1C//B,GAAU+/B,EAAS,CAC/EkqB,YAAa5G,GAAsBrjD,EAAOA,EAAMujD,eAChDmb,2BAA4B/a,GAAqC3jD,EAAOA,EAAMujD,kBAC3EvjD,K0IxCC4pC,yBAA0B5Y,GAAQ4Y,0BAC9BD,GAAiB,CAAErW,UAAWyjC,EAAmBzjC,UAAWq7B,cAAe,KAC/ExxB,YAAanM,GAAQmM,aAAe,GAAeY,IACnDvO,OAAQwB,GAAQxB,QAAU,GAAeJ,EAA4BC,GACrEmH,eAAgBxF,GAAQwF,gBAAkB,IAAI,GAAesgC,GAC7D34B,UAAWnN,GAAQmN,WACf,GAAe,IACRC,GACHlP,QAASW,gBAAmBinC,KAAyB34B,WAAanG,IAE1E+L,OAAQ/S,GAAQ+S,QAAU+nB,GAAKtZ,KAAK,KAAM,UAC1CoK,gBAAiB5rB,GAAQ4rB,iBAAmBA,GAC5CvnB,qBAAsBrE,GAAQqE,sBAAwB,GAAezG,GACrEgB,gBAAiBoB,GAAQpB,iBAAmB,GAAeT,GAC3D+nC,YAAalmC,GAAQkmC,aAAe9H,GACpCnS,YAAajsB,GAAQisB,aAAeqS,I1IsBK,IAACvvB,C0IrB7C,EEhCE,MAAMmgC,WAAkB,GAC3B1kE,YAAYoiD,GACR,MAAMwZ,EAAY,GAAmBxZ,GAC/ByZ,GCfkCx4D,EDeUu4D,ECd/C,IACAv4D,EACHw2B,qBAAsBx2B,EAAQw2B,uBAAwB,EACtDzF,gBAAiB/wB,EAAQ+wB,kBAAmB,EAC5CuwC,kBAAmBthE,EAAQshE,oBAAqB,EAChDr4B,mBAAoB,QANmB,IAACjpC,EDgBxC,MAAMy4D,EAAY3nC,EAAoB0nC,GAChCE,EAAYtiC,EAAsBqiC,GAIlC8I,EAAYn3B,GEpBU,EAACjpC,GAASujD,mBAAoBpc,GAAqB,IAChFnnC,EACHujD,kBFiBsB8c,CAFApiC,GAAmBs5B,GAEa,CAAEhU,cAAe2c,MAEnE31D,MAAM61D,GACNhnE,KAAK43B,OAASovC,EACdhnE,KAAK2zC,gBAAgBnB,IAAI/M,GAAezlC,KAAK43B,SAC7C53B,KAAK2zC,gBAAgBnB,IAAInb,EAAuBr3B,KAAK43B,SACrD53B,KAAK2zC,gBAAgBnB,IAAItV,EAAoBl9B,KAAK43B,SAClD53B,KAAK2zC,gBAAgBnB,IAAIhV,EAAgBx9B,KAAK43B,SAC9C53B,KAAK2zC,gBAAgBnB,IAAInU,EAA4Br+B,KAAK43B,SAC1D53B,KAAK2zC,gBAAgBnB,IAAIlC,GAAmBtwC,KAAK43B,QACrD,CACAviB,UACIlE,MAAMkE,SACV,EG/BJ,MAAM6xD,GAA+B,CAACC,EAAUC,IACvCA,EAGM,cAAoCD,EACvC/kE,YAAYw1B,GACRzmB,MAAMymB,GACN,IAAK,MAAMyvC,KAAiBD,EACxBpnE,KAAK2zC,gBAAgBnB,IAAI60B,EAEjC,GARGF,EAWF,GAAwB,CAACjd,EAAa,CAAC,EAAGod,IAAe,GAAyBpd,EAAYgd,GAA6BJ,GAAWQ,IACtI,GAAuC,CAACpd,EAAa,CAAC,EAAGod,IAAe,GAAwCpd,EAAYgd,GAA6BJ,GAAWQ,IChB3K,GAAI,KAAM,GAAI,OAAQ,GAAI,MACL,GAAI,SAAU,GAAI,kBAAmB,GAAI,OAAQ,GAAI,QAAS,GAAI,WAAY,GAAI,UAAW,GAAI,eAAgB,GAAI,CAAE,UAAY,EAAM,SAAW,EAAO,KAAQ,WAAa,GAAI,CAAE,CAAC,IAAI,UAAY,GAAI,CAAE,CAAC,IAAI,YAAc,GAAI,CAAE,CAAC,IAAI,gBAAiB,CAAC,IAAI,CAAC,CAAE,CAAC,IAAI,YAAa,IAAS,GAAI,CAAE,CAAC,IAAI,gBAAiB,CAAC,IAAI,CAAC,CAAE,CAAC,IAAI,iBAAkB,IAAS,GAAI,CAAC,EAAG,GAAI,CAAE,CAAC,IAAI,gBAAiB,CAAC,IAAI,EAAC,EAAM,CAAE,CAAC,IAAI,GAAG,CAAC,IAAI,CAAC,CAAE,CAAC,IAAI,IAAK,mBAAsB,GAAI,CAAE,CAAC,IAAI,IAAK,GAAI,CAAE,CAAC,IAAI,gBAAiB,CAAC,IAAI,EAAC,EAAM,CAAE,CAAC,IAAI,GAAG,CAAC,IAAI,CAAC,GAAG,wBAA2B,GAAI,CAAE,IAAO,wDAAyD,WAAc,CAAC,EAAG,QAAW,CAAC,GAAK,GAAI,CAAC,IAAI,GAAI,CAAC,IAEhrB,GADC,CAAE/zC,QAAS,MAAO4oC,WAAY,CAAE7X,OAAQ,CAAE1+C,UAD9C,EAC2D2vB,KAAM,IAAKgvB,aAAc,GAAGF,QAAS,GAAG/pB,SAAU,CAAE10B,UADrG,EACkH2vB,KAAM,KAAOsmC,MAAO,CAAC,CAAEtB,WAAY,CAAC,CAAE,CAAC,IAAI,gBAAiB,CAAC,IAAI,CAAC,IAAInuD,OAAQ,KAAMmpB,KAAM,GAAGsmC,MAAO,CAAC,CAAEtB,WAAY,CAAC,CAAE,CAAC,IAAI,QAAS,CAAC,IAAI,CAAC,MAAOhlC,KAAM,GAAGsmC,MAAO,CAAC,CAAEtB,WAAY,GAAG/1D,MAAO,oEAAqE+wB,KAAM,IAAK,CAAEA,KAAM,GAAGsmC,MAAO,CAAC,CAAEtB,WAAY,GAAG/1D,MAAO,yEAA0E+wB,KAAM,IAAK,CAAE2C,SAAU,CAAEE,IAAK,GAAG12B,WAAY,GAAG2N,QAAS,IAAKkmB,KAAM,QAAW,CAAEglC,WAAY,CAAC,GAAG,IAAIhlC,KAAM,GAAGsmC,MAAO,CAAC,CAAEtB,WAAY,CAAC,GAAG,IAAIhlC,KAAM,GAAGsmC,MAAO,CAAC,CAAE3jC,SAAU,CAAEE,IAAK,sEAAuE12B,WAAY,GAAG2N,QAAS,IAAKkmB,KAAM,MAAQ,CAAE/wB,MAAO,kFAAmF+wB,KAAM,MAAQ,CAAEglC,WAAY,GAAGhlC,KAAM,GAAGsmC,MAAO,CAAC,CAAEtB,WAAY,CAAC,IAAIhlC,KAAM,GAAGsmC,MAAO,CAAC,CAAEtmC,KAAM,GAAGsmC,MAAO,CAAC,CAAEtB,WAAY,CAAC,CAAE,CAAC,IAAI,GAAG,CAAC,IAAI,CAAC,aAAc,CAAE,CAAC,IAAI,GAAG,CAAC,IAAI,CAAC,GAAG,YAAeriC,SAAU,GAAG3C,KAAM,IAAK,CAAE2C,SAAU,CAAEE,IAAK,6DAA8D12B,WAAY,GAAG2N,QAAS,IAAKkmB,KAAM,QAAW,CAAE/wB,MAAO,2DAA4D+wB,KAAM,MAAQ,CAAEglC,WAAY,GAAGhlC,KAAM,GAAGsmC,MAAO,CAAC,CAAEtB,WAAY,CAAC,IAAIhlC,KAAM,GAAGsmC,MAAO,CAAC,CAAE3jC,SAAU,CAAEE,IAAK,iEAAkE12B,WAAY,GAAG2N,QAAS,IAAKkmB,KAAM,MAAQ,CAAE/wB,MAAO,qEAAsE+wB,KAAM,MAAQ,CAAEA,KAAM,GAAGsmC,MAAO,CAAC,CAAEtB,WAAY,CAAC,CAAE,CAAC,IAAI,GAAG,CAAC,IAAI,CAAC,GAAG,WAAariC,SAAU,CAAEE,IAAK,wBAAyB12B,WAAY,CAAEo5B,YAAa,CAAC,CAAE34B,KAAM,QAAS64B,cAAe,YAAaC,YAAa,cAAiB5rB,QAAS,IAAKkmB,KAAM,IAAK,CAAE2C,SAAU,GAAG3C,KAAM,UCA1zD,GAA0B,CAACuE,EAAgB9B,EAAU,CAAC,IACxDikC,GAAgB,GAAS,CAC5BniC,eAAgBA,EAChB6D,OAAQ3F,EAAQ2F,SCYX,GAAoB/F,IAC7BghB,GAAgC92C,QAAQyxB,SACxC,MAAM4pC,EAAeD,GAA0BtlC,GACzC8lC,EAAwB,IAAMP,IAAet5D,KAAK40C,IAClDklB,ECjBsB,CAAC/lC,IAAW,CACxCgmC,WAAY,aACZhc,cAAehqB,GAAQgqB,eAAiBwU,GACxC/V,cAAezoB,GAAQyoB,eAAiBgW,GACxCwH,kBAAmBjmC,GAAQimC,oBAAqB,EAChDjjC,iBAAkBhD,GAAQgD,kBAAoB,GAC9C+C,OAAQ/F,GAAQ+F,QAAU,IAAIiT,GAC9B1W,UAAWtC,GAAQsC,WAAa,WAChC7B,UAAWT,GAAQS,WAAamD,IDSL,CAAuB5D,GAClD,MAAO,IACA+lC,KACA/lC,EACH0G,QAAS,OACT6+B,eACA3lC,kBAAmBI,GAAQJ,mBAAqB09B,GAChDhnB,0BAA2BtW,GAAQsW,4BHXOvH,EGWwD,GHX1C//B,GAAU+/B,EAAS,CAC/EkqB,YAAa,GAAsBjqD,GACnC0+D,2BAA4B,GAAqC1+D,MAC9DA,KGSC4pC,yBAA0B5Y,GAAQ4Y,0BAC9BD,GAAiB,CAAErW,UAAWyjC,EAAmBzjC,UAAWq7B,cAAe,KAC/EgS,iCAAkC3vC,GAAQ2vC,kCAAoC,GAAelrC,GAC7F0H,YAAanM,GAAQmM,aAAe,GAAeY,IACnDvO,OAAQwB,GAAQxB,QAAU,GAAeJ,EAA4BC,GACrEmH,eAAgBxF,GAAQwF,gBAAkB,IAAI,GAAesgC,GAC7D34B,UAAWnN,GAAQmN,WACf,GAAe,IACRC,GACHlP,QAASW,gBAAmBinC,KAAyB34B,WAAanG,IAE1E+L,OAAQ/S,GAAQ+S,QAAU+nB,GAAKtZ,KAAK,KAAM,UAC1CoK,gBAAiB5rB,GAAQ4rB,iBAAmBA,GAC5CvnB,qBAAsBrE,GAAQqE,sBAAwB,GAAezG,GACrEgB,gBAAiBoB,GAAQpB,iBAAmB,GAAeT,GAC3D+nC,YAAalmC,GAAQkmC,aAAe9H,GACpCnS,YAAajsB,GAAQisB,aAAeqS,IH5BK,IAACvvB,CG6B7C,EEhCE,MAAM6gC,WAAuB,GAChCplE,YAAYoiD,GACR,MAAMwZ,EAAY,GAAmBxZ,GAC/ByZ,G1JjBkCx4D,E0JiBUu4D,E1JhB/C,IACAv4D,EACHw2B,qBAAsBx2B,EAAQw2B,uBAAwB,EACtDzF,gBAAiB/wB,EAAQ+wB,kBAAmB,EAC5CkY,mBAAoB,aALmB,IAACjpC,E0JkBxC,MAAMy4D,EAAY3nC,EAAoB0nC,GAChCE,EAAYtiC,EAAsBqiC,GAClCuJ,EAAY5iC,GAAmBs5B,GAI/BuJ,ECvBgC,EAAC9gE,GAAS+gE,mCAAmC,IACpF/gE,EACH+gE,+BACAC,cAAe,IAAIrrC,EAAc31B,EAAMihE,mBAAqB,KAC5DC,8BAA6DvnE,IAAnCqG,EAAMkhE,yBAC1B,IAAM1kE,QAAQC,QAAQuD,EAAMkhE,0BAC5BlhE,EAAM2gE,iCACZQ,sCAAqExnE,IAAnCqG,EAAMkhE,2BDgBlBE,CADAn4B,GADA9B,GADwB05B,IAGkB,CACxDE,6BAA8BvjB,KAElCjzC,MAAMu2D,GACN1nE,KAAK43B,OAAS8vC,EACd1nE,KAAK2zC,gBAAgBnB,IAAI/M,GAAezlC,KAAK43B,SAC7C53B,KAAK2zC,gBAAgBnB,IAAInb,EAAuBr3B,KAAK43B,SACrD53B,KAAK2zC,gBAAgBnB,IAAItV,EAAoBl9B,KAAK43B,SAClD53B,KAAK2zC,gBAAgBnB,IAAIhV,EAAgBx9B,KAAK43B,SAC9C53B,KAAK2zC,gBAAgBnB,IAAInU,EAA4Br+B,KAAK43B,SAC1D53B,KAAK2zC,gBAAgBnB,IAAIlD,GAAiBtvC,KAAK43B,SAC/C53B,KAAK2zC,gBAAgBnB,IAAIlC,GAAmBtwC,KAAK43B,QACrD,CACAviB,UACIlE,MAAMkE,SACV,EElCG,MAAM4yD,WAA0B,GACnC7lE,YAAYwE,GACRuK,QACAnR,KAAK4G,MAAQA,CACjB,CACA4B,0CACI,MAAO,CACH67C,QAAS,CAAE9uB,KAAM,gBAAiBpzB,KAAM,mBACxCm4B,SAAU,CAAE/E,KAAM,gBAAiBpzB,KAAM,YACzCmiD,OAAQ,CAAE/uB,KAAM,gBAAiBpzB,KAAM,UACvCoiD,aAAc,CAAEhvB,KAAM,gBAAiBpzB,KAAM,wBAErD,CACA2xC,kBAAkBvc,EAAaitB,EAAe/+C,GAC1CzF,KAAK2zC,gBAAgBnB,IAAI7a,EAAe6sB,EAAexkD,KAAKozC,UAAWpzC,KAAKszC,cAC5EtzC,KAAK2zC,gBAAgBnB,IAAInX,EAAkBmpB,EAAeyjB,GAAkBjuC,qCAC5E,MAAMnI,EAAQ0F,EAAY5lB,OAAO3R,KAAK2zC,kBAChC,OAAEhW,GAAW6mB,EAGbC,EAA0B,CAC5B9mB,SACAF,WAJe,iBAKfC,YAJgB,oBAKhBE,wBAAyB0gB,GACzBzgB,yBAA0BsgB,KAExB,eAAE/gB,GAAmBonB,EAC3B,OAAO3yB,EAAMxuB,SAAS6P,GAAYkqB,EAAesnB,OAAOxxC,EAAQA,QAASzN,GAAW,CAAC,IAAIg/C,EAC7F,CACArR,UAAUxsC,EAAOoxB,GACb,M9J0Z6CvB,OAAO7vB,EAAOoxB,KAK/D,IAAIpB,EAEJ,OADAA,EAAOtoB,KAAK1C,UAAUw1C,GAAoCx6C,EAAOoxB,IAC1DyrB,GAAoBzrB,EANX,CACZ,eAAgB,6BAChB,eAAgB,gCAIyB,SAAKz3B,EAAWq2B,EAAK,E8JjavDsxC,CAAsCthE,EAAOoxB,EACxD,CACAsb,YAAY/hC,EAAQymB,GAChB,M9J69E+CvB,OAAOllB,EAAQymB,KAClE,GAAIzmB,EAAO7H,YAAc,IACrB,OAAOs1C,GAA6CztC,EAAQymB,GAEhE,MAAM9qB,QAAa02C,GAAUryC,EAAOqlB,KAAMoB,GAC1C,IAAI1f,EAAW,CAAC,EAChBA,EAAW8qC,GAAuCl2C,EAAM8qB,GACxD,MAAMzjB,EAAW,CACb0pB,UAAW,GAAoB1sB,MAC5B+G,GAEP,OAAOlV,QAAQC,QAAQkR,EAAS,E8Jx+ErB4zD,CAAwC52D,EAAQymB,EAC3D,ECZJ,MAMMowC,GAAe,CAACrkC,YAAa,EAAGgB,UAAW,aC/BjDtO,iBACE,IACE,MAAM4xC,EAAcC,EAAKtjE,SAAS,eAAgB,CAAEY,UAAU,KAAY9D,QAAQ4D,IAAI6iE,aAChFC,EAAc7xD,eD+FjB8f,eAA+B4xC,GACpC,MAAMI,EAAS,IAAIjB,GAAe,IAAIY,KACtC,aAAcK,EAAO70B,KAAK,IAAIq0B,GAAkB,CAC9CzmB,UAAW,kBACXjD,IAAK,CAAEmqB,YAAa,CAAE,EAAKL,IAC3B/mB,yBAA0B,CAAE,eAAgB,eAC5C3C,0BAA2B,CAAE,OAAQ,CAAE,EAAK,KAAO,QAAS,CAAE,EAAK,UACnE8C,iBAAkB,+DAClBF,aAAc,kBACXnD,WAAWuqB,YAAY1rB,CAC9B,CCzGuC2rB,CAAeP,IAElDC,EAAKzjE,UAAU,eAAgB2jE,GAC/BF,EAAKnjE,eAAe,eAAgBqjE,EAGtC,CAFE,MAAOhkE,GACP8jE,EAAK3jE,UAAUH,EAAM7C,QACvB,CACF,CAEAknE,E","sources":["webpack://cruglobal-dot-github/./node_modules/@actions/core/lib/command.js","webpack://cruglobal-dot-github/./node_modules/@actions/core/lib/core.js","webpack://cruglobal-dot-github/./node_modules/@actions/core/lib/file-command.js","webpack://cruglobal-dot-github/./node_modules/@actions/core/lib/oidc-utils.js","webpack://cruglobal-dot-github/./node_modules/@actions/core/lib/path-utils.js","webpack://cruglobal-dot-github/./node_modules/@actions/core/lib/summary.js","webpack://cruglobal-dot-github/./node_modules/@actions/core/lib/utils.js","webpack://cruglobal-dot-github/./node_modules/@actions/http-client/lib/auth.js","webpack://cruglobal-dot-github/./node_modules/@actions/http-client/lib/index.js","webpack://cruglobal-dot-github/./node_modules/@actions/http-client/lib/proxy.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/util-user-agent-node/dist-es/is-crt-available.js","webpack://cruglobal-dot-github/./node_modules/fast-xml-parser/src/fxp.js","webpack://cruglobal-dot-github/./node_modules/fast-xml-parser/src/util.js","webpack://cruglobal-dot-github/./node_modules/fast-xml-parser/src/validator.js","webpack://cruglobal-dot-github/./node_modules/fast-xml-parser/src/xmlbuilder/json2xml.js","webpack://cruglobal-dot-github/./node_modules/fast-xml-parser/src/xmlbuilder/orderedJs2Xml.js","webpack://cruglobal-dot-github/./node_modules/fast-xml-parser/src/xmlparser/DocTypeReader.js","webpack://cruglobal-dot-github/./node_modules/fast-xml-parser/src/xmlparser/OptionsBuilder.js","webpack://cruglobal-dot-github/./node_modules/fast-xml-parser/src/xmlparser/OrderedObjParser.js","webpack://cruglobal-dot-github/./node_modules/fast-xml-parser/src/xmlparser/XMLParser.js","webpack://cruglobal-dot-github/./node_modules/fast-xml-parser/src/xmlparser/node2json.js","webpack://cruglobal-dot-github/./node_modules/fast-xml-parser/src/xmlparser/xmlNode.js","webpack://cruglobal-dot-github/./node_modules/mnemonist/lru-cache.js","webpack://cruglobal-dot-github/./node_modules/mnemonist/utils/iterables.js","webpack://cruglobal-dot-github/./node_modules/mnemonist/utils/typed-arrays.js","webpack://cruglobal-dot-github/./node_modules/obliterator/foreach.js","webpack://cruglobal-dot-github/./node_modules/obliterator/iterator.js","webpack://cruglobal-dot-github/./node_modules/strnum/strnum.js","webpack://cruglobal-dot-github/./node_modules/tunnel/index.js","webpack://cruglobal-dot-github/./node_modules/tunnel/lib/tunnel.js","webpack://cruglobal-dot-github/./node_modules/uuid/dist/esm-node/v1.js","webpack://cruglobal-dot-github/./node_modules/uuid/dist/esm-node/parse.js","webpack://cruglobal-dot-github/./node_modules/uuid/dist/esm-node/v35.js","webpack://cruglobal-dot-github/./node_modules/uuid/dist/esm-node/md5.js","webpack://cruglobal-dot-github/./node_modules/uuid/dist/esm-node/v3.js","webpack://cruglobal-dot-github/./node_modules/uuid/dist/esm-node/sha1.js","webpack://cruglobal-dot-github/./node_modules/uuid/dist/esm-node/v5.js","webpack://cruglobal-dot-github/./node_modules/uuid/dist/esm-node/nil.js","webpack://cruglobal-dot-github/./node_modules/uuid/dist/esm-node/version.js","webpack://cruglobal-dot-github/./node_modules/uuid/dist/esm-node/rng.js","webpack://cruglobal-dot-github/./node_modules/uuid/dist/esm-node/stringify.js","webpack://cruglobal-dot-github/./node_modules/uuid/dist/esm-node/v4.js","webpack://cruglobal-dot-github/./node_modules/uuid/dist/esm-node/regex.js","webpack://cruglobal-dot-github/./node_modules/uuid/dist/esm-node/validate.js","webpack://cruglobal-dot-github/external node-commonjs \"assert\"","webpack://cruglobal-dot-github/external node-commonjs \"crypto\"","webpack://cruglobal-dot-github/external node-commonjs \"events\"","webpack://cruglobal-dot-github/external node-commonjs \"fs\"","webpack://cruglobal-dot-github/external node-commonjs \"http\"","webpack://cruglobal-dot-github/external node-commonjs \"https\"","webpack://cruglobal-dot-github/external node-commonjs \"net\"","webpack://cruglobal-dot-github/external node-commonjs \"os\"","webpack://cruglobal-dot-github/external node-commonjs \"path\"","webpack://cruglobal-dot-github/external node-commonjs \"tls\"","webpack://cruglobal-dot-github/external node-commonjs \"util\"","webpack://cruglobal-dot-github/webpack/bootstrap","webpack://cruglobal-dot-github/webpack/runtime/compat get default export","webpack://cruglobal-dot-github/webpack/runtime/define property getters","webpack://cruglobal-dot-github/webpack/runtime/harmony module decorator","webpack://cruglobal-dot-github/webpack/runtime/hasOwnProperty shorthand","webpack://cruglobal-dot-github/webpack/runtime/make namespace object","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/util-config-provider/dist-es/booleanSelector.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/config-resolver/dist-es/endpointsConfig/NodeUseDualstackEndpointConfigOptions.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/config-resolver/dist-es/endpointsConfig/NodeUseFipsEndpointConfigOptions.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/config-resolver/dist-es/regionConfig/config.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/config-resolver/dist-es/regionConfig/isFipsRegion.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/config-resolver/dist-es/regionConfig/getRealRegion.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/config-resolver/dist-es/regionConfig/resolveRegionConfig.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/protocol-http/dist-es/httpRequest.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/middleware-content-length/dist-es/index.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/middleware-serde/dist-es/serdePlugin.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/middleware-serde/dist-es/deserializerMiddleware.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/middleware-serde/dist-es/serializerMiddleware.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/middleware-endpoint/dist-es/service-customizations/s3.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/middleware-endpoint/dist-es/adaptors/createConfigValueProvider.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/middleware-endpoint/dist-es/adaptors/getEndpointFromInstructions.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/middleware-endpoint/dist-es/endpointMiddleware.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/middleware-endpoint/dist-es/getEndpointPlugin.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/util-middleware/dist-es/normalizeProvider.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/url-parser/dist-es/index.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/querystring-parser/dist-es/index.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/middleware-endpoint/dist-es/resolveEndpointConfig.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/middleware-endpoint/dist-es/adaptors/toEndpointV1.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/middleware-endpoint-discovery/dist-es/configurations.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/endpoint-cache/dist-es/EndpointCache.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/middleware-host-header/dist-es/index.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/middleware-logger/dist-es/loggerMiddleware.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/middleware-recursion-detection/dist-es/index.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/util-retry/dist-es/config.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/service-error-classification/dist-es/constants.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/service-error-classification/dist-es/index.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/util-retry/dist-es/DefaultRateLimiter.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/util-retry/dist-es/constants.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/util-retry/dist-es/defaultRetryToken.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/util-retry/dist-es/defaultRetryBackoffStrategy.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/util-retry/dist-es/StandardRetryStrategy.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/util-retry/dist-es/AdaptiveRetryStrategy.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/middleware-retry/dist-es/configurations.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/protocol-http/dist-es/httpResponse.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/middleware-retry/dist-es/util.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/middleware-retry/dist-es/retryMiddleware.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/property-provider/dist-es/ProviderError.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/property-provider/dist-es/CredentialsProviderError.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/property-provider/dist-es/TokenProviderError.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/property-provider/dist-es/chain.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/property-provider/dist-es/fromStatic.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/property-provider/dist-es/memoize.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/util-hex-encoding/dist-es/index.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/signature-v4/dist-es/constants.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/signature-v4/dist-es/credentialDerivation.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/signature-v4/dist-es/getCanonicalHeaders.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/util-uri-escape/dist-es/escape-uri.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/is-array-buffer/dist-es/index.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/signature-v4/dist-es/getPayloadHash.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/signature-v4/dist-es/cloneRequest.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/signature-v4/dist-es/prepareRequest.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/signature-v4/dist-es/utilDate.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/signature-v4/dist-es/SignatureV4.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/signature-v4/dist-es/moveHeadersToQuery.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/signature-v4/dist-es/headerUtil.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/signature-v4/dist-es/getCanonicalQuery.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/middleware-signing/dist-es/configurations.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/middleware-signing/dist-es/utils/getSkewCorrectedDate.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/middleware-signing/dist-es/utils/getUpdatedSystemClockOffset.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/middleware-signing/dist-es/utils/isClockSkewed.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/middleware-signing/dist-es/middleware.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/middleware-user-agent/dist-es/configurations.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/middleware-user-agent/dist-es/constants.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/middleware-user-agent/dist-es/user-agent-middleware.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/smithy-client/dist-es/NoOpLogger.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/middleware-stack/dist-es/MiddlewareStack.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/smithy-client/dist-es/client.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/smithy-client/dist-es/command.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/smithy-client/dist-es/constants.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/smithy-client/dist-es/parse-utils.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/smithy-client/dist-es/date-utils.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/smithy-client/dist-es/exceptions.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/smithy-client/dist-es/default-error-handler.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/smithy-client/dist-es/defaults-mode.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/smithy-client/dist-es/emitWarningIfUnsupportedVersion.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/smithy-client/dist-es/extended-encode-uri-component.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/smithy-client/dist-es/get-value-from-text-node.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/smithy-client/dist-es/lazy-json.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/smithy-client/dist-es/object-mapping.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/client-dynamodb/dist-es/models/DynamoDBServiceException.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/client-dynamodb/dist-es/models/models_0.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/client-dynamodb/dist-es/protocols/Aws_json1_0.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/client-dynamodb/dist-es/commands/DescribeEndpointsCommand.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/client-dynamodb/dist-es/endpoint/EndpointParameters.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/client-sts/dist-es/models/STSServiceException.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/client-sts/dist-es/models/models_0.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/client-sts/dist-es/protocols/Aws_query.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/client-sts/dist-es/commands/AssumeRoleCommand.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/client-sts/dist-es/commands/AssumeRoleWithWebIdentityCommand.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/client-sts/dist-es/defaultStsRoleAssumers.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/credential-provider-env/dist-es/fromEnv.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/shared-ini-file-loader/dist-es/getHomeDir.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/shared-ini-file-loader/dist-es/getProfileName.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/shared-ini-file-loader/dist-es/getSSOTokenFilepath.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/shared-ini-file-loader/dist-es/getSSOTokenFromFile.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/shared-ini-file-loader/dist-es/getConfigFilepath.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/shared-ini-file-loader/dist-es/getCredentialsFilepath.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/shared-ini-file-loader/dist-es/getProfileData.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/shared-ini-file-loader/dist-es/parseIni.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/shared-ini-file-loader/dist-es/slurpFile.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/shared-ini-file-loader/dist-es/loadSharedConfigFiles.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/shared-ini-file-loader/dist-es/getSsoSessionData.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/shared-ini-file-loader/dist-es/loadSsoSessionData.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/shared-ini-file-loader/dist-es/parseKnownFiles.js","webpack://cruglobal-dot-github/external node-commonjs \"url\"","webpack://cruglobal-dot-github/external node-commonjs \"buffer\"","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/credential-provider-imds/dist-es/remoteProvider/httpRequest.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/credential-provider-imds/dist-es/remoteProvider/ImdsCredentials.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/credential-provider-imds/dist-es/remoteProvider/RemoteProviderInit.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/credential-provider-imds/dist-es/remoteProvider/retry.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/credential-provider-imds/dist-es/fromContainerMetadata.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/node-config-provider/dist-es/fromStatic.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/node-config-provider/dist-es/configLoader.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/node-config-provider/dist-es/fromEnv.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/node-config-provider/dist-es/fromSharedConfigFiles.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/credential-provider-imds/dist-es/config/Endpoint.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/credential-provider-imds/dist-es/config/EndpointConfigOptions.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/credential-provider-imds/dist-es/config/EndpointMode.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/credential-provider-imds/dist-es/config/EndpointModeConfigOptions.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/credential-provider-imds/dist-es/utils/getInstanceMetadataEndpoint.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/credential-provider-imds/dist-es/utils/getExtendedInstanceMetadataCredentials.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/credential-provider-imds/dist-es/fromInstanceMetadata.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/credential-provider-imds/dist-es/utils/staticStabilityProvider.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/credential-provider-ini/dist-es/resolveAssumeRoleCredentials.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/credential-provider-ini/dist-es/resolveCredentialSource.js","webpack://cruglobal-dot-github/external node-commonjs \"child_process\"","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/credential-provider-process/dist-es/getValidatedProcessCredentials.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/credential-provider-process/dist-es/resolveProcessCredentials.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/credential-provider-process/dist-es/fromProcess.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/credential-provider-sso/dist-es/isSsoProfile.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/util-buffer-from/dist-es/index.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/hash-node/dist-es/index.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/node-http-handler/dist-es/constants.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/node-http-handler/dist-es/get-transformed-headers.js","webpack://cruglobal-dot-github/external node-commonjs \"stream\"","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/node-http-handler/dist-es/write-request-body.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/node-http-handler/dist-es/node-http-handler.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/querystring-builder/dist-es/index.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/node-http-handler/dist-es/set-connection-timeout.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/node-http-handler/dist-es/set-socket-timeout.js","webpack://cruglobal-dot-github/external node-commonjs \"http2\"","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/node-http-handler/dist-es/stream-collector/collector.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/node-http-handler/dist-es/stream-collector/index.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/util-body-length-node/dist-es/calculateBodyLength.js","webpack://cruglobal-dot-github/external node-commonjs \"process\"","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/util-user-agent-node/dist-es/index.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/util-utf8-node/dist-es/index.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/util-base64/dist-es/fromBase64.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/util-base64/dist-es/toBase64.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/util-endpoints/dist-es/lib/aws/partition.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/util-endpoints/dist-es/debug/debugId.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/util-endpoints/dist-es/debug/toDebugString.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/util-endpoints/dist-es/types/EndpointError.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/util-endpoints/dist-es/lib/isIpAddress.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/util-endpoints/dist-es/lib/isValidHostLabel.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/util-endpoints/dist-es/lib/aws/isVirtualHostableS3Bucket.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/util-endpoints/dist-es/lib/aws/parseArn.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/util-endpoints/dist-es/lib/booleanEquals.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/util-endpoints/dist-es/lib/getAttr.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/util-endpoints/dist-es/lib/getAttrPathList.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/util-endpoints/dist-es/lib/isSet.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/util-endpoints/dist-es/lib/not.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/types/dist-es/endpoint.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/util-endpoints/dist-es/lib/parseURL.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/util-endpoints/dist-es/lib/stringEquals.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/util-endpoints/dist-es/lib/substring.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/util-endpoints/dist-es/lib/uriEncode.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/util-endpoints/dist-es/utils/evaluateTemplate.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/util-endpoints/dist-es/utils/evaluateExpression.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/util-endpoints/dist-es/utils/getReferenceValue.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/util-endpoints/dist-es/utils/callFunction.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/util-endpoints/dist-es/utils/evaluateCondition.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/util-endpoints/dist-es/utils/evaluateConditions.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/util-endpoints/dist-es/utils/getEndpointHeaders.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/util-endpoints/dist-es/utils/getEndpointProperty.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/util-endpoints/dist-es/utils/getEndpointProperties.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/util-endpoints/dist-es/utils/getEndpointUrl.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/util-endpoints/dist-es/utils/evaluateEndpointRule.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/util-endpoints/dist-es/utils/evaluateErrorRule.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/util-endpoints/dist-es/utils/evaluateTreeRule.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/util-endpoints/dist-es/utils/evaluateRules.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/util-endpoints/dist-es/resolveEndpoint.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/client-sso/dist-es/endpoint/ruleset.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/client-sso/dist-es/endpoint/endpointResolver.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/util-defaults-mode-node/dist-es/constants.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/util-defaults-mode-node/dist-es/defaultsModeConfig.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/util-defaults-mode-node/dist-es/resolveDefaultsModeConfig.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/client-sso/dist-es/runtimeConfig.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/client-sso/dist-es/runtimeConfig.shared.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/client-sso/dist-es/SSOClient.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/client-sso/dist-es/endpoint/EndpointParameters.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/client-sso/dist-es/models/SSOServiceException.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/client-sso/dist-es/models/models_0.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/client-sso/dist-es/protocols/Aws_restJson1.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/client-sso/dist-es/commands/GetRoleCredentialsCommand.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/token-providers/dist-es/constants.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/client-sso-oidc/dist-es/models/SSOOIDCServiceException.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/client-sso-oidc/dist-es/models/models_0.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/client-sso-oidc/dist-es/protocols/Aws_restJson1.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/client-sso-oidc/dist-es/commands/CreateTokenCommand.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/client-sso-oidc/dist-es/endpoint/EndpointParameters.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/client-sso-oidc/dist-es/endpoint/ruleset.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/client-sso-oidc/dist-es/endpoint/endpointResolver.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/client-sso-oidc/dist-es/runtimeConfig.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/client-sso-oidc/dist-es/runtimeConfig.shared.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/client-sso-oidc/dist-es/SSOOIDCClient.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/token-providers/dist-es/getSsoOidcClient.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/token-providers/dist-es/getNewSsoOidcToken.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/token-providers/dist-es/validateTokenExpiry.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/token-providers/dist-es/validateTokenKey.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/token-providers/dist-es/writeSSOTokenToFile.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/token-providers/dist-es/fromSso.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/credential-provider-sso/dist-es/resolveSSOCredentials.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/credential-provider-sso/dist-es/validateSsoProfile.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/credential-provider-sso/dist-es/fromSSO.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/credential-provider-ini/dist-es/resolveStaticCredentials.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/credential-provider-web-identity/dist-es/fromTokenFile.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/credential-provider-web-identity/dist-es/fromWebToken.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/credential-provider-ini/dist-es/resolveProfileData.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/credential-provider-ini/dist-es/resolveWebIdentityCredentials.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/credential-provider-ini/dist-es/resolveProcessCredentials.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/credential-provider-ini/dist-es/resolveSsoCredentials.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/credential-provider-node/dist-es/defaultProvider.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/credential-provider-ini/dist-es/fromIni.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/credential-provider-node/dist-es/remoteProvider.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/client-sts/dist-es/endpoint/ruleset.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/client-sts/dist-es/endpoint/endpointResolver.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/client-sts/dist-es/runtimeConfig.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/client-sts/dist-es/runtimeConfig.shared.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/client-sts/dist-es/STSClient.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/client-sts/dist-es/endpoint/EndpointParameters.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/middleware-sdk-sts/dist-es/index.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/client-sts/dist-es/defaultRoleAssumers.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/client-dynamodb/dist-es/endpoint/ruleset.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/client-dynamodb/dist-es/endpoint/endpointResolver.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/client-dynamodb/dist-es/runtimeConfig.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/client-dynamodb/dist-es/runtimeConfig.shared.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/client-dynamodb/dist-es/DynamoDBClient.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/middleware-endpoint-discovery/dist-es/resolveEndpointDiscoveryConfig.js","webpack://cruglobal-dot-github/./node_modules/@aws-sdk/client-dynamodb/dist-es/commands/UpdateItemCommand.js","webpack://cruglobal-dot-github/./src/aws.js","webpack://cruglobal-dot-github/./src/build-number.js"],"sourcesContent":["\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.issue = exports.issueCommand = void 0;\nconst os = __importStar(require(\"os\"));\nconst utils_1 = require(\"./utils\");\n/**\n * Commands\n *\n * Command Format:\n *   ::name key=value,key=value::message\n *\n * Examples:\n *   ::warning::This is the message\n *   ::set-env name=MY_VAR::some value\n */\nfunction issueCommand(command, properties, message) {\n    const cmd = new Command(command, properties, message);\n    process.stdout.write(cmd.toString() + os.EOL);\n}\nexports.issueCommand = issueCommand;\nfunction issue(name, message = '') {\n    issueCommand(name, {}, message);\n}\nexports.issue = issue;\nconst CMD_STRING = '::';\nclass Command {\n    constructor(command, properties, message) {\n        if (!command) {\n            command = 'missing.command';\n        }\n        this.command = command;\n        this.properties = properties;\n        this.message = message;\n    }\n    toString() {\n        let cmdStr = CMD_STRING + this.command;\n        if (this.properties && Object.keys(this.properties).length > 0) {\n            cmdStr += ' ';\n            let first = true;\n            for (const key in this.properties) {\n                if (this.properties.hasOwnProperty(key)) {\n                    const val = this.properties[key];\n                    if (val) {\n                        if (first) {\n                            first = false;\n                        }\n                        else {\n                            cmdStr += ',';\n                        }\n                        cmdStr += `${key}=${escapeProperty(val)}`;\n                    }\n                }\n            }\n        }\n        cmdStr += `${CMD_STRING}${escapeData(this.message)}`;\n        return cmdStr;\n    }\n}\nfunction escapeData(s) {\n    return utils_1.toCommandValue(s)\n        .replace(/%/g, '%25')\n        .replace(/\\r/g, '%0D')\n        .replace(/\\n/g, '%0A');\n}\nfunction escapeProperty(s) {\n    return utils_1.toCommandValue(s)\n        .replace(/%/g, '%25')\n        .replace(/\\r/g, '%0D')\n        .replace(/\\n/g, '%0A')\n        .replace(/:/g, '%3A')\n        .replace(/,/g, '%2C');\n}\n//# sourceMappingURL=command.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getIDToken = exports.getState = exports.saveState = exports.group = exports.endGroup = exports.startGroup = exports.info = exports.notice = exports.warning = exports.error = exports.debug = exports.isDebug = exports.setFailed = exports.setCommandEcho = exports.setOutput = exports.getBooleanInput = exports.getMultilineInput = exports.getInput = exports.addPath = exports.setSecret = exports.exportVariable = exports.ExitCode = void 0;\nconst command_1 = require(\"./command\");\nconst file_command_1 = require(\"./file-command\");\nconst utils_1 = require(\"./utils\");\nconst os = __importStar(require(\"os\"));\nconst path = __importStar(require(\"path\"));\nconst oidc_utils_1 = require(\"./oidc-utils\");\n/**\n * The code to exit an action\n */\nvar ExitCode;\n(function (ExitCode) {\n    /**\n     * A code indicating that the action was successful\n     */\n    ExitCode[ExitCode[\"Success\"] = 0] = \"Success\";\n    /**\n     * A code indicating that the action was a failure\n     */\n    ExitCode[ExitCode[\"Failure\"] = 1] = \"Failure\";\n})(ExitCode = exports.ExitCode || (exports.ExitCode = {}));\n//-----------------------------------------------------------------------\n// Variables\n//-----------------------------------------------------------------------\n/**\n * Sets env variable for this action and future actions in the job\n * @param name the name of the variable to set\n * @param val the value of the variable. Non-string values will be converted to a string via JSON.stringify\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction exportVariable(name, val) {\n    const convertedVal = utils_1.toCommandValue(val);\n    process.env[name] = convertedVal;\n    const filePath = process.env['GITHUB_ENV'] || '';\n    if (filePath) {\n        return file_command_1.issueFileCommand('ENV', file_command_1.prepareKeyValueMessage(name, val));\n    }\n    command_1.issueCommand('set-env', { name }, convertedVal);\n}\nexports.exportVariable = exportVariable;\n/**\n * Registers a secret which will get masked from logs\n * @param secret value of the secret\n */\nfunction setSecret(secret) {\n    command_1.issueCommand('add-mask', {}, secret);\n}\nexports.setSecret = setSecret;\n/**\n * Prepends inputPath to the PATH (for this action and future actions)\n * @param inputPath\n */\nfunction addPath(inputPath) {\n    const filePath = process.env['GITHUB_PATH'] || '';\n    if (filePath) {\n        file_command_1.issueFileCommand('PATH', inputPath);\n    }\n    else {\n        command_1.issueCommand('add-path', {}, inputPath);\n    }\n    process.env['PATH'] = `${inputPath}${path.delimiter}${process.env['PATH']}`;\n}\nexports.addPath = addPath;\n/**\n * Gets the value of an input.\n * Unless trimWhitespace is set to false in InputOptions, the value is also trimmed.\n * Returns an empty string if the value is not defined.\n *\n * @param     name     name of the input to get\n * @param     options  optional. See InputOptions.\n * @returns   string\n */\nfunction getInput(name, options) {\n    const val = process.env[`INPUT_${name.replace(/ /g, '_').toUpperCase()}`] || '';\n    if (options && options.required && !val) {\n        throw new Error(`Input required and not supplied: ${name}`);\n    }\n    if (options && options.trimWhitespace === false) {\n        return val;\n    }\n    return val.trim();\n}\nexports.getInput = getInput;\n/**\n * Gets the values of an multiline input.  Each value is also trimmed.\n *\n * @param     name     name of the input to get\n * @param     options  optional. See InputOptions.\n * @returns   string[]\n *\n */\nfunction getMultilineInput(name, options) {\n    const inputs = getInput(name, options)\n        .split('\\n')\n        .filter(x => x !== '');\n    if (options && options.trimWhitespace === false) {\n        return inputs;\n    }\n    return inputs.map(input => input.trim());\n}\nexports.getMultilineInput = getMultilineInput;\n/**\n * Gets the input value of the boolean type in the YAML 1.2 \"core schema\" specification.\n * Support boolean input list: `true | True | TRUE | false | False | FALSE` .\n * The return value is also in boolean type.\n * ref: https://yaml.org/spec/1.2/spec.html#id2804923\n *\n * @param     name     name of the input to get\n * @param     options  optional. See InputOptions.\n * @returns   boolean\n */\nfunction getBooleanInput(name, options) {\n    const trueValue = ['true', 'True', 'TRUE'];\n    const falseValue = ['false', 'False', 'FALSE'];\n    const val = getInput(name, options);\n    if (trueValue.includes(val))\n        return true;\n    if (falseValue.includes(val))\n        return false;\n    throw new TypeError(`Input does not meet YAML 1.2 \"Core Schema\" specification: ${name}\\n` +\n        `Support boolean input list: \\`true | True | TRUE | false | False | FALSE\\``);\n}\nexports.getBooleanInput = getBooleanInput;\n/**\n * Sets the value of an output.\n *\n * @param     name     name of the output to set\n * @param     value    value to store. Non-string values will be converted to a string via JSON.stringify\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction setOutput(name, value) {\n    const filePath = process.env['GITHUB_OUTPUT'] || '';\n    if (filePath) {\n        return file_command_1.issueFileCommand('OUTPUT', file_command_1.prepareKeyValueMessage(name, value));\n    }\n    process.stdout.write(os.EOL);\n    command_1.issueCommand('set-output', { name }, utils_1.toCommandValue(value));\n}\nexports.setOutput = setOutput;\n/**\n * Enables or disables the echoing of commands into stdout for the rest of the step.\n * Echoing is disabled by default if ACTIONS_STEP_DEBUG is not set.\n *\n */\nfunction setCommandEcho(enabled) {\n    command_1.issue('echo', enabled ? 'on' : 'off');\n}\nexports.setCommandEcho = setCommandEcho;\n//-----------------------------------------------------------------------\n// Results\n//-----------------------------------------------------------------------\n/**\n * Sets the action status to failed.\n * When the action exits it will be with an exit code of 1\n * @param message add error issue message\n */\nfunction setFailed(message) {\n    process.exitCode = ExitCode.Failure;\n    error(message);\n}\nexports.setFailed = setFailed;\n//-----------------------------------------------------------------------\n// Logging Commands\n//-----------------------------------------------------------------------\n/**\n * Gets whether Actions Step Debug is on or not\n */\nfunction isDebug() {\n    return process.env['RUNNER_DEBUG'] === '1';\n}\nexports.isDebug = isDebug;\n/**\n * Writes debug message to user log\n * @param message debug message\n */\nfunction debug(message) {\n    command_1.issueCommand('debug', {}, message);\n}\nexports.debug = debug;\n/**\n * Adds an error issue\n * @param message error issue message. Errors will be converted to string via toString()\n * @param properties optional properties to add to the annotation.\n */\nfunction error(message, properties = {}) {\n    command_1.issueCommand('error', utils_1.toCommandProperties(properties), message instanceof Error ? message.toString() : message);\n}\nexports.error = error;\n/**\n * Adds a warning issue\n * @param message warning issue message. Errors will be converted to string via toString()\n * @param properties optional properties to add to the annotation.\n */\nfunction warning(message, properties = {}) {\n    command_1.issueCommand('warning', utils_1.toCommandProperties(properties), message instanceof Error ? message.toString() : message);\n}\nexports.warning = warning;\n/**\n * Adds a notice issue\n * @param message notice issue message. Errors will be converted to string via toString()\n * @param properties optional properties to add to the annotation.\n */\nfunction notice(message, properties = {}) {\n    command_1.issueCommand('notice', utils_1.toCommandProperties(properties), message instanceof Error ? message.toString() : message);\n}\nexports.notice = notice;\n/**\n * Writes info to log with console.log.\n * @param message info message\n */\nfunction info(message) {\n    process.stdout.write(message + os.EOL);\n}\nexports.info = info;\n/**\n * Begin an output group.\n *\n * Output until the next `groupEnd` will be foldable in this group\n *\n * @param name The name of the output group\n */\nfunction startGroup(name) {\n    command_1.issue('group', name);\n}\nexports.startGroup = startGroup;\n/**\n * End an output group.\n */\nfunction endGroup() {\n    command_1.issue('endgroup');\n}\nexports.endGroup = endGroup;\n/**\n * Wrap an asynchronous function call in a group.\n *\n * Returns the same type as the function itself.\n *\n * @param name The name of the group\n * @param fn The function to wrap in the group\n */\nfunction group(name, fn) {\n    return __awaiter(this, void 0, void 0, function* () {\n        startGroup(name);\n        let result;\n        try {\n            result = yield fn();\n        }\n        finally {\n            endGroup();\n        }\n        return result;\n    });\n}\nexports.group = group;\n//-----------------------------------------------------------------------\n// Wrapper action state\n//-----------------------------------------------------------------------\n/**\n * Saves state for current action, the state can only be retrieved by this action's post job execution.\n *\n * @param     name     name of the state to store\n * @param     value    value to store. Non-string values will be converted to a string via JSON.stringify\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction saveState(name, value) {\n    const filePath = process.env['GITHUB_STATE'] || '';\n    if (filePath) {\n        return file_command_1.issueFileCommand('STATE', file_command_1.prepareKeyValueMessage(name, value));\n    }\n    command_1.issueCommand('save-state', { name }, utils_1.toCommandValue(value));\n}\nexports.saveState = saveState;\n/**\n * Gets the value of an state set by this action's main execution.\n *\n * @param     name     name of the state to get\n * @returns   string\n */\nfunction getState(name) {\n    return process.env[`STATE_${name}`] || '';\n}\nexports.getState = getState;\nfunction getIDToken(aud) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return yield oidc_utils_1.OidcClient.getIDToken(aud);\n    });\n}\nexports.getIDToken = getIDToken;\n/**\n * Summary exports\n */\nvar summary_1 = require(\"./summary\");\nObject.defineProperty(exports, \"summary\", { enumerable: true, get: function () { return summary_1.summary; } });\n/**\n * @deprecated use core.summary\n */\nvar summary_2 = require(\"./summary\");\nObject.defineProperty(exports, \"markdownSummary\", { enumerable: true, get: function () { return summary_2.markdownSummary; } });\n/**\n * Path exports\n */\nvar path_utils_1 = require(\"./path-utils\");\nObject.defineProperty(exports, \"toPosixPath\", { enumerable: true, get: function () { return path_utils_1.toPosixPath; } });\nObject.defineProperty(exports, \"toWin32Path\", { enumerable: true, get: function () { return path_utils_1.toWin32Path; } });\nObject.defineProperty(exports, \"toPlatformPath\", { enumerable: true, get: function () { return path_utils_1.toPlatformPath; } });\n//# sourceMappingURL=core.js.map","\"use strict\";\n// For internal use, subject to change.\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.prepareKeyValueMessage = exports.issueFileCommand = void 0;\n// We use any as a valid input type\n/* eslint-disable @typescript-eslint/no-explicit-any */\nconst fs = __importStar(require(\"fs\"));\nconst os = __importStar(require(\"os\"));\nconst uuid_1 = require(\"uuid\");\nconst utils_1 = require(\"./utils\");\nfunction issueFileCommand(command, message) {\n    const filePath = process.env[`GITHUB_${command}`];\n    if (!filePath) {\n        throw new Error(`Unable to find environment variable for file command ${command}`);\n    }\n    if (!fs.existsSync(filePath)) {\n        throw new Error(`Missing file at path: ${filePath}`);\n    }\n    fs.appendFileSync(filePath, `${utils_1.toCommandValue(message)}${os.EOL}`, {\n        encoding: 'utf8'\n    });\n}\nexports.issueFileCommand = issueFileCommand;\nfunction prepareKeyValueMessage(key, value) {\n    const delimiter = `ghadelimiter_${uuid_1.v4()}`;\n    const convertedValue = utils_1.toCommandValue(value);\n    // These should realistically never happen, but just in case someone finds a\n    // way to exploit uuid generation let's not allow keys or values that contain\n    // the delimiter.\n    if (key.includes(delimiter)) {\n        throw new Error(`Unexpected input: name should not contain the delimiter \"${delimiter}\"`);\n    }\n    if (convertedValue.includes(delimiter)) {\n        throw new Error(`Unexpected input: value should not contain the delimiter \"${delimiter}\"`);\n    }\n    return `${key}<<${delimiter}${os.EOL}${convertedValue}${os.EOL}${delimiter}`;\n}\nexports.prepareKeyValueMessage = prepareKeyValueMessage;\n//# sourceMappingURL=file-command.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OidcClient = void 0;\nconst http_client_1 = require(\"@actions/http-client\");\nconst auth_1 = require(\"@actions/http-client/lib/auth\");\nconst core_1 = require(\"./core\");\nclass OidcClient {\n    static createHttpClient(allowRetry = true, maxRetry = 10) {\n        const requestOptions = {\n            allowRetries: allowRetry,\n            maxRetries: maxRetry\n        };\n        return new http_client_1.HttpClient('actions/oidc-client', [new auth_1.BearerCredentialHandler(OidcClient.getRequestToken())], requestOptions);\n    }\n    static getRequestToken() {\n        const token = process.env['ACTIONS_ID_TOKEN_REQUEST_TOKEN'];\n        if (!token) {\n            throw new Error('Unable to get ACTIONS_ID_TOKEN_REQUEST_TOKEN env variable');\n        }\n        return token;\n    }\n    static getIDTokenUrl() {\n        const runtimeUrl = process.env['ACTIONS_ID_TOKEN_REQUEST_URL'];\n        if (!runtimeUrl) {\n            throw new Error('Unable to get ACTIONS_ID_TOKEN_REQUEST_URL env variable');\n        }\n        return runtimeUrl;\n    }\n    static getCall(id_token_url) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            const httpclient = OidcClient.createHttpClient();\n            const res = yield httpclient\n                .getJson(id_token_url)\n                .catch(error => {\n                throw new Error(`Failed to get ID Token. \\n \n        Error Code : ${error.statusCode}\\n \n        Error Message: ${error.result.message}`);\n            });\n            const id_token = (_a = res.result) === null || _a === void 0 ? void 0 : _a.value;\n            if (!id_token) {\n                throw new Error('Response json body do not have ID Token field');\n            }\n            return id_token;\n        });\n    }\n    static getIDToken(audience) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                // New ID Token is requested from action service\n                let id_token_url = OidcClient.getIDTokenUrl();\n                if (audience) {\n                    const encodedAudience = encodeURIComponent(audience);\n                    id_token_url = `${id_token_url}&audience=${encodedAudience}`;\n                }\n                core_1.debug(`ID token url is ${id_token_url}`);\n                const id_token = yield OidcClient.getCall(id_token_url);\n                core_1.setSecret(id_token);\n                return id_token;\n            }\n            catch (error) {\n                throw new Error(`Error message: ${error.message}`);\n            }\n        });\n    }\n}\nexports.OidcClient = OidcClient;\n//# sourceMappingURL=oidc-utils.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.toPlatformPath = exports.toWin32Path = exports.toPosixPath = void 0;\nconst path = __importStar(require(\"path\"));\n/**\n * toPosixPath converts the given path to the posix form. On Windows, \\\\ will be\n * replaced with /.\n *\n * @param pth. Path to transform.\n * @return string Posix path.\n */\nfunction toPosixPath(pth) {\n    return pth.replace(/[\\\\]/g, '/');\n}\nexports.toPosixPath = toPosixPath;\n/**\n * toWin32Path converts the given path to the win32 form. On Linux, / will be\n * replaced with \\\\.\n *\n * @param pth. Path to transform.\n * @return string Win32 path.\n */\nfunction toWin32Path(pth) {\n    return pth.replace(/[/]/g, '\\\\');\n}\nexports.toWin32Path = toWin32Path;\n/**\n * toPlatformPath converts the given path to a platform-specific path. It does\n * this by replacing instances of / and \\ with the platform-specific path\n * separator.\n *\n * @param pth The path to platformize.\n * @return string The platform-specific path.\n */\nfunction toPlatformPath(pth) {\n    return pth.replace(/[/\\\\]/g, path.sep);\n}\nexports.toPlatformPath = toPlatformPath;\n//# sourceMappingURL=path-utils.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.summary = exports.markdownSummary = exports.SUMMARY_DOCS_URL = exports.SUMMARY_ENV_VAR = void 0;\nconst os_1 = require(\"os\");\nconst fs_1 = require(\"fs\");\nconst { access, appendFile, writeFile } = fs_1.promises;\nexports.SUMMARY_ENV_VAR = 'GITHUB_STEP_SUMMARY';\nexports.SUMMARY_DOCS_URL = 'https://docs.github.com/actions/using-workflows/workflow-commands-for-github-actions#adding-a-job-summary';\nclass Summary {\n    constructor() {\n        this._buffer = '';\n    }\n    /**\n     * Finds the summary file path from the environment, rejects if env var is not found or file does not exist\n     * Also checks r/w permissions.\n     *\n     * @returns step summary file path\n     */\n    filePath() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this._filePath) {\n                return this._filePath;\n            }\n            const pathFromEnv = process.env[exports.SUMMARY_ENV_VAR];\n            if (!pathFromEnv) {\n                throw new Error(`Unable to find environment variable for $${exports.SUMMARY_ENV_VAR}. Check if your runtime environment supports job summaries.`);\n            }\n            try {\n                yield access(pathFromEnv, fs_1.constants.R_OK | fs_1.constants.W_OK);\n            }\n            catch (_a) {\n                throw new Error(`Unable to access summary file: '${pathFromEnv}'. Check if the file has correct read/write permissions.`);\n            }\n            this._filePath = pathFromEnv;\n            return this._filePath;\n        });\n    }\n    /**\n     * Wraps content in an HTML tag, adding any HTML attributes\n     *\n     * @param {string} tag HTML tag to wrap\n     * @param {string | null} content content within the tag\n     * @param {[attribute: string]: string} attrs key-value list of HTML attributes to add\n     *\n     * @returns {string} content wrapped in HTML element\n     */\n    wrap(tag, content, attrs = {}) {\n        const htmlAttrs = Object.entries(attrs)\n            .map(([key, value]) => ` ${key}=\"${value}\"`)\n            .join('');\n        if (!content) {\n            return `<${tag}${htmlAttrs}>`;\n        }\n        return `<${tag}${htmlAttrs}>${content}</${tag}>`;\n    }\n    /**\n     * Writes text in the buffer to the summary buffer file and empties buffer. Will append by default.\n     *\n     * @param {SummaryWriteOptions} [options] (optional) options for write operation\n     *\n     * @returns {Promise<Summary>} summary instance\n     */\n    write(options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const overwrite = !!(options === null || options === void 0 ? void 0 : options.overwrite);\n            const filePath = yield this.filePath();\n            const writeFunc = overwrite ? writeFile : appendFile;\n            yield writeFunc(filePath, this._buffer, { encoding: 'utf8' });\n            return this.emptyBuffer();\n        });\n    }\n    /**\n     * Clears the summary buffer and wipes the summary file\n     *\n     * @returns {Summary} summary instance\n     */\n    clear() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.emptyBuffer().write({ overwrite: true });\n        });\n    }\n    /**\n     * Returns the current summary buffer as a string\n     *\n     * @returns {string} string of summary buffer\n     */\n    stringify() {\n        return this._buffer;\n    }\n    /**\n     * If the summary buffer is empty\n     *\n     * @returns {boolen} true if the buffer is empty\n     */\n    isEmptyBuffer() {\n        return this._buffer.length === 0;\n    }\n    /**\n     * Resets the summary buffer without writing to summary file\n     *\n     * @returns {Summary} summary instance\n     */\n    emptyBuffer() {\n        this._buffer = '';\n        return this;\n    }\n    /**\n     * Adds raw text to the summary buffer\n     *\n     * @param {string} text content to add\n     * @param {boolean} [addEOL=false] (optional) append an EOL to the raw text (default: false)\n     *\n     * @returns {Summary} summary instance\n     */\n    addRaw(text, addEOL = false) {\n        this._buffer += text;\n        return addEOL ? this.addEOL() : this;\n    }\n    /**\n     * Adds the operating system-specific end-of-line marker to the buffer\n     *\n     * @returns {Summary} summary instance\n     */\n    addEOL() {\n        return this.addRaw(os_1.EOL);\n    }\n    /**\n     * Adds an HTML codeblock to the summary buffer\n     *\n     * @param {string} code content to render within fenced code block\n     * @param {string} lang (optional) language to syntax highlight code\n     *\n     * @returns {Summary} summary instance\n     */\n    addCodeBlock(code, lang) {\n        const attrs = Object.assign({}, (lang && { lang }));\n        const element = this.wrap('pre', this.wrap('code', code), attrs);\n        return this.addRaw(element).addEOL();\n    }\n    /**\n     * Adds an HTML list to the summary buffer\n     *\n     * @param {string[]} items list of items to render\n     * @param {boolean} [ordered=false] (optional) if the rendered list should be ordered or not (default: false)\n     *\n     * @returns {Summary} summary instance\n     */\n    addList(items, ordered = false) {\n        const tag = ordered ? 'ol' : 'ul';\n        const listItems = items.map(item => this.wrap('li', item)).join('');\n        const element = this.wrap(tag, listItems);\n        return this.addRaw(element).addEOL();\n    }\n    /**\n     * Adds an HTML table to the summary buffer\n     *\n     * @param {SummaryTableCell[]} rows table rows\n     *\n     * @returns {Summary} summary instance\n     */\n    addTable(rows) {\n        const tableBody = rows\n            .map(row => {\n            const cells = row\n                .map(cell => {\n                if (typeof cell === 'string') {\n                    return this.wrap('td', cell);\n                }\n                const { header, data, colspan, rowspan } = cell;\n                const tag = header ? 'th' : 'td';\n                const attrs = Object.assign(Object.assign({}, (colspan && { colspan })), (rowspan && { rowspan }));\n                return this.wrap(tag, data, attrs);\n            })\n                .join('');\n            return this.wrap('tr', cells);\n        })\n            .join('');\n        const element = this.wrap('table', tableBody);\n        return this.addRaw(element).addEOL();\n    }\n    /**\n     * Adds a collapsable HTML details element to the summary buffer\n     *\n     * @param {string} label text for the closed state\n     * @param {string} content collapsable content\n     *\n     * @returns {Summary} summary instance\n     */\n    addDetails(label, content) {\n        const element = this.wrap('details', this.wrap('summary', label) + content);\n        return this.addRaw(element).addEOL();\n    }\n    /**\n     * Adds an HTML image tag to the summary buffer\n     *\n     * @param {string} src path to the image you to embed\n     * @param {string} alt text description of the image\n     * @param {SummaryImageOptions} options (optional) addition image attributes\n     *\n     * @returns {Summary} summary instance\n     */\n    addImage(src, alt, options) {\n        const { width, height } = options || {};\n        const attrs = Object.assign(Object.assign({}, (width && { width })), (height && { height }));\n        const element = this.wrap('img', null, Object.assign({ src, alt }, attrs));\n        return this.addRaw(element).addEOL();\n    }\n    /**\n     * Adds an HTML section heading element\n     *\n     * @param {string} text heading text\n     * @param {number | string} [level=1] (optional) the heading level, default: 1\n     *\n     * @returns {Summary} summary instance\n     */\n    addHeading(text, level) {\n        const tag = `h${level}`;\n        const allowedTag = ['h1', 'h2', 'h3', 'h4', 'h5', 'h6'].includes(tag)\n            ? tag\n            : 'h1';\n        const element = this.wrap(allowedTag, text);\n        return this.addRaw(element).addEOL();\n    }\n    /**\n     * Adds an HTML thematic break (<hr>) to the summary buffer\n     *\n     * @returns {Summary} summary instance\n     */\n    addSeparator() {\n        const element = this.wrap('hr', null);\n        return this.addRaw(element).addEOL();\n    }\n    /**\n     * Adds an HTML line break (<br>) to the summary buffer\n     *\n     * @returns {Summary} summary instance\n     */\n    addBreak() {\n        const element = this.wrap('br', null);\n        return this.addRaw(element).addEOL();\n    }\n    /**\n     * Adds an HTML blockquote to the summary buffer\n     *\n     * @param {string} text quote text\n     * @param {string} cite (optional) citation url\n     *\n     * @returns {Summary} summary instance\n     */\n    addQuote(text, cite) {\n        const attrs = Object.assign({}, (cite && { cite }));\n        const element = this.wrap('blockquote', text, attrs);\n        return this.addRaw(element).addEOL();\n    }\n    /**\n     * Adds an HTML anchor tag to the summary buffer\n     *\n     * @param {string} text link text/content\n     * @param {string} href hyperlink\n     *\n     * @returns {Summary} summary instance\n     */\n    addLink(text, href) {\n        const element = this.wrap('a', text, { href });\n        return this.addRaw(element).addEOL();\n    }\n}\nconst _summary = new Summary();\n/**\n * @deprecated use `core.summary`\n */\nexports.markdownSummary = _summary;\nexports.summary = _summary;\n//# sourceMappingURL=summary.js.map","\"use strict\";\n// We use any as a valid input type\n/* eslint-disable @typescript-eslint/no-explicit-any */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.toCommandProperties = exports.toCommandValue = void 0;\n/**\n * Sanitizes an input into a string so it can be passed into issueCommand safely\n * @param input input to sanitize into a string\n */\nfunction toCommandValue(input) {\n    if (input === null || input === undefined) {\n        return '';\n    }\n    else if (typeof input === 'string' || input instanceof String) {\n        return input;\n    }\n    return JSON.stringify(input);\n}\nexports.toCommandValue = toCommandValue;\n/**\n *\n * @param annotationProperties\n * @returns The command properties to send with the actual annotation command\n * See IssueCommandProperties: https://github.com/actions/runner/blob/main/src/Runner.Worker/ActionCommandManager.cs#L646\n */\nfunction toCommandProperties(annotationProperties) {\n    if (!Object.keys(annotationProperties).length) {\n        return {};\n    }\n    return {\n        title: annotationProperties.title,\n        file: annotationProperties.file,\n        line: annotationProperties.startLine,\n        endLine: annotationProperties.endLine,\n        col: annotationProperties.startColumn,\n        endColumn: annotationProperties.endColumn\n    };\n}\nexports.toCommandProperties = toCommandProperties;\n//# sourceMappingURL=utils.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PersonalAccessTokenCredentialHandler = exports.BearerCredentialHandler = exports.BasicCredentialHandler = void 0;\nclass BasicCredentialHandler {\n    constructor(username, password) {\n        this.username = username;\n        this.password = password;\n    }\n    prepareRequest(options) {\n        if (!options.headers) {\n            throw Error('The request has no headers');\n        }\n        options.headers['Authorization'] = `Basic ${Buffer.from(`${this.username}:${this.password}`).toString('base64')}`;\n    }\n    // This handler cannot handle 401\n    canHandleAuthentication() {\n        return false;\n    }\n    handleAuthentication() {\n        return __awaiter(this, void 0, void 0, function* () {\n            throw new Error('not implemented');\n        });\n    }\n}\nexports.BasicCredentialHandler = BasicCredentialHandler;\nclass BearerCredentialHandler {\n    constructor(token) {\n        this.token = token;\n    }\n    // currently implements pre-authorization\n    // TODO: support preAuth = false where it hooks on 401\n    prepareRequest(options) {\n        if (!options.headers) {\n            throw Error('The request has no headers');\n        }\n        options.headers['Authorization'] = `Bearer ${this.token}`;\n    }\n    // This handler cannot handle 401\n    canHandleAuthentication() {\n        return false;\n    }\n    handleAuthentication() {\n        return __awaiter(this, void 0, void 0, function* () {\n            throw new Error('not implemented');\n        });\n    }\n}\nexports.BearerCredentialHandler = BearerCredentialHandler;\nclass PersonalAccessTokenCredentialHandler {\n    constructor(token) {\n        this.token = token;\n    }\n    // currently implements pre-authorization\n    // TODO: support preAuth = false where it hooks on 401\n    prepareRequest(options) {\n        if (!options.headers) {\n            throw Error('The request has no headers');\n        }\n        options.headers['Authorization'] = `Basic ${Buffer.from(`PAT:${this.token}`).toString('base64')}`;\n    }\n    // This handler cannot handle 401\n    canHandleAuthentication() {\n        return false;\n    }\n    handleAuthentication() {\n        return __awaiter(this, void 0, void 0, function* () {\n            throw new Error('not implemented');\n        });\n    }\n}\nexports.PersonalAccessTokenCredentialHandler = PersonalAccessTokenCredentialHandler;\n//# sourceMappingURL=auth.js.map","\"use strict\";\n/* eslint-disable @typescript-eslint/no-explicit-any */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.HttpClient = exports.isHttps = exports.HttpClientResponse = exports.HttpClientError = exports.getProxyUrl = exports.MediaTypes = exports.Headers = exports.HttpCodes = void 0;\nconst http = __importStar(require(\"http\"));\nconst https = __importStar(require(\"https\"));\nconst pm = __importStar(require(\"./proxy\"));\nconst tunnel = __importStar(require(\"tunnel\"));\nvar HttpCodes;\n(function (HttpCodes) {\n    HttpCodes[HttpCodes[\"OK\"] = 200] = \"OK\";\n    HttpCodes[HttpCodes[\"MultipleChoices\"] = 300] = \"MultipleChoices\";\n    HttpCodes[HttpCodes[\"MovedPermanently\"] = 301] = \"MovedPermanently\";\n    HttpCodes[HttpCodes[\"ResourceMoved\"] = 302] = \"ResourceMoved\";\n    HttpCodes[HttpCodes[\"SeeOther\"] = 303] = \"SeeOther\";\n    HttpCodes[HttpCodes[\"NotModified\"] = 304] = \"NotModified\";\n    HttpCodes[HttpCodes[\"UseProxy\"] = 305] = \"UseProxy\";\n    HttpCodes[HttpCodes[\"SwitchProxy\"] = 306] = \"SwitchProxy\";\n    HttpCodes[HttpCodes[\"TemporaryRedirect\"] = 307] = \"TemporaryRedirect\";\n    HttpCodes[HttpCodes[\"PermanentRedirect\"] = 308] = \"PermanentRedirect\";\n    HttpCodes[HttpCodes[\"BadRequest\"] = 400] = \"BadRequest\";\n    HttpCodes[HttpCodes[\"Unauthorized\"] = 401] = \"Unauthorized\";\n    HttpCodes[HttpCodes[\"PaymentRequired\"] = 402] = \"PaymentRequired\";\n    HttpCodes[HttpCodes[\"Forbidden\"] = 403] = \"Forbidden\";\n    HttpCodes[HttpCodes[\"NotFound\"] = 404] = \"NotFound\";\n    HttpCodes[HttpCodes[\"MethodNotAllowed\"] = 405] = \"MethodNotAllowed\";\n    HttpCodes[HttpCodes[\"NotAcceptable\"] = 406] = \"NotAcceptable\";\n    HttpCodes[HttpCodes[\"ProxyAuthenticationRequired\"] = 407] = \"ProxyAuthenticationRequired\";\n    HttpCodes[HttpCodes[\"RequestTimeout\"] = 408] = \"RequestTimeout\";\n    HttpCodes[HttpCodes[\"Conflict\"] = 409] = \"Conflict\";\n    HttpCodes[HttpCodes[\"Gone\"] = 410] = \"Gone\";\n    HttpCodes[HttpCodes[\"TooManyRequests\"] = 429] = \"TooManyRequests\";\n    HttpCodes[HttpCodes[\"InternalServerError\"] = 500] = \"InternalServerError\";\n    HttpCodes[HttpCodes[\"NotImplemented\"] = 501] = \"NotImplemented\";\n    HttpCodes[HttpCodes[\"BadGateway\"] = 502] = \"BadGateway\";\n    HttpCodes[HttpCodes[\"ServiceUnavailable\"] = 503] = \"ServiceUnavailable\";\n    HttpCodes[HttpCodes[\"GatewayTimeout\"] = 504] = \"GatewayTimeout\";\n})(HttpCodes = exports.HttpCodes || (exports.HttpCodes = {}));\nvar Headers;\n(function (Headers) {\n    Headers[\"Accept\"] = \"accept\";\n    Headers[\"ContentType\"] = \"content-type\";\n})(Headers = exports.Headers || (exports.Headers = {}));\nvar MediaTypes;\n(function (MediaTypes) {\n    MediaTypes[\"ApplicationJson\"] = \"application/json\";\n})(MediaTypes = exports.MediaTypes || (exports.MediaTypes = {}));\n/**\n * Returns the proxy URL, depending upon the supplied url and proxy environment variables.\n * @param serverUrl  The server URL where the request will be sent. For example, https://api.github.com\n */\nfunction getProxyUrl(serverUrl) {\n    const proxyUrl = pm.getProxyUrl(new URL(serverUrl));\n    return proxyUrl ? proxyUrl.href : '';\n}\nexports.getProxyUrl = getProxyUrl;\nconst HttpRedirectCodes = [\n    HttpCodes.MovedPermanently,\n    HttpCodes.ResourceMoved,\n    HttpCodes.SeeOther,\n    HttpCodes.TemporaryRedirect,\n    HttpCodes.PermanentRedirect\n];\nconst HttpResponseRetryCodes = [\n    HttpCodes.BadGateway,\n    HttpCodes.ServiceUnavailable,\n    HttpCodes.GatewayTimeout\n];\nconst RetryableHttpVerbs = ['OPTIONS', 'GET', 'DELETE', 'HEAD'];\nconst ExponentialBackoffCeiling = 10;\nconst ExponentialBackoffTimeSlice = 5;\nclass HttpClientError extends Error {\n    constructor(message, statusCode) {\n        super(message);\n        this.name = 'HttpClientError';\n        this.statusCode = statusCode;\n        Object.setPrototypeOf(this, HttpClientError.prototype);\n    }\n}\nexports.HttpClientError = HttpClientError;\nclass HttpClientResponse {\n    constructor(message) {\n        this.message = message;\n    }\n    readBody() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve) => __awaiter(this, void 0, void 0, function* () {\n                let output = Buffer.alloc(0);\n                this.message.on('data', (chunk) => {\n                    output = Buffer.concat([output, chunk]);\n                });\n                this.message.on('end', () => {\n                    resolve(output.toString());\n                });\n            }));\n        });\n    }\n}\nexports.HttpClientResponse = HttpClientResponse;\nfunction isHttps(requestUrl) {\n    const parsedUrl = new URL(requestUrl);\n    return parsedUrl.protocol === 'https:';\n}\nexports.isHttps = isHttps;\nclass HttpClient {\n    constructor(userAgent, handlers, requestOptions) {\n        this._ignoreSslError = false;\n        this._allowRedirects = true;\n        this._allowRedirectDowngrade = false;\n        this._maxRedirects = 50;\n        this._allowRetries = false;\n        this._maxRetries = 1;\n        this._keepAlive = false;\n        this._disposed = false;\n        this.userAgent = userAgent;\n        this.handlers = handlers || [];\n        this.requestOptions = requestOptions;\n        if (requestOptions) {\n            if (requestOptions.ignoreSslError != null) {\n                this._ignoreSslError = requestOptions.ignoreSslError;\n            }\n            this._socketTimeout = requestOptions.socketTimeout;\n            if (requestOptions.allowRedirects != null) {\n                this._allowRedirects = requestOptions.allowRedirects;\n            }\n            if (requestOptions.allowRedirectDowngrade != null) {\n                this._allowRedirectDowngrade = requestOptions.allowRedirectDowngrade;\n            }\n            if (requestOptions.maxRedirects != null) {\n                this._maxRedirects = Math.max(requestOptions.maxRedirects, 0);\n            }\n            if (requestOptions.keepAlive != null) {\n                this._keepAlive = requestOptions.keepAlive;\n            }\n            if (requestOptions.allowRetries != null) {\n                this._allowRetries = requestOptions.allowRetries;\n            }\n            if (requestOptions.maxRetries != null) {\n                this._maxRetries = requestOptions.maxRetries;\n            }\n        }\n    }\n    options(requestUrl, additionalHeaders) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.request('OPTIONS', requestUrl, null, additionalHeaders || {});\n        });\n    }\n    get(requestUrl, additionalHeaders) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.request('GET', requestUrl, null, additionalHeaders || {});\n        });\n    }\n    del(requestUrl, additionalHeaders) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.request('DELETE', requestUrl, null, additionalHeaders || {});\n        });\n    }\n    post(requestUrl, data, additionalHeaders) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.request('POST', requestUrl, data, additionalHeaders || {});\n        });\n    }\n    patch(requestUrl, data, additionalHeaders) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.request('PATCH', requestUrl, data, additionalHeaders || {});\n        });\n    }\n    put(requestUrl, data, additionalHeaders) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.request('PUT', requestUrl, data, additionalHeaders || {});\n        });\n    }\n    head(requestUrl, additionalHeaders) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.request('HEAD', requestUrl, null, additionalHeaders || {});\n        });\n    }\n    sendStream(verb, requestUrl, stream, additionalHeaders) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.request(verb, requestUrl, stream, additionalHeaders);\n        });\n    }\n    /**\n     * Gets a typed object from an endpoint\n     * Be aware that not found returns a null.  Other errors (4xx, 5xx) reject the promise\n     */\n    getJson(requestUrl, additionalHeaders = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            additionalHeaders[Headers.Accept] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.Accept, MediaTypes.ApplicationJson);\n            const res = yield this.get(requestUrl, additionalHeaders);\n            return this._processResponse(res, this.requestOptions);\n        });\n    }\n    postJson(requestUrl, obj, additionalHeaders = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const data = JSON.stringify(obj, null, 2);\n            additionalHeaders[Headers.Accept] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.Accept, MediaTypes.ApplicationJson);\n            additionalHeaders[Headers.ContentType] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.ContentType, MediaTypes.ApplicationJson);\n            const res = yield this.post(requestUrl, data, additionalHeaders);\n            return this._processResponse(res, this.requestOptions);\n        });\n    }\n    putJson(requestUrl, obj, additionalHeaders = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const data = JSON.stringify(obj, null, 2);\n            additionalHeaders[Headers.Accept] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.Accept, MediaTypes.ApplicationJson);\n            additionalHeaders[Headers.ContentType] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.ContentType, MediaTypes.ApplicationJson);\n            const res = yield this.put(requestUrl, data, additionalHeaders);\n            return this._processResponse(res, this.requestOptions);\n        });\n    }\n    patchJson(requestUrl, obj, additionalHeaders = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const data = JSON.stringify(obj, null, 2);\n            additionalHeaders[Headers.Accept] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.Accept, MediaTypes.ApplicationJson);\n            additionalHeaders[Headers.ContentType] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.ContentType, MediaTypes.ApplicationJson);\n            const res = yield this.patch(requestUrl, data, additionalHeaders);\n            return this._processResponse(res, this.requestOptions);\n        });\n    }\n    /**\n     * Makes a raw http request.\n     * All other methods such as get, post, patch, and request ultimately call this.\n     * Prefer get, del, post and patch\n     */\n    request(verb, requestUrl, data, headers) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this._disposed) {\n                throw new Error('Client has already been disposed.');\n            }\n            const parsedUrl = new URL(requestUrl);\n            let info = this._prepareRequest(verb, parsedUrl, headers);\n            // Only perform retries on reads since writes may not be idempotent.\n            const maxTries = this._allowRetries && RetryableHttpVerbs.includes(verb)\n                ? this._maxRetries + 1\n                : 1;\n            let numTries = 0;\n            let response;\n            do {\n                response = yield this.requestRaw(info, data);\n                // Check if it's an authentication challenge\n                if (response &&\n                    response.message &&\n                    response.message.statusCode === HttpCodes.Unauthorized) {\n                    let authenticationHandler;\n                    for (const handler of this.handlers) {\n                        if (handler.canHandleAuthentication(response)) {\n                            authenticationHandler = handler;\n                            break;\n                        }\n                    }\n                    if (authenticationHandler) {\n                        return authenticationHandler.handleAuthentication(this, info, data);\n                    }\n                    else {\n                        // We have received an unauthorized response but have no handlers to handle it.\n                        // Let the response return to the caller.\n                        return response;\n                    }\n                }\n                let redirectsRemaining = this._maxRedirects;\n                while (response.message.statusCode &&\n                    HttpRedirectCodes.includes(response.message.statusCode) &&\n                    this._allowRedirects &&\n                    redirectsRemaining > 0) {\n                    const redirectUrl = response.message.headers['location'];\n                    if (!redirectUrl) {\n                        // if there's no location to redirect to, we won't\n                        break;\n                    }\n                    const parsedRedirectUrl = new URL(redirectUrl);\n                    if (parsedUrl.protocol === 'https:' &&\n                        parsedUrl.protocol !== parsedRedirectUrl.protocol &&\n                        !this._allowRedirectDowngrade) {\n                        throw new Error('Redirect from HTTPS to HTTP protocol. This downgrade is not allowed for security reasons. If you want to allow this behavior, set the allowRedirectDowngrade option to true.');\n                    }\n                    // we need to finish reading the response before reassigning response\n                    // which will leak the open socket.\n                    yield response.readBody();\n                    // strip authorization header if redirected to a different hostname\n                    if (parsedRedirectUrl.hostname !== parsedUrl.hostname) {\n                        for (const header in headers) {\n                            // header names are case insensitive\n                            if (header.toLowerCase() === 'authorization') {\n                                delete headers[header];\n                            }\n                        }\n                    }\n                    // let's make the request with the new redirectUrl\n                    info = this._prepareRequest(verb, parsedRedirectUrl, headers);\n                    response = yield this.requestRaw(info, data);\n                    redirectsRemaining--;\n                }\n                if (!response.message.statusCode ||\n                    !HttpResponseRetryCodes.includes(response.message.statusCode)) {\n                    // If not a retry code, return immediately instead of retrying\n                    return response;\n                }\n                numTries += 1;\n                if (numTries < maxTries) {\n                    yield response.readBody();\n                    yield this._performExponentialBackoff(numTries);\n                }\n            } while (numTries < maxTries);\n            return response;\n        });\n    }\n    /**\n     * Needs to be called if keepAlive is set to true in request options.\n     */\n    dispose() {\n        if (this._agent) {\n            this._agent.destroy();\n        }\n        this._disposed = true;\n    }\n    /**\n     * Raw request.\n     * @param info\n     * @param data\n     */\n    requestRaw(info, data) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                function callbackForResult(err, res) {\n                    if (err) {\n                        reject(err);\n                    }\n                    else if (!res) {\n                        // If `err` is not passed, then `res` must be passed.\n                        reject(new Error('Unknown error'));\n                    }\n                    else {\n                        resolve(res);\n                    }\n                }\n                this.requestRawWithCallback(info, data, callbackForResult);\n            });\n        });\n    }\n    /**\n     * Raw request with callback.\n     * @param info\n     * @param data\n     * @param onResult\n     */\n    requestRawWithCallback(info, data, onResult) {\n        if (typeof data === 'string') {\n            if (!info.options.headers) {\n                info.options.headers = {};\n            }\n            info.options.headers['Content-Length'] = Buffer.byteLength(data, 'utf8');\n        }\n        let callbackCalled = false;\n        function handleResult(err, res) {\n            if (!callbackCalled) {\n                callbackCalled = true;\n                onResult(err, res);\n            }\n        }\n        const req = info.httpModule.request(info.options, (msg) => {\n            const res = new HttpClientResponse(msg);\n            handleResult(undefined, res);\n        });\n        let socket;\n        req.on('socket', sock => {\n            socket = sock;\n        });\n        // If we ever get disconnected, we want the socket to timeout eventually\n        req.setTimeout(this._socketTimeout || 3 * 60000, () => {\n            if (socket) {\n                socket.end();\n            }\n            handleResult(new Error(`Request timeout: ${info.options.path}`));\n        });\n        req.on('error', function (err) {\n            // err has statusCode property\n            // res should have headers\n            handleResult(err);\n        });\n        if (data && typeof data === 'string') {\n            req.write(data, 'utf8');\n        }\n        if (data && typeof data !== 'string') {\n            data.on('close', function () {\n                req.end();\n            });\n            data.pipe(req);\n        }\n        else {\n            req.end();\n        }\n    }\n    /**\n     * Gets an http agent. This function is useful when you need an http agent that handles\n     * routing through a proxy server - depending upon the url and proxy environment variables.\n     * @param serverUrl  The server URL where the request will be sent. For example, https://api.github.com\n     */\n    getAgent(serverUrl) {\n        const parsedUrl = new URL(serverUrl);\n        return this._getAgent(parsedUrl);\n    }\n    _prepareRequest(method, requestUrl, headers) {\n        const info = {};\n        info.parsedUrl = requestUrl;\n        const usingSsl = info.parsedUrl.protocol === 'https:';\n        info.httpModule = usingSsl ? https : http;\n        const defaultPort = usingSsl ? 443 : 80;\n        info.options = {};\n        info.options.host = info.parsedUrl.hostname;\n        info.options.port = info.parsedUrl.port\n            ? parseInt(info.parsedUrl.port)\n            : defaultPort;\n        info.options.path =\n            (info.parsedUrl.pathname || '') + (info.parsedUrl.search || '');\n        info.options.method = method;\n        info.options.headers = this._mergeHeaders(headers);\n        if (this.userAgent != null) {\n            info.options.headers['user-agent'] = this.userAgent;\n        }\n        info.options.agent = this._getAgent(info.parsedUrl);\n        // gives handlers an opportunity to participate\n        if (this.handlers) {\n            for (const handler of this.handlers) {\n                handler.prepareRequest(info.options);\n            }\n        }\n        return info;\n    }\n    _mergeHeaders(headers) {\n        if (this.requestOptions && this.requestOptions.headers) {\n            return Object.assign({}, lowercaseKeys(this.requestOptions.headers), lowercaseKeys(headers || {}));\n        }\n        return lowercaseKeys(headers || {});\n    }\n    _getExistingOrDefaultHeader(additionalHeaders, header, _default) {\n        let clientHeader;\n        if (this.requestOptions && this.requestOptions.headers) {\n            clientHeader = lowercaseKeys(this.requestOptions.headers)[header];\n        }\n        return additionalHeaders[header] || clientHeader || _default;\n    }\n    _getAgent(parsedUrl) {\n        let agent;\n        const proxyUrl = pm.getProxyUrl(parsedUrl);\n        const useProxy = proxyUrl && proxyUrl.hostname;\n        if (this._keepAlive && useProxy) {\n            agent = this._proxyAgent;\n        }\n        if (this._keepAlive && !useProxy) {\n            agent = this._agent;\n        }\n        // if agent is already assigned use that agent.\n        if (agent) {\n            return agent;\n        }\n        const usingSsl = parsedUrl.protocol === 'https:';\n        let maxSockets = 100;\n        if (this.requestOptions) {\n            maxSockets = this.requestOptions.maxSockets || http.globalAgent.maxSockets;\n        }\n        // This is `useProxy` again, but we need to check `proxyURl` directly for TypeScripts's flow analysis.\n        if (proxyUrl && proxyUrl.hostname) {\n            const agentOptions = {\n                maxSockets,\n                keepAlive: this._keepAlive,\n                proxy: Object.assign(Object.assign({}, ((proxyUrl.username || proxyUrl.password) && {\n                    proxyAuth: `${proxyUrl.username}:${proxyUrl.password}`\n                })), { host: proxyUrl.hostname, port: proxyUrl.port })\n            };\n            let tunnelAgent;\n            const overHttps = proxyUrl.protocol === 'https:';\n            if (usingSsl) {\n                tunnelAgent = overHttps ? tunnel.httpsOverHttps : tunnel.httpsOverHttp;\n            }\n            else {\n                tunnelAgent = overHttps ? tunnel.httpOverHttps : tunnel.httpOverHttp;\n            }\n            agent = tunnelAgent(agentOptions);\n            this._proxyAgent = agent;\n        }\n        // if reusing agent across request and tunneling agent isn't assigned create a new agent\n        if (this._keepAlive && !agent) {\n            const options = { keepAlive: this._keepAlive, maxSockets };\n            agent = usingSsl ? new https.Agent(options) : new http.Agent(options);\n            this._agent = agent;\n        }\n        // if not using private agent and tunnel agent isn't setup then use global agent\n        if (!agent) {\n            agent = usingSsl ? https.globalAgent : http.globalAgent;\n        }\n        if (usingSsl && this._ignoreSslError) {\n            // we don't want to set NODE_TLS_REJECT_UNAUTHORIZED=0 since that will affect request for entire process\n            // http.RequestOptions doesn't expose a way to modify RequestOptions.agent.options\n            // we have to cast it to any and change it directly\n            agent.options = Object.assign(agent.options || {}, {\n                rejectUnauthorized: false\n            });\n        }\n        return agent;\n    }\n    _performExponentialBackoff(retryNumber) {\n        return __awaiter(this, void 0, void 0, function* () {\n            retryNumber = Math.min(ExponentialBackoffCeiling, retryNumber);\n            const ms = ExponentialBackoffTimeSlice * Math.pow(2, retryNumber);\n            return new Promise(resolve => setTimeout(() => resolve(), ms));\n        });\n    }\n    _processResponse(res, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                const statusCode = res.message.statusCode || 0;\n                const response = {\n                    statusCode,\n                    result: null,\n                    headers: {}\n                };\n                // not found leads to null obj returned\n                if (statusCode === HttpCodes.NotFound) {\n                    resolve(response);\n                }\n                // get the result from the body\n                function dateTimeDeserializer(key, value) {\n                    if (typeof value === 'string') {\n                        const a = new Date(value);\n                        if (!isNaN(a.valueOf())) {\n                            return a;\n                        }\n                    }\n                    return value;\n                }\n                let obj;\n                let contents;\n                try {\n                    contents = yield res.readBody();\n                    if (contents && contents.length > 0) {\n                        if (options && options.deserializeDates) {\n                            obj = JSON.parse(contents, dateTimeDeserializer);\n                        }\n                        else {\n                            obj = JSON.parse(contents);\n                        }\n                        response.result = obj;\n                    }\n                    response.headers = res.message.headers;\n                }\n                catch (err) {\n                    // Invalid resource (contents not json);  leaving result obj null\n                }\n                // note that 3xx redirects are handled by the http layer.\n                if (statusCode > 299) {\n                    let msg;\n                    // if exception/error in body, attempt to get better error\n                    if (obj && obj.message) {\n                        msg = obj.message;\n                    }\n                    else if (contents && contents.length > 0) {\n                        // it may be the case that the exception is in the body message as string\n                        msg = contents;\n                    }\n                    else {\n                        msg = `Failed request: (${statusCode})`;\n                    }\n                    const err = new HttpClientError(msg, statusCode);\n                    err.result = response.result;\n                    reject(err);\n                }\n                else {\n                    resolve(response);\n                }\n            }));\n        });\n    }\n}\nexports.HttpClient = HttpClient;\nconst lowercaseKeys = (obj) => Object.keys(obj).reduce((c, k) => ((c[k.toLowerCase()] = obj[k]), c), {});\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.checkBypass = exports.getProxyUrl = void 0;\nfunction getProxyUrl(reqUrl) {\n    const usingSsl = reqUrl.protocol === 'https:';\n    if (checkBypass(reqUrl)) {\n        return undefined;\n    }\n    const proxyVar = (() => {\n        if (usingSsl) {\n            return process.env['https_proxy'] || process.env['HTTPS_PROXY'];\n        }\n        else {\n            return process.env['http_proxy'] || process.env['HTTP_PROXY'];\n        }\n    })();\n    if (proxyVar) {\n        return new URL(proxyVar);\n    }\n    else {\n        return undefined;\n    }\n}\nexports.getProxyUrl = getProxyUrl;\nfunction checkBypass(reqUrl) {\n    if (!reqUrl.hostname) {\n        return false;\n    }\n    const noProxy = process.env['no_proxy'] || process.env['NO_PROXY'] || '';\n    if (!noProxy) {\n        return false;\n    }\n    // Determine the request port\n    let reqPort;\n    if (reqUrl.port) {\n        reqPort = Number(reqUrl.port);\n    }\n    else if (reqUrl.protocol === 'http:') {\n        reqPort = 80;\n    }\n    else if (reqUrl.protocol === 'https:') {\n        reqPort = 443;\n    }\n    // Format the request hostname and hostname with port\n    const upperReqHosts = [reqUrl.hostname.toUpperCase()];\n    if (typeof reqPort === 'number') {\n        upperReqHosts.push(`${upperReqHosts[0]}:${reqPort}`);\n    }\n    // Compare request host against noproxy\n    for (const upperNoProxyItem of noProxy\n        .split(',')\n        .map(x => x.trim().toUpperCase())\n        .filter(x => x)) {\n        if (upperReqHosts.some(x => x === upperNoProxyItem)) {\n            return true;\n        }\n    }\n    return false;\n}\nexports.checkBypass = checkBypass;\n//# sourceMappingURL=proxy.js.map","export const isCrtAvailable = () => {\n    try {\n        if (typeof require === \"function\" && typeof module !== \"undefined\" && module.require && require(\"aws-crt\")) {\n            return [\"md/crt-avail\"];\n        }\n        return null;\n    }\n    catch (e) {\n        return null;\n    }\n};\n","'use strict';\n\nconst validator = require('./validator');\nconst XMLParser = require('./xmlparser/XMLParser');\nconst XMLBuilder = require('./xmlbuilder/json2xml');\n\nmodule.exports = {\n  XMLParser: XMLParser,\n  XMLValidator: validator,\n  XMLBuilder: XMLBuilder\n}","'use strict';\n\nconst nameStartChar = ':A-Za-z_\\\\u00C0-\\\\u00D6\\\\u00D8-\\\\u00F6\\\\u00F8-\\\\u02FF\\\\u0370-\\\\u037D\\\\u037F-\\\\u1FFF\\\\u200C-\\\\u200D\\\\u2070-\\\\u218F\\\\u2C00-\\\\u2FEF\\\\u3001-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFFD';\nconst nameChar = nameStartChar + '\\\\-.\\\\d\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040';\nconst nameRegexp = '[' + nameStartChar + '][' + nameChar + ']*'\nconst regexName = new RegExp('^' + nameRegexp + '$');\n\nconst getAllMatches = function(string, regex) {\n  const matches = [];\n  let match = regex.exec(string);\n  while (match) {\n    const allmatches = [];\n    allmatches.startIndex = regex.lastIndex - match[0].length;\n    const len = match.length;\n    for (let index = 0; index < len; index++) {\n      allmatches.push(match[index]);\n    }\n    matches.push(allmatches);\n    match = regex.exec(string);\n  }\n  return matches;\n};\n\nconst isName = function(string) {\n  const match = regexName.exec(string);\n  return !(match === null || typeof match === 'undefined');\n};\n\nexports.isExist = function(v) {\n  return typeof v !== 'undefined';\n};\n\nexports.isEmptyObject = function(obj) {\n  return Object.keys(obj).length === 0;\n};\n\n/**\n * Copy all the properties of a into b.\n * @param {*} target\n * @param {*} a\n */\nexports.merge = function(target, a, arrayMode) {\n  if (a) {\n    const keys = Object.keys(a); // will return an array of own properties\n    const len = keys.length; //don't make it inline\n    for (let i = 0; i < len; i++) {\n      if (arrayMode === 'strict') {\n        target[keys[i]] = [ a[keys[i]] ];\n      } else {\n        target[keys[i]] = a[keys[i]];\n      }\n    }\n  }\n};\n/* exports.merge =function (b,a){\n  return Object.assign(b,a);\n} */\n\nexports.getValue = function(v) {\n  if (exports.isExist(v)) {\n    return v;\n  } else {\n    return '';\n  }\n};\n\n// const fakeCall = function(a) {return a;};\n// const fakeCallNoReturn = function() {};\n\nexports.isName = isName;\nexports.getAllMatches = getAllMatches;\nexports.nameRegexp = nameRegexp;\n","'use strict';\n\nconst util = require('./util');\n\nconst defaultOptions = {\n  allowBooleanAttributes: false, //A tag can have attributes without any value\n  unpairedTags: []\n};\n\n//const tagsPattern = new RegExp(\"<\\\\/?([\\\\w:\\\\-_\\.]+)\\\\s*\\/?>\",\"g\");\nexports.validate = function (xmlData, options) {\n  options = Object.assign({}, defaultOptions, options);\n\n  //xmlData = xmlData.replace(/(\\r\\n|\\n|\\r)/gm,\"\");//make it single line\n  //xmlData = xmlData.replace(/(^\\s*<\\?xml.*?\\?>)/g,\"\");//Remove XML starting tag\n  //xmlData = xmlData.replace(/(<!DOCTYPE[\\s\\w\\\"\\.\\/\\-\\:]+(\\[.*\\])*\\s*>)/g,\"\");//Remove DOCTYPE\n  const tags = [];\n  let tagFound = false;\n\n  //indicates that the root tag has been closed (aka. depth 0 has been reached)\n  let reachedRoot = false;\n\n  if (xmlData[0] === '\\ufeff') {\n    // check for byte order mark (BOM)\n    xmlData = xmlData.substr(1);\n  }\n  \n  for (let i = 0; i < xmlData.length; i++) {\n\n    if (xmlData[i] === '<' && xmlData[i+1] === '?') {\n      i+=2;\n      i = readPI(xmlData,i);\n      if (i.err) return i;\n    }else if (xmlData[i] === '<') {\n      //starting of tag\n      //read until you reach to '>' avoiding any '>' in attribute value\n      let tagStartPos = i;\n      i++;\n      \n      if (xmlData[i] === '!') {\n        i = readCommentAndCDATA(xmlData, i);\n        continue;\n      } else {\n        let closingTag = false;\n        if (xmlData[i] === '/') {\n          //closing tag\n          closingTag = true;\n          i++;\n        }\n        //read tagname\n        let tagName = '';\n        for (; i < xmlData.length &&\n          xmlData[i] !== '>' &&\n          xmlData[i] !== ' ' &&\n          xmlData[i] !== '\\t' &&\n          xmlData[i] !== '\\n' &&\n          xmlData[i] !== '\\r'; i++\n        ) {\n          tagName += xmlData[i];\n        }\n        tagName = tagName.trim();\n        //console.log(tagName);\n\n        if (tagName[tagName.length - 1] === '/') {\n          //self closing tag without attributes\n          tagName = tagName.substring(0, tagName.length - 1);\n          //continue;\n          i--;\n        }\n        if (!validateTagName(tagName)) {\n          let msg;\n          if (tagName.trim().length === 0) {\n            msg = \"Invalid space after '<'.\";\n          } else {\n            msg = \"Tag '\"+tagName+\"' is an invalid name.\";\n          }\n          return getErrorObject('InvalidTag', msg, getLineNumberForPosition(xmlData, i));\n        }\n\n        const result = readAttributeStr(xmlData, i);\n        if (result === false) {\n          return getErrorObject('InvalidAttr', \"Attributes for '\"+tagName+\"' have open quote.\", getLineNumberForPosition(xmlData, i));\n        }\n        let attrStr = result.value;\n        i = result.index;\n\n        if (attrStr[attrStr.length - 1] === '/') {\n          //self closing tag\n          const attrStrStart = i - attrStr.length;\n          attrStr = attrStr.substring(0, attrStr.length - 1);\n          const isValid = validateAttributeString(attrStr, options);\n          if (isValid === true) {\n            tagFound = true;\n            //continue; //text may presents after self closing tag\n          } else {\n            //the result from the nested function returns the position of the error within the attribute\n            //in order to get the 'true' error line, we need to calculate the position where the attribute begins (i - attrStr.length) and then add the position within the attribute\n            //this gives us the absolute index in the entire xml, which we can use to find the line at last\n            return getErrorObject(isValid.err.code, isValid.err.msg, getLineNumberForPosition(xmlData, attrStrStart + isValid.err.line));\n          }\n        } else if (closingTag) {\n          if (!result.tagClosed) {\n            return getErrorObject('InvalidTag', \"Closing tag '\"+tagName+\"' doesn't have proper closing.\", getLineNumberForPosition(xmlData, i));\n          } else if (attrStr.trim().length > 0) {\n            return getErrorObject('InvalidTag', \"Closing tag '\"+tagName+\"' can't have attributes or invalid starting.\", getLineNumberForPosition(xmlData, tagStartPos));\n          } else {\n            const otg = tags.pop();\n            if (tagName !== otg.tagName) {\n              let openPos = getLineNumberForPosition(xmlData, otg.tagStartPos);\n              return getErrorObject('InvalidTag',\n                \"Expected closing tag '\"+otg.tagName+\"' (opened in line \"+openPos.line+\", col \"+openPos.col+\") instead of closing tag '\"+tagName+\"'.\",\n                getLineNumberForPosition(xmlData, tagStartPos));\n            }\n\n            //when there are no more tags, we reached the root level.\n            if (tags.length == 0) {\n              reachedRoot = true;\n            }\n          }\n        } else {\n          const isValid = validateAttributeString(attrStr, options);\n          if (isValid !== true) {\n            //the result from the nested function returns the position of the error within the attribute\n            //in order to get the 'true' error line, we need to calculate the position where the attribute begins (i - attrStr.length) and then add the position within the attribute\n            //this gives us the absolute index in the entire xml, which we can use to find the line at last\n            return getErrorObject(isValid.err.code, isValid.err.msg, getLineNumberForPosition(xmlData, i - attrStr.length + isValid.err.line));\n          }\n\n          //if the root level has been reached before ...\n          if (reachedRoot === true) {\n            return getErrorObject('InvalidXml', 'Multiple possible root nodes found.', getLineNumberForPosition(xmlData, i));\n          } else if(options.unpairedTags.indexOf(tagName) !== -1){\n            //don't push into stack\n          } else {\n            tags.push({tagName, tagStartPos});\n          }\n          tagFound = true;\n        }\n\n        //skip tag text value\n        //It may include comments and CDATA value\n        for (i++; i < xmlData.length; i++) {\n          if (xmlData[i] === '<') {\n            if (xmlData[i + 1] === '!') {\n              //comment or CADATA\n              i++;\n              i = readCommentAndCDATA(xmlData, i);\n              continue;\n            } else if (xmlData[i+1] === '?') {\n              i = readPI(xmlData, ++i);\n              if (i.err) return i;\n            } else{\n              break;\n            }\n          } else if (xmlData[i] === '&') {\n            const afterAmp = validateAmpersand(xmlData, i);\n            if (afterAmp == -1)\n              return getErrorObject('InvalidChar', \"char '&' is not expected.\", getLineNumberForPosition(xmlData, i));\n            i = afterAmp;\n          }else{\n            if (reachedRoot === true && !isWhiteSpace(xmlData[i])) {\n              return getErrorObject('InvalidXml', \"Extra text at the end\", getLineNumberForPosition(xmlData, i));\n            }\n          }\n        } //end of reading tag text value\n        if (xmlData[i] === '<') {\n          i--;\n        }\n      }\n    } else {\n      if ( isWhiteSpace(xmlData[i])) {\n        continue;\n      }\n      return getErrorObject('InvalidChar', \"char '\"+xmlData[i]+\"' is not expected.\", getLineNumberForPosition(xmlData, i));\n    }\n  }\n\n  if (!tagFound) {\n    return getErrorObject('InvalidXml', 'Start tag expected.', 1);\n  }else if (tags.length == 1) {\n      return getErrorObject('InvalidTag', \"Unclosed tag '\"+tags[0].tagName+\"'.\", getLineNumberForPosition(xmlData, tags[0].tagStartPos));\n  }else if (tags.length > 0) {\n      return getErrorObject('InvalidXml', \"Invalid '\"+\n          JSON.stringify(tags.map(t => t.tagName), null, 4).replace(/\\r?\\n/g, '')+\n          \"' found.\", {line: 1, col: 1});\n  }\n\n  return true;\n};\n\nfunction isWhiteSpace(char){\n  return char === ' ' || char === '\\t' || char === '\\n'  || char === '\\r';\n}\n/**\n * Read Processing insstructions and skip\n * @param {*} xmlData\n * @param {*} i\n */\nfunction readPI(xmlData, i) {\n  const start = i;\n  for (; i < xmlData.length; i++) {\n    if (xmlData[i] == '?' || xmlData[i] == ' ') {\n      //tagname\n      const tagname = xmlData.substr(start, i - start);\n      if (i > 5 && tagname === 'xml') {\n        return getErrorObject('InvalidXml', 'XML declaration allowed only at the start of the document.', getLineNumberForPosition(xmlData, i));\n      } else if (xmlData[i] == '?' && xmlData[i + 1] == '>') {\n        //check if valid attribut string\n        i++;\n        break;\n      } else {\n        continue;\n      }\n    }\n  }\n  return i;\n}\n\nfunction readCommentAndCDATA(xmlData, i) {\n  if (xmlData.length > i + 5 && xmlData[i + 1] === '-' && xmlData[i + 2] === '-') {\n    //comment\n    for (i += 3; i < xmlData.length; i++) {\n      if (xmlData[i] === '-' && xmlData[i + 1] === '-' && xmlData[i + 2] === '>') {\n        i += 2;\n        break;\n      }\n    }\n  } else if (\n    xmlData.length > i + 8 &&\n    xmlData[i + 1] === 'D' &&\n    xmlData[i + 2] === 'O' &&\n    xmlData[i + 3] === 'C' &&\n    xmlData[i + 4] === 'T' &&\n    xmlData[i + 5] === 'Y' &&\n    xmlData[i + 6] === 'P' &&\n    xmlData[i + 7] === 'E'\n  ) {\n    let angleBracketsCount = 1;\n    for (i += 8; i < xmlData.length; i++) {\n      if (xmlData[i] === '<') {\n        angleBracketsCount++;\n      } else if (xmlData[i] === '>') {\n        angleBracketsCount--;\n        if (angleBracketsCount === 0) {\n          break;\n        }\n      }\n    }\n  } else if (\n    xmlData.length > i + 9 &&\n    xmlData[i + 1] === '[' &&\n    xmlData[i + 2] === 'C' &&\n    xmlData[i + 3] === 'D' &&\n    xmlData[i + 4] === 'A' &&\n    xmlData[i + 5] === 'T' &&\n    xmlData[i + 6] === 'A' &&\n    xmlData[i + 7] === '['\n  ) {\n    for (i += 8; i < xmlData.length; i++) {\n      if (xmlData[i] === ']' && xmlData[i + 1] === ']' && xmlData[i + 2] === '>') {\n        i += 2;\n        break;\n      }\n    }\n  }\n\n  return i;\n}\n\nconst doubleQuote = '\"';\nconst singleQuote = \"'\";\n\n/**\n * Keep reading xmlData until '<' is found outside the attribute value.\n * @param {string} xmlData\n * @param {number} i\n */\nfunction readAttributeStr(xmlData, i) {\n  let attrStr = '';\n  let startChar = '';\n  let tagClosed = false;\n  for (; i < xmlData.length; i++) {\n    if (xmlData[i] === doubleQuote || xmlData[i] === singleQuote) {\n      if (startChar === '') {\n        startChar = xmlData[i];\n      } else if (startChar !== xmlData[i]) {\n        //if vaue is enclosed with double quote then single quotes are allowed inside the value and vice versa\n      } else {\n        startChar = '';\n      }\n    } else if (xmlData[i] === '>') {\n      if (startChar === '') {\n        tagClosed = true;\n        break;\n      }\n    }\n    attrStr += xmlData[i];\n  }\n  if (startChar !== '') {\n    return false;\n  }\n\n  return {\n    value: attrStr,\n    index: i,\n    tagClosed: tagClosed\n  };\n}\n\n/**\n * Select all the attributes whether valid or invalid.\n */\nconst validAttrStrRegxp = new RegExp('(\\\\s*)([^\\\\s=]+)(\\\\s*=)?(\\\\s*([\\'\"])(([\\\\s\\\\S])*?)\\\\5)?', 'g');\n\n//attr, =\"sd\", a=\"amit's\", a=\"sd\"b=\"saf\", ab  cd=\"\"\n\nfunction validateAttributeString(attrStr, options) {\n  //console.log(\"start:\"+attrStr+\":end\");\n\n  //if(attrStr.trim().length === 0) return true; //empty string\n\n  const matches = util.getAllMatches(attrStr, validAttrStrRegxp);\n  const attrNames = {};\n\n  for (let i = 0; i < matches.length; i++) {\n    if (matches[i][1].length === 0) {\n      //nospace before attribute name: a=\"sd\"b=\"saf\"\n      return getErrorObject('InvalidAttr', \"Attribute '\"+matches[i][2]+\"' has no space in starting.\", getPositionFromMatch(matches[i]))\n    } else if (matches[i][3] !== undefined && matches[i][4] === undefined) {\n      return getErrorObject('InvalidAttr', \"Attribute '\"+matches[i][2]+\"' is without value.\", getPositionFromMatch(matches[i]));\n    } else if (matches[i][3] === undefined && !options.allowBooleanAttributes) {\n      //independent attribute: ab\n      return getErrorObject('InvalidAttr', \"boolean attribute '\"+matches[i][2]+\"' is not allowed.\", getPositionFromMatch(matches[i]));\n    }\n    /* else if(matches[i][6] === undefined){//attribute without value: ab=\n                    return { err: { code:\"InvalidAttr\",msg:\"attribute \" + matches[i][2] + \" has no value assigned.\"}};\n                } */\n    const attrName = matches[i][2];\n    if (!validateAttrName(attrName)) {\n      return getErrorObject('InvalidAttr', \"Attribute '\"+attrName+\"' is an invalid name.\", getPositionFromMatch(matches[i]));\n    }\n    if (!attrNames.hasOwnProperty(attrName)) {\n      //check for duplicate attribute.\n      attrNames[attrName] = 1;\n    } else {\n      return getErrorObject('InvalidAttr', \"Attribute '\"+attrName+\"' is repeated.\", getPositionFromMatch(matches[i]));\n    }\n  }\n\n  return true;\n}\n\nfunction validateNumberAmpersand(xmlData, i) {\n  let re = /\\d/;\n  if (xmlData[i] === 'x') {\n    i++;\n    re = /[\\da-fA-F]/;\n  }\n  for (; i < xmlData.length; i++) {\n    if (xmlData[i] === ';')\n      return i;\n    if (!xmlData[i].match(re))\n      break;\n  }\n  return -1;\n}\n\nfunction validateAmpersand(xmlData, i) {\n  // https://www.w3.org/TR/xml/#dt-charref\n  i++;\n  if (xmlData[i] === ';')\n    return -1;\n  if (xmlData[i] === '#') {\n    i++;\n    return validateNumberAmpersand(xmlData, i);\n  }\n  let count = 0;\n  for (; i < xmlData.length; i++, count++) {\n    if (xmlData[i].match(/\\w/) && count < 20)\n      continue;\n    if (xmlData[i] === ';')\n      break;\n    return -1;\n  }\n  return i;\n}\n\nfunction getErrorObject(code, message, lineNumber) {\n  return {\n    err: {\n      code: code,\n      msg: message,\n      line: lineNumber.line || lineNumber,\n      col: lineNumber.col,\n    },\n  };\n}\n\nfunction validateAttrName(attrName) {\n  return util.isName(attrName);\n}\n\n// const startsWithXML = /^xml/i;\n\nfunction validateTagName(tagname) {\n  return util.isName(tagname) /* && !tagname.match(startsWithXML) */;\n}\n\n//this function returns the line number for the character at the given index\nfunction getLineNumberForPosition(xmlData, index) {\n  const lines = xmlData.substring(0, index).split(/\\r?\\n/);\n  return {\n    line: lines.length,\n\n    // column number is last line's length + 1, because column numbering starts at 1:\n    col: lines[lines.length - 1].length + 1\n  };\n}\n\n//this function returns the position of the first character of match within attrStr\nfunction getPositionFromMatch(match) {\n  return match.startIndex + match[1].length;\n}\n","'use strict';\n//parse Empty Node as self closing node\nconst buildFromOrderedJs = require('./orderedJs2Xml');\n\nconst defaultOptions = {\n  attributeNamePrefix: '@_',\n  attributesGroupName: false,\n  textNodeName: '#text',\n  ignoreAttributes: true,\n  cdataPropName: false,\n  format: false,\n  indentBy: '  ',\n  suppressEmptyNode: false,\n  suppressUnpairedNode: true,\n  suppressBooleanAttributes: true,\n  tagValueProcessor: function(key, a) {\n    return a;\n  },\n  attributeValueProcessor: function(attrName, a) {\n    return a;\n  },\n  preserveOrder: false,\n  commentPropName: false,\n  unpairedTags: [],\n  entities: [\n    { regex: new RegExp(\"&\", \"g\"), val: \"&amp;\" },//it must be on top\n    { regex: new RegExp(\">\", \"g\"), val: \"&gt;\" },\n    { regex: new RegExp(\"<\", \"g\"), val: \"&lt;\" },\n    { regex: new RegExp(\"\\'\", \"g\"), val: \"&apos;\" },\n    { regex: new RegExp(\"\\\"\", \"g\"), val: \"&quot;\" }\n  ],\n  processEntities: true,\n  stopNodes: [],\n  transformTagName: false,\n};\n\nfunction Builder(options) {\n  this.options = Object.assign({}, defaultOptions, options);\n  if (this.options.ignoreAttributes || this.options.attributesGroupName) {\n    this.isAttribute = function(/*a*/) {\n      return false;\n    };\n  } else {\n    this.attrPrefixLen = this.options.attributeNamePrefix.length;\n    this.isAttribute = isAttribute;\n  }\n\n  this.processTextOrObjNode = processTextOrObjNode\n\n  if (this.options.format) {\n    this.indentate = indentate;\n    this.tagEndChar = '>\\n';\n    this.newLine = '\\n';\n  } else {\n    this.indentate = function() {\n      return '';\n    };\n    this.tagEndChar = '>';\n    this.newLine = '';\n  }\n\n  if (this.options.suppressEmptyNode) {\n    this.buildTextNode = buildEmptyTextNode;\n    this.buildObjNode = buildEmptyObjNode;\n  } else {\n    this.buildTextNode = buildTextValNode;\n    this.buildObjNode = buildObjectNode;\n  }\n\n  this.buildTextValNode = buildTextValNode;\n  this.buildObjectNode = buildObjectNode;\n\n  this.replaceEntitiesValue = replaceEntitiesValue;\n  this.buildAttrPairStr = buildAttrPairStr;\n}\n\nBuilder.prototype.build = function(jObj) {\n  if(this.options.preserveOrder){\n    return buildFromOrderedJs(jObj, this.options);\n  }else {\n    if(Array.isArray(jObj) && this.options.arrayNodeName && this.options.arrayNodeName.length > 1){\n      jObj = {\n        [this.options.arrayNodeName] : jObj\n      }\n    }\n    return this.j2x(jObj, 0).val;\n  }\n};\n\nBuilder.prototype.j2x = function(jObj, level) {\n  let attrStr = '';\n  let val = '';\n  for (let key in jObj) {\n    if (typeof jObj[key] === 'undefined') {\n      // supress undefined node\n    } else if (jObj[key] === null) {\n      if(key[0] === \"?\") val += this.indentate(level) + '<' + key + '?' + this.tagEndChar;\n      else val += this.indentate(level) + '<' + key + '/' + this.tagEndChar;\n      // val += this.indentate(level) + '<' + key + '/' + this.tagEndChar;\n    } else if (jObj[key] instanceof Date) {\n      val += this.buildTextNode(jObj[key], key, '', level);\n    } else if (typeof jObj[key] !== 'object') {\n      //premitive type\n      const attr = this.isAttribute(key);\n      if (attr) {\n        attrStr += this.buildAttrPairStr(attr, '' + jObj[key]);\n      }else {\n        //tag value\n        if (key === this.options.textNodeName) {\n          let newval = this.options.tagValueProcessor(key, '' + jObj[key]);\n          val += this.replaceEntitiesValue(newval);\n        } else {\n          val += this.buildTextNode(jObj[key], key, '', level);\n        }\n      }\n    } else if (Array.isArray(jObj[key])) {\n      //repeated nodes\n      const arrLen = jObj[key].length;\n      for (let j = 0; j < arrLen; j++) {\n        const item = jObj[key][j];\n        if (typeof item === 'undefined') {\n          // supress undefined node\n        } else if (item === null) {\n          if(key[0] === \"?\") val += this.indentate(level) + '<' + key + '?' + this.tagEndChar;\n          else val += this.indentate(level) + '<' + key + '/' + this.tagEndChar;\n          // val += this.indentate(level) + '<' + key + '/' + this.tagEndChar;\n        } else if (typeof item === 'object') {\n          val += this.processTextOrObjNode(item, key, level)\n        } else {\n          val += this.buildTextNode(item, key, '', level);\n        }\n      }\n    } else {\n      //nested node\n      if (this.options.attributesGroupName && key === this.options.attributesGroupName) {\n        const Ks = Object.keys(jObj[key]);\n        const L = Ks.length;\n        for (let j = 0; j < L; j++) {\n          attrStr += this.buildAttrPairStr(Ks[j], '' + jObj[key][Ks[j]]);\n        }\n      } else {\n        val += this.processTextOrObjNode(jObj[key], key, level)\n      }\n    }\n  }\n  return {attrStr: attrStr, val: val};\n};\n\nfunction buildAttrPairStr(attrName, val){\n  val = this.options.attributeValueProcessor(attrName, '' + val);\n  val = this.replaceEntitiesValue(val);\n  if (this.options.suppressBooleanAttributes && val === \"true\") {\n    return ' ' + attrName;\n  } else return ' ' + attrName + '=\"' + val + '\"';\n}\n\nfunction processTextOrObjNode (object, key, level) {\n  const result = this.j2x(object, level + 1);\n  if (object[this.options.textNodeName] !== undefined && Object.keys(object).length === 1) {\n    return this.buildTextNode(object[this.options.textNodeName], key, result.attrStr, level);\n  } else {\n    return this.buildObjNode(result.val, key, result.attrStr, level);\n  }\n}\n\nfunction buildObjectNode(val, key, attrStr, level) {\n  let tagEndExp = '</' + key + this.tagEndChar;\n  let piClosingChar = \"\";\n  \n  if(key[0] === \"?\") {\n    piClosingChar = \"?\";\n    tagEndExp = \"\";\n  }\n\n  if (attrStr && val.indexOf('<') === -1) {\n    return ( this.indentate(level) + '<' +  key + attrStr + piClosingChar + '>' + val + tagEndExp );\n  } else if (this.options.commentPropName !== false && key === this.options.commentPropName && piClosingChar.length === 0) {\n    return this.indentate(level) + `<!--${val}-->` + this.newLine;\n  }else {\n    return (\n      this.indentate(level) + '<' + key + attrStr + piClosingChar + this.tagEndChar +\n      val +\n      this.indentate(level) + tagEndExp    );\n  }\n}\n\nfunction buildEmptyObjNode(val, key, attrStr, level) {\n  if (val !== '') {\n    return this.buildObjectNode(val, key, attrStr, level);\n  } else {\n    if(key[0] === \"?\") return  this.indentate(level) + '<' + key + attrStr+ '?' + this.tagEndChar;\n    else return  this.indentate(level) + '<' + key + attrStr + '/' + this.tagEndChar;\n  }\n}\n\nfunction buildTextValNode(val, key, attrStr, level) {\n  if (this.options.cdataPropName !== false && key === this.options.cdataPropName) {\n    return this.indentate(level) + `<![CDATA[${val}]]>` +  this.newLine;\n  }else if (this.options.commentPropName !== false && key === this.options.commentPropName) {\n    return this.indentate(level) + `<!--${val}-->` +  this.newLine;\n  }else{\n    let textValue = this.options.tagValueProcessor(key, val);\n    textValue = this.replaceEntitiesValue(textValue);\n  \n    if( textValue === '' && this.options.unpairedTags.indexOf(key) !== -1){ //unpaired\n      if(this.options.suppressUnpairedNode){\n        return this.indentate(level) + '<' + key + this.tagEndChar;\n      }else{\n        return this.indentate(level) + '<' + key + \"/\" + this.tagEndChar;\n      }\n    } else{\n      return (\n        this.indentate(level) + '<' + key + attrStr + '>' +\n         textValue +\n        '</' + key + this.tagEndChar  );\n    }\n\n  }\n}\n\nfunction replaceEntitiesValue(textValue){\n  if(textValue && textValue.length > 0 && this.options.processEntities){\n    for (let i=0; i<this.options.entities.length; i++) {\n      const entity = this.options.entities[i];\n      textValue = textValue.replace(entity.regex, entity.val);\n    }\n  }\n  return textValue;\n}\n\nfunction buildEmptyTextNode(val, key, attrStr, level) {\n  if( val === '' && this.options.unpairedTags.indexOf(key) !== -1){ //unpaired\n    if(this.options.suppressUnpairedNode){\n      return this.indentate(level) + '<' + key + this.tagEndChar;\n    }else{\n      return this.indentate(level) + '<' + key + \"/\" + this.tagEndChar;\n    }\n  }else if (val !== '') { //empty\n    return this.buildTextValNode(val, key, attrStr, level);\n  } else {\n    if(key[0] === \"?\") return  this.indentate(level) + '<' + key + attrStr+ '?' + this.tagEndChar; //PI tag\n    else return  this.indentate(level) + '<' + key + attrStr + '/' + this.tagEndChar; //normal\n  }\n}\n\nfunction indentate(level) {\n  return this.options.indentBy.repeat(level);\n}\n\nfunction isAttribute(name /*, options*/) {\n  if (name.startsWith(this.options.attributeNamePrefix)) {\n    return name.substr(this.attrPrefixLen);\n  } else {\n    return false;\n  }\n}\n\nmodule.exports = Builder;\n","const EOL = \"\\n\";\n\n/**\n * \n * @param {array} jArray \n * @param {any} options \n * @returns \n */\nfunction toXml(jArray, options){\n    return arrToStr( jArray, options, \"\", 0);\n}\n\nfunction arrToStr(arr, options, jPath, level){\n    let xmlStr = \"\";\n\n    let indentation = \"\";\n    if(options.format && options.indentBy.length > 0){//TODO: this logic can be avoided for each call\n        indentation = EOL + \"\" + options.indentBy.repeat(level);\n    }\n\n    for (let i = 0; i < arr.length; i++) {\n        const tagObj = arr[i];\n        const tagName = propName(tagObj);\n        let newJPath = \"\";\n        if(jPath.length === 0) newJPath = tagName\n        else newJPath = `${jPath}.${tagName}`;\n\n        if(tagName === options.textNodeName){\n            let tagText = tagObj[tagName];\n            if(!isStopNode(newJPath, options)){\n                tagText = options.tagValueProcessor( tagName, tagText);\n                tagText = replaceEntitiesValue(tagText, options);\n            }\n            xmlStr += indentation + tagText;\n            continue;\n        }else if( tagName === options.cdataPropName){\n            xmlStr += indentation + `<![CDATA[${tagObj[tagName][0][options.textNodeName]}]]>`;\n            continue;\n        }else if( tagName === options.commentPropName){\n            xmlStr += indentation + `<!--${tagObj[tagName][0][options.textNodeName]}-->`;\n            continue;\n        }else if( tagName[0] === \"?\"){\n            const attStr = attr_to_str(tagObj[\":@\"], options);\n            const tempInd = tagName === \"?xml\" ? \"\" : indentation;\n            let piTextNodeName = tagObj[tagName][0][options.textNodeName];\n            piTextNodeName = piTextNodeName.length !== 0 ? \" \" + piTextNodeName : \"\"; //remove extra spacing\n            xmlStr += tempInd + `<${tagName}${piTextNodeName}${attStr}?>`;\n            continue;\n        }\n        const attStr = attr_to_str(tagObj[\":@\"], options);\n        let tagStart =  indentation + `<${tagName}${attStr}`;\n        let tagValue = arrToStr(tagObj[tagName], options, newJPath, level + 1);\n        if(options.unpairedTags.indexOf(tagName) !== -1){\n            if(options.suppressUnpairedNode)  xmlStr += tagStart + \">\"; \n            else xmlStr += tagStart + \"/>\"; \n        }else if( (!tagValue || tagValue.length === 0) && options.suppressEmptyNode){ \n            xmlStr += tagStart + \"/>\"; \n        }else{ \n            //TODO: node with only text value should not parse the text value in next line\n            xmlStr += tagStart + `>${tagValue}${indentation}</${tagName}>` ;\n        }\n    }\n    \n    return xmlStr;\n}\n\nfunction propName(obj){\n    const keys = Object.keys(obj);\n    for (let i = 0; i < keys.length; i++) {\n      const key = keys[i];\n      if(key !== \":@\") return key;\n    }\n  }\n\nfunction attr_to_str(attrMap, options){\n    let attrStr = \"\";\n    if(attrMap && !options.ignoreAttributes){\n        for (let attr in attrMap){\n            let attrVal = options.attributeValueProcessor(attr, attrMap[attr]);\n            attrVal = replaceEntitiesValue(attrVal, options);\n            if(attrVal === true && options.suppressBooleanAttributes){\n                attrStr+= ` ${attr.substr(options.attributeNamePrefix.length)}`;\n            }else{\n                attrStr+= ` ${attr.substr(options.attributeNamePrefix.length)}=\"${attrVal}\"`;\n            }\n        }\n    }\n    return attrStr;\n}\n\nfunction isStopNode(jPath, options){\n    jPath = jPath.substr(0,jPath.length - options.textNodeName.length - 1);\n    let tagName = jPath.substr(jPath.lastIndexOf(\".\") + 1);\n    for(let index in options.stopNodes){\n        if(options.stopNodes[index] === jPath || options.stopNodes[index] === \"*.\"+tagName) return true;\n    }\n    return false;\n}\n\nfunction replaceEntitiesValue(textValue, options){\n    if(textValue && textValue.length > 0 && options.processEntities){\n      for (let i=0; i< options.entities.length; i++) {\n        const entity = options.entities[i];\n        textValue = textValue.replace(entity.regex, entity.val);\n      }\n    }\n    return textValue;\n  }\nmodule.exports = toXml;","//TODO: handle comments\nfunction readDocType(xmlData, i){\n    \n    const entities = {};\n    if( xmlData[i + 3] === 'O' &&\n         xmlData[i + 4] === 'C' &&\n         xmlData[i + 5] === 'T' &&\n         xmlData[i + 6] === 'Y' &&\n         xmlData[i + 7] === 'P' &&\n         xmlData[i + 8] === 'E')\n    {    \n        i = i+9;\n        let angleBracketsCount = 1;\n        let hasBody = false, entity = false, comment = false;\n        let exp = \"\";\n        for(;i<xmlData.length;i++){\n            if (xmlData[i] === '<') {\n                if( hasBody && \n                     xmlData[i+1] === '!' &&\n                     xmlData[i+2] === 'E' &&\n                     xmlData[i+3] === 'N' &&\n                     xmlData[i+4] === 'T' &&\n                     xmlData[i+5] === 'I' &&\n                     xmlData[i+6] === 'T' &&\n                     xmlData[i+7] === 'Y'\n                ){\n                    i += 7;\n                    entity = true;\n                }else if( hasBody && \n                    xmlData[i+1] === '!' &&\n                     xmlData[i+2] === 'E' &&\n                     xmlData[i+3] === 'L' &&\n                     xmlData[i+4] === 'E' &&\n                     xmlData[i+5] === 'M' &&\n                     xmlData[i+6] === 'E' &&\n                     xmlData[i+7] === 'N' &&\n                     xmlData[i+8] === 'T'\n                ){\n                    //Not supported\n                    i += 8;\n                }else if( hasBody && \n                    xmlData[i+1] === '!' &&\n                    xmlData[i+2] === 'A' &&\n                    xmlData[i+3] === 'T' &&\n                    xmlData[i+4] === 'T' &&\n                    xmlData[i+5] === 'L' &&\n                    xmlData[i+6] === 'I' &&\n                    xmlData[i+7] === 'S' &&\n                    xmlData[i+8] === 'T'\n                ){\n                    //Not supported\n                    i += 8;\n                }else if( hasBody && \n                    xmlData[i+1] === '!' &&\n                    xmlData[i+2] === 'N' &&\n                    xmlData[i+3] === 'O' &&\n                    xmlData[i+4] === 'T' &&\n                    xmlData[i+5] === 'A' &&\n                    xmlData[i+6] === 'T' &&\n                    xmlData[i+7] === 'I' &&\n                    xmlData[i+8] === 'O' &&\n                    xmlData[i+9] === 'N'\n                ){\n                    //Not supported\n                    i += 9;\n                }else if( //comment\n                    xmlData[i+1] === '!' &&\n                    xmlData[i+2] === '-' &&\n                    xmlData[i+3] === '-'\n                ){\n                    comment = true;\n                }else{\n                    throw new Error(\"Invalid DOCTYPE\");\n                }\n                angleBracketsCount++;\n                exp = \"\";\n            } else if (xmlData[i] === '>') {\n                if(comment){\n                    if( xmlData[i - 1] === \"-\" && xmlData[i - 2] === \"-\"){\n                        comment = false;\n                    }else{\n                        throw new Error(`Invalid XML comment in DOCTYPE`);\n                    }\n                }else if(entity){\n                    parseEntityExp(exp, entities);\n                    entity = false;\n                }\n                angleBracketsCount--;\n                if (angleBracketsCount === 0) {\n                  break;\n                }\n            }else if( xmlData[i] === '['){\n                hasBody = true;\n            }else{\n                exp += xmlData[i];\n            }\n        }\n        if(angleBracketsCount !== 0){\n            throw new Error(`Unclosed DOCTYPE`);\n        }\n    }else{\n        throw new Error(`Invalid Tag instead of DOCTYPE`);\n    }\n    return {entities, i};\n}\n\nconst entityRegex = RegExp(\"^\\\\s([a-zA-z0-0]+)[ \\t](['\\\"])([^&]+)\\\\2\");\nfunction parseEntityExp(exp, entities){\n    const match = entityRegex.exec(exp);\n    if(match){\n        entities[ match[1] ] = {\n            regx : RegExp( `&${match[1]};`,\"g\"),\n            val: match[3]\n        };\n    }\n}\nmodule.exports = readDocType;","\nconst defaultOptions = {\n    preserveOrder: false,\n    attributeNamePrefix: '@_',\n    attributesGroupName: false,\n    textNodeName: '#text',\n    ignoreAttributes: true,\n    removeNSPrefix: false, // remove NS from tag name or attribute name if true\n    allowBooleanAttributes: false, //a tag can have attributes without any value\n    //ignoreRootElement : false,\n    parseTagValue: true,\n    parseAttributeValue: false,\n    trimValues: true, //Trim string values of tag and attributes\n    cdataPropName: false,\n    numberParseOptions: {\n      hex: true,\n      leadingZeros: true\n    },\n    tagValueProcessor: function(tagName, val) {\n      return val;\n    },\n    attributeValueProcessor: function(attrName, val) {\n      return val;\n    },\n    stopNodes: [], //nested tags will not be parsed even for errors\n    alwaysCreateTextNode: false,\n    isArray: () => false,\n    commentPropName: false,\n    unpairedTags: [],\n    processEntities: true,\n    htmlEntities: false,\n    ignoreDeclaration: false,\n    ignorePiTags: false,\n    transformTagName: false,\n};\n   \nconst buildOptions = function(options) {\n    return Object.assign({}, defaultOptions, options);\n};\n\nexports.buildOptions = buildOptions;\nexports.defaultOptions = defaultOptions;","'use strict';\n///@ts-check\n\nconst util = require('../util');\nconst xmlNode = require('./xmlNode');\nconst readDocType = require(\"./DocTypeReader\");\nconst toNumber = require(\"strnum\");\n\nconst regx =\n  '<((!\\\\[CDATA\\\\[([\\\\s\\\\S]*?)(]]>))|((NAME:)?(NAME))([^>]*)>|((\\\\/)(NAME)\\\\s*>))([^<]*)'\n  .replace(/NAME/g, util.nameRegexp);\n\n//const tagsRegx = new RegExp(\"<(\\\\/?[\\\\w:\\\\-\\._]+)([^>]*)>(\\\\s*\"+cdataRegx+\")*([^<]+)?\",\"g\");\n//const tagsRegx = new RegExp(\"<(\\\\/?)((\\\\w*:)?([\\\\w:\\\\-\\._]+))([^>]*)>([^<]*)(\"+cdataRegx+\"([^<]*))*([^<]+)?\",\"g\");\n\nclass OrderedObjParser{\n  constructor(options){\n    this.options = options;\n    this.currentNode = null;\n    this.tagsNodeStack = [];\n    this.docTypeEntities = {};\n    this.lastEntities = {\n      \"apos\" : { regex: /&(apos|#39|#x27);/g, val : \"'\"},\n      \"gt\" : { regex: /&(gt|#62|#x3E);/g, val : \">\"},\n      \"lt\" : { regex: /&(lt|#60|#x3C);/g, val : \"<\"},\n      \"quot\" : { regex: /&(quot|#34|#x22);/g, val : \"\\\"\"},\n    };\n    this.ampEntity = { regex: /&(amp|#38|#x26);/g, val : \"&\"};\n    this.htmlEntities = {\n      \"space\": { regex: /&(nbsp|#160);/g, val: \" \" },\n      // \"lt\" : { regex: /&(lt|#60);/g, val: \"<\" },\n      // \"gt\" : { regex: /&(gt|#62);/g, val: \">\" },\n      // \"amp\" : { regex: /&(amp|#38);/g, val: \"&\" },\n      // \"quot\" : { regex: /&(quot|#34);/g, val: \"\\\"\" },\n      // \"apos\" : { regex: /&(apos|#39);/g, val: \"'\" },\n      \"cent\" : { regex: /&(cent|#162);/g, val: \"¢\" },\n      \"pound\" : { regex: /&(pound|#163);/g, val: \"£\" },\n      \"yen\" : { regex: /&(yen|#165);/g, val: \"¥\" },\n      \"euro\" : { regex: /&(euro|#8364);/g, val: \"€\" },\n      \"copyright\" : { regex: /&(copy|#169);/g, val: \"©\" },\n      \"reg\" : { regex: /&(reg|#174);/g, val: \"®\" },\n      \"inr\" : { regex: /&(inr|#8377);/g, val: \"₹\" },\n    };\n    this.addExternalEntities = addExternalEntities;\n    this.parseXml = parseXml;\n    this.parseTextData = parseTextData;\n    this.resolveNameSpace = resolveNameSpace;\n    this.buildAttributesMap = buildAttributesMap;\n    this.isItStopNode = isItStopNode;\n    this.replaceEntitiesValue = replaceEntitiesValue;\n    this.readStopNodeData = readStopNodeData;\n    this.saveTextToParentTag = saveTextToParentTag;\n  }\n\n}\n\nfunction addExternalEntities(externalEntities){\n  const entKeys = Object.keys(externalEntities);\n  for (let i = 0; i < entKeys.length; i++) {\n    const ent = entKeys[i];\n    this.lastEntities[ent] = {\n       regex: new RegExp(\"&\"+ent+\";\",\"g\"),\n       val : externalEntities[ent]\n    }\n  }\n}\n\n/**\n * @param {string} val\n * @param {string} tagName\n * @param {string} jPath\n * @param {boolean} dontTrim\n * @param {boolean} hasAttributes\n * @param {boolean} isLeafNode\n * @param {boolean} escapeEntities\n */\nfunction parseTextData(val, tagName, jPath, dontTrim, hasAttributes, isLeafNode, escapeEntities) {\n  if (val !== undefined) {\n    if (this.options.trimValues && !dontTrim) {\n      val = val.trim();\n    }\n    if(val.length > 0){\n      if(!escapeEntities) val = this.replaceEntitiesValue(val);\n      \n      const newval = this.options.tagValueProcessor(tagName, val, jPath, hasAttributes, isLeafNode);\n      if(newval === null || newval === undefined){\n        //don't parse\n        return val;\n      }else if(typeof newval !== typeof val || newval !== val){\n        //overwrite\n        return newval;\n      }else if(this.options.trimValues){\n        return parseValue(val, this.options.parseTagValue, this.options.numberParseOptions);\n      }else{\n        const trimmedVal = val.trim();\n        if(trimmedVal === val){\n          return parseValue(val, this.options.parseTagValue, this.options.numberParseOptions);\n        }else{\n          return val;\n        }\n      }\n    }\n  }\n}\n\nfunction resolveNameSpace(tagname) {\n  if (this.options.removeNSPrefix) {\n    const tags = tagname.split(':');\n    const prefix = tagname.charAt(0) === '/' ? '/' : '';\n    if (tags[0] === 'xmlns') {\n      return '';\n    }\n    if (tags.length === 2) {\n      tagname = prefix + tags[1];\n    }\n  }\n  return tagname;\n}\n\n//TODO: change regex to capture NS\n//const attrsRegx = new RegExp(\"([\\\\w\\\\-\\\\.\\\\:]+)\\\\s*=\\\\s*(['\\\"])((.|\\n)*?)\\\\2\",\"gm\");\nconst attrsRegx = new RegExp('([^\\\\s=]+)\\\\s*(=\\\\s*([\\'\"])([\\\\s\\\\S]*?)\\\\3)?', 'gm');\n\nfunction buildAttributesMap(attrStr, jPath) {\n  if (!this.options.ignoreAttributes && typeof attrStr === 'string') {\n    // attrStr = attrStr.replace(/\\r?\\n/g, ' ');\n    //attrStr = attrStr || attrStr.trim();\n\n    const matches = util.getAllMatches(attrStr, attrsRegx);\n    const len = matches.length; //don't make it inline\n    const attrs = {};\n    for (let i = 0; i < len; i++) {\n      const attrName = this.resolveNameSpace(matches[i][1]);\n      let oldVal = matches[i][4];\n      const aName = this.options.attributeNamePrefix + attrName;\n      if (attrName.length) {\n        if (oldVal !== undefined) {\n          if (this.options.trimValues) {\n            oldVal = oldVal.trim();\n          }\n          oldVal = this.replaceEntitiesValue(oldVal);\n          const newVal = this.options.attributeValueProcessor(attrName, oldVal, jPath);\n          if(newVal === null || newVal === undefined){\n            //don't parse\n            attrs[aName] = oldVal;\n          }else if(typeof newVal !== typeof oldVal || newVal !== oldVal){\n            //overwrite\n            attrs[aName] = newVal;\n          }else{\n            //parse\n            attrs[aName] = parseValue(\n              oldVal,\n              this.options.parseAttributeValue,\n              this.options.numberParseOptions\n            );\n          }\n        } else if (this.options.allowBooleanAttributes) {\n          attrs[aName] = true;\n        }\n      }\n    }\n    if (!Object.keys(attrs).length) {\n      return;\n    }\n    if (this.options.attributesGroupName) {\n      const attrCollection = {};\n      attrCollection[this.options.attributesGroupName] = attrs;\n      return attrCollection;\n    }\n    return attrs;\n  }\n}\n\nconst parseXml = function(xmlData) {\n  xmlData = xmlData.replace(/\\r\\n?/g, \"\\n\"); //TODO: remove this line\n  const xmlObj = new xmlNode('!xml');\n  let currentNode = xmlObj;\n  let textData = \"\";\n  let jPath = \"\";\n  for(let i=0; i< xmlData.length; i++){//for each char in XML data\n    const ch = xmlData[i];\n    if(ch === '<'){\n      // const nextIndex = i+1;\n      // const _2ndChar = xmlData[nextIndex];\n      if( xmlData[i+1] === '/') {//Closing Tag\n        const closeIndex = findClosingIndex(xmlData, \">\", i, \"Closing Tag is not closed.\")\n        let tagName = xmlData.substring(i+2,closeIndex).trim();\n\n        if(this.options.removeNSPrefix){\n          const colonIndex = tagName.indexOf(\":\");\n          if(colonIndex !== -1){\n            tagName = tagName.substr(colonIndex+1);\n          }\n        }\n\n        if(this.options.transformTagName) {\n          tagName = this.options.transformTagName(tagName);\n        }\n\n        if(currentNode){\n          textData = this.saveTextToParentTag(textData, currentNode, jPath);\n        }\n\n        jPath = jPath.substr(0, jPath.lastIndexOf(\".\"));\n        \n        currentNode = this.tagsNodeStack.pop();//avoid recurssion, set the parent tag scope\n        textData = \"\";\n        i = closeIndex;\n      } else if( xmlData[i+1] === '?') {\n\n        let tagData = readTagExp(xmlData,i, false, \"?>\");\n        if(!tagData) throw new Error(\"Pi Tag is not closed.\");\n\n        textData = this.saveTextToParentTag(textData, currentNode, jPath);\n        if( (this.options.ignoreDeclaration && tagData.tagName === \"?xml\") || this.options.ignorePiTags){\n\n        }else{\n  \n          const childNode = new xmlNode(tagData.tagName);\n          childNode.add(this.options.textNodeName, \"\");\n          \n          if(tagData.tagName !== tagData.tagExp && tagData.attrExpPresent){\n            childNode[\":@\"] = this.buildAttributesMap(tagData.tagExp, jPath);\n          }\n          currentNode.addChild(childNode);\n\n        }\n\n\n        i = tagData.closeIndex + 1;\n      } else if(xmlData.substr(i + 1, 3) === '!--') {\n        const endIndex = findClosingIndex(xmlData, \"-->\", i+4, \"Comment is not closed.\")\n        if(this.options.commentPropName){\n          const comment = xmlData.substring(i + 4, endIndex - 2);\n\n          textData = this.saveTextToParentTag(textData, currentNode, jPath);\n\n          currentNode.add(this.options.commentPropName, [ { [this.options.textNodeName] : comment } ]);\n        }\n        i = endIndex;\n      } else if( xmlData.substr(i + 1, 2) === '!D') {\n        const result = readDocType(xmlData, i);\n        this.docTypeEntities = result.entities;\n        i = result.i;\n      }else if(xmlData.substr(i + 1, 2) === '![') {\n        const closeIndex = findClosingIndex(xmlData, \"]]>\", i, \"CDATA is not closed.\") - 2;\n        const tagExp = xmlData.substring(i + 9,closeIndex);\n\n        textData = this.saveTextToParentTag(textData, currentNode, jPath);\n\n        //cdata should be set even if it is 0 length string\n        if(this.options.cdataPropName){\n          // let val = this.parseTextData(tagExp, this.options.cdataPropName, jPath + \".\" + this.options.cdataPropName, true, false, true);\n          // if(!val) val = \"\";\n          currentNode.add(this.options.cdataPropName, [ { [this.options.textNodeName] : tagExp } ]);\n        }else{\n          let val = this.parseTextData(tagExp, currentNode.tagname, jPath, true, false, true);\n          if(val == undefined) val = \"\";\n          currentNode.add(this.options.textNodeName, val);\n        }\n        \n        i = closeIndex + 2;\n      }else {//Opening tag\n        let result = readTagExp(xmlData,i, this. options.removeNSPrefix);\n        let tagName= result.tagName;\n        let tagExp = result.tagExp;\n        let attrExpPresent = result.attrExpPresent;\n        let closeIndex = result.closeIndex;\n\n        if (this.options.transformTagName) {\n          tagName = this.options.transformTagName(tagName);\n        }\n        \n        //save text as child node\n        if (currentNode && textData) {\n          if(currentNode.tagname !== '!xml'){\n            //when nested tag is found\n            textData = this.saveTextToParentTag(textData, currentNode, jPath, false);\n          }\n        }\n\n        if(tagName !== xmlObj.tagname){\n          jPath += jPath ? \".\" + tagName : tagName;\n        }\n\n        //check if last tag was unpaired tag\n        const lastTag = currentNode;\n        if(lastTag && this.options.unpairedTags.indexOf(lastTag.tagname) !== -1 ){\n          currentNode = this.tagsNodeStack.pop();\n        }\n\n        if (this.isItStopNode(this.options.stopNodes, jPath, tagName)) { //TODO: namespace\n          let tagContent = \"\";\n          //self-closing tag\n          if(tagExp.length > 0 && tagExp.lastIndexOf(\"/\") === tagExp.length - 1){\n            i = result.closeIndex;\n          }\n          //boolean tag\n          else if(this.options.unpairedTags.indexOf(tagName) !== -1){\n            i = result.closeIndex;\n          }\n          //normal tag\n          else{\n            //read until closing tag is found\n            const result = this.readStopNodeData(xmlData, tagName, closeIndex + 1);\n            if(!result) throw new Error(`Unexpected end of ${tagName}`);\n            i = result.i;\n            tagContent = result.tagContent;\n          }\n\n          const childNode = new xmlNode(tagName);\n          if(tagName !== tagExp && attrExpPresent){\n            childNode[\":@\"] = this.buildAttributesMap(tagExp, jPath);\n          }\n          if(tagContent) {\n            tagContent = this.parseTextData(tagContent, tagName, jPath, true, attrExpPresent, true, true);\n          }\n          \n          jPath = jPath.substr(0, jPath.lastIndexOf(\".\"));\n          childNode.add(this.options.textNodeName, tagContent);\n          \n          currentNode.addChild(childNode);\n        }else{\n  //selfClosing tag\n          if(tagExp.length > 0 && tagExp.lastIndexOf(\"/\") === tagExp.length - 1){\n            if(tagName[tagName.length - 1] === \"/\"){ //remove trailing '/'\n              tagName = tagName.substr(0, tagName.length - 1);\n              tagExp = tagName;\n            }else{\n              tagExp = tagExp.substr(0, tagExp.length - 1);\n            }\n            \n            if(this.options.transformTagName) {\n              tagName = this.options.transformTagName(tagName);\n            }\n\n            const childNode = new xmlNode(tagName);\n            if(tagName !== tagExp && attrExpPresent){\n              childNode[\":@\"] = this.buildAttributesMap(tagExp, jPath);\n            }\n            jPath = jPath.substr(0, jPath.lastIndexOf(\".\"));\n            currentNode.addChild(childNode);\n          }\n    //opening tag\n          else{\n            const childNode = new xmlNode( tagName);\n            this.tagsNodeStack.push(currentNode);\n            \n            if(tagName !== tagExp && attrExpPresent){\n              childNode[\":@\"] = this.buildAttributesMap(tagExp, jPath);\n            }\n            currentNode.addChild(childNode);\n            currentNode = childNode;\n          }\n          textData = \"\";\n          i = closeIndex;\n        }\n      }\n    }else{\n      textData += xmlData[i];\n    }\n  }\n  return xmlObj.child;\n}\n\nconst replaceEntitiesValue = function(val){\n\n  if(this.options.processEntities){\n    for(let entityName in this.docTypeEntities){\n      const entity = this.docTypeEntities[entityName];\n      val = val.replace( entity.regx, entity.val);\n    }\n    for(let entityName in this.lastEntities){\n      const entity = this.lastEntities[entityName];\n      val = val.replace( entity.regex, entity.val);\n    }\n    if(this.options.htmlEntities){\n      for(let entityName in this.htmlEntities){\n        const entity = this.htmlEntities[entityName];\n        val = val.replace( entity.regex, entity.val);\n      }\n    }\n    val = val.replace( this.ampEntity.regex, this.ampEntity.val);\n  }\n  return val;\n}\nfunction saveTextToParentTag(textData, currentNode, jPath, isLeafNode) {\n  if (textData) { //store previously collected data as textNode\n    if(isLeafNode === undefined) isLeafNode = Object.keys(currentNode.child).length === 0\n    \n    textData = this.parseTextData(textData,\n      currentNode.tagname,\n      jPath,\n      false,\n      currentNode[\":@\"] ? Object.keys(currentNode[\":@\"]).length !== 0 : false,\n      isLeafNode);\n\n    if (textData !== undefined && textData !== \"\")\n      currentNode.add(this.options.textNodeName, textData);\n    textData = \"\";\n  }\n  return textData;\n}\n\n//TODO: use jPath to simplify the logic\n/**\n * \n * @param {string[]} stopNodes \n * @param {string} jPath\n * @param {string} currentTagName \n */\nfunction isItStopNode(stopNodes, jPath, currentTagName){\n  const allNodesExp = \"*.\" + currentTagName;\n  for (const stopNodePath in stopNodes) {\n    const stopNodeExp = stopNodes[stopNodePath];\n    if( allNodesExp === stopNodeExp || jPath === stopNodeExp  ) return true;\n  }\n  return false;\n}\n\n/**\n * Returns the tag Expression and where it is ending handling single-dobule quotes situation\n * @param {string} xmlData \n * @param {number} i starting index\n * @returns \n */\nfunction tagExpWithClosingIndex(xmlData, i, closingChar = \">\"){\n  let attrBoundary;\n  let tagExp = \"\";\n  for (let index = i; index < xmlData.length; index++) {\n    let ch = xmlData[index];\n    if (attrBoundary) {\n        if (ch === attrBoundary) attrBoundary = \"\";//reset\n    } else if (ch === '\"' || ch === \"'\") {\n        attrBoundary = ch;\n    } else if (ch === closingChar[0]) {\n      if(closingChar[1]){\n        if(xmlData[index + 1] === closingChar[1]){\n          return {\n            data: tagExp,\n            index: index\n          }\n        }\n      }else{\n        return {\n          data: tagExp,\n          index: index\n        }\n      }\n    } else if (ch === '\\t') {\n      ch = \" \"\n    }\n    tagExp += ch;\n  }\n}\n\nfunction findClosingIndex(xmlData, str, i, errMsg){\n  const closingIndex = xmlData.indexOf(str, i);\n  if(closingIndex === -1){\n    throw new Error(errMsg)\n  }else{\n    return closingIndex + str.length - 1;\n  }\n}\n\nfunction readTagExp(xmlData,i, removeNSPrefix, closingChar = \">\"){\n  const result = tagExpWithClosingIndex(xmlData, i+1, closingChar);\n  if(!result) return;\n  let tagExp = result.data;\n  const closeIndex = result.index;\n  const separatorIndex = tagExp.search(/\\s/);\n  let tagName = tagExp;\n  let attrExpPresent = true;\n  if(separatorIndex !== -1){//separate tag name and attributes expression\n    tagName = tagExp.substr(0, separatorIndex).replace(/\\s\\s*$/, '');\n    tagExp = tagExp.substr(separatorIndex + 1);\n  }\n\n  if(removeNSPrefix){\n    const colonIndex = tagName.indexOf(\":\");\n    if(colonIndex !== -1){\n      tagName = tagName.substr(colonIndex+1);\n      attrExpPresent = tagName !== result.data.substr(colonIndex + 1);\n    }\n  }\n\n  return {\n    tagName: tagName,\n    tagExp: tagExp,\n    closeIndex: closeIndex,\n    attrExpPresent: attrExpPresent,\n  }\n}\n/**\n * find paired tag for a stop node\n * @param {string} xmlData \n * @param {string} tagName \n * @param {number} i \n */\nfunction readStopNodeData(xmlData, tagName, i){\n  const startIndex = i;\n  // Starting at 1 since we already have an open tag\n  let openTagCount = 1;\n\n  for (; i < xmlData.length; i++) {\n    if( xmlData[i] === \"<\"){ \n      if (xmlData[i+1] === \"/\") {//close tag\n          const closeIndex = findClosingIndex(xmlData, \">\", i, `${tagName} is not closed`);\n          let closeTagName = xmlData.substring(i+2,closeIndex).trim();\n          if(closeTagName === tagName){\n            openTagCount--;\n            if (openTagCount === 0) {\n              return {\n                tagContent: xmlData.substring(startIndex, i),\n                i : closeIndex\n              }\n            }\n          }\n          i=closeIndex;\n        } else if(xmlData[i+1] === '?') { \n          const closeIndex = findClosingIndex(xmlData, \"?>\", i+1, \"StopNode is not closed.\")\n          i=closeIndex;\n        } else if(xmlData.substr(i + 1, 3) === '!--') { \n          const closeIndex = findClosingIndex(xmlData, \"-->\", i+3, \"StopNode is not closed.\")\n          i=closeIndex;\n        } else if(xmlData.substr(i + 1, 2) === '![') { \n          const closeIndex = findClosingIndex(xmlData, \"]]>\", i, \"StopNode is not closed.\") - 2;\n          i=closeIndex;\n        } else {\n          const tagData = readTagExp(xmlData, i, '>')\n\n          if (tagData) {\n            const openTagName = tagData && tagData.tagName;\n            if (openTagName === tagName && tagData.tagExp[tagData.tagExp.length-1] !== \"/\") {\n              openTagCount++;\n            }\n            i=tagData.closeIndex;\n          }\n        }\n      }\n  }//end for loop\n}\n\nfunction parseValue(val, shouldParse, options) {\n  if (shouldParse && typeof val === 'string') {\n    //console.log(options)\n    const newval = val.trim();\n    if(newval === 'true' ) return true;\n    else if(newval === 'false' ) return false;\n    else return toNumber(val, options);\n  } else {\n    if (util.isExist(val)) {\n      return val;\n    } else {\n      return '';\n    }\n  }\n}\n\n\nmodule.exports = OrderedObjParser;\n","const { buildOptions} = require(\"./OptionsBuilder\");\nconst OrderedObjParser = require(\"./OrderedObjParser\");\nconst { prettify} = require(\"./node2json\");\nconst validator = require('../validator');\n\nclass XMLParser{\n    \n    constructor(options){\n        this.externalEntities = {};\n        this.options = buildOptions(options);\n        \n    }\n    /**\n     * Parse XML dats to JS object \n     * @param {string|Buffer} xmlData \n     * @param {boolean|Object} validationOption \n     */\n    parse(xmlData,validationOption){\n        if(typeof xmlData === \"string\"){\n        }else if( xmlData.toString){\n            xmlData = xmlData.toString();\n        }else{\n            throw new Error(\"XML data is accepted in String or Bytes[] form.\")\n        }\n        if( validationOption){\n            if(validationOption === true) validationOption = {}; //validate with default options\n            \n            const result = validator.validate(xmlData, validationOption);\n            if (result !== true) {\n              throw Error( `${result.err.msg}:${result.err.line}:${result.err.col}` )\n            }\n          }\n        const orderedObjParser = new OrderedObjParser(this.options);\n        orderedObjParser.addExternalEntities(this.externalEntities);\n        const orderedResult = orderedObjParser.parseXml(xmlData);\n        if(this.options.preserveOrder || orderedResult === undefined) return orderedResult;\n        else return prettify(orderedResult, this.options);\n    }\n\n    /**\n     * Add Entity which is not by default supported by this library\n     * @param {string} key \n     * @param {string} value \n     */\n    addEntity(key, value){\n        if(value.indexOf(\"&\") !== -1){\n            throw new Error(\"Entity value can't have '&'\")\n        }else if(key.indexOf(\"&\") !== -1 || key.indexOf(\";\") !== -1){\n            throw new Error(\"An entity must be set without '&' and ';'. Eg. use '#xD' for '&#xD;'\")\n        }else if(value === \"&\"){\n            throw new Error(\"An entity with value '&' is not permitted\");\n        }else{\n            this.externalEntities[key] = value;\n        }\n    }\n}\n\nmodule.exports = XMLParser;","'use strict';\n\n/**\n * \n * @param {array} node \n * @param {any} options \n * @returns \n */\nfunction prettify(node, options){\n  return compress( node, options);\n}\n\n/**\n * \n * @param {array} arr \n * @param {object} options \n * @param {string} jPath \n * @returns object\n */\nfunction compress(arr, options, jPath){\n  let text;\n  const compressedObj = {};\n  for (let i = 0; i < arr.length; i++) {\n    const tagObj = arr[i];\n    const property = propName(tagObj);\n    let newJpath = \"\";\n    if(jPath === undefined) newJpath = property;\n    else newJpath = jPath + \".\" + property;\n\n    if(property === options.textNodeName){\n      if(text === undefined) text = tagObj[property];\n      else text += \"\" + tagObj[property];\n    }else if(property === undefined){\n      continue;\n    }else if(tagObj[property]){\n      \n      let val = compress(tagObj[property], options, newJpath);\n      const isLeaf = isLeafTag(val, options);\n\n      if(tagObj[\":@\"]){\n        assignAttributes( val, tagObj[\":@\"], newJpath, options);\n      }else if(Object.keys(val).length === 1 && val[options.textNodeName] !== undefined && !options.alwaysCreateTextNode){\n        val = val[options.textNodeName];\n      }else if(Object.keys(val).length === 0){\n        if(options.alwaysCreateTextNode) val[options.textNodeName] = \"\";\n        else val = \"\";\n      }\n\n      if(compressedObj[property] !== undefined && compressedObj.hasOwnProperty(property)) {\n        if(!Array.isArray(compressedObj[property])) {\n            compressedObj[property] = [ compressedObj[property] ];\n        }\n        compressedObj[property].push(val);\n      }else{\n        //TODO: if a node is not an array, then check if it should be an array\n        //also determine if it is a leaf node\n        if (options.isArray(property, newJpath, isLeaf )) {\n          compressedObj[property] = [val];\n        }else{\n          compressedObj[property] = val;\n        }\n      }\n    }\n    \n  }\n  // if(text && text.length > 0) compressedObj[options.textNodeName] = text;\n  if(typeof text === \"string\"){\n    if(text.length > 0) compressedObj[options.textNodeName] = text;\n  }else if(text !== undefined) compressedObj[options.textNodeName] = text;\n  return compressedObj;\n}\n\nfunction propName(obj){\n  const keys = Object.keys(obj);\n  for (let i = 0; i < keys.length; i++) {\n    const key = keys[i];\n    if(key !== \":@\") return key;\n  }\n}\n\nfunction assignAttributes(obj, attrMap, jpath, options){\n  if (attrMap) {\n    const keys = Object.keys(attrMap);\n    const len = keys.length; //don't make it inline\n    for (let i = 0; i < len; i++) {\n      const atrrName = keys[i];\n      if (options.isArray(atrrName, jpath + \".\" + atrrName, true, true)) {\n        obj[atrrName] = [ attrMap[atrrName] ];\n      } else {\n        obj[atrrName] = attrMap[atrrName];\n      }\n    }\n  }\n}\n\nfunction isLeafTag(obj, options){\n  const propCount = Object.keys(obj).length;\n  if( propCount === 0 || (propCount === 1 && obj[options.textNodeName]) ) return true;\n  return false;\n}\nexports.prettify = prettify;\n","'use strict';\n\nclass XmlNode{\n  constructor(tagname) {\n    this.tagname = tagname;\n    this.child = []; //nested tags, text, cdata, comments in order\n    this[\":@\"] = {}; //attributes map\n  }\n  add(key,val){\n    // this.child.push( {name : key, val: val, isCdata: isCdata });\n    this.child.push( {[key]: val });\n  }\n  addChild(node) {\n    if(node[\":@\"] && Object.keys(node[\":@\"]).length > 0){\n      this.child.push( { [node.tagname]: node.child, [\":@\"]: node[\":@\"] });\n    }else{\n      this.child.push( { [node.tagname]: node.child });\n    }\n  };\n};\n\n\nmodule.exports = XmlNode;","/**\n * Mnemonist LRUCache\n * ===================\n *\n * JavaScript implementation of the LRU Cache data structure. To save up\n * memory and allocations this implementation represents its underlying\n * doubly-linked list as static arrays and pointers. Thus, memory is allocated\n * only once at instantiation and JS objects are never created to serve as\n * pointers. This also means this implementation does not trigger too many\n * garbage collections.\n *\n * Note that to save up memory, a LRU Cache can be implemented using a singly\n * linked list by storing predecessors' pointers as hashmap values.\n * However, this means more hashmap lookups and would probably slow the whole\n * thing down. What's more, pointers are not the things taking most space in\n * memory.\n */\nvar Iterator = require('obliterator/iterator'),\n    forEach = require('obliterator/foreach'),\n    typed = require('./utils/typed-arrays.js'),\n    iterables = require('./utils/iterables.js');\n\n/**\n * LRUCache.\n *\n * @constructor\n * @param {function} Keys     - Array class for storing keys.\n * @param {function} Values   - Array class for storing values.\n * @param {number}   capacity - Desired capacity.\n */\nfunction LRUCache(Keys, Values, capacity) {\n  if (arguments.length < 2) {\n    capacity = Keys;\n    Keys = null;\n    Values = null;\n  }\n\n  this.capacity = capacity;\n\n  if (typeof this.capacity !== 'number' || this.capacity <= 0)\n    throw new Error('mnemonist/lru-cache: capacity should be positive number.');\n\n  var PointerArray = typed.getPointerArray(capacity);\n\n  this.forward = new PointerArray(capacity);\n  this.backward = new PointerArray(capacity);\n  this.K = typeof Keys === 'function' ? new Keys(capacity) : new Array(capacity);\n  this.V = typeof Values === 'function' ? new Values(capacity) : new Array(capacity);\n\n  // Properties\n  this.size = 0;\n  this.head = 0;\n  this.tail = 0;\n  this.items = {};\n}\n\n/**\n * Method used to clear the structure.\n *\n * @return {undefined}\n */\nLRUCache.prototype.clear = function() {\n  this.size = 0;\n  this.head = 0;\n  this.tail = 0;\n  this.items = {};\n};\n\n/**\n * Method used to splay a value on top.\n *\n * @param  {number}   pointer - Pointer of the value to splay on top.\n * @return {LRUCache}\n */\nLRUCache.prototype.splayOnTop = function(pointer) {\n  var oldHead = this.head;\n\n  if (this.head === pointer)\n    return this;\n\n  var previous = this.backward[pointer],\n      next = this.forward[pointer];\n\n  if (this.tail === pointer) {\n    this.tail = previous;\n  }\n  else {\n    this.backward[next] = previous;\n  }\n\n  this.forward[previous] = next;\n\n  this.backward[oldHead] = pointer;\n  this.head = pointer;\n  this.forward[pointer] = oldHead;\n\n  return this;\n};\n\n/**\n * Method used to set the value for the given key in the cache.\n *\n * @param  {any} key   - Key.\n * @param  {any} value - Value.\n * @return {undefined}\n */\nLRUCache.prototype.set = function(key, value) {\n\n  // The key already exists, we just need to update the value and splay on top\n  var pointer = this.items[key];\n\n  if (typeof pointer !== 'undefined') {\n    this.splayOnTop(pointer);\n    this.V[pointer] = value;\n\n    return;\n  }\n\n  // The cache is not yet full\n  if (this.size < this.capacity) {\n    pointer = this.size++;\n  }\n\n  // Cache is full, we need to drop the last value\n  else {\n    pointer = this.tail;\n    this.tail = this.backward[pointer];\n    delete this.items[this.K[pointer]];\n  }\n\n  // Storing key & value\n  this.items[key] = pointer;\n  this.K[pointer] = key;\n  this.V[pointer] = value;\n\n  // Moving the item at the front of the list\n  this.forward[pointer] = this.head;\n  this.backward[this.head] = pointer;\n  this.head = pointer;\n};\n\n/**\n * Method used to set the value for the given key in the cache\n *\n * @param  {any} key   - Key.\n * @param  {any} value - Value.\n * @return {{evicted: boolean, key: any, value: any}} An object containing the\n * key and value of an item that was overwritten or evicted in the set\n * operation, as well as a boolean indicating whether it was evicted due to\n * limited capacity. Return value is null if nothing was evicted or overwritten\n * during the set operation.\n */\nLRUCache.prototype.setpop = function(key, value) {\n  var oldValue = null;\n  var oldKey = null;\n  // The key already exists, we just need to update the value and splay on top\n  var pointer = this.items[key];\n\n  if (typeof pointer !== 'undefined') {\n    this.splayOnTop(pointer);\n    oldValue = this.V[pointer];\n    this.V[pointer] = value;\n    return {evicted: false, key: key, value: oldValue};\n  }\n\n  // The cache is not yet full\n  if (this.size < this.capacity) {\n    pointer = this.size++;\n  }\n\n  // Cache is full, we need to drop the last value\n  else {\n    pointer = this.tail;\n    this.tail = this.backward[pointer];\n    oldValue = this.V[pointer];\n    oldKey = this.K[pointer];\n    delete this.items[this.K[pointer]];\n  }\n\n  // Storing key & value\n  this.items[key] = pointer;\n  this.K[pointer] = key;\n  this.V[pointer] = value;\n\n  // Moving the item at the front of the list\n  this.forward[pointer] = this.head;\n  this.backward[this.head] = pointer;\n  this.head = pointer;\n\n  // Return object if eviction took place, otherwise return null\n  if (oldKey) {\n    return {evicted: true, key: oldKey, value: oldValue};\n  }\n  else {\n    return null;\n  }\n};\n\n/**\n * Method used to check whether the key exists in the cache.\n *\n * @param  {any} key   - Key.\n * @return {boolean}\n */\nLRUCache.prototype.has = function(key) {\n  return key in this.items;\n};\n\n/**\n * Method used to get the value attached to the given key. Will move the\n * related key to the front of the underlying linked list.\n *\n * @param  {any} key   - Key.\n * @return {any}\n */\nLRUCache.prototype.get = function(key) {\n  var pointer = this.items[key];\n\n  if (typeof pointer === 'undefined')\n    return;\n\n  this.splayOnTop(pointer);\n\n  return this.V[pointer];\n};\n\n/**\n * Method used to get the value attached to the given key. Does not modify\n * the ordering of the underlying linked list.\n *\n * @param  {any} key   - Key.\n * @return {any}\n */\nLRUCache.prototype.peek = function(key) {\n    var pointer = this.items[key];\n\n    if (typeof pointer === 'undefined')\n        return;\n\n    return this.V[pointer];\n};\n\n/**\n * Method used to iterate over the cache's entries using a callback.\n *\n * @param  {function}  callback - Function to call for each item.\n * @param  {object}    scope    - Optional scope.\n * @return {undefined}\n */\nLRUCache.prototype.forEach = function(callback, scope) {\n  scope = arguments.length > 1 ? scope : this;\n\n  var i = 0,\n      l = this.size;\n\n  var pointer = this.head,\n      keys = this.K,\n      values = this.V,\n      forward = this.forward;\n\n  while (i < l) {\n\n    callback.call(scope, values[pointer], keys[pointer], this);\n    pointer = forward[pointer];\n\n    i++;\n  }\n};\n\n/**\n * Method used to create an iterator over the cache's keys from most\n * recently used to least recently used.\n *\n * @return {Iterator}\n */\nLRUCache.prototype.keys = function() {\n  var i = 0,\n      l = this.size;\n\n  var pointer = this.head,\n      keys = this.K,\n      forward = this.forward;\n\n  return new Iterator(function() {\n    if (i >= l)\n      return {done: true};\n\n    var key = keys[pointer];\n\n    i++;\n\n    if (i < l)\n      pointer = forward[pointer];\n\n    return {\n      done: false,\n      value: key\n    };\n  });\n};\n\n/**\n * Method used to create an iterator over the cache's values from most\n * recently used to least recently used.\n *\n * @return {Iterator}\n */\nLRUCache.prototype.values = function() {\n  var i = 0,\n      l = this.size;\n\n  var pointer = this.head,\n      values = this.V,\n      forward = this.forward;\n\n  return new Iterator(function() {\n    if (i >= l)\n      return {done: true};\n\n    var value = values[pointer];\n\n    i++;\n\n    if (i < l)\n      pointer = forward[pointer];\n\n    return {\n      done: false,\n      value: value\n    };\n  });\n};\n\n/**\n * Method used to create an iterator over the cache's entries from most\n * recently used to least recently used.\n *\n * @return {Iterator}\n */\nLRUCache.prototype.entries = function() {\n  var i = 0,\n      l = this.size;\n\n  var pointer = this.head,\n      keys = this.K,\n      values = this.V,\n      forward = this.forward;\n\n  return new Iterator(function() {\n    if (i >= l)\n      return {done: true};\n\n    var key = keys[pointer],\n        value = values[pointer];\n\n    i++;\n\n    if (i < l)\n      pointer = forward[pointer];\n\n    return {\n      done: false,\n      value: [key, value]\n    };\n  });\n};\n\n/**\n * Attaching the #.entries method to Symbol.iterator if possible.\n */\nif (typeof Symbol !== 'undefined')\n  LRUCache.prototype[Symbol.iterator] = LRUCache.prototype.entries;\n\n/**\n * Convenience known methods.\n */\nLRUCache.prototype.inspect = function() {\n  var proxy = new Map();\n\n  var iterator = this.entries(),\n      step;\n\n  while ((step = iterator.next(), !step.done))\n    proxy.set(step.value[0], step.value[1]);\n\n  // Trick so that node displays the name of the constructor\n  Object.defineProperty(proxy, 'constructor', {\n    value: LRUCache,\n    enumerable: false\n  });\n\n  return proxy;\n};\n\nif (typeof Symbol !== 'undefined')\n  LRUCache.prototype[Symbol.for('nodejs.util.inspect.custom')] = LRUCache.prototype.inspect;\n\n/**\n * Static @.from function taking an arbitrary iterable & converting it into\n * a structure.\n *\n * @param  {Iterable} iterable - Target iterable.\n * @param  {function} Keys     - Array class for storing keys.\n * @param  {function} Values   - Array class for storing values.\n * @param  {number}   capacity - Cache's capacity.\n * @return {LRUCache}\n */\nLRUCache.from = function(iterable, Keys, Values, capacity) {\n  if (arguments.length < 2) {\n    capacity = iterables.guessLength(iterable);\n\n    if (typeof capacity !== 'number')\n      throw new Error('mnemonist/lru-cache.from: could not guess iterable length. Please provide desired capacity as last argument.');\n  }\n  else if (arguments.length === 2) {\n    capacity = Keys;\n    Keys = null;\n    Values = null;\n  }\n\n  var cache = new LRUCache(Keys, Values, capacity);\n\n  forEach(iterable, function(value, key) {\n    cache.set(key, value);\n  });\n\n  return cache;\n};\n\n/**\n * Exporting.\n */\nmodule.exports = LRUCache;\n","/**\n * Mnemonist Iterable Function\n * ============================\n *\n * Harmonized iteration helpers over mixed iterable targets.\n */\nvar forEach = require('obliterator/foreach');\n\nvar typed = require('./typed-arrays.js');\n\n/**\n * Function used to determine whether the given object supports array-like\n * random access.\n *\n * @param  {any} target - Target object.\n * @return {boolean}\n */\nfunction isArrayLike(target) {\n  return Array.isArray(target) || typed.isTypedArray(target);\n}\n\n/**\n * Function used to guess the length of the structure over which we are going\n * to iterate.\n *\n * @param  {any} target - Target object.\n * @return {number|undefined}\n */\nfunction guessLength(target) {\n  if (typeof target.length === 'number')\n    return target.length;\n\n  if (typeof target.size === 'number')\n    return target.size;\n\n  return;\n}\n\n/**\n * Function used to convert an iterable to an array.\n *\n * @param  {any}   target - Iteration target.\n * @return {array}\n */\nfunction toArray(target) {\n  var l = guessLength(target);\n\n  var array = typeof l === 'number' ? new Array(l) : [];\n\n  var i = 0;\n\n  // TODO: we could optimize when given target is array like\n  forEach(target, function(value) {\n    array[i++] = value;\n  });\n\n  return array;\n}\n\n/**\n * Same as above but returns a supplementary indices array.\n *\n * @param  {any}   target - Iteration target.\n * @return {array}\n */\nfunction toArrayWithIndices(target) {\n  var l = guessLength(target);\n\n  var IndexArray = typeof l === 'number' ?\n    typed.getPointerArray(l) :\n    Array;\n\n  var array = typeof l === 'number' ? new Array(l) : [];\n  var indices = typeof l === 'number' ? new IndexArray(l) : [];\n\n  var i = 0;\n\n  // TODO: we could optimize when given target is array like\n  forEach(target, function(value) {\n    array[i] = value;\n    indices[i] = i++;\n  });\n\n  return [array, indices];\n}\n\n/**\n * Exporting.\n */\nexports.isArrayLike = isArrayLike;\nexports.guessLength = guessLength;\nexports.toArray = toArray;\nexports.toArrayWithIndices = toArrayWithIndices;\n","/**\n * Mnemonist Typed Array Helpers\n * ==============================\n *\n * Miscellaneous helpers related to typed arrays.\n */\n\n/**\n * When using an unsigned integer array to store pointers, one might want to\n * choose the optimal word size in regards to the actual numbers of pointers\n * to store.\n *\n * This helpers does just that.\n *\n * @param  {number} size - Expected size of the array to map.\n * @return {TypedArray}\n */\nvar MAX_8BIT_INTEGER = Math.pow(2, 8) - 1,\n    MAX_16BIT_INTEGER = Math.pow(2, 16) - 1,\n    MAX_32BIT_INTEGER = Math.pow(2, 32) - 1;\n\nvar MAX_SIGNED_8BIT_INTEGER = Math.pow(2, 7) - 1,\n    MAX_SIGNED_16BIT_INTEGER = Math.pow(2, 15) - 1,\n    MAX_SIGNED_32BIT_INTEGER = Math.pow(2, 31) - 1;\n\nexports.getPointerArray = function(size) {\n  var maxIndex = size - 1;\n\n  if (maxIndex <= MAX_8BIT_INTEGER)\n    return Uint8Array;\n\n  if (maxIndex <= MAX_16BIT_INTEGER)\n    return Uint16Array;\n\n  if (maxIndex <= MAX_32BIT_INTEGER)\n    return Uint32Array;\n\n  return Float64Array;\n};\n\nexports.getSignedPointerArray = function(size) {\n  var maxIndex = size - 1;\n\n  if (maxIndex <= MAX_SIGNED_8BIT_INTEGER)\n    return Int8Array;\n\n  if (maxIndex <= MAX_SIGNED_16BIT_INTEGER)\n    return Int16Array;\n\n  if (maxIndex <= MAX_SIGNED_32BIT_INTEGER)\n    return Int32Array;\n\n  return Float64Array;\n};\n\n/**\n * Function returning the minimal type able to represent the given number.\n *\n * @param  {number} value - Value to test.\n * @return {TypedArrayClass}\n */\nexports.getNumberType = function(value) {\n\n  // <= 32 bits itnteger?\n  if (value === (value | 0)) {\n\n    // Negative\n    if (Math.sign(value) === -1) {\n      if (value <= 127 && value >= -128)\n        return Int8Array;\n\n      if (value <= 32767 && value >= -32768)\n        return Int16Array;\n\n      return Int32Array;\n    }\n    else {\n\n      if (value <= 255)\n        return Uint8Array;\n\n      if (value <= 65535)\n        return Uint16Array;\n\n      return Uint32Array;\n    }\n  }\n\n  // 53 bits integer & floats\n  // NOTE: it's kinda hard to tell whether we could use 32bits or not...\n  return Float64Array;\n};\n\n/**\n * Function returning the minimal type able to represent the given array\n * of JavaScript numbers.\n *\n * @param  {array}    array  - Array to represent.\n * @param  {function} getter - Optional getter.\n * @return {TypedArrayClass}\n */\nvar TYPE_PRIORITY = {\n  Uint8Array: 1,\n  Int8Array: 2,\n  Uint16Array: 3,\n  Int16Array: 4,\n  Uint32Array: 5,\n  Int32Array: 6,\n  Float32Array: 7,\n  Float64Array: 8\n};\n\n// TODO: make this a one-shot for one value\nexports.getMinimalRepresentation = function(array, getter) {\n  var maxType = null,\n      maxPriority = 0,\n      p,\n      t,\n      v,\n      i,\n      l;\n\n  for (i = 0, l = array.length; i < l; i++) {\n    v = getter ? getter(array[i]) : array[i];\n    t = exports.getNumberType(v);\n    p = TYPE_PRIORITY[t.name];\n\n    if (p > maxPriority) {\n      maxPriority = p;\n      maxType = t;\n    }\n  }\n\n  return maxType;\n};\n\n/**\n * Function returning whether the given value is a typed array.\n *\n * @param  {any} value - Value to test.\n * @return {boolean}\n */\nexports.isTypedArray = function(value) {\n  return typeof ArrayBuffer !== 'undefined' && ArrayBuffer.isView(value);\n};\n\n/**\n * Function used to concat byte arrays.\n *\n * @param  {...ByteArray}\n * @return {ByteArray}\n */\nexports.concat = function() {\n  var length = 0,\n      i,\n      o,\n      l;\n\n  for (i = 0, l = arguments.length; i < l; i++)\n    length += arguments[i].length;\n\n  var array = new (arguments[0].constructor)(length);\n\n  for (i = 0, o = 0; i < l; i++) {\n    array.set(arguments[i], o);\n    o += arguments[i].length;\n  }\n\n  return array;\n};\n\n/**\n * Function used to initialize a byte array of indices.\n *\n * @param  {number}    length - Length of target.\n * @return {ByteArray}\n */\nexports.indices = function(length) {\n  var PointerArray = exports.getPointerArray(length);\n\n  var array = new PointerArray(length);\n\n  for (var i = 0; i < length; i++)\n    array[i] = i;\n\n  return array;\n};\n","/**\n * Obliterator ForEach Function\n * =============================\n *\n * Helper function used to easily iterate over mixed values.\n */\n\n/**\n * Constants.\n */\nvar ARRAY_BUFFER_SUPPORT = typeof ArrayBuffer !== 'undefined',\n    SYMBOL_SUPPORT = typeof Symbol !== 'undefined';\n\n/**\n * Function able to iterate over almost any iterable JS value.\n *\n * @param  {any}      iterable - Iterable value.\n * @param  {function} callback - Callback function.\n */\nfunction forEach(iterable, callback) {\n  var iterator, k, i, l, s;\n\n  if (!iterable)\n    throw new Error('obliterator/forEach: invalid iterable.');\n\n  if (typeof callback !== 'function')\n    throw new Error('obliterator/forEach: expecting a callback.');\n\n  // The target is an array or a string or function arguments\n  if (\n    Array.isArray(iterable) ||\n    (ARRAY_BUFFER_SUPPORT && ArrayBuffer.isView(iterable)) ||\n    typeof iterable === 'string' ||\n    iterable.toString() === '[object Arguments]'\n  ) {\n    for (i = 0, l = iterable.length; i < l; i++)\n      callback(iterable[i], i);\n    return;\n  }\n\n  // The target has a #.forEach method\n  if (typeof iterable.forEach === 'function') {\n    iterable.forEach(callback);\n    return;\n  }\n\n  // The target is iterable\n  if (\n    SYMBOL_SUPPORT &&\n    Symbol.iterator in iterable &&\n    typeof iterable.next !== 'function'\n  ) {\n    iterable = iterable[Symbol.iterator]();\n  }\n\n  // The target is an iterator\n  if (typeof iterable.next === 'function') {\n    iterator = iterable;\n    i = 0;\n\n    while ((s = iterator.next(), s.done !== true)) {\n      callback(s.value, i);\n      i++;\n    }\n\n    return;\n  }\n\n  // The target is a plain object\n  for (k in iterable) {\n    if (iterable.hasOwnProperty(k)) {\n      callback(iterable[k], k);\n    }\n  }\n\n  return;\n}\n\n/**\n * Same function as the above `forEach` but will yield `null` when the target\n * does not have keys.\n *\n * @param  {any}      iterable - Iterable value.\n * @param  {function} callback - Callback function.\n */\nforEach.forEachWithNullKeys = function(iterable, callback) {\n  var iterator, k, i, l, s;\n\n  if (!iterable)\n    throw new Error('obliterator/forEachWithNullKeys: invalid iterable.');\n\n  if (typeof callback !== 'function')\n    throw new Error('obliterator/forEachWithNullKeys: expecting a callback.');\n\n  // The target is an array or a string or function arguments\n  if (\n    Array.isArray(iterable) ||\n    (ARRAY_BUFFER_SUPPORT && ArrayBuffer.isView(iterable)) ||\n    typeof iterable === 'string' ||\n    iterable.toString() === '[object Arguments]'\n  ) {\n    for (i = 0, l = iterable.length; i < l; i++)\n      callback(iterable[i], null);\n    return;\n  }\n\n  // The target is a Set\n  if (iterable instanceof Set) {\n    iterable.forEach(function(value) {\n      callback(value, null);\n    });\n    return;\n  }\n\n  // The target has a #.forEach method\n  if (typeof iterable.forEach === 'function') {\n    iterable.forEach(callback);\n    return;\n  }\n\n  // The target is iterable\n  if (\n    SYMBOL_SUPPORT &&\n    Symbol.iterator in iterable &&\n    typeof iterable.next !== 'function'\n  ) {\n    iterable = iterable[Symbol.iterator]();\n  }\n\n  // The target is an iterator\n  if (typeof iterable.next === 'function') {\n    iterator = iterable;\n    i = 0;\n\n    while ((s = iterator.next(), s.done !== true)) {\n      callback(s.value, null);\n      i++;\n    }\n\n    return;\n  }\n\n  // The target is a plain object\n  for (k in iterable) {\n    if (iterable.hasOwnProperty(k)) {\n      callback(iterable[k], k);\n    }\n  }\n\n  return;\n};\n\n/**\n * Exporting.\n */\nmodule.exports = forEach;\n","/**\n * Obliterator Iterator Class\n * ===========================\n *\n * Simple class representing the library's iterators.\n */\n\n/**\n * Iterator class.\n *\n * @constructor\n * @param {function} next - Next function.\n */\nfunction Iterator(next) {\n\n  // Hiding the given function\n  Object.defineProperty(this, '_next', {\n    writable: false,\n    enumerable: false,\n    value: next\n  });\n\n  // Is the iterator complete?\n  this.done = false;\n}\n\n/**\n * Next function.\n *\n * @return {object}\n */\n// NOTE: maybe this should dropped for performance?\nIterator.prototype.next = function() {\n  if (this.done)\n    return {done: true};\n\n  var step = this._next();\n\n  if (step.done)\n    this.done = true;\n\n  return step;\n};\n\n/**\n * If symbols are supported, we add `next` to `Symbol.iterator`.\n */\nif (typeof Symbol !== 'undefined')\n  Iterator.prototype[Symbol.iterator] = function() {\n    return this;\n  };\n\n/**\n * Returning an iterator of the given values.\n *\n * @param  {any...} values - Values.\n * @return {Iterator}\n */\nIterator.of = function() {\n  var args = arguments,\n      l = args.length,\n      i = 0;\n\n  return new Iterator(function() {\n    if (i >= l)\n      return {done: true};\n\n    return {done: false, value: args[i++]};\n  });\n};\n\n/**\n * Returning an empty iterator.\n *\n * @return {Iterator}\n */\nIterator.empty = function() {\n  var iterator = new Iterator(null);\n  iterator.done = true;\n\n  return iterator;\n};\n\n/**\n * Returning whether the given value is an iterator.\n *\n * @param  {any} value - Value.\n * @return {boolean}\n */\nIterator.is = function(value) {\n  if (value instanceof Iterator)\n    return true;\n\n  return (\n    typeof value === 'object' &&\n    value !== null &&\n    typeof value.next === 'function'\n  );\n};\n\n/**\n * Exporting.\n */\nmodule.exports = Iterator;\n","const hexRegex = /^[-+]?0x[a-fA-F0-9]+$/;\nconst numRegex = /^([\\-\\+])?(0*)(\\.[0-9]+([eE]\\-?[0-9]+)?|[0-9]+(\\.[0-9]+([eE]\\-?[0-9]+)?)?)$/;\n// const octRegex = /0x[a-z0-9]+/;\n// const binRegex = /0x[a-z0-9]+/;\n\n\n//polyfill\nif (!Number.parseInt && window.parseInt) {\n    Number.parseInt = window.parseInt;\n}\nif (!Number.parseFloat && window.parseFloat) {\n    Number.parseFloat = window.parseFloat;\n}\n\n  \nconst consider = {\n    hex :  true,\n    leadingZeros: true,\n    decimalPoint: \"\\.\",\n    eNotation: true\n    //skipLike: /regex/\n};\n\nfunction toNumber(str, options = {}){\n    // const options = Object.assign({}, consider);\n    // if(opt.leadingZeros === false){\n    //     options.leadingZeros = false;\n    // }else if(opt.hex === false){\n    //     options.hex = false;\n    // }\n\n    options = Object.assign({}, consider, options );\n    if(!str || typeof str !== \"string\" ) return str;\n    \n    let trimmedStr  = str.trim();\n    // if(trimmedStr === \"0.0\") return 0;\n    // else if(trimmedStr === \"+0.0\") return 0;\n    // else if(trimmedStr === \"-0.0\") return -0;\n\n    if(options.skipLike !== undefined && options.skipLike.test(trimmedStr)) return str;\n    else if (options.hex && hexRegex.test(trimmedStr)) {\n        return Number.parseInt(trimmedStr, 16);\n    // } else if (options.parseOct && octRegex.test(str)) {\n    //     return Number.parseInt(val, 8);\n    // }else if (options.parseBin && binRegex.test(str)) {\n    //     return Number.parseInt(val, 2);\n    }else{\n        //separate negative sign, leading zeros, and rest number\n        const match = numRegex.exec(trimmedStr);\n        if(match){\n            const sign = match[1];\n            const leadingZeros = match[2];\n            let numTrimmedByZeros = trimZeros(match[3]); //complete num without leading zeros\n            //trim ending zeros for floating number\n            \n            const eNotation = match[4] || match[6];\n            if(!options.leadingZeros && leadingZeros.length > 0 && sign && trimmedStr[2] !== \".\") return str; //-0123\n            else if(!options.leadingZeros && leadingZeros.length > 0 && !sign && trimmedStr[1] !== \".\") return str; //0123\n            else{//no leading zeros or leading zeros are allowed\n                const num = Number(trimmedStr);\n                const numStr = \"\" + num;\n                if(numStr.search(/[eE]/) !== -1){ //given number is long and parsed to eNotation\n                    if(options.eNotation) return num;\n                    else return str;\n                }else if(eNotation){ //given number has enotation\n                    if(options.eNotation) return num;\n                    else return str;\n                }else if(trimmedStr.indexOf(\".\") !== -1){ //floating number\n                    // const decimalPart = match[5].substr(1);\n                    // const intPart = trimmedStr.substr(0,trimmedStr.indexOf(\".\"));\n\n                    \n                    // const p = numStr.indexOf(\".\");\n                    // const givenIntPart = numStr.substr(0,p);\n                    // const givenDecPart = numStr.substr(p+1);\n                    if(numStr === \"0\" && (numTrimmedByZeros === \"\") ) return num; //0.0\n                    else if(numStr === numTrimmedByZeros) return num; //0.456. 0.79000\n                    else if( sign && numStr === \"-\"+numTrimmedByZeros) return num;\n                    else return str;\n                }\n                \n                if(leadingZeros){\n                    // if(numTrimmedByZeros === numStr){\n                    //     if(options.leadingZeros) return num;\n                    //     else return str;\n                    // }else return str;\n                    if(numTrimmedByZeros === numStr) return num;\n                    else if(sign+numTrimmedByZeros === numStr) return num;\n                    else return str;\n                }\n\n                if(trimmedStr === numStr) return num;\n                else if(trimmedStr === sign+numStr) return num;\n                // else{\n                //     //number with +/- sign\n                //     trimmedStr.test(/[-+][0-9]);\n\n                // }\n                return str;\n            }\n            // else if(!eNotation && trimmedStr && trimmedStr !== Number(trimmedStr) ) return str;\n            \n        }else{ //non-numeric string\n            return str;\n        }\n    }\n}\n\n/**\n * \n * @param {string} numStr without leading zeros\n * @returns \n */\nfunction trimZeros(numStr){\n    if(numStr && numStr.indexOf(\".\") !== -1){//float\n        numStr = numStr.replace(/0+$/, \"\"); //remove ending zeros\n        if(numStr === \".\")  numStr = \"0\";\n        else if(numStr[0] === \".\")  numStr = \"0\"+numStr;\n        else if(numStr[numStr.length-1] === \".\")  numStr = numStr.substr(0,numStr.length-1);\n        return numStr;\n    }\n    return numStr;\n}\nmodule.exports = toNumber\n","module.exports = require('./lib/tunnel');\n","'use strict';\n\nvar net = require('net');\nvar tls = require('tls');\nvar http = require('http');\nvar https = require('https');\nvar events = require('events');\nvar assert = require('assert');\nvar util = require('util');\n\n\nexports.httpOverHttp = httpOverHttp;\nexports.httpsOverHttp = httpsOverHttp;\nexports.httpOverHttps = httpOverHttps;\nexports.httpsOverHttps = httpsOverHttps;\n\n\nfunction httpOverHttp(options) {\n  var agent = new TunnelingAgent(options);\n  agent.request = http.request;\n  return agent;\n}\n\nfunction httpsOverHttp(options) {\n  var agent = new TunnelingAgent(options);\n  agent.request = http.request;\n  agent.createSocket = createSecureSocket;\n  agent.defaultPort = 443;\n  return agent;\n}\n\nfunction httpOverHttps(options) {\n  var agent = new TunnelingAgent(options);\n  agent.request = https.request;\n  return agent;\n}\n\nfunction httpsOverHttps(options) {\n  var agent = new TunnelingAgent(options);\n  agent.request = https.request;\n  agent.createSocket = createSecureSocket;\n  agent.defaultPort = 443;\n  return agent;\n}\n\n\nfunction TunnelingAgent(options) {\n  var self = this;\n  self.options = options || {};\n  self.proxyOptions = self.options.proxy || {};\n  self.maxSockets = self.options.maxSockets || http.Agent.defaultMaxSockets;\n  self.requests = [];\n  self.sockets = [];\n\n  self.on('free', function onFree(socket, host, port, localAddress) {\n    var options = toOptions(host, port, localAddress);\n    for (var i = 0, len = self.requests.length; i < len; ++i) {\n      var pending = self.requests[i];\n      if (pending.host === options.host && pending.port === options.port) {\n        // Detect the request to connect same origin server,\n        // reuse the connection.\n        self.requests.splice(i, 1);\n        pending.request.onSocket(socket);\n        return;\n      }\n    }\n    socket.destroy();\n    self.removeSocket(socket);\n  });\n}\nutil.inherits(TunnelingAgent, events.EventEmitter);\n\nTunnelingAgent.prototype.addRequest = function addRequest(req, host, port, localAddress) {\n  var self = this;\n  var options = mergeOptions({request: req}, self.options, toOptions(host, port, localAddress));\n\n  if (self.sockets.length >= this.maxSockets) {\n    // We are over limit so we'll add it to the queue.\n    self.requests.push(options);\n    return;\n  }\n\n  // If we are under maxSockets create a new one.\n  self.createSocket(options, function(socket) {\n    socket.on('free', onFree);\n    socket.on('close', onCloseOrRemove);\n    socket.on('agentRemove', onCloseOrRemove);\n    req.onSocket(socket);\n\n    function onFree() {\n      self.emit('free', socket, options);\n    }\n\n    function onCloseOrRemove(err) {\n      self.removeSocket(socket);\n      socket.removeListener('free', onFree);\n      socket.removeListener('close', onCloseOrRemove);\n      socket.removeListener('agentRemove', onCloseOrRemove);\n    }\n  });\n};\n\nTunnelingAgent.prototype.createSocket = function createSocket(options, cb) {\n  var self = this;\n  var placeholder = {};\n  self.sockets.push(placeholder);\n\n  var connectOptions = mergeOptions({}, self.proxyOptions, {\n    method: 'CONNECT',\n    path: options.host + ':' + options.port,\n    agent: false,\n    headers: {\n      host: options.host + ':' + options.port\n    }\n  });\n  if (options.localAddress) {\n    connectOptions.localAddress = options.localAddress;\n  }\n  if (connectOptions.proxyAuth) {\n    connectOptions.headers = connectOptions.headers || {};\n    connectOptions.headers['Proxy-Authorization'] = 'Basic ' +\n        new Buffer(connectOptions.proxyAuth).toString('base64');\n  }\n\n  debug('making CONNECT request');\n  var connectReq = self.request(connectOptions);\n  connectReq.useChunkedEncodingByDefault = false; // for v0.6\n  connectReq.once('response', onResponse); // for v0.6\n  connectReq.once('upgrade', onUpgrade);   // for v0.6\n  connectReq.once('connect', onConnect);   // for v0.7 or later\n  connectReq.once('error', onError);\n  connectReq.end();\n\n  function onResponse(res) {\n    // Very hacky. This is necessary to avoid http-parser leaks.\n    res.upgrade = true;\n  }\n\n  function onUpgrade(res, socket, head) {\n    // Hacky.\n    process.nextTick(function() {\n      onConnect(res, socket, head);\n    });\n  }\n\n  function onConnect(res, socket, head) {\n    connectReq.removeAllListeners();\n    socket.removeAllListeners();\n\n    if (res.statusCode !== 200) {\n      debug('tunneling socket could not be established, statusCode=%d',\n        res.statusCode);\n      socket.destroy();\n      var error = new Error('tunneling socket could not be established, ' +\n        'statusCode=' + res.statusCode);\n      error.code = 'ECONNRESET';\n      options.request.emit('error', error);\n      self.removeSocket(placeholder);\n      return;\n    }\n    if (head.length > 0) {\n      debug('got illegal response body from proxy');\n      socket.destroy();\n      var error = new Error('got illegal response body from proxy');\n      error.code = 'ECONNRESET';\n      options.request.emit('error', error);\n      self.removeSocket(placeholder);\n      return;\n    }\n    debug('tunneling connection has established');\n    self.sockets[self.sockets.indexOf(placeholder)] = socket;\n    return cb(socket);\n  }\n\n  function onError(cause) {\n    connectReq.removeAllListeners();\n\n    debug('tunneling socket could not be established, cause=%s\\n',\n          cause.message, cause.stack);\n    var error = new Error('tunneling socket could not be established, ' +\n                          'cause=' + cause.message);\n    error.code = 'ECONNRESET';\n    options.request.emit('error', error);\n    self.removeSocket(placeholder);\n  }\n};\n\nTunnelingAgent.prototype.removeSocket = function removeSocket(socket) {\n  var pos = this.sockets.indexOf(socket)\n  if (pos === -1) {\n    return;\n  }\n  this.sockets.splice(pos, 1);\n\n  var pending = this.requests.shift();\n  if (pending) {\n    // If we have pending requests and a socket gets closed a new one\n    // needs to be created to take over in the pool for the one that closed.\n    this.createSocket(pending, function(socket) {\n      pending.request.onSocket(socket);\n    });\n  }\n};\n\nfunction createSecureSocket(options, cb) {\n  var self = this;\n  TunnelingAgent.prototype.createSocket.call(self, options, function(socket) {\n    var hostHeader = options.request.getHeader('host');\n    var tlsOptions = mergeOptions({}, self.options, {\n      socket: socket,\n      servername: hostHeader ? hostHeader.replace(/:.*$/, '') : options.host\n    });\n\n    // 0 is dummy port for v0.6\n    var secureSocket = tls.connect(0, tlsOptions);\n    self.sockets[self.sockets.indexOf(socket)] = secureSocket;\n    cb(secureSocket);\n  });\n}\n\n\nfunction toOptions(host, port, localAddress) {\n  if (typeof host === 'string') { // since v0.10\n    return {\n      host: host,\n      port: port,\n      localAddress: localAddress\n    };\n  }\n  return host; // for v0.11 or later\n}\n\nfunction mergeOptions(target) {\n  for (var i = 1, len = arguments.length; i < len; ++i) {\n    var overrides = arguments[i];\n    if (typeof overrides === 'object') {\n      var keys = Object.keys(overrides);\n      for (var j = 0, keyLen = keys.length; j < keyLen; ++j) {\n        var k = keys[j];\n        if (overrides[k] !== undefined) {\n          target[k] = overrides[k];\n        }\n      }\n    }\n  }\n  return target;\n}\n\n\nvar debug;\nif (process.env.NODE_DEBUG && /\\btunnel\\b/.test(process.env.NODE_DEBUG)) {\n  debug = function() {\n    var args = Array.prototype.slice.call(arguments);\n    if (typeof args[0] === 'string') {\n      args[0] = 'TUNNEL: ' + args[0];\n    } else {\n      args.unshift('TUNNEL:');\n    }\n    console.error.apply(console, args);\n  }\n} else {\n  debug = function() {};\n}\nexports.debug = debug; // for test\n","import rng from './rng.js';\nimport stringify from './stringify.js'; // **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\n\nlet _nodeId;\n\nlet _clockseq; // Previous uuid creation time\n\n\nlet _lastMSecs = 0;\nlet _lastNSecs = 0; // See https://github.com/uuidjs/uuid for API details\n\nfunction v1(options, buf, offset) {\n  let i = buf && offset || 0;\n  const b = buf || new Array(16);\n  options = options || {};\n  let node = options.node || _nodeId;\n  let clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq; // node and clockseq need to be initialized to random values if they're not\n  // specified.  We do this lazily to minimize issues related to insufficient\n  // system entropy.  See #189\n\n  if (node == null || clockseq == null) {\n    const seedBytes = options.random || (options.rng || rng)();\n\n    if (node == null) {\n      // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n      node = _nodeId = [seedBytes[0] | 0x01, seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]];\n    }\n\n    if (clockseq == null) {\n      // Per 4.2.2, randomize (14 bit) clockseq\n      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;\n    }\n  } // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n\n\n  let msecs = options.msecs !== undefined ? options.msecs : Date.now(); // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n\n  let nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1; // Time since last uuid creation (in msecs)\n\n  const dt = msecs - _lastMSecs + (nsecs - _lastNSecs) / 10000; // Per 4.2.1.2, Bump clockseq on clock regression\n\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  } // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n\n\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  } // Per 4.2.1.2 Throw error if too many uuids are requested\n\n\n  if (nsecs >= 10000) {\n    throw new Error(\"uuid.v1(): Can't create more than 10M uuids/sec\");\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq; // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n\n  msecs += 12219292800000; // `time_low`\n\n  const tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff; // `time_mid`\n\n  const tmh = msecs / 0x100000000 * 10000 & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff; // `time_high_and_version`\n\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n\n  b[i++] = tmh >>> 16 & 0xff; // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n\n  b[i++] = clockseq >>> 8 | 0x80; // `clock_seq_low`\n\n  b[i++] = clockseq & 0xff; // `node`\n\n  for (let n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n\n  return buf || stringify(b);\n}\n\nexport default v1;","import validate from './validate.js';\n\nfunction parse(uuid) {\n  if (!validate(uuid)) {\n    throw TypeError('Invalid UUID');\n  }\n\n  let v;\n  const arr = new Uint8Array(16); // Parse ########-....-....-....-............\n\n  arr[0] = (v = parseInt(uuid.slice(0, 8), 16)) >>> 24;\n  arr[1] = v >>> 16 & 0xff;\n  arr[2] = v >>> 8 & 0xff;\n  arr[3] = v & 0xff; // Parse ........-####-....-....-............\n\n  arr[4] = (v = parseInt(uuid.slice(9, 13), 16)) >>> 8;\n  arr[5] = v & 0xff; // Parse ........-....-####-....-............\n\n  arr[6] = (v = parseInt(uuid.slice(14, 18), 16)) >>> 8;\n  arr[7] = v & 0xff; // Parse ........-....-....-####-............\n\n  arr[8] = (v = parseInt(uuid.slice(19, 23), 16)) >>> 8;\n  arr[9] = v & 0xff; // Parse ........-....-....-....-############\n  // (Use \"/\" to avoid 32-bit truncation when bit-shifting high-order bytes)\n\n  arr[10] = (v = parseInt(uuid.slice(24, 36), 16)) / 0x10000000000 & 0xff;\n  arr[11] = v / 0x100000000 & 0xff;\n  arr[12] = v >>> 24 & 0xff;\n  arr[13] = v >>> 16 & 0xff;\n  arr[14] = v >>> 8 & 0xff;\n  arr[15] = v & 0xff;\n  return arr;\n}\n\nexport default parse;","import stringify from './stringify.js';\nimport parse from './parse.js';\n\nfunction stringToBytes(str) {\n  str = unescape(encodeURIComponent(str)); // UTF8 escape\n\n  const bytes = [];\n\n  for (let i = 0; i < str.length; ++i) {\n    bytes.push(str.charCodeAt(i));\n  }\n\n  return bytes;\n}\n\nexport const DNS = '6ba7b810-9dad-11d1-80b4-00c04fd430c8';\nexport const URL = '6ba7b811-9dad-11d1-80b4-00c04fd430c8';\nexport default function (name, version, hashfunc) {\n  function generateUUID(value, namespace, buf, offset) {\n    if (typeof value === 'string') {\n      value = stringToBytes(value);\n    }\n\n    if (typeof namespace === 'string') {\n      namespace = parse(namespace);\n    }\n\n    if (namespace.length !== 16) {\n      throw TypeError('Namespace must be array-like (16 iterable integer values, 0-255)');\n    } // Compute hash of namespace and value, Per 4.3\n    // Future: Use spread syntax when supported on all platforms, e.g. `bytes =\n    // hashfunc([...namespace, ... value])`\n\n\n    let bytes = new Uint8Array(16 + value.length);\n    bytes.set(namespace);\n    bytes.set(value, namespace.length);\n    bytes = hashfunc(bytes);\n    bytes[6] = bytes[6] & 0x0f | version;\n    bytes[8] = bytes[8] & 0x3f | 0x80;\n\n    if (buf) {\n      offset = offset || 0;\n\n      for (let i = 0; i < 16; ++i) {\n        buf[offset + i] = bytes[i];\n      }\n\n      return buf;\n    }\n\n    return stringify(bytes);\n  } // Function#name is not settable on some platforms (#270)\n\n\n  try {\n    generateUUID.name = name; // eslint-disable-next-line no-empty\n  } catch (err) {} // For CommonJS default export support\n\n\n  generateUUID.DNS = DNS;\n  generateUUID.URL = URL;\n  return generateUUID;\n}","import crypto from 'crypto';\n\nfunction md5(bytes) {\n  if (Array.isArray(bytes)) {\n    bytes = Buffer.from(bytes);\n  } else if (typeof bytes === 'string') {\n    bytes = Buffer.from(bytes, 'utf8');\n  }\n\n  return crypto.createHash('md5').update(bytes).digest();\n}\n\nexport default md5;","import v35 from './v35.js';\nimport md5 from './md5.js';\nconst v3 = v35('v3', 0x30, md5);\nexport default v3;","import crypto from 'crypto';\n\nfunction sha1(bytes) {\n  if (Array.isArray(bytes)) {\n    bytes = Buffer.from(bytes);\n  } else if (typeof bytes === 'string') {\n    bytes = Buffer.from(bytes, 'utf8');\n  }\n\n  return crypto.createHash('sha1').update(bytes).digest();\n}\n\nexport default sha1;","import v35 from './v35.js';\nimport sha1 from './sha1.js';\nconst v5 = v35('v5', 0x50, sha1);\nexport default v5;","export default '00000000-0000-0000-0000-000000000000';","import validate from './validate.js';\n\nfunction version(uuid) {\n  if (!validate(uuid)) {\n    throw TypeError('Invalid UUID');\n  }\n\n  return parseInt(uuid.substr(14, 1), 16);\n}\n\nexport default version;","import crypto from 'crypto';\nconst rnds8Pool = new Uint8Array(256); // # of random values to pre-allocate\n\nlet poolPtr = rnds8Pool.length;\nexport default function rng() {\n  if (poolPtr > rnds8Pool.length - 16) {\n    crypto.randomFillSync(rnds8Pool);\n    poolPtr = 0;\n  }\n\n  return rnds8Pool.slice(poolPtr, poolPtr += 16);\n}","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nconst byteToHex = [];\n\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  const uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  const rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (let i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","module.exports = require(\"assert\");","module.exports = require(\"crypto\");","module.exports = require(\"events\");","module.exports = require(\"fs\");","module.exports = require(\"http\");","module.exports = require(\"https\");","module.exports = require(\"net\");","module.exports = require(\"os\");","module.exports = require(\"path\");","module.exports = require(\"tls\");","module.exports = require(\"util\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.hmd = (module) => {\n\tmodule = Object.create(module);\n\tif (!module.children) module.children = [];\n\tObject.defineProperty(module, 'exports', {\n\t\tenumerable: true,\n\t\tset: () => {\n\t\t\tthrow new Error('ES Modules may not assign module.exports or exports.*, Use ESM export syntax, instead: ' + module.id);\n\t\t}\n\t});\n\treturn module;\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","export var SelectorType;\n(function (SelectorType) {\n    SelectorType[\"ENV\"] = \"env\";\n    SelectorType[\"CONFIG\"] = \"shared config entry\";\n})(SelectorType || (SelectorType = {}));\nexport const booleanSelector = (obj, key, type) => {\n    if (!(key in obj))\n        return undefined;\n    if (obj[key] === \"true\")\n        return true;\n    if (obj[key] === \"false\")\n        return false;\n    throw new Error(`Cannot load ${type} \"${key}\". Expected \"true\" or \"false\", got ${obj[key]}.`);\n};\n","import { booleanSelector, SelectorType } from \"@aws-sdk/util-config-provider\";\nexport const ENV_USE_DUALSTACK_ENDPOINT = \"AWS_USE_DUALSTACK_ENDPOINT\";\nexport const CONFIG_USE_DUALSTACK_ENDPOINT = \"use_dualstack_endpoint\";\nexport const DEFAULT_USE_DUALSTACK_ENDPOINT = false;\nexport const NODE_USE_DUALSTACK_ENDPOINT_CONFIG_OPTIONS = {\n    environmentVariableSelector: (env) => booleanSelector(env, ENV_USE_DUALSTACK_ENDPOINT, SelectorType.ENV),\n    configFileSelector: (profile) => booleanSelector(profile, CONFIG_USE_DUALSTACK_ENDPOINT, SelectorType.CONFIG),\n    default: false,\n};\n","import { booleanSelector, SelectorType } from \"@aws-sdk/util-config-provider\";\nexport const ENV_USE_FIPS_ENDPOINT = \"AWS_USE_FIPS_ENDPOINT\";\nexport const CONFIG_USE_FIPS_ENDPOINT = \"use_fips_endpoint\";\nexport const DEFAULT_USE_FIPS_ENDPOINT = false;\nexport const NODE_USE_FIPS_ENDPOINT_CONFIG_OPTIONS = {\n    environmentVariableSelector: (env) => booleanSelector(env, ENV_USE_FIPS_ENDPOINT, SelectorType.ENV),\n    configFileSelector: (profile) => booleanSelector(profile, CONFIG_USE_FIPS_ENDPOINT, SelectorType.CONFIG),\n    default: false,\n};\n","export const REGION_ENV_NAME = \"AWS_REGION\";\nexport const REGION_INI_NAME = \"region\";\nexport const NODE_REGION_CONFIG_OPTIONS = {\n    environmentVariableSelector: (env) => env[REGION_ENV_NAME],\n    configFileSelector: (profile) => profile[REGION_INI_NAME],\n    default: () => {\n        throw new Error(\"Region is missing\");\n    },\n};\nexport const NODE_REGION_CONFIG_FILE_OPTIONS = {\n    preferredFile: \"credentials\",\n};\n","export const isFipsRegion = (region) => typeof region === \"string\" && (region.startsWith(\"fips-\") || region.endsWith(\"-fips\"));\n","import { isFipsRegion } from \"./isFipsRegion\";\nexport const getRealRegion = (region) => isFipsRegion(region)\n    ? [\"fips-aws-global\", \"aws-fips\"].includes(region)\n        ? \"us-east-1\"\n        : region.replace(/fips-(dkr-|prod-)?|-fips/, \"\")\n    : region;\n","import { getRealRegion } from \"./getRealRegion\";\nimport { isFipsRegion } from \"./isFipsRegion\";\nexport const resolveRegionConfig = (input) => {\n    const { region, useFipsEndpoint } = input;\n    if (!region) {\n        throw new Error(\"Region is missing\");\n    }\n    return {\n        ...input,\n        region: async () => {\n            if (typeof region === \"string\") {\n                return getRealRegion(region);\n            }\n            const providedRegion = await region();\n            return getRealRegion(providedRegion);\n        },\n        useFipsEndpoint: async () => {\n            const providedRegion = typeof region === \"string\" ? region : await region();\n            if (isFipsRegion(providedRegion)) {\n                return true;\n            }\n            return typeof useFipsEndpoint !== \"function\" ? Promise.resolve(!!useFipsEndpoint) : useFipsEndpoint();\n        },\n    };\n};\n","export class HttpRequest {\n    constructor(options) {\n        this.method = options.method || \"GET\";\n        this.hostname = options.hostname || \"localhost\";\n        this.port = options.port;\n        this.query = options.query || {};\n        this.headers = options.headers || {};\n        this.body = options.body;\n        this.protocol = options.protocol\n            ? options.protocol.slice(-1) !== \":\"\n                ? `${options.protocol}:`\n                : options.protocol\n            : \"https:\";\n        this.path = options.path ? (options.path.charAt(0) !== \"/\" ? `/${options.path}` : options.path) : \"/\";\n    }\n    static isInstance(request) {\n        if (!request)\n            return false;\n        const req = request;\n        return (\"method\" in req &&\n            \"protocol\" in req &&\n            \"hostname\" in req &&\n            \"path\" in req &&\n            typeof req[\"query\"] === \"object\" &&\n            typeof req[\"headers\"] === \"object\");\n    }\n    clone() {\n        const cloned = new HttpRequest({\n            ...this,\n            headers: { ...this.headers },\n        });\n        if (cloned.query)\n            cloned.query = cloneQuery(cloned.query);\n        return cloned;\n    }\n}\nfunction cloneQuery(query) {\n    return Object.keys(query).reduce((carry, paramName) => {\n        const param = query[paramName];\n        return {\n            ...carry,\n            [paramName]: Array.isArray(param) ? [...param] : param,\n        };\n    }, {});\n}\n","import { HttpRequest } from \"@aws-sdk/protocol-http\";\nconst CONTENT_LENGTH_HEADER = \"content-length\";\nexport function contentLengthMiddleware(bodyLengthChecker) {\n    return (next) => async (args) => {\n        const request = args.request;\n        if (HttpRequest.isInstance(request)) {\n            const { body, headers } = request;\n            if (body &&\n                Object.keys(headers)\n                    .map((str) => str.toLowerCase())\n                    .indexOf(CONTENT_LENGTH_HEADER) === -1) {\n                try {\n                    const length = bodyLengthChecker(body);\n                    request.headers = {\n                        ...request.headers,\n                        [CONTENT_LENGTH_HEADER]: String(length),\n                    };\n                }\n                catch (error) {\n                }\n            }\n        }\n        return next({\n            ...args,\n            request,\n        });\n    };\n}\nexport const contentLengthMiddlewareOptions = {\n    step: \"build\",\n    tags: [\"SET_CONTENT_LENGTH\", \"CONTENT_LENGTH\"],\n    name: \"contentLengthMiddleware\",\n    override: true,\n};\nexport const getContentLengthPlugin = (options) => ({\n    applyToStack: (clientStack) => {\n        clientStack.add(contentLengthMiddleware(options.bodyLengthChecker), contentLengthMiddlewareOptions);\n    },\n});\n","import { deserializerMiddleware } from \"./deserializerMiddleware\";\nimport { serializerMiddleware } from \"./serializerMiddleware\";\nexport const deserializerMiddlewareOption = {\n    name: \"deserializerMiddleware\",\n    step: \"deserialize\",\n    tags: [\"DESERIALIZER\"],\n    override: true,\n};\nexport const serializerMiddlewareOption = {\n    name: \"serializerMiddleware\",\n    step: \"serialize\",\n    tags: [\"SERIALIZER\"],\n    override: true,\n};\nexport function getSerdePlugin(config, serializer, deserializer) {\n    return {\n        applyToStack: (commandStack) => {\n            commandStack.add(deserializerMiddleware(config, deserializer), deserializerMiddlewareOption);\n            commandStack.add(serializerMiddleware(config, serializer), serializerMiddlewareOption);\n        },\n    };\n}\n","export const deserializerMiddleware = (options, deserializer) => (next, context) => async (args) => {\n    const { response } = await next(args);\n    try {\n        const parsed = await deserializer(response, options);\n        return {\n            response,\n            output: parsed,\n        };\n    }\n    catch (error) {\n        Object.defineProperty(error, \"$response\", {\n            value: response,\n        });\n        throw error;\n    }\n};\n","export const serializerMiddleware = (options, serializer) => (next, context) => async (args) => {\n    const endpoint = context.endpointV2?.url && options.urlParser\n        ? async () => options.urlParser(context.endpointV2.url)\n        : options.endpoint;\n    if (!endpoint) {\n        throw new Error(\"No valid endpoint provider available.\");\n    }\n    const request = await serializer(args.input, { ...options, endpoint });\n    return next({\n        ...args,\n        request,\n    });\n};\n","export const resolveParamsForS3 = async (endpointParams) => {\n    const bucket = endpointParams?.Bucket || \"\";\n    if (typeof endpointParams.Bucket === \"string\") {\n        endpointParams.Bucket = bucket.replace(/#/g, encodeURIComponent(\"#\")).replace(/\\?/g, encodeURIComponent(\"?\"));\n    }\n    if (isArnBucketName(bucket)) {\n        if (endpointParams.ForcePathStyle === true) {\n            throw new Error(\"Path-style addressing cannot be used with ARN buckets\");\n        }\n    }\n    else if (!isDnsCompatibleBucketName(bucket) ||\n        (bucket.indexOf(\".\") !== -1 && !String(endpointParams.Endpoint).startsWith(\"http:\")) ||\n        bucket.toLowerCase() !== bucket ||\n        bucket.length < 3) {\n        endpointParams.ForcePathStyle = true;\n    }\n    if (endpointParams.DisableMultiRegionAccessPoints) {\n        endpointParams.disableMultiRegionAccessPoints = true;\n        endpointParams.DisableMRAP = true;\n    }\n    return endpointParams;\n};\nconst DOMAIN_PATTERN = /^[a-z0-9][a-z0-9\\.\\-]{1,61}[a-z0-9]$/;\nconst IP_ADDRESS_PATTERN = /(\\d+\\.){3}\\d+/;\nconst DOTS_PATTERN = /\\.\\./;\nexport const DOT_PATTERN = /\\./;\nexport const S3_HOSTNAME_PATTERN = /^(.+\\.)?s3(-fips)?(\\.dualstack)?[.-]([a-z0-9-]+)\\./;\nexport const isDnsCompatibleBucketName = (bucketName) => DOMAIN_PATTERN.test(bucketName) && !IP_ADDRESS_PATTERN.test(bucketName) && !DOTS_PATTERN.test(bucketName);\nexport const isArnBucketName = (bucketName) => {\n    const [arn, partition, service, region, account, typeOrId] = bucketName.split(\":\");\n    const isArn = arn === \"arn\" && bucketName.split(\":\").length >= 6;\n    const isValidArn = [arn, partition, service, account, typeOrId].filter(Boolean).length === 5;\n    if (isArn && !isValidArn) {\n        throw new Error(`Invalid ARN: ${bucketName} was an invalid ARN.`);\n    }\n    return arn === \"arn\" && !!partition && !!service && !!account && !!typeOrId;\n};\n","export const createConfigValueProvider = (configKey, canonicalEndpointParamKey, config) => {\n    const configProvider = async () => {\n        const configValue = config[configKey] ?? config[canonicalEndpointParamKey];\n        if (typeof configValue === \"function\") {\n            return configValue();\n        }\n        return configValue;\n    };\n    if (configKey === \"endpoint\" || canonicalEndpointParamKey === \"endpoint\") {\n        return async () => {\n            const endpoint = await configProvider();\n            if (endpoint && typeof endpoint === \"object\") {\n                if (\"url\" in endpoint) {\n                    return endpoint.url.href;\n                }\n                if (\"hostname\" in endpoint) {\n                    const { protocol, hostname, port, path } = endpoint;\n                    return `${protocol}//${hostname}${port ? \":\" + port : \"\"}${path}`;\n                }\n            }\n            return endpoint;\n        };\n    }\n    return configProvider;\n};\n","import { resolveParamsForS3 } from \"../service-customizations\";\nimport { createConfigValueProvider } from \"./createConfigValueProvider\";\nexport const getEndpointFromInstructions = async (commandInput, instructionsSupplier, clientConfig, context) => {\n    const endpointParams = await resolveParams(commandInput, instructionsSupplier, clientConfig);\n    if (typeof clientConfig.endpointProvider !== \"function\") {\n        throw new Error(\"config.endpointProvider is not set.\");\n    }\n    const endpoint = clientConfig.endpointProvider(endpointParams, context);\n    return endpoint;\n};\nexport const resolveParams = async (commandInput, instructionsSupplier, clientConfig) => {\n    const endpointParams = {};\n    const instructions = instructionsSupplier?.getEndpointParameterInstructions?.() || {};\n    for (const [name, instruction] of Object.entries(instructions)) {\n        switch (instruction.type) {\n            case \"staticContextParams\":\n                endpointParams[name] = instruction.value;\n                break;\n            case \"contextParams\":\n                endpointParams[name] = commandInput[instruction.name];\n                break;\n            case \"clientContextParams\":\n            case \"builtInParams\":\n                endpointParams[name] = await createConfigValueProvider(instruction.name, name, clientConfig)();\n                break;\n            default:\n                throw new Error(\"Unrecognized endpoint parameter instruction: \" + JSON.stringify(instruction));\n        }\n    }\n    if (Object.keys(instructions).length === 0) {\n        Object.assign(endpointParams, clientConfig);\n    }\n    if (String(clientConfig.serviceId).toLowerCase() === \"s3\") {\n        await resolveParamsForS3(endpointParams);\n    }\n    return endpointParams;\n};\n","import { getEndpointFromInstructions } from \"./adaptors/getEndpointFromInstructions\";\nexport const endpointMiddleware = ({ config, instructions, }) => {\n    return (next, context) => async (args) => {\n        const endpoint = await getEndpointFromInstructions(args.input, {\n            getEndpointParameterInstructions() {\n                return instructions;\n            },\n        }, { ...config }, context);\n        context.endpointV2 = endpoint;\n        context.authSchemes = endpoint.properties?.authSchemes;\n        const authScheme = context.authSchemes?.[0];\n        if (authScheme) {\n            context[\"signing_region\"] = authScheme.signingRegion;\n            context[\"signing_service\"] = authScheme.signingName;\n        }\n        return next({\n            ...args,\n        });\n    };\n};\n","import { serializerMiddlewareOption } from \"@aws-sdk/middleware-serde\";\nimport { endpointMiddleware } from \"./endpointMiddleware\";\nexport const endpointMiddlewareOptions = {\n    step: \"serialize\",\n    tags: [\"ENDPOINT_PARAMETERS\", \"ENDPOINT_V2\", \"ENDPOINT\"],\n    name: \"endpointV2Middleware\",\n    override: true,\n    relation: \"before\",\n    toMiddleware: serializerMiddlewareOption.name,\n};\nexport const getEndpointPlugin = (config, instructions) => ({\n    applyToStack: (clientStack) => {\n        clientStack.addRelativeTo(endpointMiddleware({\n            config,\n            instructions,\n        }), endpointMiddlewareOptions);\n    },\n});\n","export const normalizeProvider = (input) => {\n    if (typeof input === \"function\")\n        return input;\n    const promisified = Promise.resolve(input);\n    return () => promisified;\n};\n","import { parseQueryString } from \"@aws-sdk/querystring-parser\";\nexport const parseUrl = (url) => {\n    if (typeof url === \"string\") {\n        return parseUrl(new URL(url));\n    }\n    const { hostname, pathname, port, protocol, search } = url;\n    let query;\n    if (search) {\n        query = parseQueryString(search);\n    }\n    return {\n        hostname,\n        port: port ? parseInt(port) : undefined,\n        protocol,\n        path: pathname,\n        query,\n    };\n};\n","export function parseQueryString(querystring) {\n    const query = {};\n    querystring = querystring.replace(/^\\?/, \"\");\n    if (querystring) {\n        for (const pair of querystring.split(\"&\")) {\n            let [key, value = null] = pair.split(\"=\");\n            key = decodeURIComponent(key);\n            if (value) {\n                value = decodeURIComponent(value);\n            }\n            if (!(key in query)) {\n                query[key] = value;\n            }\n            else if (Array.isArray(query[key])) {\n                query[key].push(value);\n            }\n            else {\n                query[key] = [query[key], value];\n            }\n        }\n    }\n    return query;\n}\n","import { normalizeProvider } from \"@aws-sdk/util-middleware\";\nimport { toEndpointV1 } from \"./adaptors/toEndpointV1\";\nexport const resolveEndpointConfig = (input) => {\n    const tls = input.tls ?? true;\n    const { endpoint } = input;\n    const customEndpointProvider = endpoint != null ? async () => toEndpointV1(await normalizeProvider(endpoint)()) : undefined;\n    const isCustomEndpoint = !!endpoint;\n    return {\n        ...input,\n        endpoint: customEndpointProvider,\n        tls,\n        isCustomEndpoint,\n        useDualstackEndpoint: normalizeProvider(input.useDualstackEndpoint ?? false),\n        useFipsEndpoint: normalizeProvider(input.useFipsEndpoint ?? false),\n    };\n};\n","import { parseUrl } from \"@aws-sdk/url-parser\";\nexport const toEndpointV1 = (endpoint) => {\n    if (typeof endpoint === \"object\") {\n        if (\"url\" in endpoint) {\n            return parseUrl(endpoint.url);\n        }\n        return endpoint;\n    }\n    return parseUrl(endpoint);\n};\n","const ENV_ENDPOINT_DISCOVERY = [\"AWS_ENABLE_ENDPOINT_DISCOVERY\", \"AWS_ENDPOINT_DISCOVERY_ENABLED\"];\nconst CONFIG_ENDPOINT_DISCOVERY = \"endpoint_discovery_enabled\";\nconst isFalsy = (value) => [\"false\", \"0\"].indexOf(value) >= 0;\nexport const NODE_ENDPOINT_DISCOVERY_CONFIG_OPTIONS = {\n    environmentVariableSelector: (env) => {\n        for (let i = 0; i < ENV_ENDPOINT_DISCOVERY.length; i++) {\n            const envKey = ENV_ENDPOINT_DISCOVERY[i];\n            if (envKey in env) {\n                const value = env[envKey];\n                if (value === \"\") {\n                    throw Error(`Environment variable ${envKey} can't be empty of undefined, got \"${value}\"`);\n                }\n                return !isFalsy(value);\n            }\n        }\n    },\n    configFileSelector: (profile) => {\n        if (CONFIG_ENDPOINT_DISCOVERY in profile) {\n            const value = profile[CONFIG_ENDPOINT_DISCOVERY];\n            if (value === undefined) {\n                throw Error(`Shared config entry ${CONFIG_ENDPOINT_DISCOVERY} can't be undefined, got \"${value}\"`);\n            }\n            return !isFalsy(value);\n        }\n    },\n    default: undefined,\n};\n","import LRUCache from \"mnemonist/lru-cache\";\nexport class EndpointCache {\n    constructor(capacity) {\n        this.cache = new LRUCache(capacity);\n    }\n    getEndpoint(key) {\n        const endpointsWithExpiry = this.get(key);\n        if (!endpointsWithExpiry || endpointsWithExpiry.length === 0) {\n            return undefined;\n        }\n        const endpoints = endpointsWithExpiry.map((endpoint) => endpoint.Address);\n        return endpoints[Math.floor(Math.random() * endpoints.length)];\n    }\n    get(key) {\n        if (!this.has(key)) {\n            return;\n        }\n        const value = this.cache.get(key);\n        if (!value) {\n            return;\n        }\n        const now = Date.now();\n        const endpointsWithExpiry = value.filter((endpoint) => now < endpoint.Expires);\n        if (endpointsWithExpiry.length === 0) {\n            this.delete(key);\n            return undefined;\n        }\n        return endpointsWithExpiry;\n    }\n    set(key, endpoints) {\n        const now = Date.now();\n        this.cache.set(key, endpoints.map(({ Address, CachePeriodInMinutes }) => ({\n            Address,\n            Expires: now + CachePeriodInMinutes * 60 * 1000,\n        })));\n    }\n    delete(key) {\n        this.cache.set(key, []);\n    }\n    has(key) {\n        if (!this.cache.has(key)) {\n            return false;\n        }\n        const endpoints = this.cache.peek(key);\n        if (!endpoints) {\n            return false;\n        }\n        return endpoints.length > 0;\n    }\n    clear() {\n        this.cache.clear();\n    }\n}\n","import { HttpRequest } from \"@aws-sdk/protocol-http\";\nexport function resolveHostHeaderConfig(input) {\n    return input;\n}\nexport const hostHeaderMiddleware = (options) => (next) => async (args) => {\n    if (!HttpRequest.isInstance(args.request))\n        return next(args);\n    const { request } = args;\n    const { handlerProtocol = \"\" } = options.requestHandler.metadata || {};\n    if (handlerProtocol.indexOf(\"h2\") >= 0 && !request.headers[\":authority\"]) {\n        delete request.headers[\"host\"];\n        request.headers[\":authority\"] = \"\";\n    }\n    else if (!request.headers[\"host\"]) {\n        request.headers[\"host\"] = request.hostname;\n    }\n    return next(args);\n};\nexport const hostHeaderMiddlewareOptions = {\n    name: \"hostHeaderMiddleware\",\n    step: \"build\",\n    priority: \"low\",\n    tags: [\"HOST\"],\n    override: true,\n};\nexport const getHostHeaderPlugin = (options) => ({\n    applyToStack: (clientStack) => {\n        clientStack.add(hostHeaderMiddleware(options), hostHeaderMiddlewareOptions);\n    },\n});\n","export const loggerMiddleware = () => (next, context) => async (args) => {\n    const response = await next(args);\n    const { clientName, commandName, logger, inputFilterSensitiveLog, outputFilterSensitiveLog, dynamoDbDocumentClientOptions = {}, } = context;\n    const { overrideInputFilterSensitiveLog, overrideOutputFilterSensitiveLog } = dynamoDbDocumentClientOptions;\n    if (!logger) {\n        return response;\n    }\n    if (typeof logger.info === \"function\") {\n        const { $metadata, ...outputWithoutMetadata } = response.output;\n        logger.info({\n            clientName,\n            commandName,\n            input: (overrideInputFilterSensitiveLog ?? inputFilterSensitiveLog)(args.input),\n            output: (overrideOutputFilterSensitiveLog ?? outputFilterSensitiveLog)(outputWithoutMetadata),\n            metadata: $metadata,\n        });\n    }\n    return response;\n};\nexport const loggerMiddlewareOptions = {\n    name: \"loggerMiddleware\",\n    tags: [\"LOGGER\"],\n    step: \"initialize\",\n    override: true,\n};\nexport const getLoggerPlugin = (options) => ({\n    applyToStack: (clientStack) => {\n        clientStack.add(loggerMiddleware(), loggerMiddlewareOptions);\n    },\n});\n","import { HttpRequest } from \"@aws-sdk/protocol-http\";\nconst TRACE_ID_HEADER_NAME = \"X-Amzn-Trace-Id\";\nconst ENV_LAMBDA_FUNCTION_NAME = \"AWS_LAMBDA_FUNCTION_NAME\";\nconst ENV_TRACE_ID = \"_X_AMZN_TRACE_ID\";\nexport const recursionDetectionMiddleware = (options) => (next) => async (args) => {\n    const { request } = args;\n    if (!HttpRequest.isInstance(request) ||\n        options.runtime !== \"node\" ||\n        request.headers.hasOwnProperty(TRACE_ID_HEADER_NAME)) {\n        return next(args);\n    }\n    const functionName = process.env[ENV_LAMBDA_FUNCTION_NAME];\n    const traceId = process.env[ENV_TRACE_ID];\n    const nonEmptyString = (str) => typeof str === \"string\" && str.length > 0;\n    if (nonEmptyString(functionName) && nonEmptyString(traceId)) {\n        request.headers[TRACE_ID_HEADER_NAME] = traceId;\n    }\n    return next({\n        ...args,\n        request,\n    });\n};\nexport const addRecursionDetectionMiddlewareOptions = {\n    step: \"build\",\n    tags: [\"RECURSION_DETECTION\"],\n    name: \"recursionDetectionMiddleware\",\n    override: true,\n    priority: \"low\",\n};\nexport const getRecursionDetectionPlugin = (options) => ({\n    applyToStack: (clientStack) => {\n        clientStack.add(recursionDetectionMiddleware(options), addRecursionDetectionMiddlewareOptions);\n    },\n});\n","export var RETRY_MODES;\n(function (RETRY_MODES) {\n    RETRY_MODES[\"STANDARD\"] = \"standard\";\n    RETRY_MODES[\"ADAPTIVE\"] = \"adaptive\";\n})(RETRY_MODES || (RETRY_MODES = {}));\nexport const DEFAULT_MAX_ATTEMPTS = 3;\nexport const DEFAULT_RETRY_MODE = \"STANDARD\";\n","export const CLOCK_SKEW_ERROR_CODES = [\n    \"AuthFailure\",\n    \"InvalidSignatureException\",\n    \"RequestExpired\",\n    \"RequestInTheFuture\",\n    \"RequestTimeTooSkewed\",\n    \"SignatureDoesNotMatch\",\n];\nexport const THROTTLING_ERROR_CODES = [\n    \"BandwidthLimitExceeded\",\n    \"EC2ThrottledException\",\n    \"LimitExceededException\",\n    \"PriorRequestNotComplete\",\n    \"ProvisionedThroughputExceededException\",\n    \"RequestLimitExceeded\",\n    \"RequestThrottled\",\n    \"RequestThrottledException\",\n    \"SlowDown\",\n    \"ThrottledException\",\n    \"Throttling\",\n    \"ThrottlingException\",\n    \"TooManyRequestsException\",\n    \"TransactionInProgressException\",\n];\nexport const TRANSIENT_ERROR_CODES = [\"AbortError\", \"TimeoutError\", \"RequestTimeout\", \"RequestTimeoutException\"];\nexport const TRANSIENT_ERROR_STATUS_CODES = [500, 502, 503, 504];\nexport const NODEJS_TIMEOUT_ERROR_CODES = [\"ECONNRESET\", \"EPIPE\", \"ETIMEDOUT\"];\n","import { CLOCK_SKEW_ERROR_CODES, NODEJS_TIMEOUT_ERROR_CODES, THROTTLING_ERROR_CODES, TRANSIENT_ERROR_CODES, TRANSIENT_ERROR_STATUS_CODES, } from \"./constants\";\nexport const isRetryableByTrait = (error) => error.$retryable !== undefined;\nexport const isClockSkewError = (error) => CLOCK_SKEW_ERROR_CODES.includes(error.name);\nexport const isThrottlingError = (error) => error.$metadata?.httpStatusCode === 429 ||\n    THROTTLING_ERROR_CODES.includes(error.name) ||\n    error.$retryable?.throttling == true;\nexport const isTransientError = (error) => TRANSIENT_ERROR_CODES.includes(error.name) ||\n    NODEJS_TIMEOUT_ERROR_CODES.includes(error?.code || \"\") ||\n    TRANSIENT_ERROR_STATUS_CODES.includes(error.$metadata?.httpStatusCode || 0);\nexport const isServerError = (error) => {\n    if (error.$metadata?.httpStatusCode !== undefined) {\n        const statusCode = error.$metadata.httpStatusCode;\n        if (500 <= statusCode && statusCode <= 599 && !isTransientError(error)) {\n            return true;\n        }\n        return false;\n    }\n    return false;\n};\n","import { isThrottlingError } from \"@aws-sdk/service-error-classification\";\nexport class DefaultRateLimiter {\n    constructor(options) {\n        this.currentCapacity = 0;\n        this.enabled = false;\n        this.lastMaxRate = 0;\n        this.measuredTxRate = 0;\n        this.requestCount = 0;\n        this.lastTimestamp = 0;\n        this.timeWindow = 0;\n        this.beta = options?.beta ?? 0.7;\n        this.minCapacity = options?.minCapacity ?? 1;\n        this.minFillRate = options?.minFillRate ?? 0.5;\n        this.scaleConstant = options?.scaleConstant ?? 0.4;\n        this.smooth = options?.smooth ?? 0.8;\n        const currentTimeInSeconds = this.getCurrentTimeInSeconds();\n        this.lastThrottleTime = currentTimeInSeconds;\n        this.lastTxRateBucket = Math.floor(this.getCurrentTimeInSeconds());\n        this.fillRate = this.minFillRate;\n        this.maxCapacity = this.minCapacity;\n    }\n    getCurrentTimeInSeconds() {\n        return Date.now() / 1000;\n    }\n    async getSendToken() {\n        return this.acquireTokenBucket(1);\n    }\n    async acquireTokenBucket(amount) {\n        if (!this.enabled) {\n            return;\n        }\n        this.refillTokenBucket();\n        if (amount > this.currentCapacity) {\n            const delay = ((amount - this.currentCapacity) / this.fillRate) * 1000;\n            await new Promise((resolve) => setTimeout(resolve, delay));\n        }\n        this.currentCapacity = this.currentCapacity - amount;\n    }\n    refillTokenBucket() {\n        const timestamp = this.getCurrentTimeInSeconds();\n        if (!this.lastTimestamp) {\n            this.lastTimestamp = timestamp;\n            return;\n        }\n        const fillAmount = (timestamp - this.lastTimestamp) * this.fillRate;\n        this.currentCapacity = Math.min(this.maxCapacity, this.currentCapacity + fillAmount);\n        this.lastTimestamp = timestamp;\n    }\n    updateClientSendingRate(response) {\n        let calculatedRate;\n        this.updateMeasuredRate();\n        if (isThrottlingError(response)) {\n            const rateToUse = !this.enabled ? this.measuredTxRate : Math.min(this.measuredTxRate, this.fillRate);\n            this.lastMaxRate = rateToUse;\n            this.calculateTimeWindow();\n            this.lastThrottleTime = this.getCurrentTimeInSeconds();\n            calculatedRate = this.cubicThrottle(rateToUse);\n            this.enableTokenBucket();\n        }\n        else {\n            this.calculateTimeWindow();\n            calculatedRate = this.cubicSuccess(this.getCurrentTimeInSeconds());\n        }\n        const newRate = Math.min(calculatedRate, 2 * this.measuredTxRate);\n        this.updateTokenBucketRate(newRate);\n    }\n    calculateTimeWindow() {\n        this.timeWindow = this.getPrecise(Math.pow((this.lastMaxRate * (1 - this.beta)) / this.scaleConstant, 1 / 3));\n    }\n    cubicThrottle(rateToUse) {\n        return this.getPrecise(rateToUse * this.beta);\n    }\n    cubicSuccess(timestamp) {\n        return this.getPrecise(this.scaleConstant * Math.pow(timestamp - this.lastThrottleTime - this.timeWindow, 3) + this.lastMaxRate);\n    }\n    enableTokenBucket() {\n        this.enabled = true;\n    }\n    updateTokenBucketRate(newRate) {\n        this.refillTokenBucket();\n        this.fillRate = Math.max(newRate, this.minFillRate);\n        this.maxCapacity = Math.max(newRate, this.minCapacity);\n        this.currentCapacity = Math.min(this.currentCapacity, this.maxCapacity);\n    }\n    updateMeasuredRate() {\n        const t = this.getCurrentTimeInSeconds();\n        const timeBucket = Math.floor(t * 2) / 2;\n        this.requestCount++;\n        if (timeBucket > this.lastTxRateBucket) {\n            const currentRate = this.requestCount / (timeBucket - this.lastTxRateBucket);\n            this.measuredTxRate = this.getPrecise(currentRate * this.smooth + this.measuredTxRate * (1 - this.smooth));\n            this.requestCount = 0;\n            this.lastTxRateBucket = timeBucket;\n        }\n    }\n    getPrecise(num) {\n        return parseFloat(num.toFixed(8));\n    }\n}\n","export const DEFAULT_RETRY_DELAY_BASE = 100;\nexport const MAXIMUM_RETRY_DELAY = 20 * 1000;\nexport const THROTTLING_RETRY_DELAY_BASE = 500;\nexport const INITIAL_RETRY_TOKENS = 500;\nexport const RETRY_COST = 5;\nexport const TIMEOUT_RETRY_COST = 10;\nexport const NO_RETRY_INCREMENT = 1;\nexport const INVOCATION_ID_HEADER = \"amz-sdk-invocation-id\";\nexport const REQUEST_HEADER = \"amz-sdk-request\";\n","import { DEFAULT_RETRY_DELAY_BASE, MAXIMUM_RETRY_DELAY, NO_RETRY_INCREMENT, RETRY_COST, THROTTLING_RETRY_DELAY_BASE, TIMEOUT_RETRY_COST, } from \"./constants\";\nimport { getDefaultRetryBackoffStrategy } from \"./defaultRetryBackoffStrategy\";\nexport const getDefaultRetryToken = (initialRetryTokens, initialRetryDelay, initialRetryCount, options) => {\n    const MAX_CAPACITY = initialRetryTokens;\n    const retryCost = options?.retryCost ?? RETRY_COST;\n    const timeoutRetryCost = options?.timeoutRetryCost ?? TIMEOUT_RETRY_COST;\n    const retryBackoffStrategy = options?.retryBackoffStrategy ?? getDefaultRetryBackoffStrategy();\n    let availableCapacity = initialRetryTokens;\n    let retryDelay = Math.min(MAXIMUM_RETRY_DELAY, initialRetryDelay);\n    let lastRetryCost = undefined;\n    let retryCount = initialRetryCount ?? 0;\n    const getCapacityAmount = (errorType) => (errorType === \"TRANSIENT\" ? timeoutRetryCost : retryCost);\n    const getRetryCount = () => retryCount;\n    const getRetryDelay = () => retryDelay;\n    const getLastRetryCost = () => lastRetryCost;\n    const hasRetryTokens = (errorType) => getCapacityAmount(errorType) <= availableCapacity;\n    const getRetryTokenCount = (errorInfo) => {\n        const errorType = errorInfo.errorType;\n        if (!hasRetryTokens(errorType)) {\n            throw new Error(\"No retry token available\");\n        }\n        const capacityAmount = getCapacityAmount(errorType);\n        const delayBase = errorType === \"THROTTLING\" ? THROTTLING_RETRY_DELAY_BASE : DEFAULT_RETRY_DELAY_BASE;\n        retryBackoffStrategy.setDelayBase(delayBase);\n        const delayFromErrorType = retryBackoffStrategy.computeNextBackoffDelay(retryCount);\n        if (errorInfo.retryAfterHint) {\n            const delayFromRetryAfterHint = errorInfo.retryAfterHint.getTime() - Date.now();\n            retryDelay = Math.max(delayFromRetryAfterHint || 0, delayFromErrorType);\n        }\n        else {\n            retryDelay = delayFromErrorType;\n        }\n        retryCount++;\n        lastRetryCost = capacityAmount;\n        availableCapacity -= capacityAmount;\n        return capacityAmount;\n    };\n    const releaseRetryTokens = (releaseAmount) => {\n        availableCapacity += releaseAmount ?? NO_RETRY_INCREMENT;\n        availableCapacity = Math.min(availableCapacity, MAX_CAPACITY);\n    };\n    return {\n        getRetryCount,\n        getRetryDelay,\n        getLastRetryCost,\n        hasRetryTokens,\n        getRetryTokenCount,\n        releaseRetryTokens,\n    };\n};\n","import { DEFAULT_RETRY_DELAY_BASE, MAXIMUM_RETRY_DELAY } from \"./constants\";\nexport const getDefaultRetryBackoffStrategy = () => {\n    let delayBase = DEFAULT_RETRY_DELAY_BASE;\n    const computeNextBackoffDelay = (attempts) => {\n        return Math.floor(Math.min(MAXIMUM_RETRY_DELAY, Math.random() * 2 ** attempts * delayBase));\n    };\n    const setDelayBase = (delay) => {\n        delayBase = delay;\n    };\n    return {\n        computeNextBackoffDelay,\n        setDelayBase,\n    };\n};\n","import { DEFAULT_MAX_ATTEMPTS, RETRY_MODES } from \"./config\";\nimport { DEFAULT_RETRY_DELAY_BASE, INITIAL_RETRY_TOKENS } from \"./constants\";\nimport { getDefaultRetryToken } from \"./defaultRetryToken\";\nexport class StandardRetryStrategy {\n    constructor(maxAttemptsProvider) {\n        this.maxAttemptsProvider = maxAttemptsProvider;\n        this.mode = RETRY_MODES.STANDARD;\n        this.retryToken = getDefaultRetryToken(INITIAL_RETRY_TOKENS, DEFAULT_RETRY_DELAY_BASE);\n        this.maxAttemptsProvider = maxAttemptsProvider;\n    }\n    async acquireInitialRetryToken(retryTokenScope) {\n        return this.retryToken;\n    }\n    async refreshRetryTokenForRetry(tokenToRenew, errorInfo) {\n        const maxAttempts = await this.getMaxAttempts();\n        if (this.shouldRetry(tokenToRenew, errorInfo, maxAttempts)) {\n            tokenToRenew.getRetryTokenCount(errorInfo);\n            return tokenToRenew;\n        }\n        throw new Error(\"No retry token available\");\n    }\n    recordSuccess(token) {\n        this.retryToken.releaseRetryTokens(token.getLastRetryCost());\n    }\n    async getMaxAttempts() {\n        let maxAttempts;\n        try {\n            return await this.maxAttemptsProvider();\n        }\n        catch (error) {\n            console.warn(`Max attempts provider could not resolve. Using default of ${DEFAULT_MAX_ATTEMPTS}`);\n            return DEFAULT_MAX_ATTEMPTS;\n        }\n    }\n    shouldRetry(tokenToRenew, errorInfo, maxAttempts) {\n        const attempts = tokenToRenew.getRetryCount();\n        return (attempts < maxAttempts &&\n            tokenToRenew.hasRetryTokens(errorInfo.errorType) &&\n            this.isRetryableError(errorInfo.errorType));\n    }\n    isRetryableError(errorType) {\n        return errorType === \"THROTTLING\" || errorType === \"TRANSIENT\";\n    }\n}\n","import { RETRY_MODES } from \"./config\";\nimport { DefaultRateLimiter } from \"./DefaultRateLimiter\";\nimport { StandardRetryStrategy } from \"./StandardRetryStrategy\";\nexport class AdaptiveRetryStrategy {\n    constructor(maxAttemptsProvider, options) {\n        this.maxAttemptsProvider = maxAttemptsProvider;\n        this.mode = RETRY_MODES.ADAPTIVE;\n        const { rateLimiter } = options ?? {};\n        this.rateLimiter = rateLimiter ?? new DefaultRateLimiter();\n        this.standardRetryStrategy = new StandardRetryStrategy(maxAttemptsProvider);\n    }\n    async acquireInitialRetryToken(retryTokenScope) {\n        await this.rateLimiter.getSendToken();\n        return this.standardRetryStrategy.acquireInitialRetryToken(retryTokenScope);\n    }\n    async refreshRetryTokenForRetry(tokenToRenew, errorInfo) {\n        this.rateLimiter.updateClientSendingRate(errorInfo);\n        return this.standardRetryStrategy.refreshRetryTokenForRetry(tokenToRenew, errorInfo);\n    }\n    recordSuccess(token) {\n        this.rateLimiter.updateClientSendingRate({});\n        this.standardRetryStrategy.recordSuccess(token);\n    }\n}\n","import { normalizeProvider } from \"@aws-sdk/util-middleware\";\nimport { AdaptiveRetryStrategy, DEFAULT_MAX_ATTEMPTS, DEFAULT_RETRY_MODE, RETRY_MODES, StandardRetryStrategy, } from \"@aws-sdk/util-retry\";\nexport const ENV_MAX_ATTEMPTS = \"AWS_MAX_ATTEMPTS\";\nexport const CONFIG_MAX_ATTEMPTS = \"max_attempts\";\nexport const NODE_MAX_ATTEMPT_CONFIG_OPTIONS = {\n    environmentVariableSelector: (env) => {\n        const value = env[ENV_MAX_ATTEMPTS];\n        if (!value)\n            return undefined;\n        const maxAttempt = parseInt(value);\n        if (Number.isNaN(maxAttempt)) {\n            throw new Error(`Environment variable ${ENV_MAX_ATTEMPTS} mast be a number, got \"${value}\"`);\n        }\n        return maxAttempt;\n    },\n    configFileSelector: (profile) => {\n        const value = profile[CONFIG_MAX_ATTEMPTS];\n        if (!value)\n            return undefined;\n        const maxAttempt = parseInt(value);\n        if (Number.isNaN(maxAttempt)) {\n            throw new Error(`Shared config file entry ${CONFIG_MAX_ATTEMPTS} mast be a number, got \"${value}\"`);\n        }\n        return maxAttempt;\n    },\n    default: DEFAULT_MAX_ATTEMPTS,\n};\nexport const resolveRetryConfig = (input) => {\n    const { retryStrategy } = input;\n    const maxAttempts = normalizeProvider(input.maxAttempts ?? DEFAULT_MAX_ATTEMPTS);\n    return {\n        ...input,\n        maxAttempts,\n        retryStrategy: async () => {\n            if (retryStrategy) {\n                return retryStrategy;\n            }\n            const retryMode = await normalizeProvider(input.retryMode)();\n            if (retryMode === RETRY_MODES.ADAPTIVE) {\n                return new AdaptiveRetryStrategy(maxAttempts);\n            }\n            return new StandardRetryStrategy(maxAttempts);\n        },\n    };\n};\nexport const ENV_RETRY_MODE = \"AWS_RETRY_MODE\";\nexport const CONFIG_RETRY_MODE = \"retry_mode\";\nexport const NODE_RETRY_MODE_CONFIG_OPTIONS = {\n    environmentVariableSelector: (env) => env[ENV_RETRY_MODE],\n    configFileSelector: (profile) => profile[CONFIG_RETRY_MODE],\n    default: DEFAULT_RETRY_MODE,\n};\n","export class HttpResponse {\n    constructor(options) {\n        this.statusCode = options.statusCode;\n        this.headers = options.headers || {};\n        this.body = options.body;\n    }\n    static isInstance(response) {\n        if (!response)\n            return false;\n        const resp = response;\n        return typeof resp.statusCode === \"number\" && typeof resp.headers === \"object\";\n    }\n}\n","export const asSdkError = (error) => {\n    if (error instanceof Error)\n        return error;\n    if (error instanceof Object)\n        return Object.assign(new Error(), error);\n    if (typeof error === \"string\")\n        return new Error(error);\n    return new Error(`AWS SDK error wrapper for ${error}`);\n};\n","import { HttpRequest, HttpResponse } from \"@aws-sdk/protocol-http\";\nimport { isServerError, isThrottlingError, isTransientError } from \"@aws-sdk/service-error-classification\";\nimport { INVOCATION_ID_HEADER, REQUEST_HEADER } from \"@aws-sdk/util-retry\";\nimport { v4 } from \"uuid\";\nimport { asSdkError } from \"./util\";\nexport const retryMiddleware = (options) => (next, context) => async (args) => {\n    let retryStrategy = await options.retryStrategy();\n    const maxAttempts = await options.maxAttempts();\n    if (isRetryStrategyV2(retryStrategy)) {\n        retryStrategy = retryStrategy;\n        let retryToken = await retryStrategy.acquireInitialRetryToken(context[\"partition_id\"]);\n        let lastError = new Error();\n        let attempts = 0;\n        let totalRetryDelay = 0;\n        const { request } = args;\n        if (HttpRequest.isInstance(request)) {\n            request.headers[INVOCATION_ID_HEADER] = v4();\n        }\n        while (true) {\n            try {\n                if (HttpRequest.isInstance(request)) {\n                    request.headers[REQUEST_HEADER] = `attempt=${attempts + 1}; max=${maxAttempts}`;\n                }\n                const { response, output } = await next(args);\n                retryStrategy.recordSuccess(retryToken);\n                output.$metadata.attempts = attempts + 1;\n                output.$metadata.totalRetryDelay = totalRetryDelay;\n                return { response, output };\n            }\n            catch (e) {\n                const retryErrorInfo = getRetyErrorInto(e);\n                lastError = asSdkError(e);\n                try {\n                    retryToken = await retryStrategy.refreshRetryTokenForRetry(retryToken, retryErrorInfo);\n                }\n                catch (refreshError) {\n                    if (!lastError.$metadata) {\n                        lastError.$metadata = {};\n                    }\n                    lastError.$metadata.attempts = attempts + 1;\n                    lastError.$metadata.totalRetryDelay = totalRetryDelay;\n                    throw lastError;\n                }\n                attempts = retryToken.getRetryCount();\n                const delay = retryToken.getRetryDelay();\n                totalRetryDelay += delay;\n                await new Promise((resolve) => setTimeout(resolve, delay));\n            }\n        }\n    }\n    else {\n        retryStrategy = retryStrategy;\n        if (retryStrategy?.mode)\n            context.userAgent = [...(context.userAgent || []), [\"cfg/retry-mode\", retryStrategy.mode]];\n        return retryStrategy.retry(next, args);\n    }\n};\nconst isRetryStrategyV2 = (retryStrategy) => typeof retryStrategy.acquireInitialRetryToken !== \"undefined\" &&\n    typeof retryStrategy.refreshRetryTokenForRetry !== \"undefined\" &&\n    typeof retryStrategy.recordSuccess !== \"undefined\";\nconst getRetyErrorInto = (error) => {\n    const errorInfo = {\n        errorType: getRetryErrorType(error),\n    };\n    const retryAfterHint = getRetryAfterHint(error.$response);\n    if (retryAfterHint) {\n        errorInfo.retryAfterHint = retryAfterHint;\n    }\n    return errorInfo;\n};\nconst getRetryErrorType = (error) => {\n    if (isThrottlingError(error))\n        return \"THROTTLING\";\n    if (isTransientError(error))\n        return \"TRANSIENT\";\n    if (isServerError(error))\n        return \"SERVER_ERROR\";\n    return \"CLIENT_ERROR\";\n};\nexport const retryMiddlewareOptions = {\n    name: \"retryMiddleware\",\n    tags: [\"RETRY\"],\n    step: \"finalizeRequest\",\n    priority: \"high\",\n    override: true,\n};\nexport const getRetryPlugin = (options) => ({\n    applyToStack: (clientStack) => {\n        clientStack.add(retryMiddleware(options), retryMiddlewareOptions);\n    },\n});\nexport const getRetryAfterHint = (response) => {\n    if (!HttpResponse.isInstance(response))\n        return;\n    const retryAfterHeaderName = Object.keys(response.headers).find((key) => key.toLowerCase() === \"retry-after\");\n    if (!retryAfterHeaderName)\n        return;\n    const retryAfter = response.headers[retryAfterHeaderName];\n    const retryAfterSeconds = Number(retryAfter);\n    if (!Number.isNaN(retryAfterSeconds))\n        return new Date(retryAfterSeconds * 1000);\n    const retryAfterDate = new Date(retryAfter);\n    return retryAfterDate;\n};\n","export class ProviderError extends Error {\n    constructor(message, tryNextLink = true) {\n        super(message);\n        this.tryNextLink = tryNextLink;\n        this.name = \"ProviderError\";\n        Object.setPrototypeOf(this, ProviderError.prototype);\n    }\n    static from(error, tryNextLink = true) {\n        return Object.assign(new this(error.message, tryNextLink), error);\n    }\n}\n","import { ProviderError } from \"./ProviderError\";\nexport class CredentialsProviderError extends ProviderError {\n    constructor(message, tryNextLink = true) {\n        super(message, tryNextLink);\n        this.tryNextLink = tryNextLink;\n        this.name = \"CredentialsProviderError\";\n        Object.setPrototypeOf(this, CredentialsProviderError.prototype);\n    }\n}\n","import { ProviderError } from \"./ProviderError\";\nexport class TokenProviderError extends ProviderError {\n    constructor(message, tryNextLink = true) {\n        super(message, tryNextLink);\n        this.tryNextLink = tryNextLink;\n        this.name = \"TokenProviderError\";\n        Object.setPrototypeOf(this, TokenProviderError.prototype);\n    }\n}\n","import { ProviderError } from \"./ProviderError\";\nexport function chain(...providers) {\n    return () => {\n        let promise = Promise.reject(new ProviderError(\"No providers in chain\"));\n        for (const provider of providers) {\n            promise = promise.catch((err) => {\n                if (err?.tryNextLink) {\n                    return provider();\n                }\n                throw err;\n            });\n        }\n        return promise;\n    };\n}\n","export const fromStatic = (staticValue) => () => Promise.resolve(staticValue);\n","export const memoize = (provider, isExpired, requiresRefresh) => {\n    let resolved;\n    let pending;\n    let hasResult;\n    let isConstant = false;\n    const coalesceProvider = async () => {\n        if (!pending) {\n            pending = provider();\n        }\n        try {\n            resolved = await pending;\n            hasResult = true;\n            isConstant = false;\n        }\n        finally {\n            pending = undefined;\n        }\n        return resolved;\n    };\n    if (isExpired === undefined) {\n        return async (options) => {\n            if (!hasResult || options?.forceRefresh) {\n                resolved = await coalesceProvider();\n            }\n            return resolved;\n        };\n    }\n    return async (options) => {\n        if (!hasResult || options?.forceRefresh) {\n            resolved = await coalesceProvider();\n        }\n        if (isConstant) {\n            return resolved;\n        }\n        if (requiresRefresh && !requiresRefresh(resolved)) {\n            isConstant = true;\n            return resolved;\n        }\n        if (isExpired(resolved)) {\n            await coalesceProvider();\n            return resolved;\n        }\n        return resolved;\n    };\n};\n","const SHORT_TO_HEX = {};\nconst HEX_TO_SHORT = {};\nfor (let i = 0; i < 256; i++) {\n    let encodedByte = i.toString(16).toLowerCase();\n    if (encodedByte.length === 1) {\n        encodedByte = `0${encodedByte}`;\n    }\n    SHORT_TO_HEX[i] = encodedByte;\n    HEX_TO_SHORT[encodedByte] = i;\n}\nexport function fromHex(encoded) {\n    if (encoded.length % 2 !== 0) {\n        throw new Error(\"Hex encoded strings must have an even number length\");\n    }\n    const out = new Uint8Array(encoded.length / 2);\n    for (let i = 0; i < encoded.length; i += 2) {\n        const encodedByte = encoded.slice(i, i + 2).toLowerCase();\n        if (encodedByte in HEX_TO_SHORT) {\n            out[i / 2] = HEX_TO_SHORT[encodedByte];\n        }\n        else {\n            throw new Error(`Cannot decode unrecognized sequence ${encodedByte} as hexadecimal`);\n        }\n    }\n    return out;\n}\nexport function toHex(bytes) {\n    let out = \"\";\n    for (let i = 0; i < bytes.byteLength; i++) {\n        out += SHORT_TO_HEX[bytes[i]];\n    }\n    return out;\n}\n","export const ALGORITHM_QUERY_PARAM = \"X-Amz-Algorithm\";\nexport const CREDENTIAL_QUERY_PARAM = \"X-Amz-Credential\";\nexport const AMZ_DATE_QUERY_PARAM = \"X-Amz-Date\";\nexport const SIGNED_HEADERS_QUERY_PARAM = \"X-Amz-SignedHeaders\";\nexport const EXPIRES_QUERY_PARAM = \"X-Amz-Expires\";\nexport const SIGNATURE_QUERY_PARAM = \"X-Amz-Signature\";\nexport const TOKEN_QUERY_PARAM = \"X-Amz-Security-Token\";\nexport const REGION_SET_PARAM = \"X-Amz-Region-Set\";\nexport const AUTH_HEADER = \"authorization\";\nexport const AMZ_DATE_HEADER = AMZ_DATE_QUERY_PARAM.toLowerCase();\nexport const DATE_HEADER = \"date\";\nexport const GENERATED_HEADERS = [AUTH_HEADER, AMZ_DATE_HEADER, DATE_HEADER];\nexport const SIGNATURE_HEADER = SIGNATURE_QUERY_PARAM.toLowerCase();\nexport const SHA256_HEADER = \"x-amz-content-sha256\";\nexport const TOKEN_HEADER = TOKEN_QUERY_PARAM.toLowerCase();\nexport const HOST_HEADER = \"host\";\nexport const ALWAYS_UNSIGNABLE_HEADERS = {\n    authorization: true,\n    \"cache-control\": true,\n    connection: true,\n    expect: true,\n    from: true,\n    \"keep-alive\": true,\n    \"max-forwards\": true,\n    pragma: true,\n    referer: true,\n    te: true,\n    trailer: true,\n    \"transfer-encoding\": true,\n    upgrade: true,\n    \"user-agent\": true,\n    \"x-amzn-trace-id\": true,\n};\nexport const PROXY_HEADER_PATTERN = /^proxy-/;\nexport const SEC_HEADER_PATTERN = /^sec-/;\nexport const UNSIGNABLE_PATTERNS = [/^proxy-/i, /^sec-/i];\nexport const ALGORITHM_IDENTIFIER = \"AWS4-HMAC-SHA256\";\nexport const ALGORITHM_IDENTIFIER_V4A = \"AWS4-ECDSA-P256-SHA256\";\nexport const EVENT_ALGORITHM_IDENTIFIER = \"AWS4-HMAC-SHA256-PAYLOAD\";\nexport const UNSIGNED_PAYLOAD = \"UNSIGNED-PAYLOAD\";\nexport const MAX_CACHE_SIZE = 50;\nexport const KEY_TYPE_IDENTIFIER = \"aws4_request\";\nexport const MAX_PRESIGNED_TTL = 60 * 60 * 24 * 7;\n","import { toHex } from \"@aws-sdk/util-hex-encoding\";\nimport { KEY_TYPE_IDENTIFIER, MAX_CACHE_SIZE } from \"./constants\";\nconst signingKeyCache = {};\nconst cacheQueue = [];\nexport const createScope = (shortDate, region, service) => `${shortDate}/${region}/${service}/${KEY_TYPE_IDENTIFIER}`;\nexport const getSigningKey = async (sha256Constructor, credentials, shortDate, region, service) => {\n    const credsHash = await hmac(sha256Constructor, credentials.secretAccessKey, credentials.accessKeyId);\n    const cacheKey = `${shortDate}:${region}:${service}:${toHex(credsHash)}:${credentials.sessionToken}`;\n    if (cacheKey in signingKeyCache) {\n        return signingKeyCache[cacheKey];\n    }\n    cacheQueue.push(cacheKey);\n    while (cacheQueue.length > MAX_CACHE_SIZE) {\n        delete signingKeyCache[cacheQueue.shift()];\n    }\n    let key = `AWS4${credentials.secretAccessKey}`;\n    for (const signable of [shortDate, region, service, KEY_TYPE_IDENTIFIER]) {\n        key = await hmac(sha256Constructor, key, signable);\n    }\n    return (signingKeyCache[cacheKey] = key);\n};\nexport const clearCredentialCache = () => {\n    cacheQueue.length = 0;\n    Object.keys(signingKeyCache).forEach((cacheKey) => {\n        delete signingKeyCache[cacheKey];\n    });\n};\nconst hmac = (ctor, secret, data) => {\n    const hash = new ctor(secret);\n    hash.update(data);\n    return hash.digest();\n};\n","import { ALWAYS_UNSIGNABLE_HEADERS, PROXY_HEADER_PATTERN, SEC_HEADER_PATTERN } from \"./constants\";\nexport const getCanonicalHeaders = ({ headers }, unsignableHeaders, signableHeaders) => {\n    const canonical = {};\n    for (const headerName of Object.keys(headers).sort()) {\n        if (headers[headerName] == undefined) {\n            continue;\n        }\n        const canonicalHeaderName = headerName.toLowerCase();\n        if (canonicalHeaderName in ALWAYS_UNSIGNABLE_HEADERS ||\n            unsignableHeaders?.has(canonicalHeaderName) ||\n            PROXY_HEADER_PATTERN.test(canonicalHeaderName) ||\n            SEC_HEADER_PATTERN.test(canonicalHeaderName)) {\n            if (!signableHeaders || (signableHeaders && !signableHeaders.has(canonicalHeaderName))) {\n                continue;\n            }\n        }\n        canonical[canonicalHeaderName] = headers[headerName].trim().replace(/\\s+/g, \" \");\n    }\n    return canonical;\n};\n","export const escapeUri = (uri) => encodeURIComponent(uri).replace(/[!'()*]/g, hexEncode);\nconst hexEncode = (c) => `%${c.charCodeAt(0).toString(16).toUpperCase()}`;\n","export const isArrayBuffer = (arg) => (typeof ArrayBuffer === \"function\" && arg instanceof ArrayBuffer) ||\n    Object.prototype.toString.call(arg) === \"[object ArrayBuffer]\";\n","import { isArrayBuffer } from \"@aws-sdk/is-array-buffer\";\nimport { toHex } from \"@aws-sdk/util-hex-encoding\";\nimport { SHA256_HEADER, UNSIGNED_PAYLOAD } from \"./constants\";\nexport const getPayloadHash = async ({ headers, body }, hashConstructor) => {\n    for (const headerName of Object.keys(headers)) {\n        if (headerName.toLowerCase() === SHA256_HEADER) {\n            return headers[headerName];\n        }\n    }\n    if (body == undefined) {\n        return \"e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855\";\n    }\n    else if (typeof body === \"string\" || ArrayBuffer.isView(body) || isArrayBuffer(body)) {\n        const hashCtor = new hashConstructor();\n        hashCtor.update(body);\n        return toHex(await hashCtor.digest());\n    }\n    return UNSIGNED_PAYLOAD;\n};\n","export const cloneRequest = ({ headers, query, ...rest }) => ({\n    ...rest,\n    headers: { ...headers },\n    query: query ? cloneQuery(query) : undefined,\n});\nexport const cloneQuery = (query) => Object.keys(query).reduce((carry, paramName) => {\n    const param = query[paramName];\n    return {\n        ...carry,\n        [paramName]: Array.isArray(param) ? [...param] : param,\n    };\n}, {});\n","import { cloneRequest } from \"./cloneRequest\";\nimport { GENERATED_HEADERS } from \"./constants\";\nexport const prepareRequest = (request) => {\n    request = typeof request.clone === \"function\" ? request.clone() : cloneRequest(request);\n    for (const headerName of Object.keys(request.headers)) {\n        if (GENERATED_HEADERS.indexOf(headerName.toLowerCase()) > -1) {\n            delete request.headers[headerName];\n        }\n    }\n    return request;\n};\n","export const iso8601 = (time) => toDate(time)\n    .toISOString()\n    .replace(/\\.\\d{3}Z$/, \"Z\");\nexport const toDate = (time) => {\n    if (typeof time === \"number\") {\n        return new Date(time * 1000);\n    }\n    if (typeof time === \"string\") {\n        if (Number(time)) {\n            return new Date(Number(time) * 1000);\n        }\n        return new Date(time);\n    }\n    return time;\n};\n","import { toHex } from \"@aws-sdk/util-hex-encoding\";\nimport { normalizeProvider } from \"@aws-sdk/util-middleware\";\nimport { ALGORITHM_IDENTIFIER, ALGORITHM_QUERY_PARAM, AMZ_DATE_HEADER, AMZ_DATE_QUERY_PARAM, AUTH_HEADER, CREDENTIAL_QUERY_PARAM, EVENT_ALGORITHM_IDENTIFIER, EXPIRES_QUERY_PARAM, MAX_PRESIGNED_TTL, SHA256_HEADER, SIGNATURE_QUERY_PARAM, SIGNED_HEADERS_QUERY_PARAM, TOKEN_HEADER, TOKEN_QUERY_PARAM, } from \"./constants\";\nimport { createScope, getSigningKey } from \"./credentialDerivation\";\nimport { getCanonicalHeaders } from \"./getCanonicalHeaders\";\nimport { getCanonicalQuery } from \"./getCanonicalQuery\";\nimport { getPayloadHash } from \"./getPayloadHash\";\nimport { hasHeader } from \"./headerUtil\";\nimport { moveHeadersToQuery } from \"./moveHeadersToQuery\";\nimport { prepareRequest } from \"./prepareRequest\";\nimport { iso8601 } from \"./utilDate\";\nexport class SignatureV4 {\n    constructor({ applyChecksum, credentials, region, service, sha256, uriEscapePath = true, }) {\n        this.service = service;\n        this.sha256 = sha256;\n        this.uriEscapePath = uriEscapePath;\n        this.applyChecksum = typeof applyChecksum === \"boolean\" ? applyChecksum : true;\n        this.regionProvider = normalizeProvider(region);\n        this.credentialProvider = normalizeProvider(credentials);\n    }\n    async presign(originalRequest, options = {}) {\n        const { signingDate = new Date(), expiresIn = 3600, unsignableHeaders, unhoistableHeaders, signableHeaders, signingRegion, signingService, } = options;\n        const credentials = await this.credentialProvider();\n        this.validateResolvedCredentials(credentials);\n        const region = signingRegion ?? (await this.regionProvider());\n        const { longDate, shortDate } = formatDate(signingDate);\n        if (expiresIn > MAX_PRESIGNED_TTL) {\n            return Promise.reject(\"Signature version 4 presigned URLs\" + \" must have an expiration date less than one week in\" + \" the future\");\n        }\n        const scope = createScope(shortDate, region, signingService ?? this.service);\n        const request = moveHeadersToQuery(prepareRequest(originalRequest), { unhoistableHeaders });\n        if (credentials.sessionToken) {\n            request.query[TOKEN_QUERY_PARAM] = credentials.sessionToken;\n        }\n        request.query[ALGORITHM_QUERY_PARAM] = ALGORITHM_IDENTIFIER;\n        request.query[CREDENTIAL_QUERY_PARAM] = `${credentials.accessKeyId}/${scope}`;\n        request.query[AMZ_DATE_QUERY_PARAM] = longDate;\n        request.query[EXPIRES_QUERY_PARAM] = expiresIn.toString(10);\n        const canonicalHeaders = getCanonicalHeaders(request, unsignableHeaders, signableHeaders);\n        request.query[SIGNED_HEADERS_QUERY_PARAM] = getCanonicalHeaderList(canonicalHeaders);\n        request.query[SIGNATURE_QUERY_PARAM] = await this.getSignature(longDate, scope, this.getSigningKey(credentials, region, shortDate, signingService), this.createCanonicalRequest(request, canonicalHeaders, await getPayloadHash(originalRequest, this.sha256)));\n        return request;\n    }\n    async sign(toSign, options) {\n        if (typeof toSign === \"string\") {\n            return this.signString(toSign, options);\n        }\n        else if (toSign.headers && toSign.payload) {\n            return this.signEvent(toSign, options);\n        }\n        else {\n            return this.signRequest(toSign, options);\n        }\n    }\n    async signEvent({ headers, payload }, { signingDate = new Date(), priorSignature, signingRegion, signingService }) {\n        const region = signingRegion ?? (await this.regionProvider());\n        const { shortDate, longDate } = formatDate(signingDate);\n        const scope = createScope(shortDate, region, signingService ?? this.service);\n        const hashedPayload = await getPayloadHash({ headers: {}, body: payload }, this.sha256);\n        const hash = new this.sha256();\n        hash.update(headers);\n        const hashedHeaders = toHex(await hash.digest());\n        const stringToSign = [\n            EVENT_ALGORITHM_IDENTIFIER,\n            longDate,\n            scope,\n            priorSignature,\n            hashedHeaders,\n            hashedPayload,\n        ].join(\"\\n\");\n        return this.signString(stringToSign, { signingDate, signingRegion: region, signingService });\n    }\n    async signString(stringToSign, { signingDate = new Date(), signingRegion, signingService } = {}) {\n        const credentials = await this.credentialProvider();\n        this.validateResolvedCredentials(credentials);\n        const region = signingRegion ?? (await this.regionProvider());\n        const { shortDate } = formatDate(signingDate);\n        const hash = new this.sha256(await this.getSigningKey(credentials, region, shortDate, signingService));\n        hash.update(stringToSign);\n        return toHex(await hash.digest());\n    }\n    async signRequest(requestToSign, { signingDate = new Date(), signableHeaders, unsignableHeaders, signingRegion, signingService, } = {}) {\n        const credentials = await this.credentialProvider();\n        this.validateResolvedCredentials(credentials);\n        const region = signingRegion ?? (await this.regionProvider());\n        const request = prepareRequest(requestToSign);\n        const { longDate, shortDate } = formatDate(signingDate);\n        const scope = createScope(shortDate, region, signingService ?? this.service);\n        request.headers[AMZ_DATE_HEADER] = longDate;\n        if (credentials.sessionToken) {\n            request.headers[TOKEN_HEADER] = credentials.sessionToken;\n        }\n        const payloadHash = await getPayloadHash(request, this.sha256);\n        if (!hasHeader(SHA256_HEADER, request.headers) && this.applyChecksum) {\n            request.headers[SHA256_HEADER] = payloadHash;\n        }\n        const canonicalHeaders = getCanonicalHeaders(request, unsignableHeaders, signableHeaders);\n        const signature = await this.getSignature(longDate, scope, this.getSigningKey(credentials, region, shortDate, signingService), this.createCanonicalRequest(request, canonicalHeaders, payloadHash));\n        request.headers[AUTH_HEADER] =\n            `${ALGORITHM_IDENTIFIER} ` +\n                `Credential=${credentials.accessKeyId}/${scope}, ` +\n                `SignedHeaders=${getCanonicalHeaderList(canonicalHeaders)}, ` +\n                `Signature=${signature}`;\n        return request;\n    }\n    createCanonicalRequest(request, canonicalHeaders, payloadHash) {\n        const sortedHeaders = Object.keys(canonicalHeaders).sort();\n        return `${request.method}\n${this.getCanonicalPath(request)}\n${getCanonicalQuery(request)}\n${sortedHeaders.map((name) => `${name}:${canonicalHeaders[name]}`).join(\"\\n\")}\n\n${sortedHeaders.join(\";\")}\n${payloadHash}`;\n    }\n    async createStringToSign(longDate, credentialScope, canonicalRequest) {\n        const hash = new this.sha256();\n        hash.update(canonicalRequest);\n        const hashedRequest = await hash.digest();\n        return `${ALGORITHM_IDENTIFIER}\n${longDate}\n${credentialScope}\n${toHex(hashedRequest)}`;\n    }\n    getCanonicalPath({ path }) {\n        if (this.uriEscapePath) {\n            const normalizedPathSegments = [];\n            for (const pathSegment of path.split(\"/\")) {\n                if (pathSegment?.length === 0)\n                    continue;\n                if (pathSegment === \".\")\n                    continue;\n                if (pathSegment === \"..\") {\n                    normalizedPathSegments.pop();\n                }\n                else {\n                    normalizedPathSegments.push(pathSegment);\n                }\n            }\n            const normalizedPath = `${path?.startsWith(\"/\") ? \"/\" : \"\"}${normalizedPathSegments.join(\"/\")}${normalizedPathSegments.length > 0 && path?.endsWith(\"/\") ? \"/\" : \"\"}`;\n            const doubleEncoded = encodeURIComponent(normalizedPath);\n            return doubleEncoded.replace(/%2F/g, \"/\");\n        }\n        return path;\n    }\n    async getSignature(longDate, credentialScope, keyPromise, canonicalRequest) {\n        const stringToSign = await this.createStringToSign(longDate, credentialScope, canonicalRequest);\n        const hash = new this.sha256(await keyPromise);\n        hash.update(stringToSign);\n        return toHex(await hash.digest());\n    }\n    getSigningKey(credentials, region, shortDate, service) {\n        return getSigningKey(this.sha256, credentials, shortDate, region, service || this.service);\n    }\n    validateResolvedCredentials(credentials) {\n        if (typeof credentials !== \"object\" ||\n            typeof credentials.accessKeyId !== \"string\" ||\n            typeof credentials.secretAccessKey !== \"string\") {\n            throw new Error(\"Resolved credential object is not valid\");\n        }\n    }\n}\nconst formatDate = (now) => {\n    const longDate = iso8601(now).replace(/[\\-:]/g, \"\");\n    return {\n        longDate,\n        shortDate: longDate.slice(0, 8),\n    };\n};\nconst getCanonicalHeaderList = (headers) => Object.keys(headers).sort().join(\";\");\n","import { cloneRequest } from \"./cloneRequest\";\nexport const moveHeadersToQuery = (request, options = {}) => {\n    const { headers, query = {} } = typeof request.clone === \"function\" ? request.clone() : cloneRequest(request);\n    for (const name of Object.keys(headers)) {\n        const lname = name.toLowerCase();\n        if (lname.slice(0, 6) === \"x-amz-\" && !options.unhoistableHeaders?.has(lname)) {\n            query[name] = headers[name];\n            delete headers[name];\n        }\n    }\n    return {\n        ...request,\n        headers,\n        query,\n    };\n};\n","export const hasHeader = (soughtHeader, headers) => {\n    soughtHeader = soughtHeader.toLowerCase();\n    for (const headerName of Object.keys(headers)) {\n        if (soughtHeader === headerName.toLowerCase()) {\n            return true;\n        }\n    }\n    return false;\n};\nexport const getHeaderValue = (soughtHeader, headers) => {\n    soughtHeader = soughtHeader.toLowerCase();\n    for (const headerName of Object.keys(headers)) {\n        if (soughtHeader === headerName.toLowerCase()) {\n            return headers[headerName];\n        }\n    }\n    return undefined;\n};\nexport const deleteHeader = (soughtHeader, headers) => {\n    soughtHeader = soughtHeader.toLowerCase();\n    for (const headerName of Object.keys(headers)) {\n        if (soughtHeader === headerName.toLowerCase()) {\n            delete headers[headerName];\n        }\n    }\n};\n","import { escapeUri } from \"@aws-sdk/util-uri-escape\";\nimport { SIGNATURE_HEADER } from \"./constants\";\nexport const getCanonicalQuery = ({ query = {} }) => {\n    const keys = [];\n    const serialized = {};\n    for (const key of Object.keys(query).sort()) {\n        if (key.toLowerCase() === SIGNATURE_HEADER) {\n            continue;\n        }\n        keys.push(key);\n        const value = query[key];\n        if (typeof value === \"string\") {\n            serialized[key] = `${escapeUri(key)}=${escapeUri(value)}`;\n        }\n        else if (Array.isArray(value)) {\n            serialized[key] = value\n                .slice(0)\n                .sort()\n                .reduce((encoded, value) => encoded.concat([`${escapeUri(key)}=${escapeUri(value)}`]), [])\n                .join(\"&\");\n        }\n    }\n    return keys\n        .map((key) => serialized[key])\n        .filter((serialized) => serialized)\n        .join(\"&\");\n};\n","import { memoize } from \"@aws-sdk/property-provider\";\nimport { SignatureV4 } from \"@aws-sdk/signature-v4\";\nimport { normalizeProvider } from \"@aws-sdk/util-middleware\";\nconst CREDENTIAL_EXPIRE_WINDOW = 300000;\nexport const resolveAwsAuthConfig = (input) => {\n    const normalizedCreds = input.credentials\n        ? normalizeCredentialProvider(input.credentials)\n        : input.credentialDefaultProvider(input);\n    const { signingEscapePath = true, systemClockOffset = input.systemClockOffset || 0, sha256 } = input;\n    let signer;\n    if (input.signer) {\n        signer = normalizeProvider(input.signer);\n    }\n    else if (input.regionInfoProvider) {\n        signer = () => normalizeProvider(input.region)()\n            .then(async (region) => [\n            (await input.regionInfoProvider(region, {\n                useFipsEndpoint: await input.useFipsEndpoint(),\n                useDualstackEndpoint: await input.useDualstackEndpoint(),\n            })) || {},\n            region,\n        ])\n            .then(([regionInfo, region]) => {\n            const { signingRegion, signingService } = regionInfo;\n            input.signingRegion = input.signingRegion || signingRegion || region;\n            input.signingName = input.signingName || signingService || input.serviceId;\n            const params = {\n                ...input,\n                credentials: normalizedCreds,\n                region: input.signingRegion,\n                service: input.signingName,\n                sha256,\n                uriEscapePath: signingEscapePath,\n            };\n            const SignerCtor = input.signerConstructor || SignatureV4;\n            return new SignerCtor(params);\n        });\n    }\n    else {\n        signer = async (authScheme) => {\n            authScheme = Object.assign({}, {\n                name: \"sigv4\",\n                signingName: input.signingName || input.defaultSigningName,\n                signingRegion: await normalizeProvider(input.region)(),\n                properties: {},\n            }, authScheme);\n            const signingRegion = authScheme.signingRegion;\n            const signingService = authScheme.signingName;\n            input.signingRegion = input.signingRegion || signingRegion;\n            input.signingName = input.signingName || signingService || input.serviceId;\n            const params = {\n                ...input,\n                credentials: normalizedCreds,\n                region: input.signingRegion,\n                service: input.signingName,\n                sha256,\n                uriEscapePath: signingEscapePath,\n            };\n            const SignerCtor = input.signerConstructor || SignatureV4;\n            return new SignerCtor(params);\n        };\n    }\n    return {\n        ...input,\n        systemClockOffset,\n        signingEscapePath,\n        credentials: normalizedCreds,\n        signer,\n    };\n};\nexport const resolveSigV4AuthConfig = (input) => {\n    const normalizedCreds = input.credentials\n        ? normalizeCredentialProvider(input.credentials)\n        : input.credentialDefaultProvider(input);\n    const { signingEscapePath = true, systemClockOffset = input.systemClockOffset || 0, sha256 } = input;\n    let signer;\n    if (input.signer) {\n        signer = normalizeProvider(input.signer);\n    }\n    else {\n        signer = normalizeProvider(new SignatureV4({\n            credentials: normalizedCreds,\n            region: input.region,\n            service: input.signingName,\n            sha256,\n            uriEscapePath: signingEscapePath,\n        }));\n    }\n    return {\n        ...input,\n        systemClockOffset,\n        signingEscapePath,\n        credentials: normalizedCreds,\n        signer,\n    };\n};\nconst normalizeCredentialProvider = (credentials) => {\n    if (typeof credentials === \"function\") {\n        return memoize(credentials, (credentials) => credentials.expiration !== undefined &&\n            credentials.expiration.getTime() - Date.now() < CREDENTIAL_EXPIRE_WINDOW, (credentials) => credentials.expiration !== undefined);\n    }\n    return normalizeProvider(credentials);\n};\n","export const getSkewCorrectedDate = (systemClockOffset) => new Date(Date.now() + systemClockOffset);\n","import { isClockSkewed } from \"./isClockSkewed\";\nexport const getUpdatedSystemClockOffset = (clockTime, currentSystemClockOffset) => {\n    const clockTimeInMs = Date.parse(clockTime);\n    if (isClockSkewed(clockTimeInMs, currentSystemClockOffset)) {\n        return clockTimeInMs - Date.now();\n    }\n    return currentSystemClockOffset;\n};\n","import { getSkewCorrectedDate } from \"./getSkewCorrectedDate\";\nexport const isClockSkewed = (clockTime, systemClockOffset) => Math.abs(getSkewCorrectedDate(systemClockOffset).getTime() - clockTime) >= 300000;\n","import { HttpRequest, HttpResponse } from \"@aws-sdk/protocol-http\";\nimport { getSkewCorrectedDate } from \"./utils/getSkewCorrectedDate\";\nimport { getUpdatedSystemClockOffset } from \"./utils/getUpdatedSystemClockOffset\";\nexport const awsAuthMiddleware = (options) => (next, context) => async function (args) {\n    if (!HttpRequest.isInstance(args.request))\n        return next(args);\n    const authScheme = context.endpointV2?.properties?.authSchemes?.[0];\n    const multiRegionOverride = authScheme?.name === \"sigv4a\" ? authScheme?.signingRegionSet?.join(\",\") : undefined;\n    const signer = await options.signer(authScheme);\n    const output = await next({\n        ...args,\n        request: await signer.sign(args.request, {\n            signingDate: getSkewCorrectedDate(options.systemClockOffset),\n            signingRegion: multiRegionOverride || context[\"signing_region\"],\n            signingService: context[\"signing_service\"],\n        }),\n    }).catch((error) => {\n        const serverTime = error.ServerTime ?? getDateHeader(error.$response);\n        if (serverTime) {\n            options.systemClockOffset = getUpdatedSystemClockOffset(serverTime, options.systemClockOffset);\n        }\n        throw error;\n    });\n    const dateHeader = getDateHeader(output.response);\n    if (dateHeader) {\n        options.systemClockOffset = getUpdatedSystemClockOffset(dateHeader, options.systemClockOffset);\n    }\n    return output;\n};\nconst getDateHeader = (response) => HttpResponse.isInstance(response) ? response.headers?.date ?? response.headers?.Date : undefined;\nexport const awsAuthMiddlewareOptions = {\n    name: \"awsAuthMiddleware\",\n    tags: [\"SIGNATURE\", \"AWSAUTH\"],\n    relation: \"after\",\n    toMiddleware: \"retryMiddleware\",\n    override: true,\n};\nexport const getAwsAuthPlugin = (options) => ({\n    applyToStack: (clientStack) => {\n        clientStack.addRelativeTo(awsAuthMiddleware(options), awsAuthMiddlewareOptions);\n    },\n});\nexport const getSigV4AuthPlugin = getAwsAuthPlugin;\n","export function resolveUserAgentConfig(input) {\n    return {\n        ...input,\n        customUserAgent: typeof input.customUserAgent === \"string\" ? [[input.customUserAgent]] : input.customUserAgent,\n    };\n}\n","export const USER_AGENT = \"user-agent\";\nexport const X_AMZ_USER_AGENT = \"x-amz-user-agent\";\nexport const SPACE = \" \";\nexport const UA_ESCAPE_REGEX = /[^\\!\\#\\$\\%\\&\\'\\*\\+\\-\\.\\^\\_\\`\\|\\~\\d\\w]/g;\n","import { HttpRequest } from \"@aws-sdk/protocol-http\";\nimport { SPACE, UA_ESCAPE_REGEX, USER_AGENT, X_AMZ_USER_AGENT } from \"./constants\";\nexport const userAgentMiddleware = (options) => (next, context) => async (args) => {\n    const { request } = args;\n    if (!HttpRequest.isInstance(request))\n        return next(args);\n    const { headers } = request;\n    const userAgent = context?.userAgent?.map(escapeUserAgent) || [];\n    const defaultUserAgent = (await options.defaultUserAgentProvider()).map(escapeUserAgent);\n    const customUserAgent = options?.customUserAgent?.map(escapeUserAgent) || [];\n    const sdkUserAgentValue = [...defaultUserAgent, ...userAgent, ...customUserAgent].join(SPACE);\n    const normalUAValue = [\n        ...defaultUserAgent.filter((section) => section.startsWith(\"aws-sdk-\")),\n        ...customUserAgent,\n    ].join(SPACE);\n    if (options.runtime !== \"browser\") {\n        if (normalUAValue) {\n            headers[X_AMZ_USER_AGENT] = headers[X_AMZ_USER_AGENT]\n                ? `${headers[USER_AGENT]} ${normalUAValue}`\n                : normalUAValue;\n        }\n        headers[USER_AGENT] = sdkUserAgentValue;\n    }\n    else {\n        headers[X_AMZ_USER_AGENT] = sdkUserAgentValue;\n    }\n    return next({\n        ...args,\n        request,\n    });\n};\nconst escapeUserAgent = ([name, version]) => {\n    const prefixSeparatorIndex = name.indexOf(\"/\");\n    const prefix = name.substring(0, prefixSeparatorIndex);\n    let uaName = name.substring(prefixSeparatorIndex + 1);\n    if (prefix === \"api\") {\n        uaName = uaName.toLowerCase();\n    }\n    return [prefix, uaName, version]\n        .filter((item) => item && item.length > 0)\n        .map((item) => item?.replace(UA_ESCAPE_REGEX, \"_\"))\n        .join(\"/\");\n};\nexport const getUserAgentMiddlewareOptions = {\n    name: \"getUserAgentMiddleware\",\n    step: \"build\",\n    priority: \"low\",\n    tags: [\"SET_USER_AGENT\", \"USER_AGENT\"],\n    override: true,\n};\nexport const getUserAgentPlugin = (config) => ({\n    applyToStack: (clientStack) => {\n        clientStack.add(userAgentMiddleware(config), getUserAgentMiddlewareOptions);\n    },\n});\n","export class NoOpLogger {\n    trace() { }\n    debug() { }\n    info() { }\n    warn() { }\n    error() { }\n}\n","export const constructStack = () => {\n    let absoluteEntries = [];\n    let relativeEntries = [];\n    const entriesNameSet = new Set();\n    const sort = (entries) => entries.sort((a, b) => stepWeights[b.step] - stepWeights[a.step] ||\n        priorityWeights[b.priority || \"normal\"] - priorityWeights[a.priority || \"normal\"]);\n    const removeByName = (toRemove) => {\n        let isRemoved = false;\n        const filterCb = (entry) => {\n            if (entry.name && entry.name === toRemove) {\n                isRemoved = true;\n                entriesNameSet.delete(toRemove);\n                return false;\n            }\n            return true;\n        };\n        absoluteEntries = absoluteEntries.filter(filterCb);\n        relativeEntries = relativeEntries.filter(filterCb);\n        return isRemoved;\n    };\n    const removeByReference = (toRemove) => {\n        let isRemoved = false;\n        const filterCb = (entry) => {\n            if (entry.middleware === toRemove) {\n                isRemoved = true;\n                if (entry.name)\n                    entriesNameSet.delete(entry.name);\n                return false;\n            }\n            return true;\n        };\n        absoluteEntries = absoluteEntries.filter(filterCb);\n        relativeEntries = relativeEntries.filter(filterCb);\n        return isRemoved;\n    };\n    const cloneTo = (toStack) => {\n        absoluteEntries.forEach((entry) => {\n            toStack.add(entry.middleware, { ...entry });\n        });\n        relativeEntries.forEach((entry) => {\n            toStack.addRelativeTo(entry.middleware, { ...entry });\n        });\n        return toStack;\n    };\n    const expandRelativeMiddlewareList = (from) => {\n        const expandedMiddlewareList = [];\n        from.before.forEach((entry) => {\n            if (entry.before.length === 0 && entry.after.length === 0) {\n                expandedMiddlewareList.push(entry);\n            }\n            else {\n                expandedMiddlewareList.push(...expandRelativeMiddlewareList(entry));\n            }\n        });\n        expandedMiddlewareList.push(from);\n        from.after.reverse().forEach((entry) => {\n            if (entry.before.length === 0 && entry.after.length === 0) {\n                expandedMiddlewareList.push(entry);\n            }\n            else {\n                expandedMiddlewareList.push(...expandRelativeMiddlewareList(entry));\n            }\n        });\n        return expandedMiddlewareList;\n    };\n    const getMiddlewareList = (debug = false) => {\n        const normalizedAbsoluteEntries = [];\n        const normalizedRelativeEntries = [];\n        const normalizedEntriesNameMap = {};\n        absoluteEntries.forEach((entry) => {\n            const normalizedEntry = {\n                ...entry,\n                before: [],\n                after: [],\n            };\n            if (normalizedEntry.name)\n                normalizedEntriesNameMap[normalizedEntry.name] = normalizedEntry;\n            normalizedAbsoluteEntries.push(normalizedEntry);\n        });\n        relativeEntries.forEach((entry) => {\n            const normalizedEntry = {\n                ...entry,\n                before: [],\n                after: [],\n            };\n            if (normalizedEntry.name)\n                normalizedEntriesNameMap[normalizedEntry.name] = normalizedEntry;\n            normalizedRelativeEntries.push(normalizedEntry);\n        });\n        normalizedRelativeEntries.forEach((entry) => {\n            if (entry.toMiddleware) {\n                const toMiddleware = normalizedEntriesNameMap[entry.toMiddleware];\n                if (toMiddleware === undefined) {\n                    if (debug) {\n                        return;\n                    }\n                    throw new Error(`${entry.toMiddleware} is not found when adding ${entry.name || \"anonymous\"} middleware ${entry.relation} ${entry.toMiddleware}`);\n                }\n                if (entry.relation === \"after\") {\n                    toMiddleware.after.push(entry);\n                }\n                if (entry.relation === \"before\") {\n                    toMiddleware.before.push(entry);\n                }\n            }\n        });\n        const mainChain = sort(normalizedAbsoluteEntries)\n            .map(expandRelativeMiddlewareList)\n            .reduce((wholeList, expendedMiddlewareList) => {\n            wholeList.push(...expendedMiddlewareList);\n            return wholeList;\n        }, []);\n        return mainChain;\n    };\n    const stack = {\n        add: (middleware, options = {}) => {\n            const { name, override } = options;\n            const entry = {\n                step: \"initialize\",\n                priority: \"normal\",\n                middleware,\n                ...options,\n            };\n            if (name) {\n                if (entriesNameSet.has(name)) {\n                    if (!override)\n                        throw new Error(`Duplicate middleware name '${name}'`);\n                    const toOverrideIndex = absoluteEntries.findIndex((entry) => entry.name === name);\n                    const toOverride = absoluteEntries[toOverrideIndex];\n                    if (toOverride.step !== entry.step || toOverride.priority !== entry.priority) {\n                        throw new Error(`\"${name}\" middleware with ${toOverride.priority} priority in ${toOverride.step} step cannot be ` +\n                            `overridden by same-name middleware with ${entry.priority} priority in ${entry.step} step.`);\n                    }\n                    absoluteEntries.splice(toOverrideIndex, 1);\n                }\n                entriesNameSet.add(name);\n            }\n            absoluteEntries.push(entry);\n        },\n        addRelativeTo: (middleware, options) => {\n            const { name, override } = options;\n            const entry = {\n                middleware,\n                ...options,\n            };\n            if (name) {\n                if (entriesNameSet.has(name)) {\n                    if (!override)\n                        throw new Error(`Duplicate middleware name '${name}'`);\n                    const toOverrideIndex = relativeEntries.findIndex((entry) => entry.name === name);\n                    const toOverride = relativeEntries[toOverrideIndex];\n                    if (toOverride.toMiddleware !== entry.toMiddleware || toOverride.relation !== entry.relation) {\n                        throw new Error(`\"${name}\" middleware ${toOverride.relation} \"${toOverride.toMiddleware}\" middleware cannot be overridden ` +\n                            `by same-name middleware ${entry.relation} \"${entry.toMiddleware}\" middleware.`);\n                    }\n                    relativeEntries.splice(toOverrideIndex, 1);\n                }\n                entriesNameSet.add(name);\n            }\n            relativeEntries.push(entry);\n        },\n        clone: () => cloneTo(constructStack()),\n        use: (plugin) => {\n            plugin.applyToStack(stack);\n        },\n        remove: (toRemove) => {\n            if (typeof toRemove === \"string\")\n                return removeByName(toRemove);\n            else\n                return removeByReference(toRemove);\n        },\n        removeByTag: (toRemove) => {\n            let isRemoved = false;\n            const filterCb = (entry) => {\n                const { tags, name } = entry;\n                if (tags && tags.includes(toRemove)) {\n                    if (name)\n                        entriesNameSet.delete(name);\n                    isRemoved = true;\n                    return false;\n                }\n                return true;\n            };\n            absoluteEntries = absoluteEntries.filter(filterCb);\n            relativeEntries = relativeEntries.filter(filterCb);\n            return isRemoved;\n        },\n        concat: (from) => {\n            const cloned = cloneTo(constructStack());\n            cloned.use(from);\n            return cloned;\n        },\n        applyToStack: cloneTo,\n        identify: () => {\n            return getMiddlewareList(true).map((mw) => {\n                return mw.name + \": \" + (mw.tags || []).join(\",\");\n            });\n        },\n        resolve: (handler, context) => {\n            for (const middleware of getMiddlewareList()\n                .map((entry) => entry.middleware)\n                .reverse()) {\n                handler = middleware(handler, context);\n            }\n            return handler;\n        },\n    };\n    return stack;\n};\nconst stepWeights = {\n    initialize: 5,\n    serialize: 4,\n    build: 3,\n    finalizeRequest: 2,\n    deserialize: 1,\n};\nconst priorityWeights = {\n    high: 3,\n    normal: 2,\n    low: 1,\n};\n","import { constructStack } from \"@aws-sdk/middleware-stack\";\nexport class Client {\n    constructor(config) {\n        this.middlewareStack = constructStack();\n        this.config = config;\n    }\n    send(command, optionsOrCb, cb) {\n        const options = typeof optionsOrCb !== \"function\" ? optionsOrCb : undefined;\n        const callback = typeof optionsOrCb === \"function\" ? optionsOrCb : cb;\n        const handler = command.resolveMiddleware(this.middlewareStack, this.config, options);\n        if (callback) {\n            handler(command)\n                .then((result) => callback(null, result.output), (err) => callback(err))\n                .catch(() => { });\n        }\n        else {\n            return handler(command).then((result) => result.output);\n        }\n    }\n    destroy() {\n        if (this.config.requestHandler.destroy)\n            this.config.requestHandler.destroy();\n    }\n}\n","import { constructStack } from \"@aws-sdk/middleware-stack\";\nexport class Command {\n    constructor() {\n        this.middlewareStack = constructStack();\n    }\n}\n","export const SENSITIVE_STRING = \"***SensitiveInformation***\";\n","export const parseBoolean = (value) => {\n    switch (value) {\n        case \"true\":\n            return true;\n        case \"false\":\n            return false;\n        default:\n            throw new Error(`Unable to parse boolean value \"${value}\"`);\n    }\n};\nexport const expectBoolean = (value) => {\n    if (value === null || value === undefined) {\n        return undefined;\n    }\n    if (typeof value === \"number\") {\n        if (value === 0 || value === 1) {\n            logger.warn(stackTraceWarning(`Expected boolean, got ${typeof value}: ${value}`));\n        }\n        if (value === 0) {\n            return false;\n        }\n        if (value === 1) {\n            return true;\n        }\n    }\n    if (typeof value === \"string\") {\n        const lower = value.toLowerCase();\n        if (lower === \"false\" || lower === \"true\") {\n            logger.warn(stackTraceWarning(`Expected boolean, got ${typeof value}: ${value}`));\n        }\n        if (lower === \"false\") {\n            return false;\n        }\n        if (lower === \"true\") {\n            return true;\n        }\n    }\n    if (typeof value === \"boolean\") {\n        return value;\n    }\n    throw new TypeError(`Expected boolean, got ${typeof value}: ${value}`);\n};\nexport const expectNumber = (value) => {\n    if (value === null || value === undefined) {\n        return undefined;\n    }\n    if (typeof value === \"string\") {\n        const parsed = parseFloat(value);\n        if (!Number.isNaN(parsed)) {\n            if (String(parsed) !== String(value)) {\n                logger.warn(stackTraceWarning(`Expected number but observed string: ${value}`));\n            }\n            return parsed;\n        }\n    }\n    if (typeof value === \"number\") {\n        return value;\n    }\n    throw new TypeError(`Expected number, got ${typeof value}: ${value}`);\n};\nconst MAX_FLOAT = Math.ceil(2 ** 127 * (2 - 2 ** -23));\nexport const expectFloat32 = (value) => {\n    const expected = expectNumber(value);\n    if (expected !== undefined && !Number.isNaN(expected) && expected !== Infinity && expected !== -Infinity) {\n        if (Math.abs(expected) > MAX_FLOAT) {\n            throw new TypeError(`Expected 32-bit float, got ${value}`);\n        }\n    }\n    return expected;\n};\nexport const expectLong = (value) => {\n    if (value === null || value === undefined) {\n        return undefined;\n    }\n    if (Number.isInteger(value) && !Number.isNaN(value)) {\n        return value;\n    }\n    throw new TypeError(`Expected integer, got ${typeof value}: ${value}`);\n};\nexport const expectInt = expectLong;\nexport const expectInt32 = (value) => expectSizedInt(value, 32);\nexport const expectShort = (value) => expectSizedInt(value, 16);\nexport const expectByte = (value) => expectSizedInt(value, 8);\nconst expectSizedInt = (value, size) => {\n    const expected = expectLong(value);\n    if (expected !== undefined && castInt(expected, size) !== expected) {\n        throw new TypeError(`Expected ${size}-bit integer, got ${value}`);\n    }\n    return expected;\n};\nconst castInt = (value, size) => {\n    switch (size) {\n        case 32:\n            return Int32Array.of(value)[0];\n        case 16:\n            return Int16Array.of(value)[0];\n        case 8:\n            return Int8Array.of(value)[0];\n    }\n};\nexport const expectNonNull = (value, location) => {\n    if (value === null || value === undefined) {\n        if (location) {\n            throw new TypeError(`Expected a non-null value for ${location}`);\n        }\n        throw new TypeError(\"Expected a non-null value\");\n    }\n    return value;\n};\nexport const expectObject = (value) => {\n    if (value === null || value === undefined) {\n        return undefined;\n    }\n    if (typeof value === \"object\" && !Array.isArray(value)) {\n        return value;\n    }\n    const receivedType = Array.isArray(value) ? \"array\" : typeof value;\n    throw new TypeError(`Expected object, got ${receivedType}: ${value}`);\n};\nexport const expectString = (value) => {\n    if (value === null || value === undefined) {\n        return undefined;\n    }\n    if (typeof value === \"string\") {\n        return value;\n    }\n    if ([\"boolean\", \"number\", \"bigint\"].includes(typeof value)) {\n        logger.warn(stackTraceWarning(`Expected string, got ${typeof value}: ${value}`));\n        return String(value);\n    }\n    throw new TypeError(`Expected string, got ${typeof value}: ${value}`);\n};\nexport const expectUnion = (value) => {\n    if (value === null || value === undefined) {\n        return undefined;\n    }\n    const asObject = expectObject(value);\n    const setKeys = Object.entries(asObject)\n        .filter(([, v]) => v != null)\n        .map(([k]) => k);\n    if (setKeys.length === 0) {\n        throw new TypeError(`Unions must have exactly one non-null member. None were found.`);\n    }\n    if (setKeys.length > 1) {\n        throw new TypeError(`Unions must have exactly one non-null member. Keys ${setKeys} were not null.`);\n    }\n    return asObject;\n};\nexport const strictParseDouble = (value) => {\n    if (typeof value == \"string\") {\n        return expectNumber(parseNumber(value));\n    }\n    return expectNumber(value);\n};\nexport const strictParseFloat = strictParseDouble;\nexport const strictParseFloat32 = (value) => {\n    if (typeof value == \"string\") {\n        return expectFloat32(parseNumber(value));\n    }\n    return expectFloat32(value);\n};\nconst NUMBER_REGEX = /(-?(?:0|[1-9]\\d*)(?:\\.\\d+)?(?:[eE][+-]?\\d+)?)|(-?Infinity)|(NaN)/g;\nconst parseNumber = (value) => {\n    const matches = value.match(NUMBER_REGEX);\n    if (matches === null || matches[0].length !== value.length) {\n        throw new TypeError(`Expected real number, got implicit NaN`);\n    }\n    return parseFloat(value);\n};\nexport const limitedParseDouble = (value) => {\n    if (typeof value == \"string\") {\n        return parseFloatString(value);\n    }\n    return expectNumber(value);\n};\nexport const handleFloat = limitedParseDouble;\nexport const limitedParseFloat = limitedParseDouble;\nexport const limitedParseFloat32 = (value) => {\n    if (typeof value == \"string\") {\n        return parseFloatString(value);\n    }\n    return expectFloat32(value);\n};\nconst parseFloatString = (value) => {\n    switch (value) {\n        case \"NaN\":\n            return NaN;\n        case \"Infinity\":\n            return Infinity;\n        case \"-Infinity\":\n            return -Infinity;\n        default:\n            throw new Error(`Unable to parse float value: ${value}`);\n    }\n};\nexport const strictParseLong = (value) => {\n    if (typeof value === \"string\") {\n        return expectLong(parseNumber(value));\n    }\n    return expectLong(value);\n};\nexport const strictParseInt = strictParseLong;\nexport const strictParseInt32 = (value) => {\n    if (typeof value === \"string\") {\n        return expectInt32(parseNumber(value));\n    }\n    return expectInt32(value);\n};\nexport const strictParseShort = (value) => {\n    if (typeof value === \"string\") {\n        return expectShort(parseNumber(value));\n    }\n    return expectShort(value);\n};\nexport const strictParseByte = (value) => {\n    if (typeof value === \"string\") {\n        return expectByte(parseNumber(value));\n    }\n    return expectByte(value);\n};\nconst stackTraceWarning = (message) => {\n    return String(new TypeError(message).stack || message)\n        .split(\"\\n\")\n        .slice(0, 5)\n        .filter((s) => !s.includes(\"stackTraceWarning\"))\n        .join(\"\\n\");\n};\nexport const logger = {\n    warn: console.warn,\n};\n","import { strictParseByte, strictParseDouble, strictParseFloat32, strictParseShort } from \"./parse-utils\";\nconst DAYS = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\nconst MONTHS = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\nexport function dateToUtcString(date) {\n    const year = date.getUTCFullYear();\n    const month = date.getUTCMonth();\n    const dayOfWeek = date.getUTCDay();\n    const dayOfMonthInt = date.getUTCDate();\n    const hoursInt = date.getUTCHours();\n    const minutesInt = date.getUTCMinutes();\n    const secondsInt = date.getUTCSeconds();\n    const dayOfMonthString = dayOfMonthInt < 10 ? `0${dayOfMonthInt}` : `${dayOfMonthInt}`;\n    const hoursString = hoursInt < 10 ? `0${hoursInt}` : `${hoursInt}`;\n    const minutesString = minutesInt < 10 ? `0${minutesInt}` : `${minutesInt}`;\n    const secondsString = secondsInt < 10 ? `0${secondsInt}` : `${secondsInt}`;\n    return `${DAYS[dayOfWeek]}, ${dayOfMonthString} ${MONTHS[month]} ${year} ${hoursString}:${minutesString}:${secondsString} GMT`;\n}\nconst RFC3339 = new RegExp(/^(\\d{4})-(\\d{2})-(\\d{2})[tT](\\d{2}):(\\d{2}):(\\d{2})(?:\\.(\\d+))?[zZ]$/);\nexport const parseRfc3339DateTime = (value) => {\n    if (value === null || value === undefined) {\n        return undefined;\n    }\n    if (typeof value !== \"string\") {\n        throw new TypeError(\"RFC-3339 date-times must be expressed as strings\");\n    }\n    const match = RFC3339.exec(value);\n    if (!match) {\n        throw new TypeError(\"Invalid RFC-3339 date-time value\");\n    }\n    const [_, yearStr, monthStr, dayStr, hours, minutes, seconds, fractionalMilliseconds] = match;\n    const year = strictParseShort(stripLeadingZeroes(yearStr));\n    const month = parseDateValue(monthStr, \"month\", 1, 12);\n    const day = parseDateValue(dayStr, \"day\", 1, 31);\n    return buildDate(year, month, day, { hours, minutes, seconds, fractionalMilliseconds });\n};\nconst IMF_FIXDATE = new RegExp(/^(?:Mon|Tue|Wed|Thu|Fri|Sat|Sun), (\\d{2}) (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) (\\d{4}) (\\d{1,2}):(\\d{2}):(\\d{2})(?:\\.(\\d+))? GMT$/);\nconst RFC_850_DATE = new RegExp(/^(?:Monday|Tuesday|Wednesday|Thursday|Friday|Saturday|Sunday), (\\d{2})-(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)-(\\d{2}) (\\d{1,2}):(\\d{2}):(\\d{2})(?:\\.(\\d+))? GMT$/);\nconst ASC_TIME = new RegExp(/^(?:Mon|Tue|Wed|Thu|Fri|Sat|Sun) (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) ( [1-9]|\\d{2}) (\\d{1,2}):(\\d{2}):(\\d{2})(?:\\.(\\d+))? (\\d{4})$/);\nexport const parseRfc7231DateTime = (value) => {\n    if (value === null || value === undefined) {\n        return undefined;\n    }\n    if (typeof value !== \"string\") {\n        throw new TypeError(\"RFC-7231 date-times must be expressed as strings\");\n    }\n    let match = IMF_FIXDATE.exec(value);\n    if (match) {\n        const [_, dayStr, monthStr, yearStr, hours, minutes, seconds, fractionalMilliseconds] = match;\n        return buildDate(strictParseShort(stripLeadingZeroes(yearStr)), parseMonthByShortName(monthStr), parseDateValue(dayStr, \"day\", 1, 31), { hours, minutes, seconds, fractionalMilliseconds });\n    }\n    match = RFC_850_DATE.exec(value);\n    if (match) {\n        const [_, dayStr, monthStr, yearStr, hours, minutes, seconds, fractionalMilliseconds] = match;\n        return adjustRfc850Year(buildDate(parseTwoDigitYear(yearStr), parseMonthByShortName(monthStr), parseDateValue(dayStr, \"day\", 1, 31), {\n            hours,\n            minutes,\n            seconds,\n            fractionalMilliseconds,\n        }));\n    }\n    match = ASC_TIME.exec(value);\n    if (match) {\n        const [_, monthStr, dayStr, hours, minutes, seconds, fractionalMilliseconds, yearStr] = match;\n        return buildDate(strictParseShort(stripLeadingZeroes(yearStr)), parseMonthByShortName(monthStr), parseDateValue(dayStr.trimLeft(), \"day\", 1, 31), { hours, minutes, seconds, fractionalMilliseconds });\n    }\n    throw new TypeError(\"Invalid RFC-7231 date-time value\");\n};\nexport const parseEpochTimestamp = (value) => {\n    if (value === null || value === undefined) {\n        return undefined;\n    }\n    let valueAsDouble;\n    if (typeof value === \"number\") {\n        valueAsDouble = value;\n    }\n    else if (typeof value === \"string\") {\n        valueAsDouble = strictParseDouble(value);\n    }\n    else {\n        throw new TypeError(\"Epoch timestamps must be expressed as floating point numbers or their string representation\");\n    }\n    if (Number.isNaN(valueAsDouble) || valueAsDouble === Infinity || valueAsDouble === -Infinity) {\n        throw new TypeError(\"Epoch timestamps must be valid, non-Infinite, non-NaN numerics\");\n    }\n    return new Date(Math.round(valueAsDouble * 1000));\n};\nconst buildDate = (year, month, day, time) => {\n    const adjustedMonth = month - 1;\n    validateDayOfMonth(year, adjustedMonth, day);\n    return new Date(Date.UTC(year, adjustedMonth, day, parseDateValue(time.hours, \"hour\", 0, 23), parseDateValue(time.minutes, \"minute\", 0, 59), parseDateValue(time.seconds, \"seconds\", 0, 60), parseMilliseconds(time.fractionalMilliseconds)));\n};\nconst parseTwoDigitYear = (value) => {\n    const thisYear = new Date().getUTCFullYear();\n    const valueInThisCentury = Math.floor(thisYear / 100) * 100 + strictParseShort(stripLeadingZeroes(value));\n    if (valueInThisCentury < thisYear) {\n        return valueInThisCentury + 100;\n    }\n    return valueInThisCentury;\n};\nconst FIFTY_YEARS_IN_MILLIS = 50 * 365 * 24 * 60 * 60 * 1000;\nconst adjustRfc850Year = (input) => {\n    if (input.getTime() - new Date().getTime() > FIFTY_YEARS_IN_MILLIS) {\n        return new Date(Date.UTC(input.getUTCFullYear() - 100, input.getUTCMonth(), input.getUTCDate(), input.getUTCHours(), input.getUTCMinutes(), input.getUTCSeconds(), input.getUTCMilliseconds()));\n    }\n    return input;\n};\nconst parseMonthByShortName = (value) => {\n    const monthIdx = MONTHS.indexOf(value);\n    if (monthIdx < 0) {\n        throw new TypeError(`Invalid month: ${value}`);\n    }\n    return monthIdx + 1;\n};\nconst DAYS_IN_MONTH = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\nconst validateDayOfMonth = (year, month, day) => {\n    let maxDays = DAYS_IN_MONTH[month];\n    if (month === 1 && isLeapYear(year)) {\n        maxDays = 29;\n    }\n    if (day > maxDays) {\n        throw new TypeError(`Invalid day for ${MONTHS[month]} in ${year}: ${day}`);\n    }\n};\nconst isLeapYear = (year) => {\n    return year % 4 === 0 && (year % 100 !== 0 || year % 400 === 0);\n};\nconst parseDateValue = (value, type, lower, upper) => {\n    const dateVal = strictParseByte(stripLeadingZeroes(value));\n    if (dateVal < lower || dateVal > upper) {\n        throw new TypeError(`${type} must be between ${lower} and ${upper}, inclusive`);\n    }\n    return dateVal;\n};\nconst parseMilliseconds = (value) => {\n    if (value === null || value === undefined) {\n        return 0;\n    }\n    return strictParseFloat32(\"0.\" + value) * 1000;\n};\nconst stripLeadingZeroes = (value) => {\n    let idx = 0;\n    while (idx < value.length - 1 && value.charAt(idx) === \"0\") {\n        idx++;\n    }\n    if (idx === 0) {\n        return value;\n    }\n    return value.slice(idx);\n};\n","export class ServiceException extends Error {\n    constructor(options) {\n        super(options.message);\n        Object.setPrototypeOf(this, ServiceException.prototype);\n        this.name = options.name;\n        this.$fault = options.$fault;\n        this.$metadata = options.$metadata;\n    }\n}\nexport const decorateServiceException = (exception, additions = {}) => {\n    Object.entries(additions)\n        .filter(([, v]) => v !== undefined)\n        .forEach(([k, v]) => {\n        if (exception[k] == undefined || exception[k] === \"\") {\n            exception[k] = v;\n        }\n    });\n    const message = exception.message || exception.Message || \"UnknownError\";\n    exception.message = message;\n    delete exception.Message;\n    return exception;\n};\n","import { decorateServiceException } from \"./exceptions\";\nexport const throwDefaultError = ({ output, parsedBody, exceptionCtor, errorCode }) => {\n    const $metadata = deserializeMetadata(output);\n    const statusCode = $metadata.httpStatusCode ? $metadata.httpStatusCode + \"\" : undefined;\n    const response = new exceptionCtor({\n        name: parsedBody.code || parsedBody.Code || errorCode || statusCode || \"UnknownError\",\n        $fault: \"client\",\n        $metadata,\n    });\n    throw decorateServiceException(response, parsedBody);\n};\nconst deserializeMetadata = (output) => ({\n    httpStatusCode: output.statusCode,\n    requestId: output.headers[\"x-amzn-requestid\"] ?? output.headers[\"x-amzn-request-id\"] ?? output.headers[\"x-amz-request-id\"],\n    extendedRequestId: output.headers[\"x-amz-id-2\"],\n    cfId: output.headers[\"x-amz-cf-id\"],\n});\n","export const loadConfigsForDefaultMode = (mode) => {\n    switch (mode) {\n        case \"standard\":\n            return {\n                retryMode: \"standard\",\n                connectionTimeout: 3100,\n            };\n        case \"in-region\":\n            return {\n                retryMode: \"standard\",\n                connectionTimeout: 1100,\n            };\n        case \"cross-region\":\n            return {\n                retryMode: \"standard\",\n                connectionTimeout: 3100,\n            };\n        case \"mobile\":\n            return {\n                retryMode: \"standard\",\n                connectionTimeout: 30000,\n            };\n        default:\n            return {};\n    }\n};\n","let warningEmitted = false;\nexport const emitWarningIfUnsupportedVersion = (version) => {\n    if (version && !warningEmitted && parseInt(version.substring(1, version.indexOf(\".\"))) < 14) {\n        warningEmitted = true;\n    }\n};\n","export function extendedEncodeURIComponent(str) {\n    return encodeURIComponent(str).replace(/[!'()*]/g, function (c) {\n        return \"%\" + c.charCodeAt(0).toString(16).toUpperCase();\n    });\n}\n","export const getValueFromTextNode = (obj) => {\n    const textNodeName = \"#text\";\n    for (const key in obj) {\n        if (obj.hasOwnProperty(key) && obj[key][textNodeName] !== undefined) {\n            obj[key] = obj[key][textNodeName];\n        }\n        else if (typeof obj[key] === \"object\" && obj[key] !== null) {\n            obj[key] = getValueFromTextNode(obj[key]);\n        }\n    }\n    return obj;\n};\n","export const StringWrapper = function () {\n    const Class = Object.getPrototypeOf(this).constructor;\n    const Constructor = Function.bind.apply(String, [null, ...arguments]);\n    const instance = new Constructor();\n    Object.setPrototypeOf(instance, Class.prototype);\n    return instance;\n};\nStringWrapper.prototype = Object.create(String.prototype, {\n    constructor: {\n        value: StringWrapper,\n        enumerable: false,\n        writable: true,\n        configurable: true,\n    },\n});\nObject.setPrototypeOf(StringWrapper, String);\nexport class LazyJsonString extends StringWrapper {\n    deserializeJSON() {\n        return JSON.parse(super.toString());\n    }\n    toJSON() {\n        return super.toString();\n    }\n    static fromObject(object) {\n        if (object instanceof LazyJsonString) {\n            return object;\n        }\n        else if (object instanceof String || typeof object === \"string\") {\n            return new LazyJsonString(object);\n        }\n        return new LazyJsonString(JSON.stringify(object));\n    }\n}\n","export function map(arg0, arg1, arg2) {\n    let target;\n    let filter;\n    let instructions;\n    if (typeof arg1 === \"undefined\" && typeof arg2 === \"undefined\") {\n        target = {};\n        instructions = arg0;\n    }\n    else {\n        target = arg0;\n        if (typeof arg1 === \"function\") {\n            filter = arg1;\n            instructions = arg2;\n            return mapWithFilter(target, filter, instructions);\n        }\n        else {\n            instructions = arg1;\n        }\n    }\n    for (const key of Object.keys(instructions)) {\n        if (!Array.isArray(instructions[key])) {\n            target[key] = instructions[key];\n            continue;\n        }\n        let [filter, value] = instructions[key];\n        if (typeof value === \"function\") {\n            let _value;\n            const defaultFilterPassed = filter === undefined && (_value = value()) != null;\n            const customFilterPassed = (typeof filter === \"function\" && !!filter(void 0)) || (typeof filter !== \"function\" && !!filter);\n            if (defaultFilterPassed) {\n                target[key] = _value;\n            }\n            else if (customFilterPassed) {\n                target[key] = value();\n            }\n        }\n        else {\n            const defaultFilterPassed = filter === undefined && value != null;\n            const customFilterPassed = (typeof filter === \"function\" && !!filter(value)) || (typeof filter !== \"function\" && !!filter);\n            if (defaultFilterPassed || customFilterPassed) {\n                target[key] = value;\n            }\n        }\n    }\n    return target;\n}\nexport const convertMap = (target) => {\n    const output = {};\n    for (const [k, v] of Object.entries(target || {})) {\n        output[k] = [, v];\n    }\n    return output;\n};\nconst mapWithFilter = (target, filter, instructions) => {\n    return map(target, Object.entries(instructions).reduce((_instructions, [key, value]) => {\n        if (Array.isArray(value)) {\n            _instructions[key] = value;\n        }\n        else {\n            if (typeof value === \"function\") {\n                _instructions[key] = [filter, value()];\n            }\n            else {\n                _instructions[key] = [filter, value];\n            }\n        }\n        return _instructions;\n    }, {}));\n};\n","import { ServiceException as __ServiceException, } from \"@aws-sdk/smithy-client\";\nexport class DynamoDBServiceException extends __ServiceException {\n    constructor(options) {\n        super(options);\n        Object.setPrototypeOf(this, DynamoDBServiceException.prototype);\n    }\n}\n","import { DynamoDBServiceException as __BaseException } from \"./DynamoDBServiceException\";\nexport var AttributeAction;\n(function (AttributeAction) {\n    AttributeAction[\"ADD\"] = \"ADD\";\n    AttributeAction[\"DELETE\"] = \"DELETE\";\n    AttributeAction[\"PUT\"] = \"PUT\";\n})(AttributeAction || (AttributeAction = {}));\nexport var ScalarAttributeType;\n(function (ScalarAttributeType) {\n    ScalarAttributeType[\"B\"] = \"B\";\n    ScalarAttributeType[\"N\"] = \"N\";\n    ScalarAttributeType[\"S\"] = \"S\";\n})(ScalarAttributeType || (ScalarAttributeType = {}));\nexport var BackupStatus;\n(function (BackupStatus) {\n    BackupStatus[\"AVAILABLE\"] = \"AVAILABLE\";\n    BackupStatus[\"CREATING\"] = \"CREATING\";\n    BackupStatus[\"DELETED\"] = \"DELETED\";\n})(BackupStatus || (BackupStatus = {}));\nexport var BackupType;\n(function (BackupType) {\n    BackupType[\"AWS_BACKUP\"] = \"AWS_BACKUP\";\n    BackupType[\"SYSTEM\"] = \"SYSTEM\";\n    BackupType[\"USER\"] = \"USER\";\n})(BackupType || (BackupType = {}));\nexport var BillingMode;\n(function (BillingMode) {\n    BillingMode[\"PAY_PER_REQUEST\"] = \"PAY_PER_REQUEST\";\n    BillingMode[\"PROVISIONED\"] = \"PROVISIONED\";\n})(BillingMode || (BillingMode = {}));\nexport var KeyType;\n(function (KeyType) {\n    KeyType[\"HASH\"] = \"HASH\";\n    KeyType[\"RANGE\"] = \"RANGE\";\n})(KeyType || (KeyType = {}));\nexport var ProjectionType;\n(function (ProjectionType) {\n    ProjectionType[\"ALL\"] = \"ALL\";\n    ProjectionType[\"INCLUDE\"] = \"INCLUDE\";\n    ProjectionType[\"KEYS_ONLY\"] = \"KEYS_ONLY\";\n})(ProjectionType || (ProjectionType = {}));\nexport var SSEType;\n(function (SSEType) {\n    SSEType[\"AES256\"] = \"AES256\";\n    SSEType[\"KMS\"] = \"KMS\";\n})(SSEType || (SSEType = {}));\nexport var SSEStatus;\n(function (SSEStatus) {\n    SSEStatus[\"DISABLED\"] = \"DISABLED\";\n    SSEStatus[\"DISABLING\"] = \"DISABLING\";\n    SSEStatus[\"ENABLED\"] = \"ENABLED\";\n    SSEStatus[\"ENABLING\"] = \"ENABLING\";\n    SSEStatus[\"UPDATING\"] = \"UPDATING\";\n})(SSEStatus || (SSEStatus = {}));\nexport var StreamViewType;\n(function (StreamViewType) {\n    StreamViewType[\"KEYS_ONLY\"] = \"KEYS_ONLY\";\n    StreamViewType[\"NEW_AND_OLD_IMAGES\"] = \"NEW_AND_OLD_IMAGES\";\n    StreamViewType[\"NEW_IMAGE\"] = \"NEW_IMAGE\";\n    StreamViewType[\"OLD_IMAGE\"] = \"OLD_IMAGE\";\n})(StreamViewType || (StreamViewType = {}));\nexport var TimeToLiveStatus;\n(function (TimeToLiveStatus) {\n    TimeToLiveStatus[\"DISABLED\"] = \"DISABLED\";\n    TimeToLiveStatus[\"DISABLING\"] = \"DISABLING\";\n    TimeToLiveStatus[\"ENABLED\"] = \"ENABLED\";\n    TimeToLiveStatus[\"ENABLING\"] = \"ENABLING\";\n})(TimeToLiveStatus || (TimeToLiveStatus = {}));\nexport class BackupInUseException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"BackupInUseException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"BackupInUseException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, BackupInUseException.prototype);\n    }\n}\nexport class BackupNotFoundException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"BackupNotFoundException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"BackupNotFoundException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, BackupNotFoundException.prototype);\n    }\n}\nexport var BackupTypeFilter;\n(function (BackupTypeFilter) {\n    BackupTypeFilter[\"ALL\"] = \"ALL\";\n    BackupTypeFilter[\"AWS_BACKUP\"] = \"AWS_BACKUP\";\n    BackupTypeFilter[\"SYSTEM\"] = \"SYSTEM\";\n    BackupTypeFilter[\"USER\"] = \"USER\";\n})(BackupTypeFilter || (BackupTypeFilter = {}));\nexport var ReturnConsumedCapacity;\n(function (ReturnConsumedCapacity) {\n    ReturnConsumedCapacity[\"INDEXES\"] = \"INDEXES\";\n    ReturnConsumedCapacity[\"NONE\"] = \"NONE\";\n    ReturnConsumedCapacity[\"TOTAL\"] = \"TOTAL\";\n})(ReturnConsumedCapacity || (ReturnConsumedCapacity = {}));\nexport var BatchStatementErrorCodeEnum;\n(function (BatchStatementErrorCodeEnum) {\n    BatchStatementErrorCodeEnum[\"AccessDenied\"] = \"AccessDenied\";\n    BatchStatementErrorCodeEnum[\"ConditionalCheckFailed\"] = \"ConditionalCheckFailed\";\n    BatchStatementErrorCodeEnum[\"DuplicateItem\"] = \"DuplicateItem\";\n    BatchStatementErrorCodeEnum[\"InternalServerError\"] = \"InternalServerError\";\n    BatchStatementErrorCodeEnum[\"ItemCollectionSizeLimitExceeded\"] = \"ItemCollectionSizeLimitExceeded\";\n    BatchStatementErrorCodeEnum[\"ProvisionedThroughputExceeded\"] = \"ProvisionedThroughputExceeded\";\n    BatchStatementErrorCodeEnum[\"RequestLimitExceeded\"] = \"RequestLimitExceeded\";\n    BatchStatementErrorCodeEnum[\"ResourceNotFound\"] = \"ResourceNotFound\";\n    BatchStatementErrorCodeEnum[\"ThrottlingError\"] = \"ThrottlingError\";\n    BatchStatementErrorCodeEnum[\"TransactionConflict\"] = \"TransactionConflict\";\n    BatchStatementErrorCodeEnum[\"ValidationError\"] = \"ValidationError\";\n})(BatchStatementErrorCodeEnum || (BatchStatementErrorCodeEnum = {}));\nexport class InternalServerError extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"InternalServerError\",\n            $fault: \"server\",\n            ...opts,\n        });\n        this.name = \"InternalServerError\";\n        this.$fault = \"server\";\n        Object.setPrototypeOf(this, InternalServerError.prototype);\n    }\n}\nexport class RequestLimitExceeded extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"RequestLimitExceeded\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"RequestLimitExceeded\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, RequestLimitExceeded.prototype);\n    }\n}\nexport class InvalidEndpointException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"InvalidEndpointException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"InvalidEndpointException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidEndpointException.prototype);\n        this.Message = opts.Message;\n    }\n}\nexport class ProvisionedThroughputExceededException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"ProvisionedThroughputExceededException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"ProvisionedThroughputExceededException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, ProvisionedThroughputExceededException.prototype);\n    }\n}\nexport class ResourceNotFoundException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"ResourceNotFoundException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"ResourceNotFoundException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, ResourceNotFoundException.prototype);\n    }\n}\nexport var ReturnItemCollectionMetrics;\n(function (ReturnItemCollectionMetrics) {\n    ReturnItemCollectionMetrics[\"NONE\"] = \"NONE\";\n    ReturnItemCollectionMetrics[\"SIZE\"] = \"SIZE\";\n})(ReturnItemCollectionMetrics || (ReturnItemCollectionMetrics = {}));\nexport class ItemCollectionSizeLimitExceededException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"ItemCollectionSizeLimitExceededException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"ItemCollectionSizeLimitExceededException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, ItemCollectionSizeLimitExceededException.prototype);\n    }\n}\nexport var ComparisonOperator;\n(function (ComparisonOperator) {\n    ComparisonOperator[\"BEGINS_WITH\"] = \"BEGINS_WITH\";\n    ComparisonOperator[\"BETWEEN\"] = \"BETWEEN\";\n    ComparisonOperator[\"CONTAINS\"] = \"CONTAINS\";\n    ComparisonOperator[\"EQ\"] = \"EQ\";\n    ComparisonOperator[\"GE\"] = \"GE\";\n    ComparisonOperator[\"GT\"] = \"GT\";\n    ComparisonOperator[\"IN\"] = \"IN\";\n    ComparisonOperator[\"LE\"] = \"LE\";\n    ComparisonOperator[\"LT\"] = \"LT\";\n    ComparisonOperator[\"NE\"] = \"NE\";\n    ComparisonOperator[\"NOT_CONTAINS\"] = \"NOT_CONTAINS\";\n    ComparisonOperator[\"NOT_NULL\"] = \"NOT_NULL\";\n    ComparisonOperator[\"NULL\"] = \"NULL\";\n})(ComparisonOperator || (ComparisonOperator = {}));\nexport class ConditionalCheckFailedException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"ConditionalCheckFailedException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"ConditionalCheckFailedException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, ConditionalCheckFailedException.prototype);\n    }\n}\nexport var ConditionalOperator;\n(function (ConditionalOperator) {\n    ConditionalOperator[\"AND\"] = \"AND\";\n    ConditionalOperator[\"OR\"] = \"OR\";\n})(ConditionalOperator || (ConditionalOperator = {}));\nexport var ReturnValuesOnConditionCheckFailure;\n(function (ReturnValuesOnConditionCheckFailure) {\n    ReturnValuesOnConditionCheckFailure[\"ALL_OLD\"] = \"ALL_OLD\";\n    ReturnValuesOnConditionCheckFailure[\"NONE\"] = \"NONE\";\n})(ReturnValuesOnConditionCheckFailure || (ReturnValuesOnConditionCheckFailure = {}));\nexport var ContinuousBackupsStatus;\n(function (ContinuousBackupsStatus) {\n    ContinuousBackupsStatus[\"DISABLED\"] = \"DISABLED\";\n    ContinuousBackupsStatus[\"ENABLED\"] = \"ENABLED\";\n})(ContinuousBackupsStatus || (ContinuousBackupsStatus = {}));\nexport var PointInTimeRecoveryStatus;\n(function (PointInTimeRecoveryStatus) {\n    PointInTimeRecoveryStatus[\"DISABLED\"] = \"DISABLED\";\n    PointInTimeRecoveryStatus[\"ENABLED\"] = \"ENABLED\";\n})(PointInTimeRecoveryStatus || (PointInTimeRecoveryStatus = {}));\nexport class ContinuousBackupsUnavailableException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"ContinuousBackupsUnavailableException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"ContinuousBackupsUnavailableException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, ContinuousBackupsUnavailableException.prototype);\n    }\n}\nexport var ContributorInsightsAction;\n(function (ContributorInsightsAction) {\n    ContributorInsightsAction[\"DISABLE\"] = \"DISABLE\";\n    ContributorInsightsAction[\"ENABLE\"] = \"ENABLE\";\n})(ContributorInsightsAction || (ContributorInsightsAction = {}));\nexport var ContributorInsightsStatus;\n(function (ContributorInsightsStatus) {\n    ContributorInsightsStatus[\"DISABLED\"] = \"DISABLED\";\n    ContributorInsightsStatus[\"DISABLING\"] = \"DISABLING\";\n    ContributorInsightsStatus[\"ENABLED\"] = \"ENABLED\";\n    ContributorInsightsStatus[\"ENABLING\"] = \"ENABLING\";\n    ContributorInsightsStatus[\"FAILED\"] = \"FAILED\";\n})(ContributorInsightsStatus || (ContributorInsightsStatus = {}));\nexport class LimitExceededException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"LimitExceededException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"LimitExceededException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, LimitExceededException.prototype);\n    }\n}\nexport class TableInUseException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"TableInUseException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"TableInUseException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, TableInUseException.prototype);\n    }\n}\nexport class TableNotFoundException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"TableNotFoundException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"TableNotFoundException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, TableNotFoundException.prototype);\n    }\n}\nexport var GlobalTableStatus;\n(function (GlobalTableStatus) {\n    GlobalTableStatus[\"ACTIVE\"] = \"ACTIVE\";\n    GlobalTableStatus[\"CREATING\"] = \"CREATING\";\n    GlobalTableStatus[\"DELETING\"] = \"DELETING\";\n    GlobalTableStatus[\"UPDATING\"] = \"UPDATING\";\n})(GlobalTableStatus || (GlobalTableStatus = {}));\nexport var ReplicaStatus;\n(function (ReplicaStatus) {\n    ReplicaStatus[\"ACTIVE\"] = \"ACTIVE\";\n    ReplicaStatus[\"CREATING\"] = \"CREATING\";\n    ReplicaStatus[\"CREATION_FAILED\"] = \"CREATION_FAILED\";\n    ReplicaStatus[\"DELETING\"] = \"DELETING\";\n    ReplicaStatus[\"INACCESSIBLE_ENCRYPTION_CREDENTIALS\"] = \"INACCESSIBLE_ENCRYPTION_CREDENTIALS\";\n    ReplicaStatus[\"REGION_DISABLED\"] = \"REGION_DISABLED\";\n    ReplicaStatus[\"UPDATING\"] = \"UPDATING\";\n})(ReplicaStatus || (ReplicaStatus = {}));\nexport var TableClass;\n(function (TableClass) {\n    TableClass[\"STANDARD\"] = \"STANDARD\";\n    TableClass[\"STANDARD_INFREQUENT_ACCESS\"] = \"STANDARD_INFREQUENT_ACCESS\";\n})(TableClass || (TableClass = {}));\nexport class GlobalTableAlreadyExistsException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"GlobalTableAlreadyExistsException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"GlobalTableAlreadyExistsException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, GlobalTableAlreadyExistsException.prototype);\n    }\n}\nexport var IndexStatus;\n(function (IndexStatus) {\n    IndexStatus[\"ACTIVE\"] = \"ACTIVE\";\n    IndexStatus[\"CREATING\"] = \"CREATING\";\n    IndexStatus[\"DELETING\"] = \"DELETING\";\n    IndexStatus[\"UPDATING\"] = \"UPDATING\";\n})(IndexStatus || (IndexStatus = {}));\nexport var TableStatus;\n(function (TableStatus) {\n    TableStatus[\"ACTIVE\"] = \"ACTIVE\";\n    TableStatus[\"ARCHIVED\"] = \"ARCHIVED\";\n    TableStatus[\"ARCHIVING\"] = \"ARCHIVING\";\n    TableStatus[\"CREATING\"] = \"CREATING\";\n    TableStatus[\"DELETING\"] = \"DELETING\";\n    TableStatus[\"INACCESSIBLE_ENCRYPTION_CREDENTIALS\"] = \"INACCESSIBLE_ENCRYPTION_CREDENTIALS\";\n    TableStatus[\"UPDATING\"] = \"UPDATING\";\n})(TableStatus || (TableStatus = {}));\nexport class ResourceInUseException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"ResourceInUseException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"ResourceInUseException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, ResourceInUseException.prototype);\n    }\n}\nexport var ReturnValue;\n(function (ReturnValue) {\n    ReturnValue[\"ALL_NEW\"] = \"ALL_NEW\";\n    ReturnValue[\"ALL_OLD\"] = \"ALL_OLD\";\n    ReturnValue[\"NONE\"] = \"NONE\";\n    ReturnValue[\"UPDATED_NEW\"] = \"UPDATED_NEW\";\n    ReturnValue[\"UPDATED_OLD\"] = \"UPDATED_OLD\";\n})(ReturnValue || (ReturnValue = {}));\nexport class TransactionConflictException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"TransactionConflictException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"TransactionConflictException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, TransactionConflictException.prototype);\n    }\n}\nexport var ExportFormat;\n(function (ExportFormat) {\n    ExportFormat[\"DYNAMODB_JSON\"] = \"DYNAMODB_JSON\";\n    ExportFormat[\"ION\"] = \"ION\";\n})(ExportFormat || (ExportFormat = {}));\nexport var ExportStatus;\n(function (ExportStatus) {\n    ExportStatus[\"COMPLETED\"] = \"COMPLETED\";\n    ExportStatus[\"FAILED\"] = \"FAILED\";\n    ExportStatus[\"IN_PROGRESS\"] = \"IN_PROGRESS\";\n})(ExportStatus || (ExportStatus = {}));\nexport var S3SseAlgorithm;\n(function (S3SseAlgorithm) {\n    S3SseAlgorithm[\"AES256\"] = \"AES256\";\n    S3SseAlgorithm[\"KMS\"] = \"KMS\";\n})(S3SseAlgorithm || (S3SseAlgorithm = {}));\nexport class ExportNotFoundException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"ExportNotFoundException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"ExportNotFoundException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, ExportNotFoundException.prototype);\n    }\n}\nexport class GlobalTableNotFoundException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"GlobalTableNotFoundException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"GlobalTableNotFoundException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, GlobalTableNotFoundException.prototype);\n    }\n}\nexport var ImportStatus;\n(function (ImportStatus) {\n    ImportStatus[\"CANCELLED\"] = \"CANCELLED\";\n    ImportStatus[\"CANCELLING\"] = \"CANCELLING\";\n    ImportStatus[\"COMPLETED\"] = \"COMPLETED\";\n    ImportStatus[\"FAILED\"] = \"FAILED\";\n    ImportStatus[\"IN_PROGRESS\"] = \"IN_PROGRESS\";\n})(ImportStatus || (ImportStatus = {}));\nexport var InputCompressionType;\n(function (InputCompressionType) {\n    InputCompressionType[\"GZIP\"] = \"GZIP\";\n    InputCompressionType[\"NONE\"] = \"NONE\";\n    InputCompressionType[\"ZSTD\"] = \"ZSTD\";\n})(InputCompressionType || (InputCompressionType = {}));\nexport var InputFormat;\n(function (InputFormat) {\n    InputFormat[\"CSV\"] = \"CSV\";\n    InputFormat[\"DYNAMODB_JSON\"] = \"DYNAMODB_JSON\";\n    InputFormat[\"ION\"] = \"ION\";\n})(InputFormat || (InputFormat = {}));\nexport class ImportNotFoundException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"ImportNotFoundException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"ImportNotFoundException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, ImportNotFoundException.prototype);\n    }\n}\nexport var DestinationStatus;\n(function (DestinationStatus) {\n    DestinationStatus[\"ACTIVE\"] = \"ACTIVE\";\n    DestinationStatus[\"DISABLED\"] = \"DISABLED\";\n    DestinationStatus[\"DISABLING\"] = \"DISABLING\";\n    DestinationStatus[\"ENABLE_FAILED\"] = \"ENABLE_FAILED\";\n    DestinationStatus[\"ENABLING\"] = \"ENABLING\";\n})(DestinationStatus || (DestinationStatus = {}));\nexport class DuplicateItemException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"DuplicateItemException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"DuplicateItemException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, DuplicateItemException.prototype);\n    }\n}\nexport class IdempotentParameterMismatchException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"IdempotentParameterMismatchException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"IdempotentParameterMismatchException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, IdempotentParameterMismatchException.prototype);\n        this.Message = opts.Message;\n    }\n}\nexport class TransactionInProgressException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"TransactionInProgressException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"TransactionInProgressException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, TransactionInProgressException.prototype);\n        this.Message = opts.Message;\n    }\n}\nexport class ExportConflictException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"ExportConflictException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"ExportConflictException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, ExportConflictException.prototype);\n    }\n}\nexport class InvalidExportTimeException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"InvalidExportTimeException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"InvalidExportTimeException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidExportTimeException.prototype);\n    }\n}\nexport class PointInTimeRecoveryUnavailableException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"PointInTimeRecoveryUnavailableException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"PointInTimeRecoveryUnavailableException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, PointInTimeRecoveryUnavailableException.prototype);\n    }\n}\nexport class ImportConflictException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"ImportConflictException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"ImportConflictException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, ImportConflictException.prototype);\n    }\n}\nexport var Select;\n(function (Select) {\n    Select[\"ALL_ATTRIBUTES\"] = \"ALL_ATTRIBUTES\";\n    Select[\"ALL_PROJECTED_ATTRIBUTES\"] = \"ALL_PROJECTED_ATTRIBUTES\";\n    Select[\"COUNT\"] = \"COUNT\";\n    Select[\"SPECIFIC_ATTRIBUTES\"] = \"SPECIFIC_ATTRIBUTES\";\n})(Select || (Select = {}));\nexport class TableAlreadyExistsException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"TableAlreadyExistsException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"TableAlreadyExistsException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, TableAlreadyExistsException.prototype);\n    }\n}\nexport class InvalidRestoreTimeException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"InvalidRestoreTimeException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"InvalidRestoreTimeException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidRestoreTimeException.prototype);\n    }\n}\nexport class ReplicaAlreadyExistsException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"ReplicaAlreadyExistsException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"ReplicaAlreadyExistsException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, ReplicaAlreadyExistsException.prototype);\n    }\n}\nexport class ReplicaNotFoundException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"ReplicaNotFoundException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"ReplicaNotFoundException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, ReplicaNotFoundException.prototype);\n    }\n}\nexport class IndexNotFoundException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"IndexNotFoundException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"IndexNotFoundException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, IndexNotFoundException.prototype);\n    }\n}\nexport var AttributeValue;\n(function (AttributeValue) {\n    AttributeValue.visit = (value, visitor) => {\n        if (value.S !== undefined)\n            return visitor.S(value.S);\n        if (value.N !== undefined)\n            return visitor.N(value.N);\n        if (value.B !== undefined)\n            return visitor.B(value.B);\n        if (value.SS !== undefined)\n            return visitor.SS(value.SS);\n        if (value.NS !== undefined)\n            return visitor.NS(value.NS);\n        if (value.BS !== undefined)\n            return visitor.BS(value.BS);\n        if (value.M !== undefined)\n            return visitor.M(value.M);\n        if (value.L !== undefined)\n            return visitor.L(value.L);\n        if (value.NULL !== undefined)\n            return visitor.NULL(value.NULL);\n        if (value.BOOL !== undefined)\n            return visitor.BOOL(value.BOOL);\n        return visitor._(value.$unknown[0], value.$unknown[1]);\n    };\n})(AttributeValue || (AttributeValue = {}));\nexport class TransactionCanceledException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"TransactionCanceledException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"TransactionCanceledException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, TransactionCanceledException.prototype);\n        this.Message = opts.Message;\n        this.CancellationReasons = opts.CancellationReasons;\n    }\n}\nexport const ArchivalSummaryFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const AttributeDefinitionFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const AutoScalingTargetTrackingScalingPolicyConfigurationDescriptionFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const AutoScalingPolicyDescriptionFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const AutoScalingTargetTrackingScalingPolicyConfigurationUpdateFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const AutoScalingPolicyUpdateFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const AutoScalingSettingsDescriptionFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const AutoScalingSettingsUpdateFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const BackupDetailsFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const KeySchemaElementFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const ProvisionedThroughputFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const SourceTableDetailsFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const ProjectionFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const GlobalSecondaryIndexInfoFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const LocalSecondaryIndexInfoFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const SSEDescriptionFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const StreamSpecificationFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const TimeToLiveDescriptionFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const SourceTableFeatureDetailsFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const BackupDescriptionFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const BackupSummaryFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const CapacityFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const ConsumedCapacityFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const BatchStatementErrorFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const BillingModeSummaryFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const PointInTimeRecoveryDescriptionFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const ContinuousBackupsDescriptionFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const ContributorInsightsSummaryFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const CreateBackupInputFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const CreateBackupOutputFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const CreateGlobalSecondaryIndexActionFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const ReplicaFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const CreateGlobalTableInputFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const ProvisionedThroughputOverrideFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const ReplicaGlobalSecondaryIndexDescriptionFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const TableClassSummaryFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const ReplicaDescriptionFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const GlobalTableDescriptionFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const CreateGlobalTableOutputFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const CreateReplicaActionFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const ReplicaGlobalSecondaryIndexFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const CreateReplicationGroupMemberActionFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const GlobalSecondaryIndexFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const LocalSecondaryIndexFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const SSESpecificationFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const TagFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const CreateTableInputFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const ProvisionedThroughputDescriptionFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const GlobalSecondaryIndexDescriptionFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const LocalSecondaryIndexDescriptionFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const RestoreSummaryFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const TableDescriptionFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const CreateTableOutputFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const CsvOptionsFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const DeleteBackupInputFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const DeleteBackupOutputFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const DeleteGlobalSecondaryIndexActionFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const DeleteReplicaActionFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const DeleteReplicationGroupMemberActionFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const DeleteTableInputFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const DeleteTableOutputFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const DescribeBackupInputFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const DescribeBackupOutputFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const DescribeContinuousBackupsInputFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const DescribeContinuousBackupsOutputFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const DescribeContributorInsightsInputFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const FailureExceptionFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const DescribeContributorInsightsOutputFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const DescribeEndpointsRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const EndpointFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const DescribeEndpointsResponseFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const DescribeExportInputFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const ExportDescriptionFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const DescribeExportOutputFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const DescribeGlobalTableInputFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const DescribeGlobalTableOutputFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const DescribeGlobalTableSettingsInputFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const ReplicaGlobalSecondaryIndexSettingsDescriptionFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const ReplicaSettingsDescriptionFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const DescribeGlobalTableSettingsOutputFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const DescribeImportInputFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const InputFormatOptionsFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const S3BucketSourceFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const TableCreationParametersFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const ImportTableDescriptionFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const DescribeImportOutputFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const DescribeKinesisStreamingDestinationInputFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const KinesisDataStreamDestinationFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const DescribeKinesisStreamingDestinationOutputFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const DescribeLimitsInputFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const DescribeLimitsOutputFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const DescribeTableInputFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const DescribeTableOutputFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const DescribeTableReplicaAutoScalingInputFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const ReplicaGlobalSecondaryIndexAutoScalingDescriptionFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const ReplicaAutoScalingDescriptionFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const TableAutoScalingDescriptionFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const DescribeTableReplicaAutoScalingOutputFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const DescribeTimeToLiveInputFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const DescribeTimeToLiveOutputFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const KinesisStreamingDestinationInputFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const KinesisStreamingDestinationOutputFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const ExportTableToPointInTimeInputFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const ExportTableToPointInTimeOutputFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const ImportTableInputFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const ImportTableOutputFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const ListBackupsInputFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const ListBackupsOutputFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const ListContributorInsightsInputFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const ListContributorInsightsOutputFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const ListExportsInputFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const ExportSummaryFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const ListExportsOutputFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const ListGlobalTablesInputFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const GlobalTableFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const ListGlobalTablesOutputFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const ListImportsInputFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const ImportSummaryFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const ListImportsOutputFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const ListTablesInputFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const ListTablesOutputFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const ListTagsOfResourceInputFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const ListTagsOfResourceOutputFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const RestoreTableFromBackupInputFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const RestoreTableFromBackupOutputFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const RestoreTableToPointInTimeInputFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const RestoreTableToPointInTimeOutputFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const TagResourceInputFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const UntagResourceInputFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const PointInTimeRecoverySpecificationFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const UpdateContinuousBackupsInputFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const UpdateContinuousBackupsOutputFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const UpdateContributorInsightsInputFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const UpdateContributorInsightsOutputFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const ReplicaUpdateFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const UpdateGlobalTableInputFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const UpdateGlobalTableOutputFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const GlobalTableGlobalSecondaryIndexSettingsUpdateFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const ReplicaGlobalSecondaryIndexSettingsUpdateFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const ReplicaSettingsUpdateFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const UpdateGlobalTableSettingsInputFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const UpdateGlobalTableSettingsOutputFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const UpdateGlobalSecondaryIndexActionFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const GlobalSecondaryIndexUpdateFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const UpdateReplicationGroupMemberActionFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const ReplicationGroupUpdateFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const UpdateTableInputFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const UpdateTableOutputFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const GlobalSecondaryIndexAutoScalingUpdateFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const ReplicaGlobalSecondaryIndexAutoScalingUpdateFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const ReplicaAutoScalingUpdateFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const UpdateTableReplicaAutoScalingInputFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const UpdateTableReplicaAutoScalingOutputFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const TimeToLiveSpecificationFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const UpdateTimeToLiveInputFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const UpdateTimeToLiveOutputFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const AttributeValueFilterSensitiveLog = (obj) => {\n    if (obj.S !== undefined)\n        return { S: obj.S };\n    if (obj.N !== undefined)\n        return { N: obj.N };\n    if (obj.B !== undefined)\n        return { B: obj.B };\n    if (obj.SS !== undefined)\n        return { SS: obj.SS };\n    if (obj.NS !== undefined)\n        return { NS: obj.NS };\n    if (obj.BS !== undefined)\n        return { BS: obj.BS };\n    if (obj.M !== undefined)\n        return {\n            M: Object.entries(obj.M).reduce((acc, [key, value]) => ((acc[key] = AttributeValueFilterSensitiveLog(value)), acc), {}),\n        };\n    if (obj.L !== undefined)\n        return { L: obj.L.map((item) => AttributeValueFilterSensitiveLog(item)) };\n    if (obj.NULL !== undefined)\n        return { NULL: obj.NULL };\n    if (obj.BOOL !== undefined)\n        return { BOOL: obj.BOOL };\n    if (obj.$unknown !== undefined)\n        return { [obj.$unknown[0]]: \"UNKNOWN\" };\n};\nexport const AttributeValueUpdateFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.Value && { Value: AttributeValueFilterSensitiveLog(obj.Value) }),\n});\nexport const BatchStatementRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.Parameters && { Parameters: obj.Parameters.map((item) => AttributeValueFilterSensitiveLog(item)) }),\n});\nexport const BatchStatementResponseFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.Item && {\n        Item: Object.entries(obj.Item).reduce((acc, [key, value]) => ((acc[key] = AttributeValueFilterSensitiveLog(value)), acc), {}),\n    }),\n});\nexport const CancellationReasonFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.Item && {\n        Item: Object.entries(obj.Item).reduce((acc, [key, value]) => ((acc[key] = AttributeValueFilterSensitiveLog(value)), acc), {}),\n    }),\n});\nexport const ConditionFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.AttributeValueList && {\n        AttributeValueList: obj.AttributeValueList.map((item) => AttributeValueFilterSensitiveLog(item)),\n    }),\n});\nexport const DeleteRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.Key && {\n        Key: Object.entries(obj.Key).reduce((acc, [key, value]) => ((acc[key] = AttributeValueFilterSensitiveLog(value)), acc), {}),\n    }),\n});\nexport const ExecuteStatementInputFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.Parameters && { Parameters: obj.Parameters.map((item) => AttributeValueFilterSensitiveLog(item)) }),\n});\nexport const GetFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.Key && {\n        Key: Object.entries(obj.Key).reduce((acc, [key, value]) => ((acc[key] = AttributeValueFilterSensitiveLog(value)), acc), {}),\n    }),\n});\nexport const GetItemInputFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.Key && {\n        Key: Object.entries(obj.Key).reduce((acc, [key, value]) => ((acc[key] = AttributeValueFilterSensitiveLog(value)), acc), {}),\n    }),\n});\nexport const GetItemOutputFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.Item && {\n        Item: Object.entries(obj.Item).reduce((acc, [key, value]) => ((acc[key] = AttributeValueFilterSensitiveLog(value)), acc), {}),\n    }),\n});\nexport const ItemCollectionMetricsFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.ItemCollectionKey && {\n        ItemCollectionKey: Object.entries(obj.ItemCollectionKey).reduce((acc, [key, value]) => ((acc[key] = AttributeValueFilterSensitiveLog(value)), acc), {}),\n    }),\n});\nexport const ItemResponseFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.Item && {\n        Item: Object.entries(obj.Item).reduce((acc, [key, value]) => ((acc[key] = AttributeValueFilterSensitiveLog(value)), acc), {}),\n    }),\n});\nexport const ParameterizedStatementFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.Parameters && { Parameters: obj.Parameters.map((item) => AttributeValueFilterSensitiveLog(item)) }),\n});\nexport const PutRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.Item && {\n        Item: Object.entries(obj.Item).reduce((acc, [key, value]) => ((acc[key] = AttributeValueFilterSensitiveLog(value)), acc), {}),\n    }),\n});\nexport const KeysAndAttributesFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.Keys && {\n        Keys: obj.Keys.map((item) => Object.entries(item).reduce((acc, [key, value]) => ((acc[key] = AttributeValueFilterSensitiveLog(value)), acc), {})),\n    }),\n});\nexport const TransactGetItemFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.Get && { Get: GetFilterSensitiveLog(obj.Get) }),\n});\nexport const BatchExecuteStatementInputFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.Statements && { Statements: obj.Statements.map((item) => BatchStatementRequestFilterSensitiveLog(item)) }),\n});\nexport const BatchExecuteStatementOutputFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.Responses && { Responses: obj.Responses.map((item) => BatchStatementResponseFilterSensitiveLog(item)) }),\n});\nexport const ExecuteTransactionInputFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.TransactStatements && {\n        TransactStatements: obj.TransactStatements.map((item) => ParameterizedStatementFilterSensitiveLog(item)),\n    }),\n});\nexport const ExecuteTransactionOutputFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.Responses && { Responses: obj.Responses.map((item) => ItemResponseFilterSensitiveLog(item)) }),\n});\nexport const TransactGetItemsOutputFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.Responses && { Responses: obj.Responses.map((item) => ItemResponseFilterSensitiveLog(item)) }),\n});\nexport const BatchGetItemInputFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.RequestItems && {\n        RequestItems: Object.entries(obj.RequestItems).reduce((acc, [key, value]) => ((acc[key] = KeysAndAttributesFilterSensitiveLog(value)), acc), {}),\n    }),\n});\nexport const ExpectedAttributeValueFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.Value && { Value: AttributeValueFilterSensitiveLog(obj.Value) }),\n    ...(obj.AttributeValueList && {\n        AttributeValueList: obj.AttributeValueList.map((item) => AttributeValueFilterSensitiveLog(item)),\n    }),\n});\nexport const TransactGetItemsInputFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.TransactItems && { TransactItems: obj.TransactItems.map((item) => TransactGetItemFilterSensitiveLog(item)) }),\n});\nexport const TransactWriteItemsOutputFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.ItemCollectionMetrics && {\n        ItemCollectionMetrics: Object.entries(obj.ItemCollectionMetrics).reduce((acc, [key, value]) => ((acc[key] = value.map((item) => ItemCollectionMetricsFilterSensitiveLog(item))), acc), {}),\n    }),\n});\nexport const ConditionCheckFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.Key && {\n        Key: Object.entries(obj.Key).reduce((acc, [key, value]) => ((acc[key] = AttributeValueFilterSensitiveLog(value)), acc), {}),\n    }),\n    ...(obj.ExpressionAttributeValues && {\n        ExpressionAttributeValues: Object.entries(obj.ExpressionAttributeValues).reduce((acc, [key, value]) => ((acc[key] = AttributeValueFilterSensitiveLog(value)), acc), {}),\n    }),\n});\nexport const DeleteFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.Key && {\n        Key: Object.entries(obj.Key).reduce((acc, [key, value]) => ((acc[key] = AttributeValueFilterSensitiveLog(value)), acc), {}),\n    }),\n    ...(obj.ExpressionAttributeValues && {\n        ExpressionAttributeValues: Object.entries(obj.ExpressionAttributeValues).reduce((acc, [key, value]) => ((acc[key] = AttributeValueFilterSensitiveLog(value)), acc), {}),\n    }),\n});\nexport const PutFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.Item && {\n        Item: Object.entries(obj.Item).reduce((acc, [key, value]) => ((acc[key] = AttributeValueFilterSensitiveLog(value)), acc), {}),\n    }),\n    ...(obj.ExpressionAttributeValues && {\n        ExpressionAttributeValues: Object.entries(obj.ExpressionAttributeValues).reduce((acc, [key, value]) => ((acc[key] = AttributeValueFilterSensitiveLog(value)), acc), {}),\n    }),\n});\nexport const UpdateFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.Key && {\n        Key: Object.entries(obj.Key).reduce((acc, [key, value]) => ((acc[key] = AttributeValueFilterSensitiveLog(value)), acc), {}),\n    }),\n    ...(obj.ExpressionAttributeValues && {\n        ExpressionAttributeValues: Object.entries(obj.ExpressionAttributeValues).reduce((acc, [key, value]) => ((acc[key] = AttributeValueFilterSensitiveLog(value)), acc), {}),\n    }),\n});\nexport const DeleteItemOutputFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.Attributes && {\n        Attributes: Object.entries(obj.Attributes).reduce((acc, [key, value]) => ((acc[key] = AttributeValueFilterSensitiveLog(value)), acc), {}),\n    }),\n    ...(obj.ItemCollectionMetrics && {\n        ItemCollectionMetrics: ItemCollectionMetricsFilterSensitiveLog(obj.ItemCollectionMetrics),\n    }),\n});\nexport const ExecuteStatementOutputFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.Items && {\n        Items: obj.Items.map((item) => Object.entries(item).reduce((acc, [key, value]) => ((acc[key] = AttributeValueFilterSensitiveLog(value)), acc), {})),\n    }),\n    ...(obj.LastEvaluatedKey && {\n        LastEvaluatedKey: Object.entries(obj.LastEvaluatedKey).reduce((acc, [key, value]) => ((acc[key] = AttributeValueFilterSensitiveLog(value)), acc), {}),\n    }),\n});\nexport const PutItemOutputFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.Attributes && {\n        Attributes: Object.entries(obj.Attributes).reduce((acc, [key, value]) => ((acc[key] = AttributeValueFilterSensitiveLog(value)), acc), {}),\n    }),\n    ...(obj.ItemCollectionMetrics && {\n        ItemCollectionMetrics: ItemCollectionMetricsFilterSensitiveLog(obj.ItemCollectionMetrics),\n    }),\n});\nexport const QueryOutputFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.Items && {\n        Items: obj.Items.map((item) => Object.entries(item).reduce((acc, [key, value]) => ((acc[key] = AttributeValueFilterSensitiveLog(value)), acc), {})),\n    }),\n    ...(obj.LastEvaluatedKey && {\n        LastEvaluatedKey: Object.entries(obj.LastEvaluatedKey).reduce((acc, [key, value]) => ((acc[key] = AttributeValueFilterSensitiveLog(value)), acc), {}),\n    }),\n});\nexport const ScanOutputFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.Items && {\n        Items: obj.Items.map((item) => Object.entries(item).reduce((acc, [key, value]) => ((acc[key] = AttributeValueFilterSensitiveLog(value)), acc), {})),\n    }),\n    ...(obj.LastEvaluatedKey && {\n        LastEvaluatedKey: Object.entries(obj.LastEvaluatedKey).reduce((acc, [key, value]) => ((acc[key] = AttributeValueFilterSensitiveLog(value)), acc), {}),\n    }),\n});\nexport const UpdateItemOutputFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.Attributes && {\n        Attributes: Object.entries(obj.Attributes).reduce((acc, [key, value]) => ((acc[key] = AttributeValueFilterSensitiveLog(value)), acc), {}),\n    }),\n    ...(obj.ItemCollectionMetrics && {\n        ItemCollectionMetrics: ItemCollectionMetricsFilterSensitiveLog(obj.ItemCollectionMetrics),\n    }),\n});\nexport const WriteRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.PutRequest && { PutRequest: PutRequestFilterSensitiveLog(obj.PutRequest) }),\n    ...(obj.DeleteRequest && { DeleteRequest: DeleteRequestFilterSensitiveLog(obj.DeleteRequest) }),\n});\nexport const BatchGetItemOutputFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.Responses && {\n        Responses: Object.entries(obj.Responses).reduce((acc, [key, value]) => ((acc[key] = value.map((item) => Object.entries(item).reduce((acc, [key, value]) => ((acc[key] = AttributeValueFilterSensitiveLog(value)), acc), {}))),\n            acc), {}),\n    }),\n    ...(obj.UnprocessedKeys && {\n        UnprocessedKeys: Object.entries(obj.UnprocessedKeys).reduce((acc, [key, value]) => ((acc[key] = KeysAndAttributesFilterSensitiveLog(value)), acc), {}),\n    }),\n});\nexport const ScanInputFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.ScanFilter && {\n        ScanFilter: Object.entries(obj.ScanFilter).reduce((acc, [key, value]) => ((acc[key] = ConditionFilterSensitiveLog(value)), acc), {}),\n    }),\n    ...(obj.ExclusiveStartKey && {\n        ExclusiveStartKey: Object.entries(obj.ExclusiveStartKey).reduce((acc, [key, value]) => ((acc[key] = AttributeValueFilterSensitiveLog(value)), acc), {}),\n    }),\n    ...(obj.ExpressionAttributeValues && {\n        ExpressionAttributeValues: Object.entries(obj.ExpressionAttributeValues).reduce((acc, [key, value]) => ((acc[key] = AttributeValueFilterSensitiveLog(value)), acc), {}),\n    }),\n});\nexport const BatchWriteItemInputFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.RequestItems && {\n        RequestItems: Object.entries(obj.RequestItems).reduce((acc, [key, value]) => ((acc[key] = value.map((item) => WriteRequestFilterSensitiveLog(item))), acc), {}),\n    }),\n});\nexport const DeleteItemInputFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.Key && {\n        Key: Object.entries(obj.Key).reduce((acc, [key, value]) => ((acc[key] = AttributeValueFilterSensitiveLog(value)), acc), {}),\n    }),\n    ...(obj.Expected && {\n        Expected: Object.entries(obj.Expected).reduce((acc, [key, value]) => ((acc[key] = ExpectedAttributeValueFilterSensitiveLog(value)), acc), {}),\n    }),\n    ...(obj.ExpressionAttributeValues && {\n        ExpressionAttributeValues: Object.entries(obj.ExpressionAttributeValues).reduce((acc, [key, value]) => ((acc[key] = AttributeValueFilterSensitiveLog(value)), acc), {}),\n    }),\n});\nexport const PutItemInputFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.Item && {\n        Item: Object.entries(obj.Item).reduce((acc, [key, value]) => ((acc[key] = AttributeValueFilterSensitiveLog(value)), acc), {}),\n    }),\n    ...(obj.Expected && {\n        Expected: Object.entries(obj.Expected).reduce((acc, [key, value]) => ((acc[key] = ExpectedAttributeValueFilterSensitiveLog(value)), acc), {}),\n    }),\n    ...(obj.ExpressionAttributeValues && {\n        ExpressionAttributeValues: Object.entries(obj.ExpressionAttributeValues).reduce((acc, [key, value]) => ((acc[key] = AttributeValueFilterSensitiveLog(value)), acc), {}),\n    }),\n});\nexport const QueryInputFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.KeyConditions && {\n        KeyConditions: Object.entries(obj.KeyConditions).reduce((acc, [key, value]) => ((acc[key] = ConditionFilterSensitiveLog(value)), acc), {}),\n    }),\n    ...(obj.QueryFilter && {\n        QueryFilter: Object.entries(obj.QueryFilter).reduce((acc, [key, value]) => ((acc[key] = ConditionFilterSensitiveLog(value)), acc), {}),\n    }),\n    ...(obj.ExclusiveStartKey && {\n        ExclusiveStartKey: Object.entries(obj.ExclusiveStartKey).reduce((acc, [key, value]) => ((acc[key] = AttributeValueFilterSensitiveLog(value)), acc), {}),\n    }),\n    ...(obj.ExpressionAttributeValues && {\n        ExpressionAttributeValues: Object.entries(obj.ExpressionAttributeValues).reduce((acc, [key, value]) => ((acc[key] = AttributeValueFilterSensitiveLog(value)), acc), {}),\n    }),\n});\nexport const BatchWriteItemOutputFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.UnprocessedItems && {\n        UnprocessedItems: Object.entries(obj.UnprocessedItems).reduce((acc, [key, value]) => ((acc[key] = value.map((item) => WriteRequestFilterSensitiveLog(item))), acc), {}),\n    }),\n    ...(obj.ItemCollectionMetrics && {\n        ItemCollectionMetrics: Object.entries(obj.ItemCollectionMetrics).reduce((acc, [key, value]) => ((acc[key] = value.map((item) => ItemCollectionMetricsFilterSensitiveLog(item))), acc), {}),\n    }),\n});\nexport const UpdateItemInputFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.Key && {\n        Key: Object.entries(obj.Key).reduce((acc, [key, value]) => ((acc[key] = AttributeValueFilterSensitiveLog(value)), acc), {}),\n    }),\n    ...(obj.AttributeUpdates && {\n        AttributeUpdates: Object.entries(obj.AttributeUpdates).reduce((acc, [key, value]) => ((acc[key] = AttributeValueUpdateFilterSensitiveLog(value)), acc), {}),\n    }),\n    ...(obj.Expected && {\n        Expected: Object.entries(obj.Expected).reduce((acc, [key, value]) => ((acc[key] = ExpectedAttributeValueFilterSensitiveLog(value)), acc), {}),\n    }),\n    ...(obj.ExpressionAttributeValues && {\n        ExpressionAttributeValues: Object.entries(obj.ExpressionAttributeValues).reduce((acc, [key, value]) => ((acc[key] = AttributeValueFilterSensitiveLog(value)), acc), {}),\n    }),\n});\nexport const TransactWriteItemFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.ConditionCheck && { ConditionCheck: ConditionCheckFilterSensitiveLog(obj.ConditionCheck) }),\n    ...(obj.Put && { Put: PutFilterSensitiveLog(obj.Put) }),\n    ...(obj.Delete && { Delete: DeleteFilterSensitiveLog(obj.Delete) }),\n    ...(obj.Update && { Update: UpdateFilterSensitiveLog(obj.Update) }),\n});\nexport const TransactWriteItemsInputFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.TransactItems && {\n        TransactItems: obj.TransactItems.map((item) => TransactWriteItemFilterSensitiveLog(item)),\n    }),\n});\n","import { HttpRequest as __HttpRequest } from \"@aws-sdk/protocol-http\";\nimport { decorateServiceException as __decorateServiceException, expectBoolean as __expectBoolean, expectInt32 as __expectInt32, expectLong as __expectLong, expectNonNull as __expectNonNull, expectNumber as __expectNumber, expectString as __expectString, expectUnion as __expectUnion, limitedParseDouble as __limitedParseDouble, parseEpochTimestamp as __parseEpochTimestamp, serializeFloat as __serializeFloat, throwDefaultError, } from \"@aws-sdk/smithy-client\";\nimport { v4 as generateIdempotencyToken } from \"uuid\";\nimport { DynamoDBServiceException as __BaseException } from \"../models/DynamoDBServiceException\";\nimport { AttributeValue, BackupInUseException, BackupNotFoundException, ConditionalCheckFailedException, ContinuousBackupsUnavailableException, DuplicateItemException, ExportConflictException, ExportNotFoundException, GlobalTableAlreadyExistsException, GlobalTableNotFoundException, IdempotentParameterMismatchException, ImportConflictException, ImportNotFoundException, IndexNotFoundException, InternalServerError, InvalidEndpointException, InvalidExportTimeException, InvalidRestoreTimeException, ItemCollectionSizeLimitExceededException, LimitExceededException, PointInTimeRecoveryUnavailableException, ProvisionedThroughputExceededException, ReplicaAlreadyExistsException, ReplicaNotFoundException, RequestLimitExceeded, ResourceInUseException, ResourceNotFoundException, TableAlreadyExistsException, TableInUseException, TableNotFoundException, TransactionCanceledException, TransactionConflictException, TransactionInProgressException, } from \"../models/models_0\";\nexport const serializeAws_json1_0BatchExecuteStatementCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-amz-json-1.0\",\n        \"x-amz-target\": \"DynamoDB_20120810.BatchExecuteStatement\",\n    };\n    let body;\n    body = JSON.stringify(serializeAws_json1_0BatchExecuteStatementInput(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_json1_0BatchGetItemCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-amz-json-1.0\",\n        \"x-amz-target\": \"DynamoDB_20120810.BatchGetItem\",\n    };\n    let body;\n    body = JSON.stringify(serializeAws_json1_0BatchGetItemInput(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_json1_0BatchWriteItemCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-amz-json-1.0\",\n        \"x-amz-target\": \"DynamoDB_20120810.BatchWriteItem\",\n    };\n    let body;\n    body = JSON.stringify(serializeAws_json1_0BatchWriteItemInput(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_json1_0CreateBackupCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-amz-json-1.0\",\n        \"x-amz-target\": \"DynamoDB_20120810.CreateBackup\",\n    };\n    let body;\n    body = JSON.stringify(serializeAws_json1_0CreateBackupInput(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_json1_0CreateGlobalTableCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-amz-json-1.0\",\n        \"x-amz-target\": \"DynamoDB_20120810.CreateGlobalTable\",\n    };\n    let body;\n    body = JSON.stringify(serializeAws_json1_0CreateGlobalTableInput(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_json1_0CreateTableCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-amz-json-1.0\",\n        \"x-amz-target\": \"DynamoDB_20120810.CreateTable\",\n    };\n    let body;\n    body = JSON.stringify(serializeAws_json1_0CreateTableInput(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_json1_0DeleteBackupCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-amz-json-1.0\",\n        \"x-amz-target\": \"DynamoDB_20120810.DeleteBackup\",\n    };\n    let body;\n    body = JSON.stringify(serializeAws_json1_0DeleteBackupInput(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_json1_0DeleteItemCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-amz-json-1.0\",\n        \"x-amz-target\": \"DynamoDB_20120810.DeleteItem\",\n    };\n    let body;\n    body = JSON.stringify(serializeAws_json1_0DeleteItemInput(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_json1_0DeleteTableCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-amz-json-1.0\",\n        \"x-amz-target\": \"DynamoDB_20120810.DeleteTable\",\n    };\n    let body;\n    body = JSON.stringify(serializeAws_json1_0DeleteTableInput(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_json1_0DescribeBackupCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-amz-json-1.0\",\n        \"x-amz-target\": \"DynamoDB_20120810.DescribeBackup\",\n    };\n    let body;\n    body = JSON.stringify(serializeAws_json1_0DescribeBackupInput(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_json1_0DescribeContinuousBackupsCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-amz-json-1.0\",\n        \"x-amz-target\": \"DynamoDB_20120810.DescribeContinuousBackups\",\n    };\n    let body;\n    body = JSON.stringify(serializeAws_json1_0DescribeContinuousBackupsInput(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_json1_0DescribeContributorInsightsCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-amz-json-1.0\",\n        \"x-amz-target\": \"DynamoDB_20120810.DescribeContributorInsights\",\n    };\n    let body;\n    body = JSON.stringify(serializeAws_json1_0DescribeContributorInsightsInput(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_json1_0DescribeEndpointsCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-amz-json-1.0\",\n        \"x-amz-target\": \"DynamoDB_20120810.DescribeEndpoints\",\n    };\n    let body;\n    body = JSON.stringify(serializeAws_json1_0DescribeEndpointsRequest(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_json1_0DescribeExportCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-amz-json-1.0\",\n        \"x-amz-target\": \"DynamoDB_20120810.DescribeExport\",\n    };\n    let body;\n    body = JSON.stringify(serializeAws_json1_0DescribeExportInput(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_json1_0DescribeGlobalTableCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-amz-json-1.0\",\n        \"x-amz-target\": \"DynamoDB_20120810.DescribeGlobalTable\",\n    };\n    let body;\n    body = JSON.stringify(serializeAws_json1_0DescribeGlobalTableInput(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_json1_0DescribeGlobalTableSettingsCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-amz-json-1.0\",\n        \"x-amz-target\": \"DynamoDB_20120810.DescribeGlobalTableSettings\",\n    };\n    let body;\n    body = JSON.stringify(serializeAws_json1_0DescribeGlobalTableSettingsInput(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_json1_0DescribeImportCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-amz-json-1.0\",\n        \"x-amz-target\": \"DynamoDB_20120810.DescribeImport\",\n    };\n    let body;\n    body = JSON.stringify(serializeAws_json1_0DescribeImportInput(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_json1_0DescribeKinesisStreamingDestinationCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-amz-json-1.0\",\n        \"x-amz-target\": \"DynamoDB_20120810.DescribeKinesisStreamingDestination\",\n    };\n    let body;\n    body = JSON.stringify(serializeAws_json1_0DescribeKinesisStreamingDestinationInput(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_json1_0DescribeLimitsCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-amz-json-1.0\",\n        \"x-amz-target\": \"DynamoDB_20120810.DescribeLimits\",\n    };\n    let body;\n    body = JSON.stringify(serializeAws_json1_0DescribeLimitsInput(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_json1_0DescribeTableCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-amz-json-1.0\",\n        \"x-amz-target\": \"DynamoDB_20120810.DescribeTable\",\n    };\n    let body;\n    body = JSON.stringify(serializeAws_json1_0DescribeTableInput(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_json1_0DescribeTableReplicaAutoScalingCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-amz-json-1.0\",\n        \"x-amz-target\": \"DynamoDB_20120810.DescribeTableReplicaAutoScaling\",\n    };\n    let body;\n    body = JSON.stringify(serializeAws_json1_0DescribeTableReplicaAutoScalingInput(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_json1_0DescribeTimeToLiveCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-amz-json-1.0\",\n        \"x-amz-target\": \"DynamoDB_20120810.DescribeTimeToLive\",\n    };\n    let body;\n    body = JSON.stringify(serializeAws_json1_0DescribeTimeToLiveInput(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_json1_0DisableKinesisStreamingDestinationCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-amz-json-1.0\",\n        \"x-amz-target\": \"DynamoDB_20120810.DisableKinesisStreamingDestination\",\n    };\n    let body;\n    body = JSON.stringify(serializeAws_json1_0KinesisStreamingDestinationInput(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_json1_0EnableKinesisStreamingDestinationCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-amz-json-1.0\",\n        \"x-amz-target\": \"DynamoDB_20120810.EnableKinesisStreamingDestination\",\n    };\n    let body;\n    body = JSON.stringify(serializeAws_json1_0KinesisStreamingDestinationInput(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_json1_0ExecuteStatementCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-amz-json-1.0\",\n        \"x-amz-target\": \"DynamoDB_20120810.ExecuteStatement\",\n    };\n    let body;\n    body = JSON.stringify(serializeAws_json1_0ExecuteStatementInput(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_json1_0ExecuteTransactionCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-amz-json-1.0\",\n        \"x-amz-target\": \"DynamoDB_20120810.ExecuteTransaction\",\n    };\n    let body;\n    body = JSON.stringify(serializeAws_json1_0ExecuteTransactionInput(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_json1_0ExportTableToPointInTimeCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-amz-json-1.0\",\n        \"x-amz-target\": \"DynamoDB_20120810.ExportTableToPointInTime\",\n    };\n    let body;\n    body = JSON.stringify(serializeAws_json1_0ExportTableToPointInTimeInput(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_json1_0GetItemCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-amz-json-1.0\",\n        \"x-amz-target\": \"DynamoDB_20120810.GetItem\",\n    };\n    let body;\n    body = JSON.stringify(serializeAws_json1_0GetItemInput(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_json1_0ImportTableCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-amz-json-1.0\",\n        \"x-amz-target\": \"DynamoDB_20120810.ImportTable\",\n    };\n    let body;\n    body = JSON.stringify(serializeAws_json1_0ImportTableInput(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_json1_0ListBackupsCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-amz-json-1.0\",\n        \"x-amz-target\": \"DynamoDB_20120810.ListBackups\",\n    };\n    let body;\n    body = JSON.stringify(serializeAws_json1_0ListBackupsInput(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_json1_0ListContributorInsightsCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-amz-json-1.0\",\n        \"x-amz-target\": \"DynamoDB_20120810.ListContributorInsights\",\n    };\n    let body;\n    body = JSON.stringify(serializeAws_json1_0ListContributorInsightsInput(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_json1_0ListExportsCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-amz-json-1.0\",\n        \"x-amz-target\": \"DynamoDB_20120810.ListExports\",\n    };\n    let body;\n    body = JSON.stringify(serializeAws_json1_0ListExportsInput(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_json1_0ListGlobalTablesCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-amz-json-1.0\",\n        \"x-amz-target\": \"DynamoDB_20120810.ListGlobalTables\",\n    };\n    let body;\n    body = JSON.stringify(serializeAws_json1_0ListGlobalTablesInput(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_json1_0ListImportsCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-amz-json-1.0\",\n        \"x-amz-target\": \"DynamoDB_20120810.ListImports\",\n    };\n    let body;\n    body = JSON.stringify(serializeAws_json1_0ListImportsInput(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_json1_0ListTablesCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-amz-json-1.0\",\n        \"x-amz-target\": \"DynamoDB_20120810.ListTables\",\n    };\n    let body;\n    body = JSON.stringify(serializeAws_json1_0ListTablesInput(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_json1_0ListTagsOfResourceCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-amz-json-1.0\",\n        \"x-amz-target\": \"DynamoDB_20120810.ListTagsOfResource\",\n    };\n    let body;\n    body = JSON.stringify(serializeAws_json1_0ListTagsOfResourceInput(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_json1_0PutItemCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-amz-json-1.0\",\n        \"x-amz-target\": \"DynamoDB_20120810.PutItem\",\n    };\n    let body;\n    body = JSON.stringify(serializeAws_json1_0PutItemInput(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_json1_0QueryCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-amz-json-1.0\",\n        \"x-amz-target\": \"DynamoDB_20120810.Query\",\n    };\n    let body;\n    body = JSON.stringify(serializeAws_json1_0QueryInput(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_json1_0RestoreTableFromBackupCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-amz-json-1.0\",\n        \"x-amz-target\": \"DynamoDB_20120810.RestoreTableFromBackup\",\n    };\n    let body;\n    body = JSON.stringify(serializeAws_json1_0RestoreTableFromBackupInput(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_json1_0RestoreTableToPointInTimeCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-amz-json-1.0\",\n        \"x-amz-target\": \"DynamoDB_20120810.RestoreTableToPointInTime\",\n    };\n    let body;\n    body = JSON.stringify(serializeAws_json1_0RestoreTableToPointInTimeInput(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_json1_0ScanCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-amz-json-1.0\",\n        \"x-amz-target\": \"DynamoDB_20120810.Scan\",\n    };\n    let body;\n    body = JSON.stringify(serializeAws_json1_0ScanInput(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_json1_0TagResourceCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-amz-json-1.0\",\n        \"x-amz-target\": \"DynamoDB_20120810.TagResource\",\n    };\n    let body;\n    body = JSON.stringify(serializeAws_json1_0TagResourceInput(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_json1_0TransactGetItemsCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-amz-json-1.0\",\n        \"x-amz-target\": \"DynamoDB_20120810.TransactGetItems\",\n    };\n    let body;\n    body = JSON.stringify(serializeAws_json1_0TransactGetItemsInput(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_json1_0TransactWriteItemsCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-amz-json-1.0\",\n        \"x-amz-target\": \"DynamoDB_20120810.TransactWriteItems\",\n    };\n    let body;\n    body = JSON.stringify(serializeAws_json1_0TransactWriteItemsInput(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_json1_0UntagResourceCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-amz-json-1.0\",\n        \"x-amz-target\": \"DynamoDB_20120810.UntagResource\",\n    };\n    let body;\n    body = JSON.stringify(serializeAws_json1_0UntagResourceInput(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_json1_0UpdateContinuousBackupsCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-amz-json-1.0\",\n        \"x-amz-target\": \"DynamoDB_20120810.UpdateContinuousBackups\",\n    };\n    let body;\n    body = JSON.stringify(serializeAws_json1_0UpdateContinuousBackupsInput(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_json1_0UpdateContributorInsightsCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-amz-json-1.0\",\n        \"x-amz-target\": \"DynamoDB_20120810.UpdateContributorInsights\",\n    };\n    let body;\n    body = JSON.stringify(serializeAws_json1_0UpdateContributorInsightsInput(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_json1_0UpdateGlobalTableCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-amz-json-1.0\",\n        \"x-amz-target\": \"DynamoDB_20120810.UpdateGlobalTable\",\n    };\n    let body;\n    body = JSON.stringify(serializeAws_json1_0UpdateGlobalTableInput(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_json1_0UpdateGlobalTableSettingsCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-amz-json-1.0\",\n        \"x-amz-target\": \"DynamoDB_20120810.UpdateGlobalTableSettings\",\n    };\n    let body;\n    body = JSON.stringify(serializeAws_json1_0UpdateGlobalTableSettingsInput(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_json1_0UpdateItemCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-amz-json-1.0\",\n        \"x-amz-target\": \"DynamoDB_20120810.UpdateItem\",\n    };\n    let body;\n    body = JSON.stringify(serializeAws_json1_0UpdateItemInput(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_json1_0UpdateTableCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-amz-json-1.0\",\n        \"x-amz-target\": \"DynamoDB_20120810.UpdateTable\",\n    };\n    let body;\n    body = JSON.stringify(serializeAws_json1_0UpdateTableInput(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_json1_0UpdateTableReplicaAutoScalingCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-amz-json-1.0\",\n        \"x-amz-target\": \"DynamoDB_20120810.UpdateTableReplicaAutoScaling\",\n    };\n    let body;\n    body = JSON.stringify(serializeAws_json1_0UpdateTableReplicaAutoScalingInput(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_json1_0UpdateTimeToLiveCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-amz-json-1.0\",\n        \"x-amz-target\": \"DynamoDB_20120810.UpdateTimeToLive\",\n    };\n    let body;\n    body = JSON.stringify(serializeAws_json1_0UpdateTimeToLiveInput(input, context));\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const deserializeAws_json1_0BatchExecuteStatementCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_json1_0BatchExecuteStatementCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_json1_0BatchExecuteStatementOutput(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nconst deserializeAws_json1_0BatchExecuteStatementCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalServerError\":\n        case \"com.amazonaws.dynamodb#InternalServerError\":\n            throw await deserializeAws_json1_0InternalServerErrorResponse(parsedOutput, context);\n        case \"RequestLimitExceeded\":\n        case \"com.amazonaws.dynamodb#RequestLimitExceeded\":\n            throw await deserializeAws_json1_0RequestLimitExceededResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            throwDefaultError({\n                output,\n                parsedBody,\n                exceptionCtor: __BaseException,\n                errorCode,\n            });\n    }\n};\nexport const deserializeAws_json1_0BatchGetItemCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_json1_0BatchGetItemCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_json1_0BatchGetItemOutput(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nconst deserializeAws_json1_0BatchGetItemCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalServerError\":\n        case \"com.amazonaws.dynamodb#InternalServerError\":\n            throw await deserializeAws_json1_0InternalServerErrorResponse(parsedOutput, context);\n        case \"InvalidEndpointException\":\n        case \"com.amazonaws.dynamodb#InvalidEndpointException\":\n            throw await deserializeAws_json1_0InvalidEndpointExceptionResponse(parsedOutput, context);\n        case \"ProvisionedThroughputExceededException\":\n        case \"com.amazonaws.dynamodb#ProvisionedThroughputExceededException\":\n            throw await deserializeAws_json1_0ProvisionedThroughputExceededExceptionResponse(parsedOutput, context);\n        case \"RequestLimitExceeded\":\n        case \"com.amazonaws.dynamodb#RequestLimitExceeded\":\n            throw await deserializeAws_json1_0RequestLimitExceededResponse(parsedOutput, context);\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.dynamodb#ResourceNotFoundException\":\n            throw await deserializeAws_json1_0ResourceNotFoundExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            throwDefaultError({\n                output,\n                parsedBody,\n                exceptionCtor: __BaseException,\n                errorCode,\n            });\n    }\n};\nexport const deserializeAws_json1_0BatchWriteItemCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_json1_0BatchWriteItemCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_json1_0BatchWriteItemOutput(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nconst deserializeAws_json1_0BatchWriteItemCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalServerError\":\n        case \"com.amazonaws.dynamodb#InternalServerError\":\n            throw await deserializeAws_json1_0InternalServerErrorResponse(parsedOutput, context);\n        case \"InvalidEndpointException\":\n        case \"com.amazonaws.dynamodb#InvalidEndpointException\":\n            throw await deserializeAws_json1_0InvalidEndpointExceptionResponse(parsedOutput, context);\n        case \"ItemCollectionSizeLimitExceededException\":\n        case \"com.amazonaws.dynamodb#ItemCollectionSizeLimitExceededException\":\n            throw await deserializeAws_json1_0ItemCollectionSizeLimitExceededExceptionResponse(parsedOutput, context);\n        case \"ProvisionedThroughputExceededException\":\n        case \"com.amazonaws.dynamodb#ProvisionedThroughputExceededException\":\n            throw await deserializeAws_json1_0ProvisionedThroughputExceededExceptionResponse(parsedOutput, context);\n        case \"RequestLimitExceeded\":\n        case \"com.amazonaws.dynamodb#RequestLimitExceeded\":\n            throw await deserializeAws_json1_0RequestLimitExceededResponse(parsedOutput, context);\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.dynamodb#ResourceNotFoundException\":\n            throw await deserializeAws_json1_0ResourceNotFoundExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            throwDefaultError({\n                output,\n                parsedBody,\n                exceptionCtor: __BaseException,\n                errorCode,\n            });\n    }\n};\nexport const deserializeAws_json1_0CreateBackupCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_json1_0CreateBackupCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_json1_0CreateBackupOutput(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nconst deserializeAws_json1_0CreateBackupCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"BackupInUseException\":\n        case \"com.amazonaws.dynamodb#BackupInUseException\":\n            throw await deserializeAws_json1_0BackupInUseExceptionResponse(parsedOutput, context);\n        case \"ContinuousBackupsUnavailableException\":\n        case \"com.amazonaws.dynamodb#ContinuousBackupsUnavailableException\":\n            throw await deserializeAws_json1_0ContinuousBackupsUnavailableExceptionResponse(parsedOutput, context);\n        case \"InternalServerError\":\n        case \"com.amazonaws.dynamodb#InternalServerError\":\n            throw await deserializeAws_json1_0InternalServerErrorResponse(parsedOutput, context);\n        case \"InvalidEndpointException\":\n        case \"com.amazonaws.dynamodb#InvalidEndpointException\":\n            throw await deserializeAws_json1_0InvalidEndpointExceptionResponse(parsedOutput, context);\n        case \"LimitExceededException\":\n        case \"com.amazonaws.dynamodb#LimitExceededException\":\n            throw await deserializeAws_json1_0LimitExceededExceptionResponse(parsedOutput, context);\n        case \"TableInUseException\":\n        case \"com.amazonaws.dynamodb#TableInUseException\":\n            throw await deserializeAws_json1_0TableInUseExceptionResponse(parsedOutput, context);\n        case \"TableNotFoundException\":\n        case \"com.amazonaws.dynamodb#TableNotFoundException\":\n            throw await deserializeAws_json1_0TableNotFoundExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            throwDefaultError({\n                output,\n                parsedBody,\n                exceptionCtor: __BaseException,\n                errorCode,\n            });\n    }\n};\nexport const deserializeAws_json1_0CreateGlobalTableCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_json1_0CreateGlobalTableCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_json1_0CreateGlobalTableOutput(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nconst deserializeAws_json1_0CreateGlobalTableCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"GlobalTableAlreadyExistsException\":\n        case \"com.amazonaws.dynamodb#GlobalTableAlreadyExistsException\":\n            throw await deserializeAws_json1_0GlobalTableAlreadyExistsExceptionResponse(parsedOutput, context);\n        case \"InternalServerError\":\n        case \"com.amazonaws.dynamodb#InternalServerError\":\n            throw await deserializeAws_json1_0InternalServerErrorResponse(parsedOutput, context);\n        case \"InvalidEndpointException\":\n        case \"com.amazonaws.dynamodb#InvalidEndpointException\":\n            throw await deserializeAws_json1_0InvalidEndpointExceptionResponse(parsedOutput, context);\n        case \"LimitExceededException\":\n        case \"com.amazonaws.dynamodb#LimitExceededException\":\n            throw await deserializeAws_json1_0LimitExceededExceptionResponse(parsedOutput, context);\n        case \"TableNotFoundException\":\n        case \"com.amazonaws.dynamodb#TableNotFoundException\":\n            throw await deserializeAws_json1_0TableNotFoundExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            throwDefaultError({\n                output,\n                parsedBody,\n                exceptionCtor: __BaseException,\n                errorCode,\n            });\n    }\n};\nexport const deserializeAws_json1_0CreateTableCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_json1_0CreateTableCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_json1_0CreateTableOutput(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nconst deserializeAws_json1_0CreateTableCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalServerError\":\n        case \"com.amazonaws.dynamodb#InternalServerError\":\n            throw await deserializeAws_json1_0InternalServerErrorResponse(parsedOutput, context);\n        case \"InvalidEndpointException\":\n        case \"com.amazonaws.dynamodb#InvalidEndpointException\":\n            throw await deserializeAws_json1_0InvalidEndpointExceptionResponse(parsedOutput, context);\n        case \"LimitExceededException\":\n        case \"com.amazonaws.dynamodb#LimitExceededException\":\n            throw await deserializeAws_json1_0LimitExceededExceptionResponse(parsedOutput, context);\n        case \"ResourceInUseException\":\n        case \"com.amazonaws.dynamodb#ResourceInUseException\":\n            throw await deserializeAws_json1_0ResourceInUseExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            throwDefaultError({\n                output,\n                parsedBody,\n                exceptionCtor: __BaseException,\n                errorCode,\n            });\n    }\n};\nexport const deserializeAws_json1_0DeleteBackupCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_json1_0DeleteBackupCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_json1_0DeleteBackupOutput(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nconst deserializeAws_json1_0DeleteBackupCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"BackupInUseException\":\n        case \"com.amazonaws.dynamodb#BackupInUseException\":\n            throw await deserializeAws_json1_0BackupInUseExceptionResponse(parsedOutput, context);\n        case \"BackupNotFoundException\":\n        case \"com.amazonaws.dynamodb#BackupNotFoundException\":\n            throw await deserializeAws_json1_0BackupNotFoundExceptionResponse(parsedOutput, context);\n        case \"InternalServerError\":\n        case \"com.amazonaws.dynamodb#InternalServerError\":\n            throw await deserializeAws_json1_0InternalServerErrorResponse(parsedOutput, context);\n        case \"InvalidEndpointException\":\n        case \"com.amazonaws.dynamodb#InvalidEndpointException\":\n            throw await deserializeAws_json1_0InvalidEndpointExceptionResponse(parsedOutput, context);\n        case \"LimitExceededException\":\n        case \"com.amazonaws.dynamodb#LimitExceededException\":\n            throw await deserializeAws_json1_0LimitExceededExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            throwDefaultError({\n                output,\n                parsedBody,\n                exceptionCtor: __BaseException,\n                errorCode,\n            });\n    }\n};\nexport const deserializeAws_json1_0DeleteItemCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_json1_0DeleteItemCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_json1_0DeleteItemOutput(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nconst deserializeAws_json1_0DeleteItemCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"ConditionalCheckFailedException\":\n        case \"com.amazonaws.dynamodb#ConditionalCheckFailedException\":\n            throw await deserializeAws_json1_0ConditionalCheckFailedExceptionResponse(parsedOutput, context);\n        case \"InternalServerError\":\n        case \"com.amazonaws.dynamodb#InternalServerError\":\n            throw await deserializeAws_json1_0InternalServerErrorResponse(parsedOutput, context);\n        case \"InvalidEndpointException\":\n        case \"com.amazonaws.dynamodb#InvalidEndpointException\":\n            throw await deserializeAws_json1_0InvalidEndpointExceptionResponse(parsedOutput, context);\n        case \"ItemCollectionSizeLimitExceededException\":\n        case \"com.amazonaws.dynamodb#ItemCollectionSizeLimitExceededException\":\n            throw await deserializeAws_json1_0ItemCollectionSizeLimitExceededExceptionResponse(parsedOutput, context);\n        case \"ProvisionedThroughputExceededException\":\n        case \"com.amazonaws.dynamodb#ProvisionedThroughputExceededException\":\n            throw await deserializeAws_json1_0ProvisionedThroughputExceededExceptionResponse(parsedOutput, context);\n        case \"RequestLimitExceeded\":\n        case \"com.amazonaws.dynamodb#RequestLimitExceeded\":\n            throw await deserializeAws_json1_0RequestLimitExceededResponse(parsedOutput, context);\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.dynamodb#ResourceNotFoundException\":\n            throw await deserializeAws_json1_0ResourceNotFoundExceptionResponse(parsedOutput, context);\n        case \"TransactionConflictException\":\n        case \"com.amazonaws.dynamodb#TransactionConflictException\":\n            throw await deserializeAws_json1_0TransactionConflictExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            throwDefaultError({\n                output,\n                parsedBody,\n                exceptionCtor: __BaseException,\n                errorCode,\n            });\n    }\n};\nexport const deserializeAws_json1_0DeleteTableCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_json1_0DeleteTableCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_json1_0DeleteTableOutput(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nconst deserializeAws_json1_0DeleteTableCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalServerError\":\n        case \"com.amazonaws.dynamodb#InternalServerError\":\n            throw await deserializeAws_json1_0InternalServerErrorResponse(parsedOutput, context);\n        case \"InvalidEndpointException\":\n        case \"com.amazonaws.dynamodb#InvalidEndpointException\":\n            throw await deserializeAws_json1_0InvalidEndpointExceptionResponse(parsedOutput, context);\n        case \"LimitExceededException\":\n        case \"com.amazonaws.dynamodb#LimitExceededException\":\n            throw await deserializeAws_json1_0LimitExceededExceptionResponse(parsedOutput, context);\n        case \"ResourceInUseException\":\n        case \"com.amazonaws.dynamodb#ResourceInUseException\":\n            throw await deserializeAws_json1_0ResourceInUseExceptionResponse(parsedOutput, context);\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.dynamodb#ResourceNotFoundException\":\n            throw await deserializeAws_json1_0ResourceNotFoundExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            throwDefaultError({\n                output,\n                parsedBody,\n                exceptionCtor: __BaseException,\n                errorCode,\n            });\n    }\n};\nexport const deserializeAws_json1_0DescribeBackupCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_json1_0DescribeBackupCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_json1_0DescribeBackupOutput(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nconst deserializeAws_json1_0DescribeBackupCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"BackupNotFoundException\":\n        case \"com.amazonaws.dynamodb#BackupNotFoundException\":\n            throw await deserializeAws_json1_0BackupNotFoundExceptionResponse(parsedOutput, context);\n        case \"InternalServerError\":\n        case \"com.amazonaws.dynamodb#InternalServerError\":\n            throw await deserializeAws_json1_0InternalServerErrorResponse(parsedOutput, context);\n        case \"InvalidEndpointException\":\n        case \"com.amazonaws.dynamodb#InvalidEndpointException\":\n            throw await deserializeAws_json1_0InvalidEndpointExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            throwDefaultError({\n                output,\n                parsedBody,\n                exceptionCtor: __BaseException,\n                errorCode,\n            });\n    }\n};\nexport const deserializeAws_json1_0DescribeContinuousBackupsCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_json1_0DescribeContinuousBackupsCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_json1_0DescribeContinuousBackupsOutput(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nconst deserializeAws_json1_0DescribeContinuousBackupsCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalServerError\":\n        case \"com.amazonaws.dynamodb#InternalServerError\":\n            throw await deserializeAws_json1_0InternalServerErrorResponse(parsedOutput, context);\n        case \"InvalidEndpointException\":\n        case \"com.amazonaws.dynamodb#InvalidEndpointException\":\n            throw await deserializeAws_json1_0InvalidEndpointExceptionResponse(parsedOutput, context);\n        case \"TableNotFoundException\":\n        case \"com.amazonaws.dynamodb#TableNotFoundException\":\n            throw await deserializeAws_json1_0TableNotFoundExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            throwDefaultError({\n                output,\n                parsedBody,\n                exceptionCtor: __BaseException,\n                errorCode,\n            });\n    }\n};\nexport const deserializeAws_json1_0DescribeContributorInsightsCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_json1_0DescribeContributorInsightsCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_json1_0DescribeContributorInsightsOutput(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nconst deserializeAws_json1_0DescribeContributorInsightsCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalServerError\":\n        case \"com.amazonaws.dynamodb#InternalServerError\":\n            throw await deserializeAws_json1_0InternalServerErrorResponse(parsedOutput, context);\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.dynamodb#ResourceNotFoundException\":\n            throw await deserializeAws_json1_0ResourceNotFoundExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            throwDefaultError({\n                output,\n                parsedBody,\n                exceptionCtor: __BaseException,\n                errorCode,\n            });\n    }\n};\nexport const deserializeAws_json1_0DescribeEndpointsCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_json1_0DescribeEndpointsCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_json1_0DescribeEndpointsResponse(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nconst deserializeAws_json1_0DescribeEndpointsCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    const parsedBody = parsedOutput.body;\n    throwDefaultError({\n        output,\n        parsedBody,\n        exceptionCtor: __BaseException,\n        errorCode,\n    });\n};\nexport const deserializeAws_json1_0DescribeExportCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_json1_0DescribeExportCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_json1_0DescribeExportOutput(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nconst deserializeAws_json1_0DescribeExportCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"ExportNotFoundException\":\n        case \"com.amazonaws.dynamodb#ExportNotFoundException\":\n            throw await deserializeAws_json1_0ExportNotFoundExceptionResponse(parsedOutput, context);\n        case \"InternalServerError\":\n        case \"com.amazonaws.dynamodb#InternalServerError\":\n            throw await deserializeAws_json1_0InternalServerErrorResponse(parsedOutput, context);\n        case \"LimitExceededException\":\n        case \"com.amazonaws.dynamodb#LimitExceededException\":\n            throw await deserializeAws_json1_0LimitExceededExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            throwDefaultError({\n                output,\n                parsedBody,\n                exceptionCtor: __BaseException,\n                errorCode,\n            });\n    }\n};\nexport const deserializeAws_json1_0DescribeGlobalTableCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_json1_0DescribeGlobalTableCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_json1_0DescribeGlobalTableOutput(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nconst deserializeAws_json1_0DescribeGlobalTableCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"GlobalTableNotFoundException\":\n        case \"com.amazonaws.dynamodb#GlobalTableNotFoundException\":\n            throw await deserializeAws_json1_0GlobalTableNotFoundExceptionResponse(parsedOutput, context);\n        case \"InternalServerError\":\n        case \"com.amazonaws.dynamodb#InternalServerError\":\n            throw await deserializeAws_json1_0InternalServerErrorResponse(parsedOutput, context);\n        case \"InvalidEndpointException\":\n        case \"com.amazonaws.dynamodb#InvalidEndpointException\":\n            throw await deserializeAws_json1_0InvalidEndpointExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            throwDefaultError({\n                output,\n                parsedBody,\n                exceptionCtor: __BaseException,\n                errorCode,\n            });\n    }\n};\nexport const deserializeAws_json1_0DescribeGlobalTableSettingsCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_json1_0DescribeGlobalTableSettingsCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_json1_0DescribeGlobalTableSettingsOutput(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nconst deserializeAws_json1_0DescribeGlobalTableSettingsCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"GlobalTableNotFoundException\":\n        case \"com.amazonaws.dynamodb#GlobalTableNotFoundException\":\n            throw await deserializeAws_json1_0GlobalTableNotFoundExceptionResponse(parsedOutput, context);\n        case \"InternalServerError\":\n        case \"com.amazonaws.dynamodb#InternalServerError\":\n            throw await deserializeAws_json1_0InternalServerErrorResponse(parsedOutput, context);\n        case \"InvalidEndpointException\":\n        case \"com.amazonaws.dynamodb#InvalidEndpointException\":\n            throw await deserializeAws_json1_0InvalidEndpointExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            throwDefaultError({\n                output,\n                parsedBody,\n                exceptionCtor: __BaseException,\n                errorCode,\n            });\n    }\n};\nexport const deserializeAws_json1_0DescribeImportCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_json1_0DescribeImportCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_json1_0DescribeImportOutput(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nconst deserializeAws_json1_0DescribeImportCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"ImportNotFoundException\":\n        case \"com.amazonaws.dynamodb#ImportNotFoundException\":\n            throw await deserializeAws_json1_0ImportNotFoundExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            throwDefaultError({\n                output,\n                parsedBody,\n                exceptionCtor: __BaseException,\n                errorCode,\n            });\n    }\n};\nexport const deserializeAws_json1_0DescribeKinesisStreamingDestinationCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_json1_0DescribeKinesisStreamingDestinationCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_json1_0DescribeKinesisStreamingDestinationOutput(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nconst deserializeAws_json1_0DescribeKinesisStreamingDestinationCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalServerError\":\n        case \"com.amazonaws.dynamodb#InternalServerError\":\n            throw await deserializeAws_json1_0InternalServerErrorResponse(parsedOutput, context);\n        case \"InvalidEndpointException\":\n        case \"com.amazonaws.dynamodb#InvalidEndpointException\":\n            throw await deserializeAws_json1_0InvalidEndpointExceptionResponse(parsedOutput, context);\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.dynamodb#ResourceNotFoundException\":\n            throw await deserializeAws_json1_0ResourceNotFoundExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            throwDefaultError({\n                output,\n                parsedBody,\n                exceptionCtor: __BaseException,\n                errorCode,\n            });\n    }\n};\nexport const deserializeAws_json1_0DescribeLimitsCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_json1_0DescribeLimitsCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_json1_0DescribeLimitsOutput(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nconst deserializeAws_json1_0DescribeLimitsCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalServerError\":\n        case \"com.amazonaws.dynamodb#InternalServerError\":\n            throw await deserializeAws_json1_0InternalServerErrorResponse(parsedOutput, context);\n        case \"InvalidEndpointException\":\n        case \"com.amazonaws.dynamodb#InvalidEndpointException\":\n            throw await deserializeAws_json1_0InvalidEndpointExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            throwDefaultError({\n                output,\n                parsedBody,\n                exceptionCtor: __BaseException,\n                errorCode,\n            });\n    }\n};\nexport const deserializeAws_json1_0DescribeTableCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_json1_0DescribeTableCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_json1_0DescribeTableOutput(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nconst deserializeAws_json1_0DescribeTableCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalServerError\":\n        case \"com.amazonaws.dynamodb#InternalServerError\":\n            throw await deserializeAws_json1_0InternalServerErrorResponse(parsedOutput, context);\n        case \"InvalidEndpointException\":\n        case \"com.amazonaws.dynamodb#InvalidEndpointException\":\n            throw await deserializeAws_json1_0InvalidEndpointExceptionResponse(parsedOutput, context);\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.dynamodb#ResourceNotFoundException\":\n            throw await deserializeAws_json1_0ResourceNotFoundExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            throwDefaultError({\n                output,\n                parsedBody,\n                exceptionCtor: __BaseException,\n                errorCode,\n            });\n    }\n};\nexport const deserializeAws_json1_0DescribeTableReplicaAutoScalingCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_json1_0DescribeTableReplicaAutoScalingCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_json1_0DescribeTableReplicaAutoScalingOutput(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nconst deserializeAws_json1_0DescribeTableReplicaAutoScalingCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalServerError\":\n        case \"com.amazonaws.dynamodb#InternalServerError\":\n            throw await deserializeAws_json1_0InternalServerErrorResponse(parsedOutput, context);\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.dynamodb#ResourceNotFoundException\":\n            throw await deserializeAws_json1_0ResourceNotFoundExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            throwDefaultError({\n                output,\n                parsedBody,\n                exceptionCtor: __BaseException,\n                errorCode,\n            });\n    }\n};\nexport const deserializeAws_json1_0DescribeTimeToLiveCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_json1_0DescribeTimeToLiveCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_json1_0DescribeTimeToLiveOutput(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nconst deserializeAws_json1_0DescribeTimeToLiveCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalServerError\":\n        case \"com.amazonaws.dynamodb#InternalServerError\":\n            throw await deserializeAws_json1_0InternalServerErrorResponse(parsedOutput, context);\n        case \"InvalidEndpointException\":\n        case \"com.amazonaws.dynamodb#InvalidEndpointException\":\n            throw await deserializeAws_json1_0InvalidEndpointExceptionResponse(parsedOutput, context);\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.dynamodb#ResourceNotFoundException\":\n            throw await deserializeAws_json1_0ResourceNotFoundExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            throwDefaultError({\n                output,\n                parsedBody,\n                exceptionCtor: __BaseException,\n                errorCode,\n            });\n    }\n};\nexport const deserializeAws_json1_0DisableKinesisStreamingDestinationCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_json1_0DisableKinesisStreamingDestinationCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_json1_0KinesisStreamingDestinationOutput(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nconst deserializeAws_json1_0DisableKinesisStreamingDestinationCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalServerError\":\n        case \"com.amazonaws.dynamodb#InternalServerError\":\n            throw await deserializeAws_json1_0InternalServerErrorResponse(parsedOutput, context);\n        case \"InvalidEndpointException\":\n        case \"com.amazonaws.dynamodb#InvalidEndpointException\":\n            throw await deserializeAws_json1_0InvalidEndpointExceptionResponse(parsedOutput, context);\n        case \"LimitExceededException\":\n        case \"com.amazonaws.dynamodb#LimitExceededException\":\n            throw await deserializeAws_json1_0LimitExceededExceptionResponse(parsedOutput, context);\n        case \"ResourceInUseException\":\n        case \"com.amazonaws.dynamodb#ResourceInUseException\":\n            throw await deserializeAws_json1_0ResourceInUseExceptionResponse(parsedOutput, context);\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.dynamodb#ResourceNotFoundException\":\n            throw await deserializeAws_json1_0ResourceNotFoundExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            throwDefaultError({\n                output,\n                parsedBody,\n                exceptionCtor: __BaseException,\n                errorCode,\n            });\n    }\n};\nexport const deserializeAws_json1_0EnableKinesisStreamingDestinationCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_json1_0EnableKinesisStreamingDestinationCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_json1_0KinesisStreamingDestinationOutput(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nconst deserializeAws_json1_0EnableKinesisStreamingDestinationCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalServerError\":\n        case \"com.amazonaws.dynamodb#InternalServerError\":\n            throw await deserializeAws_json1_0InternalServerErrorResponse(parsedOutput, context);\n        case \"InvalidEndpointException\":\n        case \"com.amazonaws.dynamodb#InvalidEndpointException\":\n            throw await deserializeAws_json1_0InvalidEndpointExceptionResponse(parsedOutput, context);\n        case \"LimitExceededException\":\n        case \"com.amazonaws.dynamodb#LimitExceededException\":\n            throw await deserializeAws_json1_0LimitExceededExceptionResponse(parsedOutput, context);\n        case \"ResourceInUseException\":\n        case \"com.amazonaws.dynamodb#ResourceInUseException\":\n            throw await deserializeAws_json1_0ResourceInUseExceptionResponse(parsedOutput, context);\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.dynamodb#ResourceNotFoundException\":\n            throw await deserializeAws_json1_0ResourceNotFoundExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            throwDefaultError({\n                output,\n                parsedBody,\n                exceptionCtor: __BaseException,\n                errorCode,\n            });\n    }\n};\nexport const deserializeAws_json1_0ExecuteStatementCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_json1_0ExecuteStatementCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_json1_0ExecuteStatementOutput(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nconst deserializeAws_json1_0ExecuteStatementCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"ConditionalCheckFailedException\":\n        case \"com.amazonaws.dynamodb#ConditionalCheckFailedException\":\n            throw await deserializeAws_json1_0ConditionalCheckFailedExceptionResponse(parsedOutput, context);\n        case \"DuplicateItemException\":\n        case \"com.amazonaws.dynamodb#DuplicateItemException\":\n            throw await deserializeAws_json1_0DuplicateItemExceptionResponse(parsedOutput, context);\n        case \"InternalServerError\":\n        case \"com.amazonaws.dynamodb#InternalServerError\":\n            throw await deserializeAws_json1_0InternalServerErrorResponse(parsedOutput, context);\n        case \"ItemCollectionSizeLimitExceededException\":\n        case \"com.amazonaws.dynamodb#ItemCollectionSizeLimitExceededException\":\n            throw await deserializeAws_json1_0ItemCollectionSizeLimitExceededExceptionResponse(parsedOutput, context);\n        case \"ProvisionedThroughputExceededException\":\n        case \"com.amazonaws.dynamodb#ProvisionedThroughputExceededException\":\n            throw await deserializeAws_json1_0ProvisionedThroughputExceededExceptionResponse(parsedOutput, context);\n        case \"RequestLimitExceeded\":\n        case \"com.amazonaws.dynamodb#RequestLimitExceeded\":\n            throw await deserializeAws_json1_0RequestLimitExceededResponse(parsedOutput, context);\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.dynamodb#ResourceNotFoundException\":\n            throw await deserializeAws_json1_0ResourceNotFoundExceptionResponse(parsedOutput, context);\n        case \"TransactionConflictException\":\n        case \"com.amazonaws.dynamodb#TransactionConflictException\":\n            throw await deserializeAws_json1_0TransactionConflictExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            throwDefaultError({\n                output,\n                parsedBody,\n                exceptionCtor: __BaseException,\n                errorCode,\n            });\n    }\n};\nexport const deserializeAws_json1_0ExecuteTransactionCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_json1_0ExecuteTransactionCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_json1_0ExecuteTransactionOutput(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nconst deserializeAws_json1_0ExecuteTransactionCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"IdempotentParameterMismatchException\":\n        case \"com.amazonaws.dynamodb#IdempotentParameterMismatchException\":\n            throw await deserializeAws_json1_0IdempotentParameterMismatchExceptionResponse(parsedOutput, context);\n        case \"InternalServerError\":\n        case \"com.amazonaws.dynamodb#InternalServerError\":\n            throw await deserializeAws_json1_0InternalServerErrorResponse(parsedOutput, context);\n        case \"ProvisionedThroughputExceededException\":\n        case \"com.amazonaws.dynamodb#ProvisionedThroughputExceededException\":\n            throw await deserializeAws_json1_0ProvisionedThroughputExceededExceptionResponse(parsedOutput, context);\n        case \"RequestLimitExceeded\":\n        case \"com.amazonaws.dynamodb#RequestLimitExceeded\":\n            throw await deserializeAws_json1_0RequestLimitExceededResponse(parsedOutput, context);\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.dynamodb#ResourceNotFoundException\":\n            throw await deserializeAws_json1_0ResourceNotFoundExceptionResponse(parsedOutput, context);\n        case \"TransactionCanceledException\":\n        case \"com.amazonaws.dynamodb#TransactionCanceledException\":\n            throw await deserializeAws_json1_0TransactionCanceledExceptionResponse(parsedOutput, context);\n        case \"TransactionInProgressException\":\n        case \"com.amazonaws.dynamodb#TransactionInProgressException\":\n            throw await deserializeAws_json1_0TransactionInProgressExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            throwDefaultError({\n                output,\n                parsedBody,\n                exceptionCtor: __BaseException,\n                errorCode,\n            });\n    }\n};\nexport const deserializeAws_json1_0ExportTableToPointInTimeCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_json1_0ExportTableToPointInTimeCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_json1_0ExportTableToPointInTimeOutput(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nconst deserializeAws_json1_0ExportTableToPointInTimeCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"ExportConflictException\":\n        case \"com.amazonaws.dynamodb#ExportConflictException\":\n            throw await deserializeAws_json1_0ExportConflictExceptionResponse(parsedOutput, context);\n        case \"InternalServerError\":\n        case \"com.amazonaws.dynamodb#InternalServerError\":\n            throw await deserializeAws_json1_0InternalServerErrorResponse(parsedOutput, context);\n        case \"InvalidExportTimeException\":\n        case \"com.amazonaws.dynamodb#InvalidExportTimeException\":\n            throw await deserializeAws_json1_0InvalidExportTimeExceptionResponse(parsedOutput, context);\n        case \"LimitExceededException\":\n        case \"com.amazonaws.dynamodb#LimitExceededException\":\n            throw await deserializeAws_json1_0LimitExceededExceptionResponse(parsedOutput, context);\n        case \"PointInTimeRecoveryUnavailableException\":\n        case \"com.amazonaws.dynamodb#PointInTimeRecoveryUnavailableException\":\n            throw await deserializeAws_json1_0PointInTimeRecoveryUnavailableExceptionResponse(parsedOutput, context);\n        case \"TableNotFoundException\":\n        case \"com.amazonaws.dynamodb#TableNotFoundException\":\n            throw await deserializeAws_json1_0TableNotFoundExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            throwDefaultError({\n                output,\n                parsedBody,\n                exceptionCtor: __BaseException,\n                errorCode,\n            });\n    }\n};\nexport const deserializeAws_json1_0GetItemCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_json1_0GetItemCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_json1_0GetItemOutput(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nconst deserializeAws_json1_0GetItemCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalServerError\":\n        case \"com.amazonaws.dynamodb#InternalServerError\":\n            throw await deserializeAws_json1_0InternalServerErrorResponse(parsedOutput, context);\n        case \"InvalidEndpointException\":\n        case \"com.amazonaws.dynamodb#InvalidEndpointException\":\n            throw await deserializeAws_json1_0InvalidEndpointExceptionResponse(parsedOutput, context);\n        case \"ProvisionedThroughputExceededException\":\n        case \"com.amazonaws.dynamodb#ProvisionedThroughputExceededException\":\n            throw await deserializeAws_json1_0ProvisionedThroughputExceededExceptionResponse(parsedOutput, context);\n        case \"RequestLimitExceeded\":\n        case \"com.amazonaws.dynamodb#RequestLimitExceeded\":\n            throw await deserializeAws_json1_0RequestLimitExceededResponse(parsedOutput, context);\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.dynamodb#ResourceNotFoundException\":\n            throw await deserializeAws_json1_0ResourceNotFoundExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            throwDefaultError({\n                output,\n                parsedBody,\n                exceptionCtor: __BaseException,\n                errorCode,\n            });\n    }\n};\nexport const deserializeAws_json1_0ImportTableCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_json1_0ImportTableCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_json1_0ImportTableOutput(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nconst deserializeAws_json1_0ImportTableCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"ImportConflictException\":\n        case \"com.amazonaws.dynamodb#ImportConflictException\":\n            throw await deserializeAws_json1_0ImportConflictExceptionResponse(parsedOutput, context);\n        case \"LimitExceededException\":\n        case \"com.amazonaws.dynamodb#LimitExceededException\":\n            throw await deserializeAws_json1_0LimitExceededExceptionResponse(parsedOutput, context);\n        case \"ResourceInUseException\":\n        case \"com.amazonaws.dynamodb#ResourceInUseException\":\n            throw await deserializeAws_json1_0ResourceInUseExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            throwDefaultError({\n                output,\n                parsedBody,\n                exceptionCtor: __BaseException,\n                errorCode,\n            });\n    }\n};\nexport const deserializeAws_json1_0ListBackupsCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_json1_0ListBackupsCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_json1_0ListBackupsOutput(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nconst deserializeAws_json1_0ListBackupsCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalServerError\":\n        case \"com.amazonaws.dynamodb#InternalServerError\":\n            throw await deserializeAws_json1_0InternalServerErrorResponse(parsedOutput, context);\n        case \"InvalidEndpointException\":\n        case \"com.amazonaws.dynamodb#InvalidEndpointException\":\n            throw await deserializeAws_json1_0InvalidEndpointExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            throwDefaultError({\n                output,\n                parsedBody,\n                exceptionCtor: __BaseException,\n                errorCode,\n            });\n    }\n};\nexport const deserializeAws_json1_0ListContributorInsightsCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_json1_0ListContributorInsightsCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_json1_0ListContributorInsightsOutput(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nconst deserializeAws_json1_0ListContributorInsightsCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalServerError\":\n        case \"com.amazonaws.dynamodb#InternalServerError\":\n            throw await deserializeAws_json1_0InternalServerErrorResponse(parsedOutput, context);\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.dynamodb#ResourceNotFoundException\":\n            throw await deserializeAws_json1_0ResourceNotFoundExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            throwDefaultError({\n                output,\n                parsedBody,\n                exceptionCtor: __BaseException,\n                errorCode,\n            });\n    }\n};\nexport const deserializeAws_json1_0ListExportsCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_json1_0ListExportsCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_json1_0ListExportsOutput(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nconst deserializeAws_json1_0ListExportsCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalServerError\":\n        case \"com.amazonaws.dynamodb#InternalServerError\":\n            throw await deserializeAws_json1_0InternalServerErrorResponse(parsedOutput, context);\n        case \"LimitExceededException\":\n        case \"com.amazonaws.dynamodb#LimitExceededException\":\n            throw await deserializeAws_json1_0LimitExceededExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            throwDefaultError({\n                output,\n                parsedBody,\n                exceptionCtor: __BaseException,\n                errorCode,\n            });\n    }\n};\nexport const deserializeAws_json1_0ListGlobalTablesCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_json1_0ListGlobalTablesCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_json1_0ListGlobalTablesOutput(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nconst deserializeAws_json1_0ListGlobalTablesCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalServerError\":\n        case \"com.amazonaws.dynamodb#InternalServerError\":\n            throw await deserializeAws_json1_0InternalServerErrorResponse(parsedOutput, context);\n        case \"InvalidEndpointException\":\n        case \"com.amazonaws.dynamodb#InvalidEndpointException\":\n            throw await deserializeAws_json1_0InvalidEndpointExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            throwDefaultError({\n                output,\n                parsedBody,\n                exceptionCtor: __BaseException,\n                errorCode,\n            });\n    }\n};\nexport const deserializeAws_json1_0ListImportsCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_json1_0ListImportsCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_json1_0ListImportsOutput(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nconst deserializeAws_json1_0ListImportsCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"LimitExceededException\":\n        case \"com.amazonaws.dynamodb#LimitExceededException\":\n            throw await deserializeAws_json1_0LimitExceededExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            throwDefaultError({\n                output,\n                parsedBody,\n                exceptionCtor: __BaseException,\n                errorCode,\n            });\n    }\n};\nexport const deserializeAws_json1_0ListTablesCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_json1_0ListTablesCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_json1_0ListTablesOutput(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nconst deserializeAws_json1_0ListTablesCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalServerError\":\n        case \"com.amazonaws.dynamodb#InternalServerError\":\n            throw await deserializeAws_json1_0InternalServerErrorResponse(parsedOutput, context);\n        case \"InvalidEndpointException\":\n        case \"com.amazonaws.dynamodb#InvalidEndpointException\":\n            throw await deserializeAws_json1_0InvalidEndpointExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            throwDefaultError({\n                output,\n                parsedBody,\n                exceptionCtor: __BaseException,\n                errorCode,\n            });\n    }\n};\nexport const deserializeAws_json1_0ListTagsOfResourceCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_json1_0ListTagsOfResourceCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_json1_0ListTagsOfResourceOutput(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nconst deserializeAws_json1_0ListTagsOfResourceCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalServerError\":\n        case \"com.amazonaws.dynamodb#InternalServerError\":\n            throw await deserializeAws_json1_0InternalServerErrorResponse(parsedOutput, context);\n        case \"InvalidEndpointException\":\n        case \"com.amazonaws.dynamodb#InvalidEndpointException\":\n            throw await deserializeAws_json1_0InvalidEndpointExceptionResponse(parsedOutput, context);\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.dynamodb#ResourceNotFoundException\":\n            throw await deserializeAws_json1_0ResourceNotFoundExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            throwDefaultError({\n                output,\n                parsedBody,\n                exceptionCtor: __BaseException,\n                errorCode,\n            });\n    }\n};\nexport const deserializeAws_json1_0PutItemCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_json1_0PutItemCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_json1_0PutItemOutput(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nconst deserializeAws_json1_0PutItemCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"ConditionalCheckFailedException\":\n        case \"com.amazonaws.dynamodb#ConditionalCheckFailedException\":\n            throw await deserializeAws_json1_0ConditionalCheckFailedExceptionResponse(parsedOutput, context);\n        case \"InternalServerError\":\n        case \"com.amazonaws.dynamodb#InternalServerError\":\n            throw await deserializeAws_json1_0InternalServerErrorResponse(parsedOutput, context);\n        case \"InvalidEndpointException\":\n        case \"com.amazonaws.dynamodb#InvalidEndpointException\":\n            throw await deserializeAws_json1_0InvalidEndpointExceptionResponse(parsedOutput, context);\n        case \"ItemCollectionSizeLimitExceededException\":\n        case \"com.amazonaws.dynamodb#ItemCollectionSizeLimitExceededException\":\n            throw await deserializeAws_json1_0ItemCollectionSizeLimitExceededExceptionResponse(parsedOutput, context);\n        case \"ProvisionedThroughputExceededException\":\n        case \"com.amazonaws.dynamodb#ProvisionedThroughputExceededException\":\n            throw await deserializeAws_json1_0ProvisionedThroughputExceededExceptionResponse(parsedOutput, context);\n        case \"RequestLimitExceeded\":\n        case \"com.amazonaws.dynamodb#RequestLimitExceeded\":\n            throw await deserializeAws_json1_0RequestLimitExceededResponse(parsedOutput, context);\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.dynamodb#ResourceNotFoundException\":\n            throw await deserializeAws_json1_0ResourceNotFoundExceptionResponse(parsedOutput, context);\n        case \"TransactionConflictException\":\n        case \"com.amazonaws.dynamodb#TransactionConflictException\":\n            throw await deserializeAws_json1_0TransactionConflictExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            throwDefaultError({\n                output,\n                parsedBody,\n                exceptionCtor: __BaseException,\n                errorCode,\n            });\n    }\n};\nexport const deserializeAws_json1_0QueryCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_json1_0QueryCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_json1_0QueryOutput(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nconst deserializeAws_json1_0QueryCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalServerError\":\n        case \"com.amazonaws.dynamodb#InternalServerError\":\n            throw await deserializeAws_json1_0InternalServerErrorResponse(parsedOutput, context);\n        case \"InvalidEndpointException\":\n        case \"com.amazonaws.dynamodb#InvalidEndpointException\":\n            throw await deserializeAws_json1_0InvalidEndpointExceptionResponse(parsedOutput, context);\n        case \"ProvisionedThroughputExceededException\":\n        case \"com.amazonaws.dynamodb#ProvisionedThroughputExceededException\":\n            throw await deserializeAws_json1_0ProvisionedThroughputExceededExceptionResponse(parsedOutput, context);\n        case \"RequestLimitExceeded\":\n        case \"com.amazonaws.dynamodb#RequestLimitExceeded\":\n            throw await deserializeAws_json1_0RequestLimitExceededResponse(parsedOutput, context);\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.dynamodb#ResourceNotFoundException\":\n            throw await deserializeAws_json1_0ResourceNotFoundExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            throwDefaultError({\n                output,\n                parsedBody,\n                exceptionCtor: __BaseException,\n                errorCode,\n            });\n    }\n};\nexport const deserializeAws_json1_0RestoreTableFromBackupCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_json1_0RestoreTableFromBackupCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_json1_0RestoreTableFromBackupOutput(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nconst deserializeAws_json1_0RestoreTableFromBackupCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"BackupInUseException\":\n        case \"com.amazonaws.dynamodb#BackupInUseException\":\n            throw await deserializeAws_json1_0BackupInUseExceptionResponse(parsedOutput, context);\n        case \"BackupNotFoundException\":\n        case \"com.amazonaws.dynamodb#BackupNotFoundException\":\n            throw await deserializeAws_json1_0BackupNotFoundExceptionResponse(parsedOutput, context);\n        case \"InternalServerError\":\n        case \"com.amazonaws.dynamodb#InternalServerError\":\n            throw await deserializeAws_json1_0InternalServerErrorResponse(parsedOutput, context);\n        case \"InvalidEndpointException\":\n        case \"com.amazonaws.dynamodb#InvalidEndpointException\":\n            throw await deserializeAws_json1_0InvalidEndpointExceptionResponse(parsedOutput, context);\n        case \"LimitExceededException\":\n        case \"com.amazonaws.dynamodb#LimitExceededException\":\n            throw await deserializeAws_json1_0LimitExceededExceptionResponse(parsedOutput, context);\n        case \"TableAlreadyExistsException\":\n        case \"com.amazonaws.dynamodb#TableAlreadyExistsException\":\n            throw await deserializeAws_json1_0TableAlreadyExistsExceptionResponse(parsedOutput, context);\n        case \"TableInUseException\":\n        case \"com.amazonaws.dynamodb#TableInUseException\":\n            throw await deserializeAws_json1_0TableInUseExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            throwDefaultError({\n                output,\n                parsedBody,\n                exceptionCtor: __BaseException,\n                errorCode,\n            });\n    }\n};\nexport const deserializeAws_json1_0RestoreTableToPointInTimeCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_json1_0RestoreTableToPointInTimeCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_json1_0RestoreTableToPointInTimeOutput(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nconst deserializeAws_json1_0RestoreTableToPointInTimeCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalServerError\":\n        case \"com.amazonaws.dynamodb#InternalServerError\":\n            throw await deserializeAws_json1_0InternalServerErrorResponse(parsedOutput, context);\n        case \"InvalidEndpointException\":\n        case \"com.amazonaws.dynamodb#InvalidEndpointException\":\n            throw await deserializeAws_json1_0InvalidEndpointExceptionResponse(parsedOutput, context);\n        case \"InvalidRestoreTimeException\":\n        case \"com.amazonaws.dynamodb#InvalidRestoreTimeException\":\n            throw await deserializeAws_json1_0InvalidRestoreTimeExceptionResponse(parsedOutput, context);\n        case \"LimitExceededException\":\n        case \"com.amazonaws.dynamodb#LimitExceededException\":\n            throw await deserializeAws_json1_0LimitExceededExceptionResponse(parsedOutput, context);\n        case \"PointInTimeRecoveryUnavailableException\":\n        case \"com.amazonaws.dynamodb#PointInTimeRecoveryUnavailableException\":\n            throw await deserializeAws_json1_0PointInTimeRecoveryUnavailableExceptionResponse(parsedOutput, context);\n        case \"TableAlreadyExistsException\":\n        case \"com.amazonaws.dynamodb#TableAlreadyExistsException\":\n            throw await deserializeAws_json1_0TableAlreadyExistsExceptionResponse(parsedOutput, context);\n        case \"TableInUseException\":\n        case \"com.amazonaws.dynamodb#TableInUseException\":\n            throw await deserializeAws_json1_0TableInUseExceptionResponse(parsedOutput, context);\n        case \"TableNotFoundException\":\n        case \"com.amazonaws.dynamodb#TableNotFoundException\":\n            throw await deserializeAws_json1_0TableNotFoundExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            throwDefaultError({\n                output,\n                parsedBody,\n                exceptionCtor: __BaseException,\n                errorCode,\n            });\n    }\n};\nexport const deserializeAws_json1_0ScanCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_json1_0ScanCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_json1_0ScanOutput(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nconst deserializeAws_json1_0ScanCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalServerError\":\n        case \"com.amazonaws.dynamodb#InternalServerError\":\n            throw await deserializeAws_json1_0InternalServerErrorResponse(parsedOutput, context);\n        case \"InvalidEndpointException\":\n        case \"com.amazonaws.dynamodb#InvalidEndpointException\":\n            throw await deserializeAws_json1_0InvalidEndpointExceptionResponse(parsedOutput, context);\n        case \"ProvisionedThroughputExceededException\":\n        case \"com.amazonaws.dynamodb#ProvisionedThroughputExceededException\":\n            throw await deserializeAws_json1_0ProvisionedThroughputExceededExceptionResponse(parsedOutput, context);\n        case \"RequestLimitExceeded\":\n        case \"com.amazonaws.dynamodb#RequestLimitExceeded\":\n            throw await deserializeAws_json1_0RequestLimitExceededResponse(parsedOutput, context);\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.dynamodb#ResourceNotFoundException\":\n            throw await deserializeAws_json1_0ResourceNotFoundExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            throwDefaultError({\n                output,\n                parsedBody,\n                exceptionCtor: __BaseException,\n                errorCode,\n            });\n    }\n};\nexport const deserializeAws_json1_0TagResourceCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_json1_0TagResourceCommandError(output, context);\n    }\n    await collectBody(output.body, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n    };\n    return Promise.resolve(response);\n};\nconst deserializeAws_json1_0TagResourceCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalServerError\":\n        case \"com.amazonaws.dynamodb#InternalServerError\":\n            throw await deserializeAws_json1_0InternalServerErrorResponse(parsedOutput, context);\n        case \"InvalidEndpointException\":\n        case \"com.amazonaws.dynamodb#InvalidEndpointException\":\n            throw await deserializeAws_json1_0InvalidEndpointExceptionResponse(parsedOutput, context);\n        case \"LimitExceededException\":\n        case \"com.amazonaws.dynamodb#LimitExceededException\":\n            throw await deserializeAws_json1_0LimitExceededExceptionResponse(parsedOutput, context);\n        case \"ResourceInUseException\":\n        case \"com.amazonaws.dynamodb#ResourceInUseException\":\n            throw await deserializeAws_json1_0ResourceInUseExceptionResponse(parsedOutput, context);\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.dynamodb#ResourceNotFoundException\":\n            throw await deserializeAws_json1_0ResourceNotFoundExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            throwDefaultError({\n                output,\n                parsedBody,\n                exceptionCtor: __BaseException,\n                errorCode,\n            });\n    }\n};\nexport const deserializeAws_json1_0TransactGetItemsCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_json1_0TransactGetItemsCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_json1_0TransactGetItemsOutput(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nconst deserializeAws_json1_0TransactGetItemsCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalServerError\":\n        case \"com.amazonaws.dynamodb#InternalServerError\":\n            throw await deserializeAws_json1_0InternalServerErrorResponse(parsedOutput, context);\n        case \"InvalidEndpointException\":\n        case \"com.amazonaws.dynamodb#InvalidEndpointException\":\n            throw await deserializeAws_json1_0InvalidEndpointExceptionResponse(parsedOutput, context);\n        case \"ProvisionedThroughputExceededException\":\n        case \"com.amazonaws.dynamodb#ProvisionedThroughputExceededException\":\n            throw await deserializeAws_json1_0ProvisionedThroughputExceededExceptionResponse(parsedOutput, context);\n        case \"RequestLimitExceeded\":\n        case \"com.amazonaws.dynamodb#RequestLimitExceeded\":\n            throw await deserializeAws_json1_0RequestLimitExceededResponse(parsedOutput, context);\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.dynamodb#ResourceNotFoundException\":\n            throw await deserializeAws_json1_0ResourceNotFoundExceptionResponse(parsedOutput, context);\n        case \"TransactionCanceledException\":\n        case \"com.amazonaws.dynamodb#TransactionCanceledException\":\n            throw await deserializeAws_json1_0TransactionCanceledExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            throwDefaultError({\n                output,\n                parsedBody,\n                exceptionCtor: __BaseException,\n                errorCode,\n            });\n    }\n};\nexport const deserializeAws_json1_0TransactWriteItemsCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_json1_0TransactWriteItemsCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_json1_0TransactWriteItemsOutput(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nconst deserializeAws_json1_0TransactWriteItemsCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"IdempotentParameterMismatchException\":\n        case \"com.amazonaws.dynamodb#IdempotentParameterMismatchException\":\n            throw await deserializeAws_json1_0IdempotentParameterMismatchExceptionResponse(parsedOutput, context);\n        case \"InternalServerError\":\n        case \"com.amazonaws.dynamodb#InternalServerError\":\n            throw await deserializeAws_json1_0InternalServerErrorResponse(parsedOutput, context);\n        case \"InvalidEndpointException\":\n        case \"com.amazonaws.dynamodb#InvalidEndpointException\":\n            throw await deserializeAws_json1_0InvalidEndpointExceptionResponse(parsedOutput, context);\n        case \"ProvisionedThroughputExceededException\":\n        case \"com.amazonaws.dynamodb#ProvisionedThroughputExceededException\":\n            throw await deserializeAws_json1_0ProvisionedThroughputExceededExceptionResponse(parsedOutput, context);\n        case \"RequestLimitExceeded\":\n        case \"com.amazonaws.dynamodb#RequestLimitExceeded\":\n            throw await deserializeAws_json1_0RequestLimitExceededResponse(parsedOutput, context);\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.dynamodb#ResourceNotFoundException\":\n            throw await deserializeAws_json1_0ResourceNotFoundExceptionResponse(parsedOutput, context);\n        case \"TransactionCanceledException\":\n        case \"com.amazonaws.dynamodb#TransactionCanceledException\":\n            throw await deserializeAws_json1_0TransactionCanceledExceptionResponse(parsedOutput, context);\n        case \"TransactionInProgressException\":\n        case \"com.amazonaws.dynamodb#TransactionInProgressException\":\n            throw await deserializeAws_json1_0TransactionInProgressExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            throwDefaultError({\n                output,\n                parsedBody,\n                exceptionCtor: __BaseException,\n                errorCode,\n            });\n    }\n};\nexport const deserializeAws_json1_0UntagResourceCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_json1_0UntagResourceCommandError(output, context);\n    }\n    await collectBody(output.body, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n    };\n    return Promise.resolve(response);\n};\nconst deserializeAws_json1_0UntagResourceCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalServerError\":\n        case \"com.amazonaws.dynamodb#InternalServerError\":\n            throw await deserializeAws_json1_0InternalServerErrorResponse(parsedOutput, context);\n        case \"InvalidEndpointException\":\n        case \"com.amazonaws.dynamodb#InvalidEndpointException\":\n            throw await deserializeAws_json1_0InvalidEndpointExceptionResponse(parsedOutput, context);\n        case \"LimitExceededException\":\n        case \"com.amazonaws.dynamodb#LimitExceededException\":\n            throw await deserializeAws_json1_0LimitExceededExceptionResponse(parsedOutput, context);\n        case \"ResourceInUseException\":\n        case \"com.amazonaws.dynamodb#ResourceInUseException\":\n            throw await deserializeAws_json1_0ResourceInUseExceptionResponse(parsedOutput, context);\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.dynamodb#ResourceNotFoundException\":\n            throw await deserializeAws_json1_0ResourceNotFoundExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            throwDefaultError({\n                output,\n                parsedBody,\n                exceptionCtor: __BaseException,\n                errorCode,\n            });\n    }\n};\nexport const deserializeAws_json1_0UpdateContinuousBackupsCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_json1_0UpdateContinuousBackupsCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_json1_0UpdateContinuousBackupsOutput(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nconst deserializeAws_json1_0UpdateContinuousBackupsCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"ContinuousBackupsUnavailableException\":\n        case \"com.amazonaws.dynamodb#ContinuousBackupsUnavailableException\":\n            throw await deserializeAws_json1_0ContinuousBackupsUnavailableExceptionResponse(parsedOutput, context);\n        case \"InternalServerError\":\n        case \"com.amazonaws.dynamodb#InternalServerError\":\n            throw await deserializeAws_json1_0InternalServerErrorResponse(parsedOutput, context);\n        case \"InvalidEndpointException\":\n        case \"com.amazonaws.dynamodb#InvalidEndpointException\":\n            throw await deserializeAws_json1_0InvalidEndpointExceptionResponse(parsedOutput, context);\n        case \"TableNotFoundException\":\n        case \"com.amazonaws.dynamodb#TableNotFoundException\":\n            throw await deserializeAws_json1_0TableNotFoundExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            throwDefaultError({\n                output,\n                parsedBody,\n                exceptionCtor: __BaseException,\n                errorCode,\n            });\n    }\n};\nexport const deserializeAws_json1_0UpdateContributorInsightsCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_json1_0UpdateContributorInsightsCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_json1_0UpdateContributorInsightsOutput(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nconst deserializeAws_json1_0UpdateContributorInsightsCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalServerError\":\n        case \"com.amazonaws.dynamodb#InternalServerError\":\n            throw await deserializeAws_json1_0InternalServerErrorResponse(parsedOutput, context);\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.dynamodb#ResourceNotFoundException\":\n            throw await deserializeAws_json1_0ResourceNotFoundExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            throwDefaultError({\n                output,\n                parsedBody,\n                exceptionCtor: __BaseException,\n                errorCode,\n            });\n    }\n};\nexport const deserializeAws_json1_0UpdateGlobalTableCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_json1_0UpdateGlobalTableCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_json1_0UpdateGlobalTableOutput(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nconst deserializeAws_json1_0UpdateGlobalTableCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"GlobalTableNotFoundException\":\n        case \"com.amazonaws.dynamodb#GlobalTableNotFoundException\":\n            throw await deserializeAws_json1_0GlobalTableNotFoundExceptionResponse(parsedOutput, context);\n        case \"InternalServerError\":\n        case \"com.amazonaws.dynamodb#InternalServerError\":\n            throw await deserializeAws_json1_0InternalServerErrorResponse(parsedOutput, context);\n        case \"InvalidEndpointException\":\n        case \"com.amazonaws.dynamodb#InvalidEndpointException\":\n            throw await deserializeAws_json1_0InvalidEndpointExceptionResponse(parsedOutput, context);\n        case \"ReplicaAlreadyExistsException\":\n        case \"com.amazonaws.dynamodb#ReplicaAlreadyExistsException\":\n            throw await deserializeAws_json1_0ReplicaAlreadyExistsExceptionResponse(parsedOutput, context);\n        case \"ReplicaNotFoundException\":\n        case \"com.amazonaws.dynamodb#ReplicaNotFoundException\":\n            throw await deserializeAws_json1_0ReplicaNotFoundExceptionResponse(parsedOutput, context);\n        case \"TableNotFoundException\":\n        case \"com.amazonaws.dynamodb#TableNotFoundException\":\n            throw await deserializeAws_json1_0TableNotFoundExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            throwDefaultError({\n                output,\n                parsedBody,\n                exceptionCtor: __BaseException,\n                errorCode,\n            });\n    }\n};\nexport const deserializeAws_json1_0UpdateGlobalTableSettingsCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_json1_0UpdateGlobalTableSettingsCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_json1_0UpdateGlobalTableSettingsOutput(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nconst deserializeAws_json1_0UpdateGlobalTableSettingsCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"GlobalTableNotFoundException\":\n        case \"com.amazonaws.dynamodb#GlobalTableNotFoundException\":\n            throw await deserializeAws_json1_0GlobalTableNotFoundExceptionResponse(parsedOutput, context);\n        case \"IndexNotFoundException\":\n        case \"com.amazonaws.dynamodb#IndexNotFoundException\":\n            throw await deserializeAws_json1_0IndexNotFoundExceptionResponse(parsedOutput, context);\n        case \"InternalServerError\":\n        case \"com.amazonaws.dynamodb#InternalServerError\":\n            throw await deserializeAws_json1_0InternalServerErrorResponse(parsedOutput, context);\n        case \"InvalidEndpointException\":\n        case \"com.amazonaws.dynamodb#InvalidEndpointException\":\n            throw await deserializeAws_json1_0InvalidEndpointExceptionResponse(parsedOutput, context);\n        case \"LimitExceededException\":\n        case \"com.amazonaws.dynamodb#LimitExceededException\":\n            throw await deserializeAws_json1_0LimitExceededExceptionResponse(parsedOutput, context);\n        case \"ReplicaNotFoundException\":\n        case \"com.amazonaws.dynamodb#ReplicaNotFoundException\":\n            throw await deserializeAws_json1_0ReplicaNotFoundExceptionResponse(parsedOutput, context);\n        case \"ResourceInUseException\":\n        case \"com.amazonaws.dynamodb#ResourceInUseException\":\n            throw await deserializeAws_json1_0ResourceInUseExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            throwDefaultError({\n                output,\n                parsedBody,\n                exceptionCtor: __BaseException,\n                errorCode,\n            });\n    }\n};\nexport const deserializeAws_json1_0UpdateItemCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_json1_0UpdateItemCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_json1_0UpdateItemOutput(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nconst deserializeAws_json1_0UpdateItemCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"ConditionalCheckFailedException\":\n        case \"com.amazonaws.dynamodb#ConditionalCheckFailedException\":\n            throw await deserializeAws_json1_0ConditionalCheckFailedExceptionResponse(parsedOutput, context);\n        case \"InternalServerError\":\n        case \"com.amazonaws.dynamodb#InternalServerError\":\n            throw await deserializeAws_json1_0InternalServerErrorResponse(parsedOutput, context);\n        case \"InvalidEndpointException\":\n        case \"com.amazonaws.dynamodb#InvalidEndpointException\":\n            throw await deserializeAws_json1_0InvalidEndpointExceptionResponse(parsedOutput, context);\n        case \"ItemCollectionSizeLimitExceededException\":\n        case \"com.amazonaws.dynamodb#ItemCollectionSizeLimitExceededException\":\n            throw await deserializeAws_json1_0ItemCollectionSizeLimitExceededExceptionResponse(parsedOutput, context);\n        case \"ProvisionedThroughputExceededException\":\n        case \"com.amazonaws.dynamodb#ProvisionedThroughputExceededException\":\n            throw await deserializeAws_json1_0ProvisionedThroughputExceededExceptionResponse(parsedOutput, context);\n        case \"RequestLimitExceeded\":\n        case \"com.amazonaws.dynamodb#RequestLimitExceeded\":\n            throw await deserializeAws_json1_0RequestLimitExceededResponse(parsedOutput, context);\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.dynamodb#ResourceNotFoundException\":\n            throw await deserializeAws_json1_0ResourceNotFoundExceptionResponse(parsedOutput, context);\n        case \"TransactionConflictException\":\n        case \"com.amazonaws.dynamodb#TransactionConflictException\":\n            throw await deserializeAws_json1_0TransactionConflictExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            throwDefaultError({\n                output,\n                parsedBody,\n                exceptionCtor: __BaseException,\n                errorCode,\n            });\n    }\n};\nexport const deserializeAws_json1_0UpdateTableCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_json1_0UpdateTableCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_json1_0UpdateTableOutput(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nconst deserializeAws_json1_0UpdateTableCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalServerError\":\n        case \"com.amazonaws.dynamodb#InternalServerError\":\n            throw await deserializeAws_json1_0InternalServerErrorResponse(parsedOutput, context);\n        case \"InvalidEndpointException\":\n        case \"com.amazonaws.dynamodb#InvalidEndpointException\":\n            throw await deserializeAws_json1_0InvalidEndpointExceptionResponse(parsedOutput, context);\n        case \"LimitExceededException\":\n        case \"com.amazonaws.dynamodb#LimitExceededException\":\n            throw await deserializeAws_json1_0LimitExceededExceptionResponse(parsedOutput, context);\n        case \"ResourceInUseException\":\n        case \"com.amazonaws.dynamodb#ResourceInUseException\":\n            throw await deserializeAws_json1_0ResourceInUseExceptionResponse(parsedOutput, context);\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.dynamodb#ResourceNotFoundException\":\n            throw await deserializeAws_json1_0ResourceNotFoundExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            throwDefaultError({\n                output,\n                parsedBody,\n                exceptionCtor: __BaseException,\n                errorCode,\n            });\n    }\n};\nexport const deserializeAws_json1_0UpdateTableReplicaAutoScalingCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_json1_0UpdateTableReplicaAutoScalingCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_json1_0UpdateTableReplicaAutoScalingOutput(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nconst deserializeAws_json1_0UpdateTableReplicaAutoScalingCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalServerError\":\n        case \"com.amazonaws.dynamodb#InternalServerError\":\n            throw await deserializeAws_json1_0InternalServerErrorResponse(parsedOutput, context);\n        case \"LimitExceededException\":\n        case \"com.amazonaws.dynamodb#LimitExceededException\":\n            throw await deserializeAws_json1_0LimitExceededExceptionResponse(parsedOutput, context);\n        case \"ResourceInUseException\":\n        case \"com.amazonaws.dynamodb#ResourceInUseException\":\n            throw await deserializeAws_json1_0ResourceInUseExceptionResponse(parsedOutput, context);\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.dynamodb#ResourceNotFoundException\":\n            throw await deserializeAws_json1_0ResourceNotFoundExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            throwDefaultError({\n                output,\n                parsedBody,\n                exceptionCtor: __BaseException,\n                errorCode,\n            });\n    }\n};\nexport const deserializeAws_json1_0UpdateTimeToLiveCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_json1_0UpdateTimeToLiveCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_json1_0UpdateTimeToLiveOutput(data, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nconst deserializeAws_json1_0UpdateTimeToLiveCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalServerError\":\n        case \"com.amazonaws.dynamodb#InternalServerError\":\n            throw await deserializeAws_json1_0InternalServerErrorResponse(parsedOutput, context);\n        case \"InvalidEndpointException\":\n        case \"com.amazonaws.dynamodb#InvalidEndpointException\":\n            throw await deserializeAws_json1_0InvalidEndpointExceptionResponse(parsedOutput, context);\n        case \"LimitExceededException\":\n        case \"com.amazonaws.dynamodb#LimitExceededException\":\n            throw await deserializeAws_json1_0LimitExceededExceptionResponse(parsedOutput, context);\n        case \"ResourceInUseException\":\n        case \"com.amazonaws.dynamodb#ResourceInUseException\":\n            throw await deserializeAws_json1_0ResourceInUseExceptionResponse(parsedOutput, context);\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.dynamodb#ResourceNotFoundException\":\n            throw await deserializeAws_json1_0ResourceNotFoundExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            throwDefaultError({\n                output,\n                parsedBody,\n                exceptionCtor: __BaseException,\n                errorCode,\n            });\n    }\n};\nconst deserializeAws_json1_0BackupInUseExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_json1_0BackupInUseException(body, context);\n    const exception = new BackupInUseException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst deserializeAws_json1_0BackupNotFoundExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_json1_0BackupNotFoundException(body, context);\n    const exception = new BackupNotFoundException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst deserializeAws_json1_0ConditionalCheckFailedExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_json1_0ConditionalCheckFailedException(body, context);\n    const exception = new ConditionalCheckFailedException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst deserializeAws_json1_0ContinuousBackupsUnavailableExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_json1_0ContinuousBackupsUnavailableException(body, context);\n    const exception = new ContinuousBackupsUnavailableException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst deserializeAws_json1_0DuplicateItemExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_json1_0DuplicateItemException(body, context);\n    const exception = new DuplicateItemException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst deserializeAws_json1_0ExportConflictExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_json1_0ExportConflictException(body, context);\n    const exception = new ExportConflictException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst deserializeAws_json1_0ExportNotFoundExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_json1_0ExportNotFoundException(body, context);\n    const exception = new ExportNotFoundException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst deserializeAws_json1_0GlobalTableAlreadyExistsExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_json1_0GlobalTableAlreadyExistsException(body, context);\n    const exception = new GlobalTableAlreadyExistsException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst deserializeAws_json1_0GlobalTableNotFoundExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_json1_0GlobalTableNotFoundException(body, context);\n    const exception = new GlobalTableNotFoundException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst deserializeAws_json1_0IdempotentParameterMismatchExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_json1_0IdempotentParameterMismatchException(body, context);\n    const exception = new IdempotentParameterMismatchException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst deserializeAws_json1_0ImportConflictExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_json1_0ImportConflictException(body, context);\n    const exception = new ImportConflictException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst deserializeAws_json1_0ImportNotFoundExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_json1_0ImportNotFoundException(body, context);\n    const exception = new ImportNotFoundException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst deserializeAws_json1_0IndexNotFoundExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_json1_0IndexNotFoundException(body, context);\n    const exception = new IndexNotFoundException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst deserializeAws_json1_0InternalServerErrorResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_json1_0InternalServerError(body, context);\n    const exception = new InternalServerError({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst deserializeAws_json1_0InvalidEndpointExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_json1_0InvalidEndpointException(body, context);\n    const exception = new InvalidEndpointException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst deserializeAws_json1_0InvalidExportTimeExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_json1_0InvalidExportTimeException(body, context);\n    const exception = new InvalidExportTimeException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst deserializeAws_json1_0InvalidRestoreTimeExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_json1_0InvalidRestoreTimeException(body, context);\n    const exception = new InvalidRestoreTimeException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst deserializeAws_json1_0ItemCollectionSizeLimitExceededExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_json1_0ItemCollectionSizeLimitExceededException(body, context);\n    const exception = new ItemCollectionSizeLimitExceededException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst deserializeAws_json1_0LimitExceededExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_json1_0LimitExceededException(body, context);\n    const exception = new LimitExceededException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst deserializeAws_json1_0PointInTimeRecoveryUnavailableExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_json1_0PointInTimeRecoveryUnavailableException(body, context);\n    const exception = new PointInTimeRecoveryUnavailableException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst deserializeAws_json1_0ProvisionedThroughputExceededExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_json1_0ProvisionedThroughputExceededException(body, context);\n    const exception = new ProvisionedThroughputExceededException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst deserializeAws_json1_0ReplicaAlreadyExistsExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_json1_0ReplicaAlreadyExistsException(body, context);\n    const exception = new ReplicaAlreadyExistsException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst deserializeAws_json1_0ReplicaNotFoundExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_json1_0ReplicaNotFoundException(body, context);\n    const exception = new ReplicaNotFoundException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst deserializeAws_json1_0RequestLimitExceededResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_json1_0RequestLimitExceeded(body, context);\n    const exception = new RequestLimitExceeded({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst deserializeAws_json1_0ResourceInUseExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_json1_0ResourceInUseException(body, context);\n    const exception = new ResourceInUseException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst deserializeAws_json1_0ResourceNotFoundExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_json1_0ResourceNotFoundException(body, context);\n    const exception = new ResourceNotFoundException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst deserializeAws_json1_0TableAlreadyExistsExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_json1_0TableAlreadyExistsException(body, context);\n    const exception = new TableAlreadyExistsException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst deserializeAws_json1_0TableInUseExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_json1_0TableInUseException(body, context);\n    const exception = new TableInUseException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst deserializeAws_json1_0TableNotFoundExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_json1_0TableNotFoundException(body, context);\n    const exception = new TableNotFoundException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst deserializeAws_json1_0TransactionCanceledExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_json1_0TransactionCanceledException(body, context);\n    const exception = new TransactionCanceledException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst deserializeAws_json1_0TransactionConflictExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_json1_0TransactionConflictException(body, context);\n    const exception = new TransactionConflictException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst deserializeAws_json1_0TransactionInProgressExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_json1_0TransactionInProgressException(body, context);\n    const exception = new TransactionInProgressException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst serializeAws_json1_0AttributeDefinition = (input, context) => {\n    return {\n        ...(input.AttributeName != null && { AttributeName: input.AttributeName }),\n        ...(input.AttributeType != null && { AttributeType: input.AttributeType }),\n    };\n};\nconst serializeAws_json1_0AttributeDefinitions = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        return serializeAws_json1_0AttributeDefinition(entry, context);\n    });\n};\nconst serializeAws_json1_0AttributeNameList = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        return entry;\n    });\n};\nconst serializeAws_json1_0AttributeUpdates = (input, context) => {\n    return Object.entries(input).reduce((acc, [key, value]) => {\n        if (value === null) {\n            return acc;\n        }\n        acc[key] = serializeAws_json1_0AttributeValueUpdate(value, context);\n        return acc;\n    }, {});\n};\nconst serializeAws_json1_0AttributeValue = (input, context) => {\n    return AttributeValue.visit(input, {\n        B: (value) => ({ B: context.base64Encoder(value) }),\n        BOOL: (value) => ({ BOOL: value }),\n        BS: (value) => ({ BS: serializeAws_json1_0BinarySetAttributeValue(value, context) }),\n        L: (value) => ({ L: serializeAws_json1_0ListAttributeValue(value, context) }),\n        M: (value) => ({ M: serializeAws_json1_0MapAttributeValue(value, context) }),\n        N: (value) => ({ N: value }),\n        NS: (value) => ({ NS: serializeAws_json1_0NumberSetAttributeValue(value, context) }),\n        NULL: (value) => ({ NULL: value }),\n        S: (value) => ({ S: value }),\n        SS: (value) => ({ SS: serializeAws_json1_0StringSetAttributeValue(value, context) }),\n        _: (name, value) => ({ name: value }),\n    });\n};\nconst serializeAws_json1_0AttributeValueList = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        return serializeAws_json1_0AttributeValue(entry, context);\n    });\n};\nconst serializeAws_json1_0AttributeValueUpdate = (input, context) => {\n    return {\n        ...(input.Action != null && { Action: input.Action }),\n        ...(input.Value != null && { Value: serializeAws_json1_0AttributeValue(input.Value, context) }),\n    };\n};\nconst serializeAws_json1_0AutoScalingPolicyUpdate = (input, context) => {\n    return {\n        ...(input.PolicyName != null && { PolicyName: input.PolicyName }),\n        ...(input.TargetTrackingScalingPolicyConfiguration != null && {\n            TargetTrackingScalingPolicyConfiguration: serializeAws_json1_0AutoScalingTargetTrackingScalingPolicyConfigurationUpdate(input.TargetTrackingScalingPolicyConfiguration, context),\n        }),\n    };\n};\nconst serializeAws_json1_0AutoScalingSettingsUpdate = (input, context) => {\n    return {\n        ...(input.AutoScalingDisabled != null && { AutoScalingDisabled: input.AutoScalingDisabled }),\n        ...(input.AutoScalingRoleArn != null && { AutoScalingRoleArn: input.AutoScalingRoleArn }),\n        ...(input.MaximumUnits != null && { MaximumUnits: input.MaximumUnits }),\n        ...(input.MinimumUnits != null && { MinimumUnits: input.MinimumUnits }),\n        ...(input.ScalingPolicyUpdate != null && {\n            ScalingPolicyUpdate: serializeAws_json1_0AutoScalingPolicyUpdate(input.ScalingPolicyUpdate, context),\n        }),\n    };\n};\nconst serializeAws_json1_0AutoScalingTargetTrackingScalingPolicyConfigurationUpdate = (input, context) => {\n    return {\n        ...(input.DisableScaleIn != null && { DisableScaleIn: input.DisableScaleIn }),\n        ...(input.ScaleInCooldown != null && { ScaleInCooldown: input.ScaleInCooldown }),\n        ...(input.ScaleOutCooldown != null && { ScaleOutCooldown: input.ScaleOutCooldown }),\n        ...(input.TargetValue != null && { TargetValue: __serializeFloat(input.TargetValue) }),\n    };\n};\nconst serializeAws_json1_0BatchExecuteStatementInput = (input, context) => {\n    return {\n        ...(input.ReturnConsumedCapacity != null && { ReturnConsumedCapacity: input.ReturnConsumedCapacity }),\n        ...(input.Statements != null && { Statements: serializeAws_json1_0PartiQLBatchRequest(input.Statements, context) }),\n    };\n};\nconst serializeAws_json1_0BatchGetItemInput = (input, context) => {\n    return {\n        ...(input.RequestItems != null && {\n            RequestItems: serializeAws_json1_0BatchGetRequestMap(input.RequestItems, context),\n        }),\n        ...(input.ReturnConsumedCapacity != null && { ReturnConsumedCapacity: input.ReturnConsumedCapacity }),\n    };\n};\nconst serializeAws_json1_0BatchGetRequestMap = (input, context) => {\n    return Object.entries(input).reduce((acc, [key, value]) => {\n        if (value === null) {\n            return acc;\n        }\n        acc[key] = serializeAws_json1_0KeysAndAttributes(value, context);\n        return acc;\n    }, {});\n};\nconst serializeAws_json1_0BatchStatementRequest = (input, context) => {\n    return {\n        ...(input.ConsistentRead != null && { ConsistentRead: input.ConsistentRead }),\n        ...(input.Parameters != null && {\n            Parameters: serializeAws_json1_0PreparedStatementParameters(input.Parameters, context),\n        }),\n        ...(input.Statement != null && { Statement: input.Statement }),\n    };\n};\nconst serializeAws_json1_0BatchWriteItemInput = (input, context) => {\n    return {\n        ...(input.RequestItems != null && {\n            RequestItems: serializeAws_json1_0BatchWriteItemRequestMap(input.RequestItems, context),\n        }),\n        ...(input.ReturnConsumedCapacity != null && { ReturnConsumedCapacity: input.ReturnConsumedCapacity }),\n        ...(input.ReturnItemCollectionMetrics != null && {\n            ReturnItemCollectionMetrics: input.ReturnItemCollectionMetrics,\n        }),\n    };\n};\nconst serializeAws_json1_0BatchWriteItemRequestMap = (input, context) => {\n    return Object.entries(input).reduce((acc, [key, value]) => {\n        if (value === null) {\n            return acc;\n        }\n        acc[key] = serializeAws_json1_0WriteRequests(value, context);\n        return acc;\n    }, {});\n};\nconst serializeAws_json1_0BinarySetAttributeValue = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        return context.base64Encoder(entry);\n    });\n};\nconst serializeAws_json1_0Condition = (input, context) => {\n    return {\n        ...(input.AttributeValueList != null && {\n            AttributeValueList: serializeAws_json1_0AttributeValueList(input.AttributeValueList, context),\n        }),\n        ...(input.ComparisonOperator != null && { ComparisonOperator: input.ComparisonOperator }),\n    };\n};\nconst serializeAws_json1_0ConditionCheck = (input, context) => {\n    return {\n        ...(input.ConditionExpression != null && { ConditionExpression: input.ConditionExpression }),\n        ...(input.ExpressionAttributeNames != null && {\n            ExpressionAttributeNames: serializeAws_json1_0ExpressionAttributeNameMap(input.ExpressionAttributeNames, context),\n        }),\n        ...(input.ExpressionAttributeValues != null && {\n            ExpressionAttributeValues: serializeAws_json1_0ExpressionAttributeValueMap(input.ExpressionAttributeValues, context),\n        }),\n        ...(input.Key != null && { Key: serializeAws_json1_0Key(input.Key, context) }),\n        ...(input.ReturnValuesOnConditionCheckFailure != null && {\n            ReturnValuesOnConditionCheckFailure: input.ReturnValuesOnConditionCheckFailure,\n        }),\n        ...(input.TableName != null && { TableName: input.TableName }),\n    };\n};\nconst serializeAws_json1_0CreateBackupInput = (input, context) => {\n    return {\n        ...(input.BackupName != null && { BackupName: input.BackupName }),\n        ...(input.TableName != null && { TableName: input.TableName }),\n    };\n};\nconst serializeAws_json1_0CreateGlobalSecondaryIndexAction = (input, context) => {\n    return {\n        ...(input.IndexName != null && { IndexName: input.IndexName }),\n        ...(input.KeySchema != null && { KeySchema: serializeAws_json1_0KeySchema(input.KeySchema, context) }),\n        ...(input.Projection != null && { Projection: serializeAws_json1_0Projection(input.Projection, context) }),\n        ...(input.ProvisionedThroughput != null && {\n            ProvisionedThroughput: serializeAws_json1_0ProvisionedThroughput(input.ProvisionedThroughput, context),\n        }),\n    };\n};\nconst serializeAws_json1_0CreateGlobalTableInput = (input, context) => {\n    return {\n        ...(input.GlobalTableName != null && { GlobalTableName: input.GlobalTableName }),\n        ...(input.ReplicationGroup != null && {\n            ReplicationGroup: serializeAws_json1_0ReplicaList(input.ReplicationGroup, context),\n        }),\n    };\n};\nconst serializeAws_json1_0CreateReplicaAction = (input, context) => {\n    return {\n        ...(input.RegionName != null && { RegionName: input.RegionName }),\n    };\n};\nconst serializeAws_json1_0CreateReplicationGroupMemberAction = (input, context) => {\n    return {\n        ...(input.GlobalSecondaryIndexes != null && {\n            GlobalSecondaryIndexes: serializeAws_json1_0ReplicaGlobalSecondaryIndexList(input.GlobalSecondaryIndexes, context),\n        }),\n        ...(input.KMSMasterKeyId != null && { KMSMasterKeyId: input.KMSMasterKeyId }),\n        ...(input.ProvisionedThroughputOverride != null && {\n            ProvisionedThroughputOverride: serializeAws_json1_0ProvisionedThroughputOverride(input.ProvisionedThroughputOverride, context),\n        }),\n        ...(input.RegionName != null && { RegionName: input.RegionName }),\n        ...(input.TableClassOverride != null && { TableClassOverride: input.TableClassOverride }),\n    };\n};\nconst serializeAws_json1_0CreateTableInput = (input, context) => {\n    return {\n        ...(input.AttributeDefinitions != null && {\n            AttributeDefinitions: serializeAws_json1_0AttributeDefinitions(input.AttributeDefinitions, context),\n        }),\n        ...(input.BillingMode != null && { BillingMode: input.BillingMode }),\n        ...(input.GlobalSecondaryIndexes != null && {\n            GlobalSecondaryIndexes: serializeAws_json1_0GlobalSecondaryIndexList(input.GlobalSecondaryIndexes, context),\n        }),\n        ...(input.KeySchema != null && { KeySchema: serializeAws_json1_0KeySchema(input.KeySchema, context) }),\n        ...(input.LocalSecondaryIndexes != null && {\n            LocalSecondaryIndexes: serializeAws_json1_0LocalSecondaryIndexList(input.LocalSecondaryIndexes, context),\n        }),\n        ...(input.ProvisionedThroughput != null && {\n            ProvisionedThroughput: serializeAws_json1_0ProvisionedThroughput(input.ProvisionedThroughput, context),\n        }),\n        ...(input.SSESpecification != null && {\n            SSESpecification: serializeAws_json1_0SSESpecification(input.SSESpecification, context),\n        }),\n        ...(input.StreamSpecification != null && {\n            StreamSpecification: serializeAws_json1_0StreamSpecification(input.StreamSpecification, context),\n        }),\n        ...(input.TableClass != null && { TableClass: input.TableClass }),\n        ...(input.TableName != null && { TableName: input.TableName }),\n        ...(input.Tags != null && { Tags: serializeAws_json1_0TagList(input.Tags, context) }),\n    };\n};\nconst serializeAws_json1_0CsvHeaderList = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        return entry;\n    });\n};\nconst serializeAws_json1_0CsvOptions = (input, context) => {\n    return {\n        ...(input.Delimiter != null && { Delimiter: input.Delimiter }),\n        ...(input.HeaderList != null && { HeaderList: serializeAws_json1_0CsvHeaderList(input.HeaderList, context) }),\n    };\n};\nconst serializeAws_json1_0Delete = (input, context) => {\n    return {\n        ...(input.ConditionExpression != null && { ConditionExpression: input.ConditionExpression }),\n        ...(input.ExpressionAttributeNames != null && {\n            ExpressionAttributeNames: serializeAws_json1_0ExpressionAttributeNameMap(input.ExpressionAttributeNames, context),\n        }),\n        ...(input.ExpressionAttributeValues != null && {\n            ExpressionAttributeValues: serializeAws_json1_0ExpressionAttributeValueMap(input.ExpressionAttributeValues, context),\n        }),\n        ...(input.Key != null && { Key: serializeAws_json1_0Key(input.Key, context) }),\n        ...(input.ReturnValuesOnConditionCheckFailure != null && {\n            ReturnValuesOnConditionCheckFailure: input.ReturnValuesOnConditionCheckFailure,\n        }),\n        ...(input.TableName != null && { TableName: input.TableName }),\n    };\n};\nconst serializeAws_json1_0DeleteBackupInput = (input, context) => {\n    return {\n        ...(input.BackupArn != null && { BackupArn: input.BackupArn }),\n    };\n};\nconst serializeAws_json1_0DeleteGlobalSecondaryIndexAction = (input, context) => {\n    return {\n        ...(input.IndexName != null && { IndexName: input.IndexName }),\n    };\n};\nconst serializeAws_json1_0DeleteItemInput = (input, context) => {\n    return {\n        ...(input.ConditionExpression != null && { ConditionExpression: input.ConditionExpression }),\n        ...(input.ConditionalOperator != null && { ConditionalOperator: input.ConditionalOperator }),\n        ...(input.Expected != null && { Expected: serializeAws_json1_0ExpectedAttributeMap(input.Expected, context) }),\n        ...(input.ExpressionAttributeNames != null && {\n            ExpressionAttributeNames: serializeAws_json1_0ExpressionAttributeNameMap(input.ExpressionAttributeNames, context),\n        }),\n        ...(input.ExpressionAttributeValues != null && {\n            ExpressionAttributeValues: serializeAws_json1_0ExpressionAttributeValueMap(input.ExpressionAttributeValues, context),\n        }),\n        ...(input.Key != null && { Key: serializeAws_json1_0Key(input.Key, context) }),\n        ...(input.ReturnConsumedCapacity != null && { ReturnConsumedCapacity: input.ReturnConsumedCapacity }),\n        ...(input.ReturnItemCollectionMetrics != null && {\n            ReturnItemCollectionMetrics: input.ReturnItemCollectionMetrics,\n        }),\n        ...(input.ReturnValues != null && { ReturnValues: input.ReturnValues }),\n        ...(input.TableName != null && { TableName: input.TableName }),\n    };\n};\nconst serializeAws_json1_0DeleteReplicaAction = (input, context) => {\n    return {\n        ...(input.RegionName != null && { RegionName: input.RegionName }),\n    };\n};\nconst serializeAws_json1_0DeleteReplicationGroupMemberAction = (input, context) => {\n    return {\n        ...(input.RegionName != null && { RegionName: input.RegionName }),\n    };\n};\nconst serializeAws_json1_0DeleteRequest = (input, context) => {\n    return {\n        ...(input.Key != null && { Key: serializeAws_json1_0Key(input.Key, context) }),\n    };\n};\nconst serializeAws_json1_0DeleteTableInput = (input, context) => {\n    return {\n        ...(input.TableName != null && { TableName: input.TableName }),\n    };\n};\nconst serializeAws_json1_0DescribeBackupInput = (input, context) => {\n    return {\n        ...(input.BackupArn != null && { BackupArn: input.BackupArn }),\n    };\n};\nconst serializeAws_json1_0DescribeContinuousBackupsInput = (input, context) => {\n    return {\n        ...(input.TableName != null && { TableName: input.TableName }),\n    };\n};\nconst serializeAws_json1_0DescribeContributorInsightsInput = (input, context) => {\n    return {\n        ...(input.IndexName != null && { IndexName: input.IndexName }),\n        ...(input.TableName != null && { TableName: input.TableName }),\n    };\n};\nconst serializeAws_json1_0DescribeEndpointsRequest = (input, context) => {\n    return {};\n};\nconst serializeAws_json1_0DescribeExportInput = (input, context) => {\n    return {\n        ...(input.ExportArn != null && { ExportArn: input.ExportArn }),\n    };\n};\nconst serializeAws_json1_0DescribeGlobalTableInput = (input, context) => {\n    return {\n        ...(input.GlobalTableName != null && { GlobalTableName: input.GlobalTableName }),\n    };\n};\nconst serializeAws_json1_0DescribeGlobalTableSettingsInput = (input, context) => {\n    return {\n        ...(input.GlobalTableName != null && { GlobalTableName: input.GlobalTableName }),\n    };\n};\nconst serializeAws_json1_0DescribeImportInput = (input, context) => {\n    return {\n        ...(input.ImportArn != null && { ImportArn: input.ImportArn }),\n    };\n};\nconst serializeAws_json1_0DescribeKinesisStreamingDestinationInput = (input, context) => {\n    return {\n        ...(input.TableName != null && { TableName: input.TableName }),\n    };\n};\nconst serializeAws_json1_0DescribeLimitsInput = (input, context) => {\n    return {};\n};\nconst serializeAws_json1_0DescribeTableInput = (input, context) => {\n    return {\n        ...(input.TableName != null && { TableName: input.TableName }),\n    };\n};\nconst serializeAws_json1_0DescribeTableReplicaAutoScalingInput = (input, context) => {\n    return {\n        ...(input.TableName != null && { TableName: input.TableName }),\n    };\n};\nconst serializeAws_json1_0DescribeTimeToLiveInput = (input, context) => {\n    return {\n        ...(input.TableName != null && { TableName: input.TableName }),\n    };\n};\nconst serializeAws_json1_0ExecuteStatementInput = (input, context) => {\n    return {\n        ...(input.ConsistentRead != null && { ConsistentRead: input.ConsistentRead }),\n        ...(input.Limit != null && { Limit: input.Limit }),\n        ...(input.NextToken != null && { NextToken: input.NextToken }),\n        ...(input.Parameters != null && {\n            Parameters: serializeAws_json1_0PreparedStatementParameters(input.Parameters, context),\n        }),\n        ...(input.ReturnConsumedCapacity != null && { ReturnConsumedCapacity: input.ReturnConsumedCapacity }),\n        ...(input.Statement != null && { Statement: input.Statement }),\n    };\n};\nconst serializeAws_json1_0ExecuteTransactionInput = (input, context) => {\n    return {\n        ClientRequestToken: input.ClientRequestToken ?? generateIdempotencyToken(),\n        ...(input.ReturnConsumedCapacity != null && { ReturnConsumedCapacity: input.ReturnConsumedCapacity }),\n        ...(input.TransactStatements != null && {\n            TransactStatements: serializeAws_json1_0ParameterizedStatements(input.TransactStatements, context),\n        }),\n    };\n};\nconst serializeAws_json1_0ExpectedAttributeMap = (input, context) => {\n    return Object.entries(input).reduce((acc, [key, value]) => {\n        if (value === null) {\n            return acc;\n        }\n        acc[key] = serializeAws_json1_0ExpectedAttributeValue(value, context);\n        return acc;\n    }, {});\n};\nconst serializeAws_json1_0ExpectedAttributeValue = (input, context) => {\n    return {\n        ...(input.AttributeValueList != null && {\n            AttributeValueList: serializeAws_json1_0AttributeValueList(input.AttributeValueList, context),\n        }),\n        ...(input.ComparisonOperator != null && { ComparisonOperator: input.ComparisonOperator }),\n        ...(input.Exists != null && { Exists: input.Exists }),\n        ...(input.Value != null && { Value: serializeAws_json1_0AttributeValue(input.Value, context) }),\n    };\n};\nconst serializeAws_json1_0ExportTableToPointInTimeInput = (input, context) => {\n    return {\n        ClientToken: input.ClientToken ?? generateIdempotencyToken(),\n        ...(input.ExportFormat != null && { ExportFormat: input.ExportFormat }),\n        ...(input.ExportTime != null && { ExportTime: Math.round(input.ExportTime.getTime() / 1000).toString() }),\n        ...(input.S3Bucket != null && { S3Bucket: input.S3Bucket }),\n        ...(input.S3BucketOwner != null && { S3BucketOwner: input.S3BucketOwner }),\n        ...(input.S3Prefix != null && { S3Prefix: input.S3Prefix }),\n        ...(input.S3SseAlgorithm != null && { S3SseAlgorithm: input.S3SseAlgorithm }),\n        ...(input.S3SseKmsKeyId != null && { S3SseKmsKeyId: input.S3SseKmsKeyId }),\n        ...(input.TableArn != null && { TableArn: input.TableArn }),\n    };\n};\nconst serializeAws_json1_0ExpressionAttributeNameMap = (input, context) => {\n    return Object.entries(input).reduce((acc, [key, value]) => {\n        if (value === null) {\n            return acc;\n        }\n        acc[key] = value;\n        return acc;\n    }, {});\n};\nconst serializeAws_json1_0ExpressionAttributeValueMap = (input, context) => {\n    return Object.entries(input).reduce((acc, [key, value]) => {\n        if (value === null) {\n            return acc;\n        }\n        acc[key] = serializeAws_json1_0AttributeValue(value, context);\n        return acc;\n    }, {});\n};\nconst serializeAws_json1_0FilterConditionMap = (input, context) => {\n    return Object.entries(input).reduce((acc, [key, value]) => {\n        if (value === null) {\n            return acc;\n        }\n        acc[key] = serializeAws_json1_0Condition(value, context);\n        return acc;\n    }, {});\n};\nconst serializeAws_json1_0Get = (input, context) => {\n    return {\n        ...(input.ExpressionAttributeNames != null && {\n            ExpressionAttributeNames: serializeAws_json1_0ExpressionAttributeNameMap(input.ExpressionAttributeNames, context),\n        }),\n        ...(input.Key != null && { Key: serializeAws_json1_0Key(input.Key, context) }),\n        ...(input.ProjectionExpression != null && { ProjectionExpression: input.ProjectionExpression }),\n        ...(input.TableName != null && { TableName: input.TableName }),\n    };\n};\nconst serializeAws_json1_0GetItemInput = (input, context) => {\n    return {\n        ...(input.AttributesToGet != null && {\n            AttributesToGet: serializeAws_json1_0AttributeNameList(input.AttributesToGet, context),\n        }),\n        ...(input.ConsistentRead != null && { ConsistentRead: input.ConsistentRead }),\n        ...(input.ExpressionAttributeNames != null && {\n            ExpressionAttributeNames: serializeAws_json1_0ExpressionAttributeNameMap(input.ExpressionAttributeNames, context),\n        }),\n        ...(input.Key != null && { Key: serializeAws_json1_0Key(input.Key, context) }),\n        ...(input.ProjectionExpression != null && { ProjectionExpression: input.ProjectionExpression }),\n        ...(input.ReturnConsumedCapacity != null && { ReturnConsumedCapacity: input.ReturnConsumedCapacity }),\n        ...(input.TableName != null && { TableName: input.TableName }),\n    };\n};\nconst serializeAws_json1_0GlobalSecondaryIndex = (input, context) => {\n    return {\n        ...(input.IndexName != null && { IndexName: input.IndexName }),\n        ...(input.KeySchema != null && { KeySchema: serializeAws_json1_0KeySchema(input.KeySchema, context) }),\n        ...(input.Projection != null && { Projection: serializeAws_json1_0Projection(input.Projection, context) }),\n        ...(input.ProvisionedThroughput != null && {\n            ProvisionedThroughput: serializeAws_json1_0ProvisionedThroughput(input.ProvisionedThroughput, context),\n        }),\n    };\n};\nconst serializeAws_json1_0GlobalSecondaryIndexAutoScalingUpdate = (input, context) => {\n    return {\n        ...(input.IndexName != null && { IndexName: input.IndexName }),\n        ...(input.ProvisionedWriteCapacityAutoScalingUpdate != null && {\n            ProvisionedWriteCapacityAutoScalingUpdate: serializeAws_json1_0AutoScalingSettingsUpdate(input.ProvisionedWriteCapacityAutoScalingUpdate, context),\n        }),\n    };\n};\nconst serializeAws_json1_0GlobalSecondaryIndexAutoScalingUpdateList = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        return serializeAws_json1_0GlobalSecondaryIndexAutoScalingUpdate(entry, context);\n    });\n};\nconst serializeAws_json1_0GlobalSecondaryIndexList = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        return serializeAws_json1_0GlobalSecondaryIndex(entry, context);\n    });\n};\nconst serializeAws_json1_0GlobalSecondaryIndexUpdate = (input, context) => {\n    return {\n        ...(input.Create != null && {\n            Create: serializeAws_json1_0CreateGlobalSecondaryIndexAction(input.Create, context),\n        }),\n        ...(input.Delete != null && {\n            Delete: serializeAws_json1_0DeleteGlobalSecondaryIndexAction(input.Delete, context),\n        }),\n        ...(input.Update != null && {\n            Update: serializeAws_json1_0UpdateGlobalSecondaryIndexAction(input.Update, context),\n        }),\n    };\n};\nconst serializeAws_json1_0GlobalSecondaryIndexUpdateList = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        return serializeAws_json1_0GlobalSecondaryIndexUpdate(entry, context);\n    });\n};\nconst serializeAws_json1_0GlobalTableGlobalSecondaryIndexSettingsUpdate = (input, context) => {\n    return {\n        ...(input.IndexName != null && { IndexName: input.IndexName }),\n        ...(input.ProvisionedWriteCapacityAutoScalingSettingsUpdate != null && {\n            ProvisionedWriteCapacityAutoScalingSettingsUpdate: serializeAws_json1_0AutoScalingSettingsUpdate(input.ProvisionedWriteCapacityAutoScalingSettingsUpdate, context),\n        }),\n        ...(input.ProvisionedWriteCapacityUnits != null && {\n            ProvisionedWriteCapacityUnits: input.ProvisionedWriteCapacityUnits,\n        }),\n    };\n};\nconst serializeAws_json1_0GlobalTableGlobalSecondaryIndexSettingsUpdateList = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        return serializeAws_json1_0GlobalTableGlobalSecondaryIndexSettingsUpdate(entry, context);\n    });\n};\nconst serializeAws_json1_0ImportTableInput = (input, context) => {\n    return {\n        ClientToken: input.ClientToken ?? generateIdempotencyToken(),\n        ...(input.InputCompressionType != null && { InputCompressionType: input.InputCompressionType }),\n        ...(input.InputFormat != null && { InputFormat: input.InputFormat }),\n        ...(input.InputFormatOptions != null && {\n            InputFormatOptions: serializeAws_json1_0InputFormatOptions(input.InputFormatOptions, context),\n        }),\n        ...(input.S3BucketSource != null && {\n            S3BucketSource: serializeAws_json1_0S3BucketSource(input.S3BucketSource, context),\n        }),\n        ...(input.TableCreationParameters != null && {\n            TableCreationParameters: serializeAws_json1_0TableCreationParameters(input.TableCreationParameters, context),\n        }),\n    };\n};\nconst serializeAws_json1_0InputFormatOptions = (input, context) => {\n    return {\n        ...(input.Csv != null && { Csv: serializeAws_json1_0CsvOptions(input.Csv, context) }),\n    };\n};\nconst serializeAws_json1_0Key = (input, context) => {\n    return Object.entries(input).reduce((acc, [key, value]) => {\n        if (value === null) {\n            return acc;\n        }\n        acc[key] = serializeAws_json1_0AttributeValue(value, context);\n        return acc;\n    }, {});\n};\nconst serializeAws_json1_0KeyConditions = (input, context) => {\n    return Object.entries(input).reduce((acc, [key, value]) => {\n        if (value === null) {\n            return acc;\n        }\n        acc[key] = serializeAws_json1_0Condition(value, context);\n        return acc;\n    }, {});\n};\nconst serializeAws_json1_0KeyList = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        return serializeAws_json1_0Key(entry, context);\n    });\n};\nconst serializeAws_json1_0KeysAndAttributes = (input, context) => {\n    return {\n        ...(input.AttributesToGet != null && {\n            AttributesToGet: serializeAws_json1_0AttributeNameList(input.AttributesToGet, context),\n        }),\n        ...(input.ConsistentRead != null && { ConsistentRead: input.ConsistentRead }),\n        ...(input.ExpressionAttributeNames != null && {\n            ExpressionAttributeNames: serializeAws_json1_0ExpressionAttributeNameMap(input.ExpressionAttributeNames, context),\n        }),\n        ...(input.Keys != null && { Keys: serializeAws_json1_0KeyList(input.Keys, context) }),\n        ...(input.ProjectionExpression != null && { ProjectionExpression: input.ProjectionExpression }),\n    };\n};\nconst serializeAws_json1_0KeySchema = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        return serializeAws_json1_0KeySchemaElement(entry, context);\n    });\n};\nconst serializeAws_json1_0KeySchemaElement = (input, context) => {\n    return {\n        ...(input.AttributeName != null && { AttributeName: input.AttributeName }),\n        ...(input.KeyType != null && { KeyType: input.KeyType }),\n    };\n};\nconst serializeAws_json1_0KinesisStreamingDestinationInput = (input, context) => {\n    return {\n        ...(input.StreamArn != null && { StreamArn: input.StreamArn }),\n        ...(input.TableName != null && { TableName: input.TableName }),\n    };\n};\nconst serializeAws_json1_0ListAttributeValue = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        return serializeAws_json1_0AttributeValue(entry, context);\n    });\n};\nconst serializeAws_json1_0ListBackupsInput = (input, context) => {\n    return {\n        ...(input.BackupType != null && { BackupType: input.BackupType }),\n        ...(input.ExclusiveStartBackupArn != null && { ExclusiveStartBackupArn: input.ExclusiveStartBackupArn }),\n        ...(input.Limit != null && { Limit: input.Limit }),\n        ...(input.TableName != null && { TableName: input.TableName }),\n        ...(input.TimeRangeLowerBound != null && {\n            TimeRangeLowerBound: Math.round(input.TimeRangeLowerBound.getTime() / 1000).toString(),\n        }),\n        ...(input.TimeRangeUpperBound != null && {\n            TimeRangeUpperBound: Math.round(input.TimeRangeUpperBound.getTime() / 1000).toString(),\n        }),\n    };\n};\nconst serializeAws_json1_0ListContributorInsightsInput = (input, context) => {\n    return {\n        ...(input.MaxResults != null && { MaxResults: input.MaxResults }),\n        ...(input.NextToken != null && { NextToken: input.NextToken }),\n        ...(input.TableName != null && { TableName: input.TableName }),\n    };\n};\nconst serializeAws_json1_0ListExportsInput = (input, context) => {\n    return {\n        ...(input.MaxResults != null && { MaxResults: input.MaxResults }),\n        ...(input.NextToken != null && { NextToken: input.NextToken }),\n        ...(input.TableArn != null && { TableArn: input.TableArn }),\n    };\n};\nconst serializeAws_json1_0ListGlobalTablesInput = (input, context) => {\n    return {\n        ...(input.ExclusiveStartGlobalTableName != null && {\n            ExclusiveStartGlobalTableName: input.ExclusiveStartGlobalTableName,\n        }),\n        ...(input.Limit != null && { Limit: input.Limit }),\n        ...(input.RegionName != null && { RegionName: input.RegionName }),\n    };\n};\nconst serializeAws_json1_0ListImportsInput = (input, context) => {\n    return {\n        ...(input.NextToken != null && { NextToken: input.NextToken }),\n        ...(input.PageSize != null && { PageSize: input.PageSize }),\n        ...(input.TableArn != null && { TableArn: input.TableArn }),\n    };\n};\nconst serializeAws_json1_0ListTablesInput = (input, context) => {\n    return {\n        ...(input.ExclusiveStartTableName != null && { ExclusiveStartTableName: input.ExclusiveStartTableName }),\n        ...(input.Limit != null && { Limit: input.Limit }),\n    };\n};\nconst serializeAws_json1_0ListTagsOfResourceInput = (input, context) => {\n    return {\n        ...(input.NextToken != null && { NextToken: input.NextToken }),\n        ...(input.ResourceArn != null && { ResourceArn: input.ResourceArn }),\n    };\n};\nconst serializeAws_json1_0LocalSecondaryIndex = (input, context) => {\n    return {\n        ...(input.IndexName != null && { IndexName: input.IndexName }),\n        ...(input.KeySchema != null && { KeySchema: serializeAws_json1_0KeySchema(input.KeySchema, context) }),\n        ...(input.Projection != null && { Projection: serializeAws_json1_0Projection(input.Projection, context) }),\n    };\n};\nconst serializeAws_json1_0LocalSecondaryIndexList = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        return serializeAws_json1_0LocalSecondaryIndex(entry, context);\n    });\n};\nconst serializeAws_json1_0MapAttributeValue = (input, context) => {\n    return Object.entries(input).reduce((acc, [key, value]) => {\n        if (value === null) {\n            return acc;\n        }\n        acc[key] = serializeAws_json1_0AttributeValue(value, context);\n        return acc;\n    }, {});\n};\nconst serializeAws_json1_0NonKeyAttributeNameList = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        return entry;\n    });\n};\nconst serializeAws_json1_0NumberSetAttributeValue = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        return entry;\n    });\n};\nconst serializeAws_json1_0ParameterizedStatement = (input, context) => {\n    return {\n        ...(input.Parameters != null && {\n            Parameters: serializeAws_json1_0PreparedStatementParameters(input.Parameters, context),\n        }),\n        ...(input.Statement != null && { Statement: input.Statement }),\n    };\n};\nconst serializeAws_json1_0ParameterizedStatements = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        return serializeAws_json1_0ParameterizedStatement(entry, context);\n    });\n};\nconst serializeAws_json1_0PartiQLBatchRequest = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        return serializeAws_json1_0BatchStatementRequest(entry, context);\n    });\n};\nconst serializeAws_json1_0PointInTimeRecoverySpecification = (input, context) => {\n    return {\n        ...(input.PointInTimeRecoveryEnabled != null && { PointInTimeRecoveryEnabled: input.PointInTimeRecoveryEnabled }),\n    };\n};\nconst serializeAws_json1_0PreparedStatementParameters = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        return serializeAws_json1_0AttributeValue(entry, context);\n    });\n};\nconst serializeAws_json1_0Projection = (input, context) => {\n    return {\n        ...(input.NonKeyAttributes != null && {\n            NonKeyAttributes: serializeAws_json1_0NonKeyAttributeNameList(input.NonKeyAttributes, context),\n        }),\n        ...(input.ProjectionType != null && { ProjectionType: input.ProjectionType }),\n    };\n};\nconst serializeAws_json1_0ProvisionedThroughput = (input, context) => {\n    return {\n        ...(input.ReadCapacityUnits != null && { ReadCapacityUnits: input.ReadCapacityUnits }),\n        ...(input.WriteCapacityUnits != null && { WriteCapacityUnits: input.WriteCapacityUnits }),\n    };\n};\nconst serializeAws_json1_0ProvisionedThroughputOverride = (input, context) => {\n    return {\n        ...(input.ReadCapacityUnits != null && { ReadCapacityUnits: input.ReadCapacityUnits }),\n    };\n};\nconst serializeAws_json1_0Put = (input, context) => {\n    return {\n        ...(input.ConditionExpression != null && { ConditionExpression: input.ConditionExpression }),\n        ...(input.ExpressionAttributeNames != null && {\n            ExpressionAttributeNames: serializeAws_json1_0ExpressionAttributeNameMap(input.ExpressionAttributeNames, context),\n        }),\n        ...(input.ExpressionAttributeValues != null && {\n            ExpressionAttributeValues: serializeAws_json1_0ExpressionAttributeValueMap(input.ExpressionAttributeValues, context),\n        }),\n        ...(input.Item != null && { Item: serializeAws_json1_0PutItemInputAttributeMap(input.Item, context) }),\n        ...(input.ReturnValuesOnConditionCheckFailure != null && {\n            ReturnValuesOnConditionCheckFailure: input.ReturnValuesOnConditionCheckFailure,\n        }),\n        ...(input.TableName != null && { TableName: input.TableName }),\n    };\n};\nconst serializeAws_json1_0PutItemInput = (input, context) => {\n    return {\n        ...(input.ConditionExpression != null && { ConditionExpression: input.ConditionExpression }),\n        ...(input.ConditionalOperator != null && { ConditionalOperator: input.ConditionalOperator }),\n        ...(input.Expected != null && { Expected: serializeAws_json1_0ExpectedAttributeMap(input.Expected, context) }),\n        ...(input.ExpressionAttributeNames != null && {\n            ExpressionAttributeNames: serializeAws_json1_0ExpressionAttributeNameMap(input.ExpressionAttributeNames, context),\n        }),\n        ...(input.ExpressionAttributeValues != null && {\n            ExpressionAttributeValues: serializeAws_json1_0ExpressionAttributeValueMap(input.ExpressionAttributeValues, context),\n        }),\n        ...(input.Item != null && { Item: serializeAws_json1_0PutItemInputAttributeMap(input.Item, context) }),\n        ...(input.ReturnConsumedCapacity != null && { ReturnConsumedCapacity: input.ReturnConsumedCapacity }),\n        ...(input.ReturnItemCollectionMetrics != null && {\n            ReturnItemCollectionMetrics: input.ReturnItemCollectionMetrics,\n        }),\n        ...(input.ReturnValues != null && { ReturnValues: input.ReturnValues }),\n        ...(input.TableName != null && { TableName: input.TableName }),\n    };\n};\nconst serializeAws_json1_0PutItemInputAttributeMap = (input, context) => {\n    return Object.entries(input).reduce((acc, [key, value]) => {\n        if (value === null) {\n            return acc;\n        }\n        acc[key] = serializeAws_json1_0AttributeValue(value, context);\n        return acc;\n    }, {});\n};\nconst serializeAws_json1_0PutRequest = (input, context) => {\n    return {\n        ...(input.Item != null && { Item: serializeAws_json1_0PutItemInputAttributeMap(input.Item, context) }),\n    };\n};\nconst serializeAws_json1_0QueryInput = (input, context) => {\n    return {\n        ...(input.AttributesToGet != null && {\n            AttributesToGet: serializeAws_json1_0AttributeNameList(input.AttributesToGet, context),\n        }),\n        ...(input.ConditionalOperator != null && { ConditionalOperator: input.ConditionalOperator }),\n        ...(input.ConsistentRead != null && { ConsistentRead: input.ConsistentRead }),\n        ...(input.ExclusiveStartKey != null && {\n            ExclusiveStartKey: serializeAws_json1_0Key(input.ExclusiveStartKey, context),\n        }),\n        ...(input.ExpressionAttributeNames != null && {\n            ExpressionAttributeNames: serializeAws_json1_0ExpressionAttributeNameMap(input.ExpressionAttributeNames, context),\n        }),\n        ...(input.ExpressionAttributeValues != null && {\n            ExpressionAttributeValues: serializeAws_json1_0ExpressionAttributeValueMap(input.ExpressionAttributeValues, context),\n        }),\n        ...(input.FilterExpression != null && { FilterExpression: input.FilterExpression }),\n        ...(input.IndexName != null && { IndexName: input.IndexName }),\n        ...(input.KeyConditionExpression != null && { KeyConditionExpression: input.KeyConditionExpression }),\n        ...(input.KeyConditions != null && {\n            KeyConditions: serializeAws_json1_0KeyConditions(input.KeyConditions, context),\n        }),\n        ...(input.Limit != null && { Limit: input.Limit }),\n        ...(input.ProjectionExpression != null && { ProjectionExpression: input.ProjectionExpression }),\n        ...(input.QueryFilter != null && {\n            QueryFilter: serializeAws_json1_0FilterConditionMap(input.QueryFilter, context),\n        }),\n        ...(input.ReturnConsumedCapacity != null && { ReturnConsumedCapacity: input.ReturnConsumedCapacity }),\n        ...(input.ScanIndexForward != null && { ScanIndexForward: input.ScanIndexForward }),\n        ...(input.Select != null && { Select: input.Select }),\n        ...(input.TableName != null && { TableName: input.TableName }),\n    };\n};\nconst serializeAws_json1_0Replica = (input, context) => {\n    return {\n        ...(input.RegionName != null && { RegionName: input.RegionName }),\n    };\n};\nconst serializeAws_json1_0ReplicaAutoScalingUpdate = (input, context) => {\n    return {\n        ...(input.RegionName != null && { RegionName: input.RegionName }),\n        ...(input.ReplicaGlobalSecondaryIndexUpdates != null && {\n            ReplicaGlobalSecondaryIndexUpdates: serializeAws_json1_0ReplicaGlobalSecondaryIndexAutoScalingUpdateList(input.ReplicaGlobalSecondaryIndexUpdates, context),\n        }),\n        ...(input.ReplicaProvisionedReadCapacityAutoScalingUpdate != null && {\n            ReplicaProvisionedReadCapacityAutoScalingUpdate: serializeAws_json1_0AutoScalingSettingsUpdate(input.ReplicaProvisionedReadCapacityAutoScalingUpdate, context),\n        }),\n    };\n};\nconst serializeAws_json1_0ReplicaAutoScalingUpdateList = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        return serializeAws_json1_0ReplicaAutoScalingUpdate(entry, context);\n    });\n};\nconst serializeAws_json1_0ReplicaGlobalSecondaryIndex = (input, context) => {\n    return {\n        ...(input.IndexName != null && { IndexName: input.IndexName }),\n        ...(input.ProvisionedThroughputOverride != null && {\n            ProvisionedThroughputOverride: serializeAws_json1_0ProvisionedThroughputOverride(input.ProvisionedThroughputOverride, context),\n        }),\n    };\n};\nconst serializeAws_json1_0ReplicaGlobalSecondaryIndexAutoScalingUpdate = (input, context) => {\n    return {\n        ...(input.IndexName != null && { IndexName: input.IndexName }),\n        ...(input.ProvisionedReadCapacityAutoScalingUpdate != null && {\n            ProvisionedReadCapacityAutoScalingUpdate: serializeAws_json1_0AutoScalingSettingsUpdate(input.ProvisionedReadCapacityAutoScalingUpdate, context),\n        }),\n    };\n};\nconst serializeAws_json1_0ReplicaGlobalSecondaryIndexAutoScalingUpdateList = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        return serializeAws_json1_0ReplicaGlobalSecondaryIndexAutoScalingUpdate(entry, context);\n    });\n};\nconst serializeAws_json1_0ReplicaGlobalSecondaryIndexList = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        return serializeAws_json1_0ReplicaGlobalSecondaryIndex(entry, context);\n    });\n};\nconst serializeAws_json1_0ReplicaGlobalSecondaryIndexSettingsUpdate = (input, context) => {\n    return {\n        ...(input.IndexName != null && { IndexName: input.IndexName }),\n        ...(input.ProvisionedReadCapacityAutoScalingSettingsUpdate != null && {\n            ProvisionedReadCapacityAutoScalingSettingsUpdate: serializeAws_json1_0AutoScalingSettingsUpdate(input.ProvisionedReadCapacityAutoScalingSettingsUpdate, context),\n        }),\n        ...(input.ProvisionedReadCapacityUnits != null && {\n            ProvisionedReadCapacityUnits: input.ProvisionedReadCapacityUnits,\n        }),\n    };\n};\nconst serializeAws_json1_0ReplicaGlobalSecondaryIndexSettingsUpdateList = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        return serializeAws_json1_0ReplicaGlobalSecondaryIndexSettingsUpdate(entry, context);\n    });\n};\nconst serializeAws_json1_0ReplicaList = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        return serializeAws_json1_0Replica(entry, context);\n    });\n};\nconst serializeAws_json1_0ReplicaSettingsUpdate = (input, context) => {\n    return {\n        ...(input.RegionName != null && { RegionName: input.RegionName }),\n        ...(input.ReplicaGlobalSecondaryIndexSettingsUpdate != null && {\n            ReplicaGlobalSecondaryIndexSettingsUpdate: serializeAws_json1_0ReplicaGlobalSecondaryIndexSettingsUpdateList(input.ReplicaGlobalSecondaryIndexSettingsUpdate, context),\n        }),\n        ...(input.ReplicaProvisionedReadCapacityAutoScalingSettingsUpdate != null && {\n            ReplicaProvisionedReadCapacityAutoScalingSettingsUpdate: serializeAws_json1_0AutoScalingSettingsUpdate(input.ReplicaProvisionedReadCapacityAutoScalingSettingsUpdate, context),\n        }),\n        ...(input.ReplicaProvisionedReadCapacityUnits != null && {\n            ReplicaProvisionedReadCapacityUnits: input.ReplicaProvisionedReadCapacityUnits,\n        }),\n        ...(input.ReplicaTableClass != null && { ReplicaTableClass: input.ReplicaTableClass }),\n    };\n};\nconst serializeAws_json1_0ReplicaSettingsUpdateList = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        return serializeAws_json1_0ReplicaSettingsUpdate(entry, context);\n    });\n};\nconst serializeAws_json1_0ReplicationGroupUpdate = (input, context) => {\n    return {\n        ...(input.Create != null && {\n            Create: serializeAws_json1_0CreateReplicationGroupMemberAction(input.Create, context),\n        }),\n        ...(input.Delete != null && {\n            Delete: serializeAws_json1_0DeleteReplicationGroupMemberAction(input.Delete, context),\n        }),\n        ...(input.Update != null && {\n            Update: serializeAws_json1_0UpdateReplicationGroupMemberAction(input.Update, context),\n        }),\n    };\n};\nconst serializeAws_json1_0ReplicationGroupUpdateList = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        return serializeAws_json1_0ReplicationGroupUpdate(entry, context);\n    });\n};\nconst serializeAws_json1_0ReplicaUpdate = (input, context) => {\n    return {\n        ...(input.Create != null && { Create: serializeAws_json1_0CreateReplicaAction(input.Create, context) }),\n        ...(input.Delete != null && { Delete: serializeAws_json1_0DeleteReplicaAction(input.Delete, context) }),\n    };\n};\nconst serializeAws_json1_0ReplicaUpdateList = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        return serializeAws_json1_0ReplicaUpdate(entry, context);\n    });\n};\nconst serializeAws_json1_0RestoreTableFromBackupInput = (input, context) => {\n    return {\n        ...(input.BackupArn != null && { BackupArn: input.BackupArn }),\n        ...(input.BillingModeOverride != null && { BillingModeOverride: input.BillingModeOverride }),\n        ...(input.GlobalSecondaryIndexOverride != null && {\n            GlobalSecondaryIndexOverride: serializeAws_json1_0GlobalSecondaryIndexList(input.GlobalSecondaryIndexOverride, context),\n        }),\n        ...(input.LocalSecondaryIndexOverride != null && {\n            LocalSecondaryIndexOverride: serializeAws_json1_0LocalSecondaryIndexList(input.LocalSecondaryIndexOverride, context),\n        }),\n        ...(input.ProvisionedThroughputOverride != null && {\n            ProvisionedThroughputOverride: serializeAws_json1_0ProvisionedThroughput(input.ProvisionedThroughputOverride, context),\n        }),\n        ...(input.SSESpecificationOverride != null && {\n            SSESpecificationOverride: serializeAws_json1_0SSESpecification(input.SSESpecificationOverride, context),\n        }),\n        ...(input.TargetTableName != null && { TargetTableName: input.TargetTableName }),\n    };\n};\nconst serializeAws_json1_0RestoreTableToPointInTimeInput = (input, context) => {\n    return {\n        ...(input.BillingModeOverride != null && { BillingModeOverride: input.BillingModeOverride }),\n        ...(input.GlobalSecondaryIndexOverride != null && {\n            GlobalSecondaryIndexOverride: serializeAws_json1_0GlobalSecondaryIndexList(input.GlobalSecondaryIndexOverride, context),\n        }),\n        ...(input.LocalSecondaryIndexOverride != null && {\n            LocalSecondaryIndexOverride: serializeAws_json1_0LocalSecondaryIndexList(input.LocalSecondaryIndexOverride, context),\n        }),\n        ...(input.ProvisionedThroughputOverride != null && {\n            ProvisionedThroughputOverride: serializeAws_json1_0ProvisionedThroughput(input.ProvisionedThroughputOverride, context),\n        }),\n        ...(input.RestoreDateTime != null && {\n            RestoreDateTime: Math.round(input.RestoreDateTime.getTime() / 1000).toString(),\n        }),\n        ...(input.SSESpecificationOverride != null && {\n            SSESpecificationOverride: serializeAws_json1_0SSESpecification(input.SSESpecificationOverride, context),\n        }),\n        ...(input.SourceTableArn != null && { SourceTableArn: input.SourceTableArn }),\n        ...(input.SourceTableName != null && { SourceTableName: input.SourceTableName }),\n        ...(input.TargetTableName != null && { TargetTableName: input.TargetTableName }),\n        ...(input.UseLatestRestorableTime != null && { UseLatestRestorableTime: input.UseLatestRestorableTime }),\n    };\n};\nconst serializeAws_json1_0S3BucketSource = (input, context) => {\n    return {\n        ...(input.S3Bucket != null && { S3Bucket: input.S3Bucket }),\n        ...(input.S3BucketOwner != null && { S3BucketOwner: input.S3BucketOwner }),\n        ...(input.S3KeyPrefix != null && { S3KeyPrefix: input.S3KeyPrefix }),\n    };\n};\nconst serializeAws_json1_0ScanInput = (input, context) => {\n    return {\n        ...(input.AttributesToGet != null && {\n            AttributesToGet: serializeAws_json1_0AttributeNameList(input.AttributesToGet, context),\n        }),\n        ...(input.ConditionalOperator != null && { ConditionalOperator: input.ConditionalOperator }),\n        ...(input.ConsistentRead != null && { ConsistentRead: input.ConsistentRead }),\n        ...(input.ExclusiveStartKey != null && {\n            ExclusiveStartKey: serializeAws_json1_0Key(input.ExclusiveStartKey, context),\n        }),\n        ...(input.ExpressionAttributeNames != null && {\n            ExpressionAttributeNames: serializeAws_json1_0ExpressionAttributeNameMap(input.ExpressionAttributeNames, context),\n        }),\n        ...(input.ExpressionAttributeValues != null && {\n            ExpressionAttributeValues: serializeAws_json1_0ExpressionAttributeValueMap(input.ExpressionAttributeValues, context),\n        }),\n        ...(input.FilterExpression != null && { FilterExpression: input.FilterExpression }),\n        ...(input.IndexName != null && { IndexName: input.IndexName }),\n        ...(input.Limit != null && { Limit: input.Limit }),\n        ...(input.ProjectionExpression != null && { ProjectionExpression: input.ProjectionExpression }),\n        ...(input.ReturnConsumedCapacity != null && { ReturnConsumedCapacity: input.ReturnConsumedCapacity }),\n        ...(input.ScanFilter != null && { ScanFilter: serializeAws_json1_0FilterConditionMap(input.ScanFilter, context) }),\n        ...(input.Segment != null && { Segment: input.Segment }),\n        ...(input.Select != null && { Select: input.Select }),\n        ...(input.TableName != null && { TableName: input.TableName }),\n        ...(input.TotalSegments != null && { TotalSegments: input.TotalSegments }),\n    };\n};\nconst serializeAws_json1_0SSESpecification = (input, context) => {\n    return {\n        ...(input.Enabled != null && { Enabled: input.Enabled }),\n        ...(input.KMSMasterKeyId != null && { KMSMasterKeyId: input.KMSMasterKeyId }),\n        ...(input.SSEType != null && { SSEType: input.SSEType }),\n    };\n};\nconst serializeAws_json1_0StreamSpecification = (input, context) => {\n    return {\n        ...(input.StreamEnabled != null && { StreamEnabled: input.StreamEnabled }),\n        ...(input.StreamViewType != null && { StreamViewType: input.StreamViewType }),\n    };\n};\nconst serializeAws_json1_0StringSetAttributeValue = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        return entry;\n    });\n};\nconst serializeAws_json1_0TableCreationParameters = (input, context) => {\n    return {\n        ...(input.AttributeDefinitions != null && {\n            AttributeDefinitions: serializeAws_json1_0AttributeDefinitions(input.AttributeDefinitions, context),\n        }),\n        ...(input.BillingMode != null && { BillingMode: input.BillingMode }),\n        ...(input.GlobalSecondaryIndexes != null && {\n            GlobalSecondaryIndexes: serializeAws_json1_0GlobalSecondaryIndexList(input.GlobalSecondaryIndexes, context),\n        }),\n        ...(input.KeySchema != null && { KeySchema: serializeAws_json1_0KeySchema(input.KeySchema, context) }),\n        ...(input.ProvisionedThroughput != null && {\n            ProvisionedThroughput: serializeAws_json1_0ProvisionedThroughput(input.ProvisionedThroughput, context),\n        }),\n        ...(input.SSESpecification != null && {\n            SSESpecification: serializeAws_json1_0SSESpecification(input.SSESpecification, context),\n        }),\n        ...(input.TableName != null && { TableName: input.TableName }),\n    };\n};\nconst serializeAws_json1_0Tag = (input, context) => {\n    return {\n        ...(input.Key != null && { Key: input.Key }),\n        ...(input.Value != null && { Value: input.Value }),\n    };\n};\nconst serializeAws_json1_0TagKeyList = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        return entry;\n    });\n};\nconst serializeAws_json1_0TagList = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        return serializeAws_json1_0Tag(entry, context);\n    });\n};\nconst serializeAws_json1_0TagResourceInput = (input, context) => {\n    return {\n        ...(input.ResourceArn != null && { ResourceArn: input.ResourceArn }),\n        ...(input.Tags != null && { Tags: serializeAws_json1_0TagList(input.Tags, context) }),\n    };\n};\nconst serializeAws_json1_0TimeToLiveSpecification = (input, context) => {\n    return {\n        ...(input.AttributeName != null && { AttributeName: input.AttributeName }),\n        ...(input.Enabled != null && { Enabled: input.Enabled }),\n    };\n};\nconst serializeAws_json1_0TransactGetItem = (input, context) => {\n    return {\n        ...(input.Get != null && { Get: serializeAws_json1_0Get(input.Get, context) }),\n    };\n};\nconst serializeAws_json1_0TransactGetItemList = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        return serializeAws_json1_0TransactGetItem(entry, context);\n    });\n};\nconst serializeAws_json1_0TransactGetItemsInput = (input, context) => {\n    return {\n        ...(input.ReturnConsumedCapacity != null && { ReturnConsumedCapacity: input.ReturnConsumedCapacity }),\n        ...(input.TransactItems != null && {\n            TransactItems: serializeAws_json1_0TransactGetItemList(input.TransactItems, context),\n        }),\n    };\n};\nconst serializeAws_json1_0TransactWriteItem = (input, context) => {\n    return {\n        ...(input.ConditionCheck != null && {\n            ConditionCheck: serializeAws_json1_0ConditionCheck(input.ConditionCheck, context),\n        }),\n        ...(input.Delete != null && { Delete: serializeAws_json1_0Delete(input.Delete, context) }),\n        ...(input.Put != null && { Put: serializeAws_json1_0Put(input.Put, context) }),\n        ...(input.Update != null && { Update: serializeAws_json1_0Update(input.Update, context) }),\n    };\n};\nconst serializeAws_json1_0TransactWriteItemList = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        return serializeAws_json1_0TransactWriteItem(entry, context);\n    });\n};\nconst serializeAws_json1_0TransactWriteItemsInput = (input, context) => {\n    return {\n        ClientRequestToken: input.ClientRequestToken ?? generateIdempotencyToken(),\n        ...(input.ReturnConsumedCapacity != null && { ReturnConsumedCapacity: input.ReturnConsumedCapacity }),\n        ...(input.ReturnItemCollectionMetrics != null && {\n            ReturnItemCollectionMetrics: input.ReturnItemCollectionMetrics,\n        }),\n        ...(input.TransactItems != null && {\n            TransactItems: serializeAws_json1_0TransactWriteItemList(input.TransactItems, context),\n        }),\n    };\n};\nconst serializeAws_json1_0UntagResourceInput = (input, context) => {\n    return {\n        ...(input.ResourceArn != null && { ResourceArn: input.ResourceArn }),\n        ...(input.TagKeys != null && { TagKeys: serializeAws_json1_0TagKeyList(input.TagKeys, context) }),\n    };\n};\nconst serializeAws_json1_0Update = (input, context) => {\n    return {\n        ...(input.ConditionExpression != null && { ConditionExpression: input.ConditionExpression }),\n        ...(input.ExpressionAttributeNames != null && {\n            ExpressionAttributeNames: serializeAws_json1_0ExpressionAttributeNameMap(input.ExpressionAttributeNames, context),\n        }),\n        ...(input.ExpressionAttributeValues != null && {\n            ExpressionAttributeValues: serializeAws_json1_0ExpressionAttributeValueMap(input.ExpressionAttributeValues, context),\n        }),\n        ...(input.Key != null && { Key: serializeAws_json1_0Key(input.Key, context) }),\n        ...(input.ReturnValuesOnConditionCheckFailure != null && {\n            ReturnValuesOnConditionCheckFailure: input.ReturnValuesOnConditionCheckFailure,\n        }),\n        ...(input.TableName != null && { TableName: input.TableName }),\n        ...(input.UpdateExpression != null && { UpdateExpression: input.UpdateExpression }),\n    };\n};\nconst serializeAws_json1_0UpdateContinuousBackupsInput = (input, context) => {\n    return {\n        ...(input.PointInTimeRecoverySpecification != null && {\n            PointInTimeRecoverySpecification: serializeAws_json1_0PointInTimeRecoverySpecification(input.PointInTimeRecoverySpecification, context),\n        }),\n        ...(input.TableName != null && { TableName: input.TableName }),\n    };\n};\nconst serializeAws_json1_0UpdateContributorInsightsInput = (input, context) => {\n    return {\n        ...(input.ContributorInsightsAction != null && { ContributorInsightsAction: input.ContributorInsightsAction }),\n        ...(input.IndexName != null && { IndexName: input.IndexName }),\n        ...(input.TableName != null && { TableName: input.TableName }),\n    };\n};\nconst serializeAws_json1_0UpdateGlobalSecondaryIndexAction = (input, context) => {\n    return {\n        ...(input.IndexName != null && { IndexName: input.IndexName }),\n        ...(input.ProvisionedThroughput != null && {\n            ProvisionedThroughput: serializeAws_json1_0ProvisionedThroughput(input.ProvisionedThroughput, context),\n        }),\n    };\n};\nconst serializeAws_json1_0UpdateGlobalTableInput = (input, context) => {\n    return {\n        ...(input.GlobalTableName != null && { GlobalTableName: input.GlobalTableName }),\n        ...(input.ReplicaUpdates != null && {\n            ReplicaUpdates: serializeAws_json1_0ReplicaUpdateList(input.ReplicaUpdates, context),\n        }),\n    };\n};\nconst serializeAws_json1_0UpdateGlobalTableSettingsInput = (input, context) => {\n    return {\n        ...(input.GlobalTableBillingMode != null && { GlobalTableBillingMode: input.GlobalTableBillingMode }),\n        ...(input.GlobalTableGlobalSecondaryIndexSettingsUpdate != null && {\n            GlobalTableGlobalSecondaryIndexSettingsUpdate: serializeAws_json1_0GlobalTableGlobalSecondaryIndexSettingsUpdateList(input.GlobalTableGlobalSecondaryIndexSettingsUpdate, context),\n        }),\n        ...(input.GlobalTableName != null && { GlobalTableName: input.GlobalTableName }),\n        ...(input.GlobalTableProvisionedWriteCapacityAutoScalingSettingsUpdate != null && {\n            GlobalTableProvisionedWriteCapacityAutoScalingSettingsUpdate: serializeAws_json1_0AutoScalingSettingsUpdate(input.GlobalTableProvisionedWriteCapacityAutoScalingSettingsUpdate, context),\n        }),\n        ...(input.GlobalTableProvisionedWriteCapacityUnits != null && {\n            GlobalTableProvisionedWriteCapacityUnits: input.GlobalTableProvisionedWriteCapacityUnits,\n        }),\n        ...(input.ReplicaSettingsUpdate != null && {\n            ReplicaSettingsUpdate: serializeAws_json1_0ReplicaSettingsUpdateList(input.ReplicaSettingsUpdate, context),\n        }),\n    };\n};\nconst serializeAws_json1_0UpdateItemInput = (input, context) => {\n    return {\n        ...(input.AttributeUpdates != null && {\n            AttributeUpdates: serializeAws_json1_0AttributeUpdates(input.AttributeUpdates, context),\n        }),\n        ...(input.ConditionExpression != null && { ConditionExpression: input.ConditionExpression }),\n        ...(input.ConditionalOperator != null && { ConditionalOperator: input.ConditionalOperator }),\n        ...(input.Expected != null && { Expected: serializeAws_json1_0ExpectedAttributeMap(input.Expected, context) }),\n        ...(input.ExpressionAttributeNames != null && {\n            ExpressionAttributeNames: serializeAws_json1_0ExpressionAttributeNameMap(input.ExpressionAttributeNames, context),\n        }),\n        ...(input.ExpressionAttributeValues != null && {\n            ExpressionAttributeValues: serializeAws_json1_0ExpressionAttributeValueMap(input.ExpressionAttributeValues, context),\n        }),\n        ...(input.Key != null && { Key: serializeAws_json1_0Key(input.Key, context) }),\n        ...(input.ReturnConsumedCapacity != null && { ReturnConsumedCapacity: input.ReturnConsumedCapacity }),\n        ...(input.ReturnItemCollectionMetrics != null && {\n            ReturnItemCollectionMetrics: input.ReturnItemCollectionMetrics,\n        }),\n        ...(input.ReturnValues != null && { ReturnValues: input.ReturnValues }),\n        ...(input.TableName != null && { TableName: input.TableName }),\n        ...(input.UpdateExpression != null && { UpdateExpression: input.UpdateExpression }),\n    };\n};\nconst serializeAws_json1_0UpdateReplicationGroupMemberAction = (input, context) => {\n    return {\n        ...(input.GlobalSecondaryIndexes != null && {\n            GlobalSecondaryIndexes: serializeAws_json1_0ReplicaGlobalSecondaryIndexList(input.GlobalSecondaryIndexes, context),\n        }),\n        ...(input.KMSMasterKeyId != null && { KMSMasterKeyId: input.KMSMasterKeyId }),\n        ...(input.ProvisionedThroughputOverride != null && {\n            ProvisionedThroughputOverride: serializeAws_json1_0ProvisionedThroughputOverride(input.ProvisionedThroughputOverride, context),\n        }),\n        ...(input.RegionName != null && { RegionName: input.RegionName }),\n        ...(input.TableClassOverride != null && { TableClassOverride: input.TableClassOverride }),\n    };\n};\nconst serializeAws_json1_0UpdateTableInput = (input, context) => {\n    return {\n        ...(input.AttributeDefinitions != null && {\n            AttributeDefinitions: serializeAws_json1_0AttributeDefinitions(input.AttributeDefinitions, context),\n        }),\n        ...(input.BillingMode != null && { BillingMode: input.BillingMode }),\n        ...(input.GlobalSecondaryIndexUpdates != null && {\n            GlobalSecondaryIndexUpdates: serializeAws_json1_0GlobalSecondaryIndexUpdateList(input.GlobalSecondaryIndexUpdates, context),\n        }),\n        ...(input.ProvisionedThroughput != null && {\n            ProvisionedThroughput: serializeAws_json1_0ProvisionedThroughput(input.ProvisionedThroughput, context),\n        }),\n        ...(input.ReplicaUpdates != null && {\n            ReplicaUpdates: serializeAws_json1_0ReplicationGroupUpdateList(input.ReplicaUpdates, context),\n        }),\n        ...(input.SSESpecification != null && {\n            SSESpecification: serializeAws_json1_0SSESpecification(input.SSESpecification, context),\n        }),\n        ...(input.StreamSpecification != null && {\n            StreamSpecification: serializeAws_json1_0StreamSpecification(input.StreamSpecification, context),\n        }),\n        ...(input.TableClass != null && { TableClass: input.TableClass }),\n        ...(input.TableName != null && { TableName: input.TableName }),\n    };\n};\nconst serializeAws_json1_0UpdateTableReplicaAutoScalingInput = (input, context) => {\n    return {\n        ...(input.GlobalSecondaryIndexUpdates != null && {\n            GlobalSecondaryIndexUpdates: serializeAws_json1_0GlobalSecondaryIndexAutoScalingUpdateList(input.GlobalSecondaryIndexUpdates, context),\n        }),\n        ...(input.ProvisionedWriteCapacityAutoScalingUpdate != null && {\n            ProvisionedWriteCapacityAutoScalingUpdate: serializeAws_json1_0AutoScalingSettingsUpdate(input.ProvisionedWriteCapacityAutoScalingUpdate, context),\n        }),\n        ...(input.ReplicaUpdates != null && {\n            ReplicaUpdates: serializeAws_json1_0ReplicaAutoScalingUpdateList(input.ReplicaUpdates, context),\n        }),\n        ...(input.TableName != null && { TableName: input.TableName }),\n    };\n};\nconst serializeAws_json1_0UpdateTimeToLiveInput = (input, context) => {\n    return {\n        ...(input.TableName != null && { TableName: input.TableName }),\n        ...(input.TimeToLiveSpecification != null && {\n            TimeToLiveSpecification: serializeAws_json1_0TimeToLiveSpecification(input.TimeToLiveSpecification, context),\n        }),\n    };\n};\nconst serializeAws_json1_0WriteRequest = (input, context) => {\n    return {\n        ...(input.DeleteRequest != null && {\n            DeleteRequest: serializeAws_json1_0DeleteRequest(input.DeleteRequest, context),\n        }),\n        ...(input.PutRequest != null && { PutRequest: serializeAws_json1_0PutRequest(input.PutRequest, context) }),\n    };\n};\nconst serializeAws_json1_0WriteRequests = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        return serializeAws_json1_0WriteRequest(entry, context);\n    });\n};\nconst deserializeAws_json1_0ArchivalSummary = (output, context) => {\n    return {\n        ArchivalBackupArn: __expectString(output.ArchivalBackupArn),\n        ArchivalDateTime: output.ArchivalDateTime != null\n            ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.ArchivalDateTime)))\n            : undefined,\n        ArchivalReason: __expectString(output.ArchivalReason),\n    };\n};\nconst deserializeAws_json1_0AttributeDefinition = (output, context) => {\n    return {\n        AttributeName: __expectString(output.AttributeName),\n        AttributeType: __expectString(output.AttributeType),\n    };\n};\nconst deserializeAws_json1_0AttributeDefinitions = (output, context) => {\n    const retVal = (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_json1_0AttributeDefinition(entry, context);\n    });\n    return retVal;\n};\nconst deserializeAws_json1_0AttributeMap = (output, context) => {\n    return Object.entries(output).reduce((acc, [key, value]) => {\n        if (value === null) {\n            return acc;\n        }\n        acc[key] = deserializeAws_json1_0AttributeValue(__expectUnion(value), context);\n        return acc;\n    }, {});\n};\nconst deserializeAws_json1_0AttributeNameList = (output, context) => {\n    const retVal = (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return __expectString(entry);\n    });\n    return retVal;\n};\nconst deserializeAws_json1_0AttributeValue = (output, context) => {\n    if (output.B != null) {\n        return {\n            B: context.base64Decoder(output.B),\n        };\n    }\n    if (__expectBoolean(output.BOOL) !== undefined) {\n        return { BOOL: __expectBoolean(output.BOOL) };\n    }\n    if (output.BS != null) {\n        return {\n            BS: deserializeAws_json1_0BinarySetAttributeValue(output.BS, context),\n        };\n    }\n    if (output.L != null) {\n        return {\n            L: deserializeAws_json1_0ListAttributeValue(output.L, context),\n        };\n    }\n    if (output.M != null) {\n        return {\n            M: deserializeAws_json1_0MapAttributeValue(output.M, context),\n        };\n    }\n    if (__expectString(output.N) !== undefined) {\n        return { N: __expectString(output.N) };\n    }\n    if (output.NS != null) {\n        return {\n            NS: deserializeAws_json1_0NumberSetAttributeValue(output.NS, context),\n        };\n    }\n    if (__expectBoolean(output.NULL) !== undefined) {\n        return { NULL: __expectBoolean(output.NULL) };\n    }\n    if (__expectString(output.S) !== undefined) {\n        return { S: __expectString(output.S) };\n    }\n    if (output.SS != null) {\n        return {\n            SS: deserializeAws_json1_0StringSetAttributeValue(output.SS, context),\n        };\n    }\n    return { $unknown: Object.entries(output)[0] };\n};\nconst deserializeAws_json1_0AutoScalingPolicyDescription = (output, context) => {\n    return {\n        PolicyName: __expectString(output.PolicyName),\n        TargetTrackingScalingPolicyConfiguration: output.TargetTrackingScalingPolicyConfiguration != null\n            ? deserializeAws_json1_0AutoScalingTargetTrackingScalingPolicyConfigurationDescription(output.TargetTrackingScalingPolicyConfiguration, context)\n            : undefined,\n    };\n};\nconst deserializeAws_json1_0AutoScalingPolicyDescriptionList = (output, context) => {\n    const retVal = (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_json1_0AutoScalingPolicyDescription(entry, context);\n    });\n    return retVal;\n};\nconst deserializeAws_json1_0AutoScalingSettingsDescription = (output, context) => {\n    return {\n        AutoScalingDisabled: __expectBoolean(output.AutoScalingDisabled),\n        AutoScalingRoleArn: __expectString(output.AutoScalingRoleArn),\n        MaximumUnits: __expectLong(output.MaximumUnits),\n        MinimumUnits: __expectLong(output.MinimumUnits),\n        ScalingPolicies: output.ScalingPolicies != null\n            ? deserializeAws_json1_0AutoScalingPolicyDescriptionList(output.ScalingPolicies, context)\n            : undefined,\n    };\n};\nconst deserializeAws_json1_0AutoScalingTargetTrackingScalingPolicyConfigurationDescription = (output, context) => {\n    return {\n        DisableScaleIn: __expectBoolean(output.DisableScaleIn),\n        ScaleInCooldown: __expectInt32(output.ScaleInCooldown),\n        ScaleOutCooldown: __expectInt32(output.ScaleOutCooldown),\n        TargetValue: __limitedParseDouble(output.TargetValue),\n    };\n};\nconst deserializeAws_json1_0BackupDescription = (output, context) => {\n    return {\n        BackupDetails: output.BackupDetails != null ? deserializeAws_json1_0BackupDetails(output.BackupDetails, context) : undefined,\n        SourceTableDetails: output.SourceTableDetails != null\n            ? deserializeAws_json1_0SourceTableDetails(output.SourceTableDetails, context)\n            : undefined,\n        SourceTableFeatureDetails: output.SourceTableFeatureDetails != null\n            ? deserializeAws_json1_0SourceTableFeatureDetails(output.SourceTableFeatureDetails, context)\n            : undefined,\n    };\n};\nconst deserializeAws_json1_0BackupDetails = (output, context) => {\n    return {\n        BackupArn: __expectString(output.BackupArn),\n        BackupCreationDateTime: output.BackupCreationDateTime != null\n            ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.BackupCreationDateTime)))\n            : undefined,\n        BackupExpiryDateTime: output.BackupExpiryDateTime != null\n            ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.BackupExpiryDateTime)))\n            : undefined,\n        BackupName: __expectString(output.BackupName),\n        BackupSizeBytes: __expectLong(output.BackupSizeBytes),\n        BackupStatus: __expectString(output.BackupStatus),\n        BackupType: __expectString(output.BackupType),\n    };\n};\nconst deserializeAws_json1_0BackupInUseException = (output, context) => {\n    return {\n        message: __expectString(output.message),\n    };\n};\nconst deserializeAws_json1_0BackupNotFoundException = (output, context) => {\n    return {\n        message: __expectString(output.message),\n    };\n};\nconst deserializeAws_json1_0BackupSummaries = (output, context) => {\n    const retVal = (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_json1_0BackupSummary(entry, context);\n    });\n    return retVal;\n};\nconst deserializeAws_json1_0BackupSummary = (output, context) => {\n    return {\n        BackupArn: __expectString(output.BackupArn),\n        BackupCreationDateTime: output.BackupCreationDateTime != null\n            ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.BackupCreationDateTime)))\n            : undefined,\n        BackupExpiryDateTime: output.BackupExpiryDateTime != null\n            ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.BackupExpiryDateTime)))\n            : undefined,\n        BackupName: __expectString(output.BackupName),\n        BackupSizeBytes: __expectLong(output.BackupSizeBytes),\n        BackupStatus: __expectString(output.BackupStatus),\n        BackupType: __expectString(output.BackupType),\n        TableArn: __expectString(output.TableArn),\n        TableId: __expectString(output.TableId),\n        TableName: __expectString(output.TableName),\n    };\n};\nconst deserializeAws_json1_0BatchExecuteStatementOutput = (output, context) => {\n    return {\n        ConsumedCapacity: output.ConsumedCapacity != null\n            ? deserializeAws_json1_0ConsumedCapacityMultiple(output.ConsumedCapacity, context)\n            : undefined,\n        Responses: output.Responses != null ? deserializeAws_json1_0PartiQLBatchResponse(output.Responses, context) : undefined,\n    };\n};\nconst deserializeAws_json1_0BatchGetItemOutput = (output, context) => {\n    return {\n        ConsumedCapacity: output.ConsumedCapacity != null\n            ? deserializeAws_json1_0ConsumedCapacityMultiple(output.ConsumedCapacity, context)\n            : undefined,\n        Responses: output.Responses != null ? deserializeAws_json1_0BatchGetResponseMap(output.Responses, context) : undefined,\n        UnprocessedKeys: output.UnprocessedKeys != null\n            ? deserializeAws_json1_0BatchGetRequestMap(output.UnprocessedKeys, context)\n            : undefined,\n    };\n};\nconst deserializeAws_json1_0BatchGetRequestMap = (output, context) => {\n    return Object.entries(output).reduce((acc, [key, value]) => {\n        if (value === null) {\n            return acc;\n        }\n        acc[key] = deserializeAws_json1_0KeysAndAttributes(value, context);\n        return acc;\n    }, {});\n};\nconst deserializeAws_json1_0BatchGetResponseMap = (output, context) => {\n    return Object.entries(output).reduce((acc, [key, value]) => {\n        if (value === null) {\n            return acc;\n        }\n        acc[key] = deserializeAws_json1_0ItemList(value, context);\n        return acc;\n    }, {});\n};\nconst deserializeAws_json1_0BatchStatementError = (output, context) => {\n    return {\n        Code: __expectString(output.Code),\n        Message: __expectString(output.Message),\n    };\n};\nconst deserializeAws_json1_0BatchStatementResponse = (output, context) => {\n    return {\n        Error: output.Error != null ? deserializeAws_json1_0BatchStatementError(output.Error, context) : undefined,\n        Item: output.Item != null ? deserializeAws_json1_0AttributeMap(output.Item, context) : undefined,\n        TableName: __expectString(output.TableName),\n    };\n};\nconst deserializeAws_json1_0BatchWriteItemOutput = (output, context) => {\n    return {\n        ConsumedCapacity: output.ConsumedCapacity != null\n            ? deserializeAws_json1_0ConsumedCapacityMultiple(output.ConsumedCapacity, context)\n            : undefined,\n        ItemCollectionMetrics: output.ItemCollectionMetrics != null\n            ? deserializeAws_json1_0ItemCollectionMetricsPerTable(output.ItemCollectionMetrics, context)\n            : undefined,\n        UnprocessedItems: output.UnprocessedItems != null\n            ? deserializeAws_json1_0BatchWriteItemRequestMap(output.UnprocessedItems, context)\n            : undefined,\n    };\n};\nconst deserializeAws_json1_0BatchWriteItemRequestMap = (output, context) => {\n    return Object.entries(output).reduce((acc, [key, value]) => {\n        if (value === null) {\n            return acc;\n        }\n        acc[key] = deserializeAws_json1_0WriteRequests(value, context);\n        return acc;\n    }, {});\n};\nconst deserializeAws_json1_0BillingModeSummary = (output, context) => {\n    return {\n        BillingMode: __expectString(output.BillingMode),\n        LastUpdateToPayPerRequestDateTime: output.LastUpdateToPayPerRequestDateTime != null\n            ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.LastUpdateToPayPerRequestDateTime)))\n            : undefined,\n    };\n};\nconst deserializeAws_json1_0BinarySetAttributeValue = (output, context) => {\n    const retVal = (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return context.base64Decoder(entry);\n    });\n    return retVal;\n};\nconst deserializeAws_json1_0CancellationReason = (output, context) => {\n    return {\n        Code: __expectString(output.Code),\n        Item: output.Item != null ? deserializeAws_json1_0AttributeMap(output.Item, context) : undefined,\n        Message: __expectString(output.Message),\n    };\n};\nconst deserializeAws_json1_0CancellationReasonList = (output, context) => {\n    const retVal = (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_json1_0CancellationReason(entry, context);\n    });\n    return retVal;\n};\nconst deserializeAws_json1_0Capacity = (output, context) => {\n    return {\n        CapacityUnits: __limitedParseDouble(output.CapacityUnits),\n        ReadCapacityUnits: __limitedParseDouble(output.ReadCapacityUnits),\n        WriteCapacityUnits: __limitedParseDouble(output.WriteCapacityUnits),\n    };\n};\nconst deserializeAws_json1_0ConditionalCheckFailedException = (output, context) => {\n    return {\n        message: __expectString(output.message),\n    };\n};\nconst deserializeAws_json1_0ConsumedCapacity = (output, context) => {\n    return {\n        CapacityUnits: __limitedParseDouble(output.CapacityUnits),\n        GlobalSecondaryIndexes: output.GlobalSecondaryIndexes != null\n            ? deserializeAws_json1_0SecondaryIndexesCapacityMap(output.GlobalSecondaryIndexes, context)\n            : undefined,\n        LocalSecondaryIndexes: output.LocalSecondaryIndexes != null\n            ? deserializeAws_json1_0SecondaryIndexesCapacityMap(output.LocalSecondaryIndexes, context)\n            : undefined,\n        ReadCapacityUnits: __limitedParseDouble(output.ReadCapacityUnits),\n        Table: output.Table != null ? deserializeAws_json1_0Capacity(output.Table, context) : undefined,\n        TableName: __expectString(output.TableName),\n        WriteCapacityUnits: __limitedParseDouble(output.WriteCapacityUnits),\n    };\n};\nconst deserializeAws_json1_0ConsumedCapacityMultiple = (output, context) => {\n    const retVal = (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_json1_0ConsumedCapacity(entry, context);\n    });\n    return retVal;\n};\nconst deserializeAws_json1_0ContinuousBackupsDescription = (output, context) => {\n    return {\n        ContinuousBackupsStatus: __expectString(output.ContinuousBackupsStatus),\n        PointInTimeRecoveryDescription: output.PointInTimeRecoveryDescription != null\n            ? deserializeAws_json1_0PointInTimeRecoveryDescription(output.PointInTimeRecoveryDescription, context)\n            : undefined,\n    };\n};\nconst deserializeAws_json1_0ContinuousBackupsUnavailableException = (output, context) => {\n    return {\n        message: __expectString(output.message),\n    };\n};\nconst deserializeAws_json1_0ContributorInsightsRuleList = (output, context) => {\n    const retVal = (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return __expectString(entry);\n    });\n    return retVal;\n};\nconst deserializeAws_json1_0ContributorInsightsSummaries = (output, context) => {\n    const retVal = (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_json1_0ContributorInsightsSummary(entry, context);\n    });\n    return retVal;\n};\nconst deserializeAws_json1_0ContributorInsightsSummary = (output, context) => {\n    return {\n        ContributorInsightsStatus: __expectString(output.ContributorInsightsStatus),\n        IndexName: __expectString(output.IndexName),\n        TableName: __expectString(output.TableName),\n    };\n};\nconst deserializeAws_json1_0CreateBackupOutput = (output, context) => {\n    return {\n        BackupDetails: output.BackupDetails != null ? deserializeAws_json1_0BackupDetails(output.BackupDetails, context) : undefined,\n    };\n};\nconst deserializeAws_json1_0CreateGlobalTableOutput = (output, context) => {\n    return {\n        GlobalTableDescription: output.GlobalTableDescription != null\n            ? deserializeAws_json1_0GlobalTableDescription(output.GlobalTableDescription, context)\n            : undefined,\n    };\n};\nconst deserializeAws_json1_0CreateTableOutput = (output, context) => {\n    return {\n        TableDescription: output.TableDescription != null\n            ? deserializeAws_json1_0TableDescription(output.TableDescription, context)\n            : undefined,\n    };\n};\nconst deserializeAws_json1_0CsvHeaderList = (output, context) => {\n    const retVal = (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return __expectString(entry);\n    });\n    return retVal;\n};\nconst deserializeAws_json1_0CsvOptions = (output, context) => {\n    return {\n        Delimiter: __expectString(output.Delimiter),\n        HeaderList: output.HeaderList != null ? deserializeAws_json1_0CsvHeaderList(output.HeaderList, context) : undefined,\n    };\n};\nconst deserializeAws_json1_0DeleteBackupOutput = (output, context) => {\n    return {\n        BackupDescription: output.BackupDescription != null\n            ? deserializeAws_json1_0BackupDescription(output.BackupDescription, context)\n            : undefined,\n    };\n};\nconst deserializeAws_json1_0DeleteItemOutput = (output, context) => {\n    return {\n        Attributes: output.Attributes != null ? deserializeAws_json1_0AttributeMap(output.Attributes, context) : undefined,\n        ConsumedCapacity: output.ConsumedCapacity != null\n            ? deserializeAws_json1_0ConsumedCapacity(output.ConsumedCapacity, context)\n            : undefined,\n        ItemCollectionMetrics: output.ItemCollectionMetrics != null\n            ? deserializeAws_json1_0ItemCollectionMetrics(output.ItemCollectionMetrics, context)\n            : undefined,\n    };\n};\nconst deserializeAws_json1_0DeleteRequest = (output, context) => {\n    return {\n        Key: output.Key != null ? deserializeAws_json1_0Key(output.Key, context) : undefined,\n    };\n};\nconst deserializeAws_json1_0DeleteTableOutput = (output, context) => {\n    return {\n        TableDescription: output.TableDescription != null\n            ? deserializeAws_json1_0TableDescription(output.TableDescription, context)\n            : undefined,\n    };\n};\nconst deserializeAws_json1_0DescribeBackupOutput = (output, context) => {\n    return {\n        BackupDescription: output.BackupDescription != null\n            ? deserializeAws_json1_0BackupDescription(output.BackupDescription, context)\n            : undefined,\n    };\n};\nconst deserializeAws_json1_0DescribeContinuousBackupsOutput = (output, context) => {\n    return {\n        ContinuousBackupsDescription: output.ContinuousBackupsDescription != null\n            ? deserializeAws_json1_0ContinuousBackupsDescription(output.ContinuousBackupsDescription, context)\n            : undefined,\n    };\n};\nconst deserializeAws_json1_0DescribeContributorInsightsOutput = (output, context) => {\n    return {\n        ContributorInsightsRuleList: output.ContributorInsightsRuleList != null\n            ? deserializeAws_json1_0ContributorInsightsRuleList(output.ContributorInsightsRuleList, context)\n            : undefined,\n        ContributorInsightsStatus: __expectString(output.ContributorInsightsStatus),\n        FailureException: output.FailureException != null\n            ? deserializeAws_json1_0FailureException(output.FailureException, context)\n            : undefined,\n        IndexName: __expectString(output.IndexName),\n        LastUpdateDateTime: output.LastUpdateDateTime != null\n            ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.LastUpdateDateTime)))\n            : undefined,\n        TableName: __expectString(output.TableName),\n    };\n};\nconst deserializeAws_json1_0DescribeEndpointsResponse = (output, context) => {\n    return {\n        Endpoints: output.Endpoints != null ? deserializeAws_json1_0Endpoints(output.Endpoints, context) : undefined,\n    };\n};\nconst deserializeAws_json1_0DescribeExportOutput = (output, context) => {\n    return {\n        ExportDescription: output.ExportDescription != null\n            ? deserializeAws_json1_0ExportDescription(output.ExportDescription, context)\n            : undefined,\n    };\n};\nconst deserializeAws_json1_0DescribeGlobalTableOutput = (output, context) => {\n    return {\n        GlobalTableDescription: output.GlobalTableDescription != null\n            ? deserializeAws_json1_0GlobalTableDescription(output.GlobalTableDescription, context)\n            : undefined,\n    };\n};\nconst deserializeAws_json1_0DescribeGlobalTableSettingsOutput = (output, context) => {\n    return {\n        GlobalTableName: __expectString(output.GlobalTableName),\n        ReplicaSettings: output.ReplicaSettings != null\n            ? deserializeAws_json1_0ReplicaSettingsDescriptionList(output.ReplicaSettings, context)\n            : undefined,\n    };\n};\nconst deserializeAws_json1_0DescribeImportOutput = (output, context) => {\n    return {\n        ImportTableDescription: output.ImportTableDescription != null\n            ? deserializeAws_json1_0ImportTableDescription(output.ImportTableDescription, context)\n            : undefined,\n    };\n};\nconst deserializeAws_json1_0DescribeKinesisStreamingDestinationOutput = (output, context) => {\n    return {\n        KinesisDataStreamDestinations: output.KinesisDataStreamDestinations != null\n            ? deserializeAws_json1_0KinesisDataStreamDestinations(output.KinesisDataStreamDestinations, context)\n            : undefined,\n        TableName: __expectString(output.TableName),\n    };\n};\nconst deserializeAws_json1_0DescribeLimitsOutput = (output, context) => {\n    return {\n        AccountMaxReadCapacityUnits: __expectLong(output.AccountMaxReadCapacityUnits),\n        AccountMaxWriteCapacityUnits: __expectLong(output.AccountMaxWriteCapacityUnits),\n        TableMaxReadCapacityUnits: __expectLong(output.TableMaxReadCapacityUnits),\n        TableMaxWriteCapacityUnits: __expectLong(output.TableMaxWriteCapacityUnits),\n    };\n};\nconst deserializeAws_json1_0DescribeTableOutput = (output, context) => {\n    return {\n        Table: output.Table != null ? deserializeAws_json1_0TableDescription(output.Table, context) : undefined,\n    };\n};\nconst deserializeAws_json1_0DescribeTableReplicaAutoScalingOutput = (output, context) => {\n    return {\n        TableAutoScalingDescription: output.TableAutoScalingDescription != null\n            ? deserializeAws_json1_0TableAutoScalingDescription(output.TableAutoScalingDescription, context)\n            : undefined,\n    };\n};\nconst deserializeAws_json1_0DescribeTimeToLiveOutput = (output, context) => {\n    return {\n        TimeToLiveDescription: output.TimeToLiveDescription != null\n            ? deserializeAws_json1_0TimeToLiveDescription(output.TimeToLiveDescription, context)\n            : undefined,\n    };\n};\nconst deserializeAws_json1_0DuplicateItemException = (output, context) => {\n    return {\n        message: __expectString(output.message),\n    };\n};\nconst deserializeAws_json1_0Endpoint = (output, context) => {\n    return {\n        Address: __expectString(output.Address),\n        CachePeriodInMinutes: __expectLong(output.CachePeriodInMinutes),\n    };\n};\nconst deserializeAws_json1_0Endpoints = (output, context) => {\n    const retVal = (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_json1_0Endpoint(entry, context);\n    });\n    return retVal;\n};\nconst deserializeAws_json1_0ExecuteStatementOutput = (output, context) => {\n    return {\n        ConsumedCapacity: output.ConsumedCapacity != null\n            ? deserializeAws_json1_0ConsumedCapacity(output.ConsumedCapacity, context)\n            : undefined,\n        Items: output.Items != null ? deserializeAws_json1_0ItemList(output.Items, context) : undefined,\n        LastEvaluatedKey: output.LastEvaluatedKey != null ? deserializeAws_json1_0Key(output.LastEvaluatedKey, context) : undefined,\n        NextToken: __expectString(output.NextToken),\n    };\n};\nconst deserializeAws_json1_0ExecuteTransactionOutput = (output, context) => {\n    return {\n        ConsumedCapacity: output.ConsumedCapacity != null\n            ? deserializeAws_json1_0ConsumedCapacityMultiple(output.ConsumedCapacity, context)\n            : undefined,\n        Responses: output.Responses != null ? deserializeAws_json1_0ItemResponseList(output.Responses, context) : undefined,\n    };\n};\nconst deserializeAws_json1_0ExportConflictException = (output, context) => {\n    return {\n        message: __expectString(output.message),\n    };\n};\nconst deserializeAws_json1_0ExportDescription = (output, context) => {\n    return {\n        BilledSizeBytes: __expectLong(output.BilledSizeBytes),\n        ClientToken: __expectString(output.ClientToken),\n        EndTime: output.EndTime != null ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.EndTime))) : undefined,\n        ExportArn: __expectString(output.ExportArn),\n        ExportFormat: __expectString(output.ExportFormat),\n        ExportManifest: __expectString(output.ExportManifest),\n        ExportStatus: __expectString(output.ExportStatus),\n        ExportTime: output.ExportTime != null ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.ExportTime))) : undefined,\n        FailureCode: __expectString(output.FailureCode),\n        FailureMessage: __expectString(output.FailureMessage),\n        ItemCount: __expectLong(output.ItemCount),\n        S3Bucket: __expectString(output.S3Bucket),\n        S3BucketOwner: __expectString(output.S3BucketOwner),\n        S3Prefix: __expectString(output.S3Prefix),\n        S3SseAlgorithm: __expectString(output.S3SseAlgorithm),\n        S3SseKmsKeyId: __expectString(output.S3SseKmsKeyId),\n        StartTime: output.StartTime != null ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.StartTime))) : undefined,\n        TableArn: __expectString(output.TableArn),\n        TableId: __expectString(output.TableId),\n    };\n};\nconst deserializeAws_json1_0ExportNotFoundException = (output, context) => {\n    return {\n        message: __expectString(output.message),\n    };\n};\nconst deserializeAws_json1_0ExportSummaries = (output, context) => {\n    const retVal = (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_json1_0ExportSummary(entry, context);\n    });\n    return retVal;\n};\nconst deserializeAws_json1_0ExportSummary = (output, context) => {\n    return {\n        ExportArn: __expectString(output.ExportArn),\n        ExportStatus: __expectString(output.ExportStatus),\n    };\n};\nconst deserializeAws_json1_0ExportTableToPointInTimeOutput = (output, context) => {\n    return {\n        ExportDescription: output.ExportDescription != null\n            ? deserializeAws_json1_0ExportDescription(output.ExportDescription, context)\n            : undefined,\n    };\n};\nconst deserializeAws_json1_0ExpressionAttributeNameMap = (output, context) => {\n    return Object.entries(output).reduce((acc, [key, value]) => {\n        if (value === null) {\n            return acc;\n        }\n        acc[key] = __expectString(value);\n        return acc;\n    }, {});\n};\nconst deserializeAws_json1_0FailureException = (output, context) => {\n    return {\n        ExceptionDescription: __expectString(output.ExceptionDescription),\n        ExceptionName: __expectString(output.ExceptionName),\n    };\n};\nconst deserializeAws_json1_0GetItemOutput = (output, context) => {\n    return {\n        ConsumedCapacity: output.ConsumedCapacity != null\n            ? deserializeAws_json1_0ConsumedCapacity(output.ConsumedCapacity, context)\n            : undefined,\n        Item: output.Item != null ? deserializeAws_json1_0AttributeMap(output.Item, context) : undefined,\n    };\n};\nconst deserializeAws_json1_0GlobalSecondaryIndex = (output, context) => {\n    return {\n        IndexName: __expectString(output.IndexName),\n        KeySchema: output.KeySchema != null ? deserializeAws_json1_0KeySchema(output.KeySchema, context) : undefined,\n        Projection: output.Projection != null ? deserializeAws_json1_0Projection(output.Projection, context) : undefined,\n        ProvisionedThroughput: output.ProvisionedThroughput != null\n            ? deserializeAws_json1_0ProvisionedThroughput(output.ProvisionedThroughput, context)\n            : undefined,\n    };\n};\nconst deserializeAws_json1_0GlobalSecondaryIndexDescription = (output, context) => {\n    return {\n        Backfilling: __expectBoolean(output.Backfilling),\n        IndexArn: __expectString(output.IndexArn),\n        IndexName: __expectString(output.IndexName),\n        IndexSizeBytes: __expectLong(output.IndexSizeBytes),\n        IndexStatus: __expectString(output.IndexStatus),\n        ItemCount: __expectLong(output.ItemCount),\n        KeySchema: output.KeySchema != null ? deserializeAws_json1_0KeySchema(output.KeySchema, context) : undefined,\n        Projection: output.Projection != null ? deserializeAws_json1_0Projection(output.Projection, context) : undefined,\n        ProvisionedThroughput: output.ProvisionedThroughput != null\n            ? deserializeAws_json1_0ProvisionedThroughputDescription(output.ProvisionedThroughput, context)\n            : undefined,\n    };\n};\nconst deserializeAws_json1_0GlobalSecondaryIndexDescriptionList = (output, context) => {\n    const retVal = (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_json1_0GlobalSecondaryIndexDescription(entry, context);\n    });\n    return retVal;\n};\nconst deserializeAws_json1_0GlobalSecondaryIndexes = (output, context) => {\n    const retVal = (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_json1_0GlobalSecondaryIndexInfo(entry, context);\n    });\n    return retVal;\n};\nconst deserializeAws_json1_0GlobalSecondaryIndexInfo = (output, context) => {\n    return {\n        IndexName: __expectString(output.IndexName),\n        KeySchema: output.KeySchema != null ? deserializeAws_json1_0KeySchema(output.KeySchema, context) : undefined,\n        Projection: output.Projection != null ? deserializeAws_json1_0Projection(output.Projection, context) : undefined,\n        ProvisionedThroughput: output.ProvisionedThroughput != null\n            ? deserializeAws_json1_0ProvisionedThroughput(output.ProvisionedThroughput, context)\n            : undefined,\n    };\n};\nconst deserializeAws_json1_0GlobalSecondaryIndexList = (output, context) => {\n    const retVal = (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_json1_0GlobalSecondaryIndex(entry, context);\n    });\n    return retVal;\n};\nconst deserializeAws_json1_0GlobalTable = (output, context) => {\n    return {\n        GlobalTableName: __expectString(output.GlobalTableName),\n        ReplicationGroup: output.ReplicationGroup != null ? deserializeAws_json1_0ReplicaList(output.ReplicationGroup, context) : undefined,\n    };\n};\nconst deserializeAws_json1_0GlobalTableAlreadyExistsException = (output, context) => {\n    return {\n        message: __expectString(output.message),\n    };\n};\nconst deserializeAws_json1_0GlobalTableDescription = (output, context) => {\n    return {\n        CreationDateTime: output.CreationDateTime != null\n            ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.CreationDateTime)))\n            : undefined,\n        GlobalTableArn: __expectString(output.GlobalTableArn),\n        GlobalTableName: __expectString(output.GlobalTableName),\n        GlobalTableStatus: __expectString(output.GlobalTableStatus),\n        ReplicationGroup: output.ReplicationGroup != null\n            ? deserializeAws_json1_0ReplicaDescriptionList(output.ReplicationGroup, context)\n            : undefined,\n    };\n};\nconst deserializeAws_json1_0GlobalTableList = (output, context) => {\n    const retVal = (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_json1_0GlobalTable(entry, context);\n    });\n    return retVal;\n};\nconst deserializeAws_json1_0GlobalTableNotFoundException = (output, context) => {\n    return {\n        message: __expectString(output.message),\n    };\n};\nconst deserializeAws_json1_0IdempotentParameterMismatchException = (output, context) => {\n    return {\n        Message: __expectString(output.Message),\n    };\n};\nconst deserializeAws_json1_0ImportConflictException = (output, context) => {\n    return {\n        message: __expectString(output.message),\n    };\n};\nconst deserializeAws_json1_0ImportNotFoundException = (output, context) => {\n    return {\n        message: __expectString(output.message),\n    };\n};\nconst deserializeAws_json1_0ImportSummary = (output, context) => {\n    return {\n        CloudWatchLogGroupArn: __expectString(output.CloudWatchLogGroupArn),\n        EndTime: output.EndTime != null ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.EndTime))) : undefined,\n        ImportArn: __expectString(output.ImportArn),\n        ImportStatus: __expectString(output.ImportStatus),\n        InputFormat: __expectString(output.InputFormat),\n        S3BucketSource: output.S3BucketSource != null ? deserializeAws_json1_0S3BucketSource(output.S3BucketSource, context) : undefined,\n        StartTime: output.StartTime != null ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.StartTime))) : undefined,\n        TableArn: __expectString(output.TableArn),\n    };\n};\nconst deserializeAws_json1_0ImportSummaryList = (output, context) => {\n    const retVal = (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_json1_0ImportSummary(entry, context);\n    });\n    return retVal;\n};\nconst deserializeAws_json1_0ImportTableDescription = (output, context) => {\n    return {\n        ClientToken: __expectString(output.ClientToken),\n        CloudWatchLogGroupArn: __expectString(output.CloudWatchLogGroupArn),\n        EndTime: output.EndTime != null ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.EndTime))) : undefined,\n        ErrorCount: __expectLong(output.ErrorCount),\n        FailureCode: __expectString(output.FailureCode),\n        FailureMessage: __expectString(output.FailureMessage),\n        ImportArn: __expectString(output.ImportArn),\n        ImportStatus: __expectString(output.ImportStatus),\n        ImportedItemCount: __expectLong(output.ImportedItemCount),\n        InputCompressionType: __expectString(output.InputCompressionType),\n        InputFormat: __expectString(output.InputFormat),\n        InputFormatOptions: output.InputFormatOptions != null\n            ? deserializeAws_json1_0InputFormatOptions(output.InputFormatOptions, context)\n            : undefined,\n        ProcessedItemCount: __expectLong(output.ProcessedItemCount),\n        ProcessedSizeBytes: __expectLong(output.ProcessedSizeBytes),\n        S3BucketSource: output.S3BucketSource != null ? deserializeAws_json1_0S3BucketSource(output.S3BucketSource, context) : undefined,\n        StartTime: output.StartTime != null ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.StartTime))) : undefined,\n        TableArn: __expectString(output.TableArn),\n        TableCreationParameters: output.TableCreationParameters != null\n            ? deserializeAws_json1_0TableCreationParameters(output.TableCreationParameters, context)\n            : undefined,\n        TableId: __expectString(output.TableId),\n    };\n};\nconst deserializeAws_json1_0ImportTableOutput = (output, context) => {\n    return {\n        ImportTableDescription: output.ImportTableDescription != null\n            ? deserializeAws_json1_0ImportTableDescription(output.ImportTableDescription, context)\n            : undefined,\n    };\n};\nconst deserializeAws_json1_0IndexNotFoundException = (output, context) => {\n    return {\n        message: __expectString(output.message),\n    };\n};\nconst deserializeAws_json1_0InputFormatOptions = (output, context) => {\n    return {\n        Csv: output.Csv != null ? deserializeAws_json1_0CsvOptions(output.Csv, context) : undefined,\n    };\n};\nconst deserializeAws_json1_0InternalServerError = (output, context) => {\n    return {\n        message: __expectString(output.message),\n    };\n};\nconst deserializeAws_json1_0InvalidEndpointException = (output, context) => {\n    return {\n        Message: __expectString(output.Message),\n    };\n};\nconst deserializeAws_json1_0InvalidExportTimeException = (output, context) => {\n    return {\n        message: __expectString(output.message),\n    };\n};\nconst deserializeAws_json1_0InvalidRestoreTimeException = (output, context) => {\n    return {\n        message: __expectString(output.message),\n    };\n};\nconst deserializeAws_json1_0ItemCollectionKeyAttributeMap = (output, context) => {\n    return Object.entries(output).reduce((acc, [key, value]) => {\n        if (value === null) {\n            return acc;\n        }\n        acc[key] = deserializeAws_json1_0AttributeValue(__expectUnion(value), context);\n        return acc;\n    }, {});\n};\nconst deserializeAws_json1_0ItemCollectionMetrics = (output, context) => {\n    return {\n        ItemCollectionKey: output.ItemCollectionKey != null\n            ? deserializeAws_json1_0ItemCollectionKeyAttributeMap(output.ItemCollectionKey, context)\n            : undefined,\n        SizeEstimateRangeGB: output.SizeEstimateRangeGB != null\n            ? deserializeAws_json1_0ItemCollectionSizeEstimateRange(output.SizeEstimateRangeGB, context)\n            : undefined,\n    };\n};\nconst deserializeAws_json1_0ItemCollectionMetricsMultiple = (output, context) => {\n    const retVal = (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_json1_0ItemCollectionMetrics(entry, context);\n    });\n    return retVal;\n};\nconst deserializeAws_json1_0ItemCollectionMetricsPerTable = (output, context) => {\n    return Object.entries(output).reduce((acc, [key, value]) => {\n        if (value === null) {\n            return acc;\n        }\n        acc[key] = deserializeAws_json1_0ItemCollectionMetricsMultiple(value, context);\n        return acc;\n    }, {});\n};\nconst deserializeAws_json1_0ItemCollectionSizeEstimateRange = (output, context) => {\n    const retVal = (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return __limitedParseDouble(entry);\n    });\n    return retVal;\n};\nconst deserializeAws_json1_0ItemCollectionSizeLimitExceededException = (output, context) => {\n    return {\n        message: __expectString(output.message),\n    };\n};\nconst deserializeAws_json1_0ItemList = (output, context) => {\n    const retVal = (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_json1_0AttributeMap(entry, context);\n    });\n    return retVal;\n};\nconst deserializeAws_json1_0ItemResponse = (output, context) => {\n    return {\n        Item: output.Item != null ? deserializeAws_json1_0AttributeMap(output.Item, context) : undefined,\n    };\n};\nconst deserializeAws_json1_0ItemResponseList = (output, context) => {\n    const retVal = (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_json1_0ItemResponse(entry, context);\n    });\n    return retVal;\n};\nconst deserializeAws_json1_0Key = (output, context) => {\n    return Object.entries(output).reduce((acc, [key, value]) => {\n        if (value === null) {\n            return acc;\n        }\n        acc[key] = deserializeAws_json1_0AttributeValue(__expectUnion(value), context);\n        return acc;\n    }, {});\n};\nconst deserializeAws_json1_0KeyList = (output, context) => {\n    const retVal = (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_json1_0Key(entry, context);\n    });\n    return retVal;\n};\nconst deserializeAws_json1_0KeysAndAttributes = (output, context) => {\n    return {\n        AttributesToGet: output.AttributesToGet != null\n            ? deserializeAws_json1_0AttributeNameList(output.AttributesToGet, context)\n            : undefined,\n        ConsistentRead: __expectBoolean(output.ConsistentRead),\n        ExpressionAttributeNames: output.ExpressionAttributeNames != null\n            ? deserializeAws_json1_0ExpressionAttributeNameMap(output.ExpressionAttributeNames, context)\n            : undefined,\n        Keys: output.Keys != null ? deserializeAws_json1_0KeyList(output.Keys, context) : undefined,\n        ProjectionExpression: __expectString(output.ProjectionExpression),\n    };\n};\nconst deserializeAws_json1_0KeySchema = (output, context) => {\n    const retVal = (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_json1_0KeySchemaElement(entry, context);\n    });\n    return retVal;\n};\nconst deserializeAws_json1_0KeySchemaElement = (output, context) => {\n    return {\n        AttributeName: __expectString(output.AttributeName),\n        KeyType: __expectString(output.KeyType),\n    };\n};\nconst deserializeAws_json1_0KinesisDataStreamDestination = (output, context) => {\n    return {\n        DestinationStatus: __expectString(output.DestinationStatus),\n        DestinationStatusDescription: __expectString(output.DestinationStatusDescription),\n        StreamArn: __expectString(output.StreamArn),\n    };\n};\nconst deserializeAws_json1_0KinesisDataStreamDestinations = (output, context) => {\n    const retVal = (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_json1_0KinesisDataStreamDestination(entry, context);\n    });\n    return retVal;\n};\nconst deserializeAws_json1_0KinesisStreamingDestinationOutput = (output, context) => {\n    return {\n        DestinationStatus: __expectString(output.DestinationStatus),\n        StreamArn: __expectString(output.StreamArn),\n        TableName: __expectString(output.TableName),\n    };\n};\nconst deserializeAws_json1_0LimitExceededException = (output, context) => {\n    return {\n        message: __expectString(output.message),\n    };\n};\nconst deserializeAws_json1_0ListAttributeValue = (output, context) => {\n    const retVal = (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_json1_0AttributeValue(__expectUnion(entry), context);\n    });\n    return retVal;\n};\nconst deserializeAws_json1_0ListBackupsOutput = (output, context) => {\n    return {\n        BackupSummaries: output.BackupSummaries != null\n            ? deserializeAws_json1_0BackupSummaries(output.BackupSummaries, context)\n            : undefined,\n        LastEvaluatedBackupArn: __expectString(output.LastEvaluatedBackupArn),\n    };\n};\nconst deserializeAws_json1_0ListContributorInsightsOutput = (output, context) => {\n    return {\n        ContributorInsightsSummaries: output.ContributorInsightsSummaries != null\n            ? deserializeAws_json1_0ContributorInsightsSummaries(output.ContributorInsightsSummaries, context)\n            : undefined,\n        NextToken: __expectString(output.NextToken),\n    };\n};\nconst deserializeAws_json1_0ListExportsOutput = (output, context) => {\n    return {\n        ExportSummaries: output.ExportSummaries != null\n            ? deserializeAws_json1_0ExportSummaries(output.ExportSummaries, context)\n            : undefined,\n        NextToken: __expectString(output.NextToken),\n    };\n};\nconst deserializeAws_json1_0ListGlobalTablesOutput = (output, context) => {\n    return {\n        GlobalTables: output.GlobalTables != null ? deserializeAws_json1_0GlobalTableList(output.GlobalTables, context) : undefined,\n        LastEvaluatedGlobalTableName: __expectString(output.LastEvaluatedGlobalTableName),\n    };\n};\nconst deserializeAws_json1_0ListImportsOutput = (output, context) => {\n    return {\n        ImportSummaryList: output.ImportSummaryList != null\n            ? deserializeAws_json1_0ImportSummaryList(output.ImportSummaryList, context)\n            : undefined,\n        NextToken: __expectString(output.NextToken),\n    };\n};\nconst deserializeAws_json1_0ListTablesOutput = (output, context) => {\n    return {\n        LastEvaluatedTableName: __expectString(output.LastEvaluatedTableName),\n        TableNames: output.TableNames != null ? deserializeAws_json1_0TableNameList(output.TableNames, context) : undefined,\n    };\n};\nconst deserializeAws_json1_0ListTagsOfResourceOutput = (output, context) => {\n    return {\n        NextToken: __expectString(output.NextToken),\n        Tags: output.Tags != null ? deserializeAws_json1_0TagList(output.Tags, context) : undefined,\n    };\n};\nconst deserializeAws_json1_0LocalSecondaryIndexDescription = (output, context) => {\n    return {\n        IndexArn: __expectString(output.IndexArn),\n        IndexName: __expectString(output.IndexName),\n        IndexSizeBytes: __expectLong(output.IndexSizeBytes),\n        ItemCount: __expectLong(output.ItemCount),\n        KeySchema: output.KeySchema != null ? deserializeAws_json1_0KeySchema(output.KeySchema, context) : undefined,\n        Projection: output.Projection != null ? deserializeAws_json1_0Projection(output.Projection, context) : undefined,\n    };\n};\nconst deserializeAws_json1_0LocalSecondaryIndexDescriptionList = (output, context) => {\n    const retVal = (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_json1_0LocalSecondaryIndexDescription(entry, context);\n    });\n    return retVal;\n};\nconst deserializeAws_json1_0LocalSecondaryIndexes = (output, context) => {\n    const retVal = (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_json1_0LocalSecondaryIndexInfo(entry, context);\n    });\n    return retVal;\n};\nconst deserializeAws_json1_0LocalSecondaryIndexInfo = (output, context) => {\n    return {\n        IndexName: __expectString(output.IndexName),\n        KeySchema: output.KeySchema != null ? deserializeAws_json1_0KeySchema(output.KeySchema, context) : undefined,\n        Projection: output.Projection != null ? deserializeAws_json1_0Projection(output.Projection, context) : undefined,\n    };\n};\nconst deserializeAws_json1_0MapAttributeValue = (output, context) => {\n    return Object.entries(output).reduce((acc, [key, value]) => {\n        if (value === null) {\n            return acc;\n        }\n        acc[key] = deserializeAws_json1_0AttributeValue(__expectUnion(value), context);\n        return acc;\n    }, {});\n};\nconst deserializeAws_json1_0NonKeyAttributeNameList = (output, context) => {\n    const retVal = (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return __expectString(entry);\n    });\n    return retVal;\n};\nconst deserializeAws_json1_0NumberSetAttributeValue = (output, context) => {\n    const retVal = (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return __expectString(entry);\n    });\n    return retVal;\n};\nconst deserializeAws_json1_0PartiQLBatchResponse = (output, context) => {\n    const retVal = (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_json1_0BatchStatementResponse(entry, context);\n    });\n    return retVal;\n};\nconst deserializeAws_json1_0PointInTimeRecoveryDescription = (output, context) => {\n    return {\n        EarliestRestorableDateTime: output.EarliestRestorableDateTime != null\n            ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.EarliestRestorableDateTime)))\n            : undefined,\n        LatestRestorableDateTime: output.LatestRestorableDateTime != null\n            ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.LatestRestorableDateTime)))\n            : undefined,\n        PointInTimeRecoveryStatus: __expectString(output.PointInTimeRecoveryStatus),\n    };\n};\nconst deserializeAws_json1_0PointInTimeRecoveryUnavailableException = (output, context) => {\n    return {\n        message: __expectString(output.message),\n    };\n};\nconst deserializeAws_json1_0Projection = (output, context) => {\n    return {\n        NonKeyAttributes: output.NonKeyAttributes != null\n            ? deserializeAws_json1_0NonKeyAttributeNameList(output.NonKeyAttributes, context)\n            : undefined,\n        ProjectionType: __expectString(output.ProjectionType),\n    };\n};\nconst deserializeAws_json1_0ProvisionedThroughput = (output, context) => {\n    return {\n        ReadCapacityUnits: __expectLong(output.ReadCapacityUnits),\n        WriteCapacityUnits: __expectLong(output.WriteCapacityUnits),\n    };\n};\nconst deserializeAws_json1_0ProvisionedThroughputDescription = (output, context) => {\n    return {\n        LastDecreaseDateTime: output.LastDecreaseDateTime != null\n            ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.LastDecreaseDateTime)))\n            : undefined,\n        LastIncreaseDateTime: output.LastIncreaseDateTime != null\n            ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.LastIncreaseDateTime)))\n            : undefined,\n        NumberOfDecreasesToday: __expectLong(output.NumberOfDecreasesToday),\n        ReadCapacityUnits: __expectLong(output.ReadCapacityUnits),\n        WriteCapacityUnits: __expectLong(output.WriteCapacityUnits),\n    };\n};\nconst deserializeAws_json1_0ProvisionedThroughputExceededException = (output, context) => {\n    return {\n        message: __expectString(output.message),\n    };\n};\nconst deserializeAws_json1_0ProvisionedThroughputOverride = (output, context) => {\n    return {\n        ReadCapacityUnits: __expectLong(output.ReadCapacityUnits),\n    };\n};\nconst deserializeAws_json1_0PutItemInputAttributeMap = (output, context) => {\n    return Object.entries(output).reduce((acc, [key, value]) => {\n        if (value === null) {\n            return acc;\n        }\n        acc[key] = deserializeAws_json1_0AttributeValue(__expectUnion(value), context);\n        return acc;\n    }, {});\n};\nconst deserializeAws_json1_0PutItemOutput = (output, context) => {\n    return {\n        Attributes: output.Attributes != null ? deserializeAws_json1_0AttributeMap(output.Attributes, context) : undefined,\n        ConsumedCapacity: output.ConsumedCapacity != null\n            ? deserializeAws_json1_0ConsumedCapacity(output.ConsumedCapacity, context)\n            : undefined,\n        ItemCollectionMetrics: output.ItemCollectionMetrics != null\n            ? deserializeAws_json1_0ItemCollectionMetrics(output.ItemCollectionMetrics, context)\n            : undefined,\n    };\n};\nconst deserializeAws_json1_0PutRequest = (output, context) => {\n    return {\n        Item: output.Item != null ? deserializeAws_json1_0PutItemInputAttributeMap(output.Item, context) : undefined,\n    };\n};\nconst deserializeAws_json1_0QueryOutput = (output, context) => {\n    return {\n        ConsumedCapacity: output.ConsumedCapacity != null\n            ? deserializeAws_json1_0ConsumedCapacity(output.ConsumedCapacity, context)\n            : undefined,\n        Count: __expectInt32(output.Count),\n        Items: output.Items != null ? deserializeAws_json1_0ItemList(output.Items, context) : undefined,\n        LastEvaluatedKey: output.LastEvaluatedKey != null ? deserializeAws_json1_0Key(output.LastEvaluatedKey, context) : undefined,\n        ScannedCount: __expectInt32(output.ScannedCount),\n    };\n};\nconst deserializeAws_json1_0Replica = (output, context) => {\n    return {\n        RegionName: __expectString(output.RegionName),\n    };\n};\nconst deserializeAws_json1_0ReplicaAlreadyExistsException = (output, context) => {\n    return {\n        message: __expectString(output.message),\n    };\n};\nconst deserializeAws_json1_0ReplicaAutoScalingDescription = (output, context) => {\n    return {\n        GlobalSecondaryIndexes: output.GlobalSecondaryIndexes != null\n            ? deserializeAws_json1_0ReplicaGlobalSecondaryIndexAutoScalingDescriptionList(output.GlobalSecondaryIndexes, context)\n            : undefined,\n        RegionName: __expectString(output.RegionName),\n        ReplicaProvisionedReadCapacityAutoScalingSettings: output.ReplicaProvisionedReadCapacityAutoScalingSettings != null\n            ? deserializeAws_json1_0AutoScalingSettingsDescription(output.ReplicaProvisionedReadCapacityAutoScalingSettings, context)\n            : undefined,\n        ReplicaProvisionedWriteCapacityAutoScalingSettings: output.ReplicaProvisionedWriteCapacityAutoScalingSettings != null\n            ? deserializeAws_json1_0AutoScalingSettingsDescription(output.ReplicaProvisionedWriteCapacityAutoScalingSettings, context)\n            : undefined,\n        ReplicaStatus: __expectString(output.ReplicaStatus),\n    };\n};\nconst deserializeAws_json1_0ReplicaAutoScalingDescriptionList = (output, context) => {\n    const retVal = (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_json1_0ReplicaAutoScalingDescription(entry, context);\n    });\n    return retVal;\n};\nconst deserializeAws_json1_0ReplicaDescription = (output, context) => {\n    return {\n        GlobalSecondaryIndexes: output.GlobalSecondaryIndexes != null\n            ? deserializeAws_json1_0ReplicaGlobalSecondaryIndexDescriptionList(output.GlobalSecondaryIndexes, context)\n            : undefined,\n        KMSMasterKeyId: __expectString(output.KMSMasterKeyId),\n        ProvisionedThroughputOverride: output.ProvisionedThroughputOverride != null\n            ? deserializeAws_json1_0ProvisionedThroughputOverride(output.ProvisionedThroughputOverride, context)\n            : undefined,\n        RegionName: __expectString(output.RegionName),\n        ReplicaInaccessibleDateTime: output.ReplicaInaccessibleDateTime != null\n            ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.ReplicaInaccessibleDateTime)))\n            : undefined,\n        ReplicaStatus: __expectString(output.ReplicaStatus),\n        ReplicaStatusDescription: __expectString(output.ReplicaStatusDescription),\n        ReplicaStatusPercentProgress: __expectString(output.ReplicaStatusPercentProgress),\n        ReplicaTableClassSummary: output.ReplicaTableClassSummary != null\n            ? deserializeAws_json1_0TableClassSummary(output.ReplicaTableClassSummary, context)\n            : undefined,\n    };\n};\nconst deserializeAws_json1_0ReplicaDescriptionList = (output, context) => {\n    const retVal = (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_json1_0ReplicaDescription(entry, context);\n    });\n    return retVal;\n};\nconst deserializeAws_json1_0ReplicaGlobalSecondaryIndexAutoScalingDescription = (output, context) => {\n    return {\n        IndexName: __expectString(output.IndexName),\n        IndexStatus: __expectString(output.IndexStatus),\n        ProvisionedReadCapacityAutoScalingSettings: output.ProvisionedReadCapacityAutoScalingSettings != null\n            ? deserializeAws_json1_0AutoScalingSettingsDescription(output.ProvisionedReadCapacityAutoScalingSettings, context)\n            : undefined,\n        ProvisionedWriteCapacityAutoScalingSettings: output.ProvisionedWriteCapacityAutoScalingSettings != null\n            ? deserializeAws_json1_0AutoScalingSettingsDescription(output.ProvisionedWriteCapacityAutoScalingSettings, context)\n            : undefined,\n    };\n};\nconst deserializeAws_json1_0ReplicaGlobalSecondaryIndexAutoScalingDescriptionList = (output, context) => {\n    const retVal = (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_json1_0ReplicaGlobalSecondaryIndexAutoScalingDescription(entry, context);\n    });\n    return retVal;\n};\nconst deserializeAws_json1_0ReplicaGlobalSecondaryIndexDescription = (output, context) => {\n    return {\n        IndexName: __expectString(output.IndexName),\n        ProvisionedThroughputOverride: output.ProvisionedThroughputOverride != null\n            ? deserializeAws_json1_0ProvisionedThroughputOverride(output.ProvisionedThroughputOverride, context)\n            : undefined,\n    };\n};\nconst deserializeAws_json1_0ReplicaGlobalSecondaryIndexDescriptionList = (output, context) => {\n    const retVal = (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_json1_0ReplicaGlobalSecondaryIndexDescription(entry, context);\n    });\n    return retVal;\n};\nconst deserializeAws_json1_0ReplicaGlobalSecondaryIndexSettingsDescription = (output, context) => {\n    return {\n        IndexName: __expectString(output.IndexName),\n        IndexStatus: __expectString(output.IndexStatus),\n        ProvisionedReadCapacityAutoScalingSettings: output.ProvisionedReadCapacityAutoScalingSettings != null\n            ? deserializeAws_json1_0AutoScalingSettingsDescription(output.ProvisionedReadCapacityAutoScalingSettings, context)\n            : undefined,\n        ProvisionedReadCapacityUnits: __expectLong(output.ProvisionedReadCapacityUnits),\n        ProvisionedWriteCapacityAutoScalingSettings: output.ProvisionedWriteCapacityAutoScalingSettings != null\n            ? deserializeAws_json1_0AutoScalingSettingsDescription(output.ProvisionedWriteCapacityAutoScalingSettings, context)\n            : undefined,\n        ProvisionedWriteCapacityUnits: __expectLong(output.ProvisionedWriteCapacityUnits),\n    };\n};\nconst deserializeAws_json1_0ReplicaGlobalSecondaryIndexSettingsDescriptionList = (output, context) => {\n    const retVal = (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_json1_0ReplicaGlobalSecondaryIndexSettingsDescription(entry, context);\n    });\n    return retVal;\n};\nconst deserializeAws_json1_0ReplicaList = (output, context) => {\n    const retVal = (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_json1_0Replica(entry, context);\n    });\n    return retVal;\n};\nconst deserializeAws_json1_0ReplicaNotFoundException = (output, context) => {\n    return {\n        message: __expectString(output.message),\n    };\n};\nconst deserializeAws_json1_0ReplicaSettingsDescription = (output, context) => {\n    return {\n        RegionName: __expectString(output.RegionName),\n        ReplicaBillingModeSummary: output.ReplicaBillingModeSummary != null\n            ? deserializeAws_json1_0BillingModeSummary(output.ReplicaBillingModeSummary, context)\n            : undefined,\n        ReplicaGlobalSecondaryIndexSettings: output.ReplicaGlobalSecondaryIndexSettings != null\n            ? deserializeAws_json1_0ReplicaGlobalSecondaryIndexSettingsDescriptionList(output.ReplicaGlobalSecondaryIndexSettings, context)\n            : undefined,\n        ReplicaProvisionedReadCapacityAutoScalingSettings: output.ReplicaProvisionedReadCapacityAutoScalingSettings != null\n            ? deserializeAws_json1_0AutoScalingSettingsDescription(output.ReplicaProvisionedReadCapacityAutoScalingSettings, context)\n            : undefined,\n        ReplicaProvisionedReadCapacityUnits: __expectLong(output.ReplicaProvisionedReadCapacityUnits),\n        ReplicaProvisionedWriteCapacityAutoScalingSettings: output.ReplicaProvisionedWriteCapacityAutoScalingSettings != null\n            ? deserializeAws_json1_0AutoScalingSettingsDescription(output.ReplicaProvisionedWriteCapacityAutoScalingSettings, context)\n            : undefined,\n        ReplicaProvisionedWriteCapacityUnits: __expectLong(output.ReplicaProvisionedWriteCapacityUnits),\n        ReplicaStatus: __expectString(output.ReplicaStatus),\n        ReplicaTableClassSummary: output.ReplicaTableClassSummary != null\n            ? deserializeAws_json1_0TableClassSummary(output.ReplicaTableClassSummary, context)\n            : undefined,\n    };\n};\nconst deserializeAws_json1_0ReplicaSettingsDescriptionList = (output, context) => {\n    const retVal = (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_json1_0ReplicaSettingsDescription(entry, context);\n    });\n    return retVal;\n};\nconst deserializeAws_json1_0RequestLimitExceeded = (output, context) => {\n    return {\n        message: __expectString(output.message),\n    };\n};\nconst deserializeAws_json1_0ResourceInUseException = (output, context) => {\n    return {\n        message: __expectString(output.message),\n    };\n};\nconst deserializeAws_json1_0ResourceNotFoundException = (output, context) => {\n    return {\n        message: __expectString(output.message),\n    };\n};\nconst deserializeAws_json1_0RestoreSummary = (output, context) => {\n    return {\n        RestoreDateTime: output.RestoreDateTime != null\n            ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.RestoreDateTime)))\n            : undefined,\n        RestoreInProgress: __expectBoolean(output.RestoreInProgress),\n        SourceBackupArn: __expectString(output.SourceBackupArn),\n        SourceTableArn: __expectString(output.SourceTableArn),\n    };\n};\nconst deserializeAws_json1_0RestoreTableFromBackupOutput = (output, context) => {\n    return {\n        TableDescription: output.TableDescription != null\n            ? deserializeAws_json1_0TableDescription(output.TableDescription, context)\n            : undefined,\n    };\n};\nconst deserializeAws_json1_0RestoreTableToPointInTimeOutput = (output, context) => {\n    return {\n        TableDescription: output.TableDescription != null\n            ? deserializeAws_json1_0TableDescription(output.TableDescription, context)\n            : undefined,\n    };\n};\nconst deserializeAws_json1_0S3BucketSource = (output, context) => {\n    return {\n        S3Bucket: __expectString(output.S3Bucket),\n        S3BucketOwner: __expectString(output.S3BucketOwner),\n        S3KeyPrefix: __expectString(output.S3KeyPrefix),\n    };\n};\nconst deserializeAws_json1_0ScanOutput = (output, context) => {\n    return {\n        ConsumedCapacity: output.ConsumedCapacity != null\n            ? deserializeAws_json1_0ConsumedCapacity(output.ConsumedCapacity, context)\n            : undefined,\n        Count: __expectInt32(output.Count),\n        Items: output.Items != null ? deserializeAws_json1_0ItemList(output.Items, context) : undefined,\n        LastEvaluatedKey: output.LastEvaluatedKey != null ? deserializeAws_json1_0Key(output.LastEvaluatedKey, context) : undefined,\n        ScannedCount: __expectInt32(output.ScannedCount),\n    };\n};\nconst deserializeAws_json1_0SecondaryIndexesCapacityMap = (output, context) => {\n    return Object.entries(output).reduce((acc, [key, value]) => {\n        if (value === null) {\n            return acc;\n        }\n        acc[key] = deserializeAws_json1_0Capacity(value, context);\n        return acc;\n    }, {});\n};\nconst deserializeAws_json1_0SourceTableDetails = (output, context) => {\n    return {\n        BillingMode: __expectString(output.BillingMode),\n        ItemCount: __expectLong(output.ItemCount),\n        KeySchema: output.KeySchema != null ? deserializeAws_json1_0KeySchema(output.KeySchema, context) : undefined,\n        ProvisionedThroughput: output.ProvisionedThroughput != null\n            ? deserializeAws_json1_0ProvisionedThroughput(output.ProvisionedThroughput, context)\n            : undefined,\n        TableArn: __expectString(output.TableArn),\n        TableCreationDateTime: output.TableCreationDateTime != null\n            ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.TableCreationDateTime)))\n            : undefined,\n        TableId: __expectString(output.TableId),\n        TableName: __expectString(output.TableName),\n        TableSizeBytes: __expectLong(output.TableSizeBytes),\n    };\n};\nconst deserializeAws_json1_0SourceTableFeatureDetails = (output, context) => {\n    return {\n        GlobalSecondaryIndexes: output.GlobalSecondaryIndexes != null\n            ? deserializeAws_json1_0GlobalSecondaryIndexes(output.GlobalSecondaryIndexes, context)\n            : undefined,\n        LocalSecondaryIndexes: output.LocalSecondaryIndexes != null\n            ? deserializeAws_json1_0LocalSecondaryIndexes(output.LocalSecondaryIndexes, context)\n            : undefined,\n        SSEDescription: output.SSEDescription != null ? deserializeAws_json1_0SSEDescription(output.SSEDescription, context) : undefined,\n        StreamDescription: output.StreamDescription != null\n            ? deserializeAws_json1_0StreamSpecification(output.StreamDescription, context)\n            : undefined,\n        TimeToLiveDescription: output.TimeToLiveDescription != null\n            ? deserializeAws_json1_0TimeToLiveDescription(output.TimeToLiveDescription, context)\n            : undefined,\n    };\n};\nconst deserializeAws_json1_0SSEDescription = (output, context) => {\n    return {\n        InaccessibleEncryptionDateTime: output.InaccessibleEncryptionDateTime != null\n            ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.InaccessibleEncryptionDateTime)))\n            : undefined,\n        KMSMasterKeyArn: __expectString(output.KMSMasterKeyArn),\n        SSEType: __expectString(output.SSEType),\n        Status: __expectString(output.Status),\n    };\n};\nconst deserializeAws_json1_0SSESpecification = (output, context) => {\n    return {\n        Enabled: __expectBoolean(output.Enabled),\n        KMSMasterKeyId: __expectString(output.KMSMasterKeyId),\n        SSEType: __expectString(output.SSEType),\n    };\n};\nconst deserializeAws_json1_0StreamSpecification = (output, context) => {\n    return {\n        StreamEnabled: __expectBoolean(output.StreamEnabled),\n        StreamViewType: __expectString(output.StreamViewType),\n    };\n};\nconst deserializeAws_json1_0StringSetAttributeValue = (output, context) => {\n    const retVal = (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return __expectString(entry);\n    });\n    return retVal;\n};\nconst deserializeAws_json1_0TableAlreadyExistsException = (output, context) => {\n    return {\n        message: __expectString(output.message),\n    };\n};\nconst deserializeAws_json1_0TableAutoScalingDescription = (output, context) => {\n    return {\n        Replicas: output.Replicas != null\n            ? deserializeAws_json1_0ReplicaAutoScalingDescriptionList(output.Replicas, context)\n            : undefined,\n        TableName: __expectString(output.TableName),\n        TableStatus: __expectString(output.TableStatus),\n    };\n};\nconst deserializeAws_json1_0TableClassSummary = (output, context) => {\n    return {\n        LastUpdateDateTime: output.LastUpdateDateTime != null\n            ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.LastUpdateDateTime)))\n            : undefined,\n        TableClass: __expectString(output.TableClass),\n    };\n};\nconst deserializeAws_json1_0TableCreationParameters = (output, context) => {\n    return {\n        AttributeDefinitions: output.AttributeDefinitions != null\n            ? deserializeAws_json1_0AttributeDefinitions(output.AttributeDefinitions, context)\n            : undefined,\n        BillingMode: __expectString(output.BillingMode),\n        GlobalSecondaryIndexes: output.GlobalSecondaryIndexes != null\n            ? deserializeAws_json1_0GlobalSecondaryIndexList(output.GlobalSecondaryIndexes, context)\n            : undefined,\n        KeySchema: output.KeySchema != null ? deserializeAws_json1_0KeySchema(output.KeySchema, context) : undefined,\n        ProvisionedThroughput: output.ProvisionedThroughput != null\n            ? deserializeAws_json1_0ProvisionedThroughput(output.ProvisionedThroughput, context)\n            : undefined,\n        SSESpecification: output.SSESpecification != null\n            ? deserializeAws_json1_0SSESpecification(output.SSESpecification, context)\n            : undefined,\n        TableName: __expectString(output.TableName),\n    };\n};\nconst deserializeAws_json1_0TableDescription = (output, context) => {\n    return {\n        ArchivalSummary: output.ArchivalSummary != null\n            ? deserializeAws_json1_0ArchivalSummary(output.ArchivalSummary, context)\n            : undefined,\n        AttributeDefinitions: output.AttributeDefinitions != null\n            ? deserializeAws_json1_0AttributeDefinitions(output.AttributeDefinitions, context)\n            : undefined,\n        BillingModeSummary: output.BillingModeSummary != null\n            ? deserializeAws_json1_0BillingModeSummary(output.BillingModeSummary, context)\n            : undefined,\n        CreationDateTime: output.CreationDateTime != null\n            ? __expectNonNull(__parseEpochTimestamp(__expectNumber(output.CreationDateTime)))\n            : undefined,\n        GlobalSecondaryIndexes: output.GlobalSecondaryIndexes != null\n            ? deserializeAws_json1_0GlobalSecondaryIndexDescriptionList(output.GlobalSecondaryIndexes, context)\n            : undefined,\n        GlobalTableVersion: __expectString(output.GlobalTableVersion),\n        ItemCount: __expectLong(output.ItemCount),\n        KeySchema: output.KeySchema != null ? deserializeAws_json1_0KeySchema(output.KeySchema, context) : undefined,\n        LatestStreamArn: __expectString(output.LatestStreamArn),\n        LatestStreamLabel: __expectString(output.LatestStreamLabel),\n        LocalSecondaryIndexes: output.LocalSecondaryIndexes != null\n            ? deserializeAws_json1_0LocalSecondaryIndexDescriptionList(output.LocalSecondaryIndexes, context)\n            : undefined,\n        ProvisionedThroughput: output.ProvisionedThroughput != null\n            ? deserializeAws_json1_0ProvisionedThroughputDescription(output.ProvisionedThroughput, context)\n            : undefined,\n        Replicas: output.Replicas != null ? deserializeAws_json1_0ReplicaDescriptionList(output.Replicas, context) : undefined,\n        RestoreSummary: output.RestoreSummary != null ? deserializeAws_json1_0RestoreSummary(output.RestoreSummary, context) : undefined,\n        SSEDescription: output.SSEDescription != null ? deserializeAws_json1_0SSEDescription(output.SSEDescription, context) : undefined,\n        StreamSpecification: output.StreamSpecification != null\n            ? deserializeAws_json1_0StreamSpecification(output.StreamSpecification, context)\n            : undefined,\n        TableArn: __expectString(output.TableArn),\n        TableClassSummary: output.TableClassSummary != null\n            ? deserializeAws_json1_0TableClassSummary(output.TableClassSummary, context)\n            : undefined,\n        TableId: __expectString(output.TableId),\n        TableName: __expectString(output.TableName),\n        TableSizeBytes: __expectLong(output.TableSizeBytes),\n        TableStatus: __expectString(output.TableStatus),\n    };\n};\nconst deserializeAws_json1_0TableInUseException = (output, context) => {\n    return {\n        message: __expectString(output.message),\n    };\n};\nconst deserializeAws_json1_0TableNameList = (output, context) => {\n    const retVal = (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return __expectString(entry);\n    });\n    return retVal;\n};\nconst deserializeAws_json1_0TableNotFoundException = (output, context) => {\n    return {\n        message: __expectString(output.message),\n    };\n};\nconst deserializeAws_json1_0Tag = (output, context) => {\n    return {\n        Key: __expectString(output.Key),\n        Value: __expectString(output.Value),\n    };\n};\nconst deserializeAws_json1_0TagList = (output, context) => {\n    const retVal = (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_json1_0Tag(entry, context);\n    });\n    return retVal;\n};\nconst deserializeAws_json1_0TimeToLiveDescription = (output, context) => {\n    return {\n        AttributeName: __expectString(output.AttributeName),\n        TimeToLiveStatus: __expectString(output.TimeToLiveStatus),\n    };\n};\nconst deserializeAws_json1_0TimeToLiveSpecification = (output, context) => {\n    return {\n        AttributeName: __expectString(output.AttributeName),\n        Enabled: __expectBoolean(output.Enabled),\n    };\n};\nconst deserializeAws_json1_0TransactGetItemsOutput = (output, context) => {\n    return {\n        ConsumedCapacity: output.ConsumedCapacity != null\n            ? deserializeAws_json1_0ConsumedCapacityMultiple(output.ConsumedCapacity, context)\n            : undefined,\n        Responses: output.Responses != null ? deserializeAws_json1_0ItemResponseList(output.Responses, context) : undefined,\n    };\n};\nconst deserializeAws_json1_0TransactionCanceledException = (output, context) => {\n    return {\n        CancellationReasons: output.CancellationReasons != null\n            ? deserializeAws_json1_0CancellationReasonList(output.CancellationReasons, context)\n            : undefined,\n        Message: __expectString(output.Message),\n    };\n};\nconst deserializeAws_json1_0TransactionConflictException = (output, context) => {\n    return {\n        message: __expectString(output.message),\n    };\n};\nconst deserializeAws_json1_0TransactionInProgressException = (output, context) => {\n    return {\n        Message: __expectString(output.Message),\n    };\n};\nconst deserializeAws_json1_0TransactWriteItemsOutput = (output, context) => {\n    return {\n        ConsumedCapacity: output.ConsumedCapacity != null\n            ? deserializeAws_json1_0ConsumedCapacityMultiple(output.ConsumedCapacity, context)\n            : undefined,\n        ItemCollectionMetrics: output.ItemCollectionMetrics != null\n            ? deserializeAws_json1_0ItemCollectionMetricsPerTable(output.ItemCollectionMetrics, context)\n            : undefined,\n    };\n};\nconst deserializeAws_json1_0UpdateContinuousBackupsOutput = (output, context) => {\n    return {\n        ContinuousBackupsDescription: output.ContinuousBackupsDescription != null\n            ? deserializeAws_json1_0ContinuousBackupsDescription(output.ContinuousBackupsDescription, context)\n            : undefined,\n    };\n};\nconst deserializeAws_json1_0UpdateContributorInsightsOutput = (output, context) => {\n    return {\n        ContributorInsightsStatus: __expectString(output.ContributorInsightsStatus),\n        IndexName: __expectString(output.IndexName),\n        TableName: __expectString(output.TableName),\n    };\n};\nconst deserializeAws_json1_0UpdateGlobalTableOutput = (output, context) => {\n    return {\n        GlobalTableDescription: output.GlobalTableDescription != null\n            ? deserializeAws_json1_0GlobalTableDescription(output.GlobalTableDescription, context)\n            : undefined,\n    };\n};\nconst deserializeAws_json1_0UpdateGlobalTableSettingsOutput = (output, context) => {\n    return {\n        GlobalTableName: __expectString(output.GlobalTableName),\n        ReplicaSettings: output.ReplicaSettings != null\n            ? deserializeAws_json1_0ReplicaSettingsDescriptionList(output.ReplicaSettings, context)\n            : undefined,\n    };\n};\nconst deserializeAws_json1_0UpdateItemOutput = (output, context) => {\n    return {\n        Attributes: output.Attributes != null ? deserializeAws_json1_0AttributeMap(output.Attributes, context) : undefined,\n        ConsumedCapacity: output.ConsumedCapacity != null\n            ? deserializeAws_json1_0ConsumedCapacity(output.ConsumedCapacity, context)\n            : undefined,\n        ItemCollectionMetrics: output.ItemCollectionMetrics != null\n            ? deserializeAws_json1_0ItemCollectionMetrics(output.ItemCollectionMetrics, context)\n            : undefined,\n    };\n};\nconst deserializeAws_json1_0UpdateTableOutput = (output, context) => {\n    return {\n        TableDescription: output.TableDescription != null\n            ? deserializeAws_json1_0TableDescription(output.TableDescription, context)\n            : undefined,\n    };\n};\nconst deserializeAws_json1_0UpdateTableReplicaAutoScalingOutput = (output, context) => {\n    return {\n        TableAutoScalingDescription: output.TableAutoScalingDescription != null\n            ? deserializeAws_json1_0TableAutoScalingDescription(output.TableAutoScalingDescription, context)\n            : undefined,\n    };\n};\nconst deserializeAws_json1_0UpdateTimeToLiveOutput = (output, context) => {\n    return {\n        TimeToLiveSpecification: output.TimeToLiveSpecification != null\n            ? deserializeAws_json1_0TimeToLiveSpecification(output.TimeToLiveSpecification, context)\n            : undefined,\n    };\n};\nconst deserializeAws_json1_0WriteRequest = (output, context) => {\n    return {\n        DeleteRequest: output.DeleteRequest != null ? deserializeAws_json1_0DeleteRequest(output.DeleteRequest, context) : undefined,\n        PutRequest: output.PutRequest != null ? deserializeAws_json1_0PutRequest(output.PutRequest, context) : undefined,\n    };\n};\nconst deserializeAws_json1_0WriteRequests = (output, context) => {\n    const retVal = (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_json1_0WriteRequest(entry, context);\n    });\n    return retVal;\n};\nconst deserializeMetadata = (output) => ({\n    httpStatusCode: output.statusCode,\n    requestId: output.headers[\"x-amzn-requestid\"] ?? output.headers[\"x-amzn-request-id\"] ?? output.headers[\"x-amz-request-id\"],\n    extendedRequestId: output.headers[\"x-amz-id-2\"],\n    cfId: output.headers[\"x-amz-cf-id\"],\n});\nconst collectBody = (streamBody = new Uint8Array(), context) => {\n    if (streamBody instanceof Uint8Array) {\n        return Promise.resolve(streamBody);\n    }\n    return context.streamCollector(streamBody) || Promise.resolve(new Uint8Array());\n};\nconst collectBodyString = (streamBody, context) => collectBody(streamBody, context).then((body) => context.utf8Encoder(body));\nconst buildHttpRpcRequest = async (context, headers, path, resolvedHostname, body) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const contents = {\n        protocol,\n        hostname,\n        port,\n        method: \"POST\",\n        path: basePath.endsWith(\"/\") ? basePath.slice(0, -1) + path : basePath + path,\n        headers,\n    };\n    if (resolvedHostname !== undefined) {\n        contents.hostname = resolvedHostname;\n    }\n    if (body !== undefined) {\n        contents.body = body;\n    }\n    return new __HttpRequest(contents);\n};\nconst parseBody = (streamBody, context) => collectBodyString(streamBody, context).then((encoded) => {\n    if (encoded.length) {\n        return JSON.parse(encoded);\n    }\n    return {};\n});\nconst parseErrorBody = async (errorBody, context) => {\n    const value = await parseBody(errorBody, context);\n    value.message = value.message ?? value.Message;\n    return value;\n};\nconst loadRestJsonErrorCode = (output, data) => {\n    const findKey = (object, key) => Object.keys(object).find((k) => k.toLowerCase() === key.toLowerCase());\n    const sanitizeErrorCode = (rawValue) => {\n        let cleanValue = rawValue;\n        if (typeof cleanValue === \"number\") {\n            cleanValue = cleanValue.toString();\n        }\n        if (cleanValue.indexOf(\",\") >= 0) {\n            cleanValue = cleanValue.split(\",\")[0];\n        }\n        if (cleanValue.indexOf(\":\") >= 0) {\n            cleanValue = cleanValue.split(\":\")[0];\n        }\n        if (cleanValue.indexOf(\"#\") >= 0) {\n            cleanValue = cleanValue.split(\"#\")[1];\n        }\n        return cleanValue;\n    };\n    const headerKey = findKey(output.headers, \"x-amzn-errortype\");\n    if (headerKey !== undefined) {\n        return sanitizeErrorCode(output.headers[headerKey]);\n    }\n    if (data.code !== undefined) {\n        return sanitizeErrorCode(data.code);\n    }\n    if (data[\"__type\"] !== undefined) {\n        return sanitizeErrorCode(data[\"__type\"]);\n    }\n};\n","import { getEndpointPlugin } from \"@aws-sdk/middleware-endpoint\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\nimport { DescribeEndpointsRequestFilterSensitiveLog, DescribeEndpointsResponseFilterSensitiveLog, } from \"../models/models_0\";\nimport { deserializeAws_json1_0DescribeEndpointsCommand, serializeAws_json1_0DescribeEndpointsCommand, } from \"../protocols/Aws_json1_0\";\nexport class DescribeEndpointsCommand extends $Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    static getEndpointParameterInstructions() {\n        return {\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use(getEndpointPlugin(configuration, DescribeEndpointsCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"DynamoDBClient\";\n        const commandName = \"DescribeEndpointsCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: DescribeEndpointsRequestFilterSensitiveLog,\n            outputFilterSensitiveLog: DescribeEndpointsResponseFilterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return serializeAws_json1_0DescribeEndpointsCommand(input, context);\n    }\n    deserialize(output, context) {\n        return deserializeAws_json1_0DescribeEndpointsCommand(output, context);\n    }\n}\n","export const resolveClientEndpointParameters = (options) => {\n    return {\n        ...options,\n        useDualstackEndpoint: options.useDualstackEndpoint ?? false,\n        useFipsEndpoint: options.useFipsEndpoint ?? false,\n        defaultSigningName: \"dynamodb\",\n    };\n};\n","import { ServiceException as __ServiceException, } from \"@aws-sdk/smithy-client\";\nexport class STSServiceException extends __ServiceException {\n    constructor(options) {\n        super(options);\n        Object.setPrototypeOf(this, STSServiceException.prototype);\n    }\n}\n","import { STSServiceException as __BaseException } from \"./STSServiceException\";\nexport class ExpiredTokenException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"ExpiredTokenException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"ExpiredTokenException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, ExpiredTokenException.prototype);\n    }\n}\nexport class MalformedPolicyDocumentException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"MalformedPolicyDocumentException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"MalformedPolicyDocumentException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, MalformedPolicyDocumentException.prototype);\n    }\n}\nexport class PackedPolicyTooLargeException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"PackedPolicyTooLargeException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"PackedPolicyTooLargeException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, PackedPolicyTooLargeException.prototype);\n    }\n}\nexport class RegionDisabledException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"RegionDisabledException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"RegionDisabledException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, RegionDisabledException.prototype);\n    }\n}\nexport class IDPRejectedClaimException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"IDPRejectedClaimException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"IDPRejectedClaimException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, IDPRejectedClaimException.prototype);\n    }\n}\nexport class InvalidIdentityTokenException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"InvalidIdentityTokenException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"InvalidIdentityTokenException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidIdentityTokenException.prototype);\n    }\n}\nexport class IDPCommunicationErrorException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"IDPCommunicationErrorException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"IDPCommunicationErrorException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, IDPCommunicationErrorException.prototype);\n    }\n}\nexport class InvalidAuthorizationMessageException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"InvalidAuthorizationMessageException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"InvalidAuthorizationMessageException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidAuthorizationMessageException.prototype);\n    }\n}\nexport const AssumedRoleUserFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const PolicyDescriptorTypeFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const TagFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const AssumeRoleRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const CredentialsFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const AssumeRoleResponseFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const AssumeRoleWithSAMLRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const AssumeRoleWithSAMLResponseFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const AssumeRoleWithWebIdentityRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const AssumeRoleWithWebIdentityResponseFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const DecodeAuthorizationMessageRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const DecodeAuthorizationMessageResponseFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const GetAccessKeyInfoRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const GetAccessKeyInfoResponseFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const GetCallerIdentityRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const GetCallerIdentityResponseFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const GetFederationTokenRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const FederatedUserFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const GetFederationTokenResponseFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const GetSessionTokenRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const GetSessionTokenResponseFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\n","import { HttpRequest as __HttpRequest } from \"@aws-sdk/protocol-http\";\nimport { decorateServiceException as __decorateServiceException, expectNonNull as __expectNonNull, expectString as __expectString, extendedEncodeURIComponent as __extendedEncodeURIComponent, getValueFromTextNode as __getValueFromTextNode, parseRfc3339DateTime as __parseRfc3339DateTime, strictParseInt32 as __strictParseInt32, throwDefaultError, } from \"@aws-sdk/smithy-client\";\nimport { XMLParser } from \"fast-xml-parser\";\nimport { ExpiredTokenException, IDPCommunicationErrorException, IDPRejectedClaimException, InvalidAuthorizationMessageException, InvalidIdentityTokenException, MalformedPolicyDocumentException, PackedPolicyTooLargeException, RegionDisabledException, } from \"../models/models_0\";\nimport { STSServiceException as __BaseException } from \"../models/STSServiceException\";\nexport const serializeAws_queryAssumeRoleCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_queryAssumeRoleRequest(input, context),\n        Action: \"AssumeRole\",\n        Version: \"2011-06-15\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_queryAssumeRoleWithSAMLCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_queryAssumeRoleWithSAMLRequest(input, context),\n        Action: \"AssumeRoleWithSAML\",\n        Version: \"2011-06-15\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_queryAssumeRoleWithWebIdentityCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_queryAssumeRoleWithWebIdentityRequest(input, context),\n        Action: \"AssumeRoleWithWebIdentity\",\n        Version: \"2011-06-15\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_queryDecodeAuthorizationMessageCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_queryDecodeAuthorizationMessageRequest(input, context),\n        Action: \"DecodeAuthorizationMessage\",\n        Version: \"2011-06-15\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_queryGetAccessKeyInfoCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_queryGetAccessKeyInfoRequest(input, context),\n        Action: \"GetAccessKeyInfo\",\n        Version: \"2011-06-15\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_queryGetCallerIdentityCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_queryGetCallerIdentityRequest(input, context),\n        Action: \"GetCallerIdentity\",\n        Version: \"2011-06-15\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_queryGetFederationTokenCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_queryGetFederationTokenRequest(input, context),\n        Action: \"GetFederationToken\",\n        Version: \"2011-06-15\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const serializeAws_queryGetSessionTokenCommand = async (input, context) => {\n    const headers = {\n        \"content-type\": \"application/x-www-form-urlencoded\",\n    };\n    let body;\n    body = buildFormUrlencodedString({\n        ...serializeAws_queryGetSessionTokenRequest(input, context),\n        Action: \"GetSessionToken\",\n        Version: \"2011-06-15\",\n    });\n    return buildHttpRpcRequest(context, headers, \"/\", undefined, body);\n};\nexport const deserializeAws_queryAssumeRoleCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_queryAssumeRoleCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_queryAssumeRoleResponse(data.AssumeRoleResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nconst deserializeAws_queryAssumeRoleCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"ExpiredTokenException\":\n        case \"com.amazonaws.sts#ExpiredTokenException\":\n            throw await deserializeAws_queryExpiredTokenExceptionResponse(parsedOutput, context);\n        case \"MalformedPolicyDocument\":\n        case \"com.amazonaws.sts#MalformedPolicyDocumentException\":\n            throw await deserializeAws_queryMalformedPolicyDocumentExceptionResponse(parsedOutput, context);\n        case \"PackedPolicyTooLarge\":\n        case \"com.amazonaws.sts#PackedPolicyTooLargeException\":\n            throw await deserializeAws_queryPackedPolicyTooLargeExceptionResponse(parsedOutput, context);\n        case \"RegionDisabledException\":\n        case \"com.amazonaws.sts#RegionDisabledException\":\n            throw await deserializeAws_queryRegionDisabledExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            throwDefaultError({\n                output,\n                parsedBody: parsedBody.Error,\n                exceptionCtor: __BaseException,\n                errorCode,\n            });\n    }\n};\nexport const deserializeAws_queryAssumeRoleWithSAMLCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_queryAssumeRoleWithSAMLCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_queryAssumeRoleWithSAMLResponse(data.AssumeRoleWithSAMLResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nconst deserializeAws_queryAssumeRoleWithSAMLCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"ExpiredTokenException\":\n        case \"com.amazonaws.sts#ExpiredTokenException\":\n            throw await deserializeAws_queryExpiredTokenExceptionResponse(parsedOutput, context);\n        case \"IDPRejectedClaim\":\n        case \"com.amazonaws.sts#IDPRejectedClaimException\":\n            throw await deserializeAws_queryIDPRejectedClaimExceptionResponse(parsedOutput, context);\n        case \"InvalidIdentityToken\":\n        case \"com.amazonaws.sts#InvalidIdentityTokenException\":\n            throw await deserializeAws_queryInvalidIdentityTokenExceptionResponse(parsedOutput, context);\n        case \"MalformedPolicyDocument\":\n        case \"com.amazonaws.sts#MalformedPolicyDocumentException\":\n            throw await deserializeAws_queryMalformedPolicyDocumentExceptionResponse(parsedOutput, context);\n        case \"PackedPolicyTooLarge\":\n        case \"com.amazonaws.sts#PackedPolicyTooLargeException\":\n            throw await deserializeAws_queryPackedPolicyTooLargeExceptionResponse(parsedOutput, context);\n        case \"RegionDisabledException\":\n        case \"com.amazonaws.sts#RegionDisabledException\":\n            throw await deserializeAws_queryRegionDisabledExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            throwDefaultError({\n                output,\n                parsedBody: parsedBody.Error,\n                exceptionCtor: __BaseException,\n                errorCode,\n            });\n    }\n};\nexport const deserializeAws_queryAssumeRoleWithWebIdentityCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_queryAssumeRoleWithWebIdentityCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_queryAssumeRoleWithWebIdentityResponse(data.AssumeRoleWithWebIdentityResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nconst deserializeAws_queryAssumeRoleWithWebIdentityCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"ExpiredTokenException\":\n        case \"com.amazonaws.sts#ExpiredTokenException\":\n            throw await deserializeAws_queryExpiredTokenExceptionResponse(parsedOutput, context);\n        case \"IDPCommunicationError\":\n        case \"com.amazonaws.sts#IDPCommunicationErrorException\":\n            throw await deserializeAws_queryIDPCommunicationErrorExceptionResponse(parsedOutput, context);\n        case \"IDPRejectedClaim\":\n        case \"com.amazonaws.sts#IDPRejectedClaimException\":\n            throw await deserializeAws_queryIDPRejectedClaimExceptionResponse(parsedOutput, context);\n        case \"InvalidIdentityToken\":\n        case \"com.amazonaws.sts#InvalidIdentityTokenException\":\n            throw await deserializeAws_queryInvalidIdentityTokenExceptionResponse(parsedOutput, context);\n        case \"MalformedPolicyDocument\":\n        case \"com.amazonaws.sts#MalformedPolicyDocumentException\":\n            throw await deserializeAws_queryMalformedPolicyDocumentExceptionResponse(parsedOutput, context);\n        case \"PackedPolicyTooLarge\":\n        case \"com.amazonaws.sts#PackedPolicyTooLargeException\":\n            throw await deserializeAws_queryPackedPolicyTooLargeExceptionResponse(parsedOutput, context);\n        case \"RegionDisabledException\":\n        case \"com.amazonaws.sts#RegionDisabledException\":\n            throw await deserializeAws_queryRegionDisabledExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            throwDefaultError({\n                output,\n                parsedBody: parsedBody.Error,\n                exceptionCtor: __BaseException,\n                errorCode,\n            });\n    }\n};\nexport const deserializeAws_queryDecodeAuthorizationMessageCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_queryDecodeAuthorizationMessageCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_queryDecodeAuthorizationMessageResponse(data.DecodeAuthorizationMessageResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nconst deserializeAws_queryDecodeAuthorizationMessageCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InvalidAuthorizationMessageException\":\n        case \"com.amazonaws.sts#InvalidAuthorizationMessageException\":\n            throw await deserializeAws_queryInvalidAuthorizationMessageExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            throwDefaultError({\n                output,\n                parsedBody: parsedBody.Error,\n                exceptionCtor: __BaseException,\n                errorCode,\n            });\n    }\n};\nexport const deserializeAws_queryGetAccessKeyInfoCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_queryGetAccessKeyInfoCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_queryGetAccessKeyInfoResponse(data.GetAccessKeyInfoResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nconst deserializeAws_queryGetAccessKeyInfoCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    const parsedBody = parsedOutput.body;\n    throwDefaultError({\n        output,\n        parsedBody: parsedBody.Error,\n        exceptionCtor: __BaseException,\n        errorCode,\n    });\n};\nexport const deserializeAws_queryGetCallerIdentityCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_queryGetCallerIdentityCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_queryGetCallerIdentityResponse(data.GetCallerIdentityResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nconst deserializeAws_queryGetCallerIdentityCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    const parsedBody = parsedOutput.body;\n    throwDefaultError({\n        output,\n        parsedBody: parsedBody.Error,\n        exceptionCtor: __BaseException,\n        errorCode,\n    });\n};\nexport const deserializeAws_queryGetFederationTokenCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_queryGetFederationTokenCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_queryGetFederationTokenResponse(data.GetFederationTokenResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nconst deserializeAws_queryGetFederationTokenCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"MalformedPolicyDocument\":\n        case \"com.amazonaws.sts#MalformedPolicyDocumentException\":\n            throw await deserializeAws_queryMalformedPolicyDocumentExceptionResponse(parsedOutput, context);\n        case \"PackedPolicyTooLarge\":\n        case \"com.amazonaws.sts#PackedPolicyTooLargeException\":\n            throw await deserializeAws_queryPackedPolicyTooLargeExceptionResponse(parsedOutput, context);\n        case \"RegionDisabledException\":\n        case \"com.amazonaws.sts#RegionDisabledException\":\n            throw await deserializeAws_queryRegionDisabledExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            throwDefaultError({\n                output,\n                parsedBody: parsedBody.Error,\n                exceptionCtor: __BaseException,\n                errorCode,\n            });\n    }\n};\nexport const deserializeAws_queryGetSessionTokenCommand = async (output, context) => {\n    if (output.statusCode >= 300) {\n        return deserializeAws_queryGetSessionTokenCommandError(output, context);\n    }\n    const data = await parseBody(output.body, context);\n    let contents = {};\n    contents = deserializeAws_queryGetSessionTokenResponse(data.GetSessionTokenResult, context);\n    const response = {\n        $metadata: deserializeMetadata(output),\n        ...contents,\n    };\n    return Promise.resolve(response);\n};\nconst deserializeAws_queryGetSessionTokenCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadQueryErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"RegionDisabledException\":\n        case \"com.amazonaws.sts#RegionDisabledException\":\n            throw await deserializeAws_queryRegionDisabledExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            throwDefaultError({\n                output,\n                parsedBody: parsedBody.Error,\n                exceptionCtor: __BaseException,\n                errorCode,\n            });\n    }\n};\nconst deserializeAws_queryExpiredTokenExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_queryExpiredTokenException(body.Error, context);\n    const exception = new ExpiredTokenException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst deserializeAws_queryIDPCommunicationErrorExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_queryIDPCommunicationErrorException(body.Error, context);\n    const exception = new IDPCommunicationErrorException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst deserializeAws_queryIDPRejectedClaimExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_queryIDPRejectedClaimException(body.Error, context);\n    const exception = new IDPRejectedClaimException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst deserializeAws_queryInvalidAuthorizationMessageExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_queryInvalidAuthorizationMessageException(body.Error, context);\n    const exception = new InvalidAuthorizationMessageException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst deserializeAws_queryInvalidIdentityTokenExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_queryInvalidIdentityTokenException(body.Error, context);\n    const exception = new InvalidIdentityTokenException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst deserializeAws_queryMalformedPolicyDocumentExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_queryMalformedPolicyDocumentException(body.Error, context);\n    const exception = new MalformedPolicyDocumentException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst deserializeAws_queryPackedPolicyTooLargeExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_queryPackedPolicyTooLargeException(body.Error, context);\n    const exception = new PackedPolicyTooLargeException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst deserializeAws_queryRegionDisabledExceptionResponse = async (parsedOutput, context) => {\n    const body = parsedOutput.body;\n    const deserialized = deserializeAws_queryRegionDisabledException(body.Error, context);\n    const exception = new RegionDisabledException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...deserialized,\n    });\n    return __decorateServiceException(exception, body);\n};\nconst serializeAws_queryAssumeRoleRequest = (input, context) => {\n    const entries = {};\n    if (input.RoleArn != null) {\n        entries[\"RoleArn\"] = input.RoleArn;\n    }\n    if (input.RoleSessionName != null) {\n        entries[\"RoleSessionName\"] = input.RoleSessionName;\n    }\n    if (input.PolicyArns != null) {\n        const memberEntries = serializeAws_querypolicyDescriptorListType(input.PolicyArns, context);\n        if (input.PolicyArns?.length === 0) {\n            entries.PolicyArns = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `PolicyArns.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input.Policy != null) {\n        entries[\"Policy\"] = input.Policy;\n    }\n    if (input.DurationSeconds != null) {\n        entries[\"DurationSeconds\"] = input.DurationSeconds;\n    }\n    if (input.Tags != null) {\n        const memberEntries = serializeAws_querytagListType(input.Tags, context);\n        if (input.Tags?.length === 0) {\n            entries.Tags = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `Tags.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input.TransitiveTagKeys != null) {\n        const memberEntries = serializeAws_querytagKeyListType(input.TransitiveTagKeys, context);\n        if (input.TransitiveTagKeys?.length === 0) {\n            entries.TransitiveTagKeys = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `TransitiveTagKeys.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input.ExternalId != null) {\n        entries[\"ExternalId\"] = input.ExternalId;\n    }\n    if (input.SerialNumber != null) {\n        entries[\"SerialNumber\"] = input.SerialNumber;\n    }\n    if (input.TokenCode != null) {\n        entries[\"TokenCode\"] = input.TokenCode;\n    }\n    if (input.SourceIdentity != null) {\n        entries[\"SourceIdentity\"] = input.SourceIdentity;\n    }\n    return entries;\n};\nconst serializeAws_queryAssumeRoleWithSAMLRequest = (input, context) => {\n    const entries = {};\n    if (input.RoleArn != null) {\n        entries[\"RoleArn\"] = input.RoleArn;\n    }\n    if (input.PrincipalArn != null) {\n        entries[\"PrincipalArn\"] = input.PrincipalArn;\n    }\n    if (input.SAMLAssertion != null) {\n        entries[\"SAMLAssertion\"] = input.SAMLAssertion;\n    }\n    if (input.PolicyArns != null) {\n        const memberEntries = serializeAws_querypolicyDescriptorListType(input.PolicyArns, context);\n        if (input.PolicyArns?.length === 0) {\n            entries.PolicyArns = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `PolicyArns.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input.Policy != null) {\n        entries[\"Policy\"] = input.Policy;\n    }\n    if (input.DurationSeconds != null) {\n        entries[\"DurationSeconds\"] = input.DurationSeconds;\n    }\n    return entries;\n};\nconst serializeAws_queryAssumeRoleWithWebIdentityRequest = (input, context) => {\n    const entries = {};\n    if (input.RoleArn != null) {\n        entries[\"RoleArn\"] = input.RoleArn;\n    }\n    if (input.RoleSessionName != null) {\n        entries[\"RoleSessionName\"] = input.RoleSessionName;\n    }\n    if (input.WebIdentityToken != null) {\n        entries[\"WebIdentityToken\"] = input.WebIdentityToken;\n    }\n    if (input.ProviderId != null) {\n        entries[\"ProviderId\"] = input.ProviderId;\n    }\n    if (input.PolicyArns != null) {\n        const memberEntries = serializeAws_querypolicyDescriptorListType(input.PolicyArns, context);\n        if (input.PolicyArns?.length === 0) {\n            entries.PolicyArns = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `PolicyArns.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input.Policy != null) {\n        entries[\"Policy\"] = input.Policy;\n    }\n    if (input.DurationSeconds != null) {\n        entries[\"DurationSeconds\"] = input.DurationSeconds;\n    }\n    return entries;\n};\nconst serializeAws_queryDecodeAuthorizationMessageRequest = (input, context) => {\n    const entries = {};\n    if (input.EncodedMessage != null) {\n        entries[\"EncodedMessage\"] = input.EncodedMessage;\n    }\n    return entries;\n};\nconst serializeAws_queryGetAccessKeyInfoRequest = (input, context) => {\n    const entries = {};\n    if (input.AccessKeyId != null) {\n        entries[\"AccessKeyId\"] = input.AccessKeyId;\n    }\n    return entries;\n};\nconst serializeAws_queryGetCallerIdentityRequest = (input, context) => {\n    const entries = {};\n    return entries;\n};\nconst serializeAws_queryGetFederationTokenRequest = (input, context) => {\n    const entries = {};\n    if (input.Name != null) {\n        entries[\"Name\"] = input.Name;\n    }\n    if (input.Policy != null) {\n        entries[\"Policy\"] = input.Policy;\n    }\n    if (input.PolicyArns != null) {\n        const memberEntries = serializeAws_querypolicyDescriptorListType(input.PolicyArns, context);\n        if (input.PolicyArns?.length === 0) {\n            entries.PolicyArns = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `PolicyArns.${key}`;\n            entries[loc] = value;\n        });\n    }\n    if (input.DurationSeconds != null) {\n        entries[\"DurationSeconds\"] = input.DurationSeconds;\n    }\n    if (input.Tags != null) {\n        const memberEntries = serializeAws_querytagListType(input.Tags, context);\n        if (input.Tags?.length === 0) {\n            entries.Tags = [];\n        }\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            const loc = `Tags.${key}`;\n            entries[loc] = value;\n        });\n    }\n    return entries;\n};\nconst serializeAws_queryGetSessionTokenRequest = (input, context) => {\n    const entries = {};\n    if (input.DurationSeconds != null) {\n        entries[\"DurationSeconds\"] = input.DurationSeconds;\n    }\n    if (input.SerialNumber != null) {\n        entries[\"SerialNumber\"] = input.SerialNumber;\n    }\n    if (input.TokenCode != null) {\n        entries[\"TokenCode\"] = input.TokenCode;\n    }\n    return entries;\n};\nconst serializeAws_querypolicyDescriptorListType = (input, context) => {\n    const entries = {};\n    let counter = 1;\n    for (const entry of input) {\n        if (entry === null) {\n            continue;\n        }\n        const memberEntries = serializeAws_queryPolicyDescriptorType(entry, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            entries[`member.${counter}.${key}`] = value;\n        });\n        counter++;\n    }\n    return entries;\n};\nconst serializeAws_queryPolicyDescriptorType = (input, context) => {\n    const entries = {};\n    if (input.arn != null) {\n        entries[\"arn\"] = input.arn;\n    }\n    return entries;\n};\nconst serializeAws_queryTag = (input, context) => {\n    const entries = {};\n    if (input.Key != null) {\n        entries[\"Key\"] = input.Key;\n    }\n    if (input.Value != null) {\n        entries[\"Value\"] = input.Value;\n    }\n    return entries;\n};\nconst serializeAws_querytagKeyListType = (input, context) => {\n    const entries = {};\n    let counter = 1;\n    for (const entry of input) {\n        if (entry === null) {\n            continue;\n        }\n        entries[`member.${counter}`] = entry;\n        counter++;\n    }\n    return entries;\n};\nconst serializeAws_querytagListType = (input, context) => {\n    const entries = {};\n    let counter = 1;\n    for (const entry of input) {\n        if (entry === null) {\n            continue;\n        }\n        const memberEntries = serializeAws_queryTag(entry, context);\n        Object.entries(memberEntries).forEach(([key, value]) => {\n            entries[`member.${counter}.${key}`] = value;\n        });\n        counter++;\n    }\n    return entries;\n};\nconst deserializeAws_queryAssumedRoleUser = (output, context) => {\n    const contents = {\n        AssumedRoleId: undefined,\n        Arn: undefined,\n    };\n    if (output[\"AssumedRoleId\"] !== undefined) {\n        contents.AssumedRoleId = __expectString(output[\"AssumedRoleId\"]);\n    }\n    if (output[\"Arn\"] !== undefined) {\n        contents.Arn = __expectString(output[\"Arn\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryAssumeRoleResponse = (output, context) => {\n    const contents = {\n        Credentials: undefined,\n        AssumedRoleUser: undefined,\n        PackedPolicySize: undefined,\n        SourceIdentity: undefined,\n    };\n    if (output[\"Credentials\"] !== undefined) {\n        contents.Credentials = deserializeAws_queryCredentials(output[\"Credentials\"], context);\n    }\n    if (output[\"AssumedRoleUser\"] !== undefined) {\n        contents.AssumedRoleUser = deserializeAws_queryAssumedRoleUser(output[\"AssumedRoleUser\"], context);\n    }\n    if (output[\"PackedPolicySize\"] !== undefined) {\n        contents.PackedPolicySize = __strictParseInt32(output[\"PackedPolicySize\"]);\n    }\n    if (output[\"SourceIdentity\"] !== undefined) {\n        contents.SourceIdentity = __expectString(output[\"SourceIdentity\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryAssumeRoleWithSAMLResponse = (output, context) => {\n    const contents = {\n        Credentials: undefined,\n        AssumedRoleUser: undefined,\n        PackedPolicySize: undefined,\n        Subject: undefined,\n        SubjectType: undefined,\n        Issuer: undefined,\n        Audience: undefined,\n        NameQualifier: undefined,\n        SourceIdentity: undefined,\n    };\n    if (output[\"Credentials\"] !== undefined) {\n        contents.Credentials = deserializeAws_queryCredentials(output[\"Credentials\"], context);\n    }\n    if (output[\"AssumedRoleUser\"] !== undefined) {\n        contents.AssumedRoleUser = deserializeAws_queryAssumedRoleUser(output[\"AssumedRoleUser\"], context);\n    }\n    if (output[\"PackedPolicySize\"] !== undefined) {\n        contents.PackedPolicySize = __strictParseInt32(output[\"PackedPolicySize\"]);\n    }\n    if (output[\"Subject\"] !== undefined) {\n        contents.Subject = __expectString(output[\"Subject\"]);\n    }\n    if (output[\"SubjectType\"] !== undefined) {\n        contents.SubjectType = __expectString(output[\"SubjectType\"]);\n    }\n    if (output[\"Issuer\"] !== undefined) {\n        contents.Issuer = __expectString(output[\"Issuer\"]);\n    }\n    if (output[\"Audience\"] !== undefined) {\n        contents.Audience = __expectString(output[\"Audience\"]);\n    }\n    if (output[\"NameQualifier\"] !== undefined) {\n        contents.NameQualifier = __expectString(output[\"NameQualifier\"]);\n    }\n    if (output[\"SourceIdentity\"] !== undefined) {\n        contents.SourceIdentity = __expectString(output[\"SourceIdentity\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryAssumeRoleWithWebIdentityResponse = (output, context) => {\n    const contents = {\n        Credentials: undefined,\n        SubjectFromWebIdentityToken: undefined,\n        AssumedRoleUser: undefined,\n        PackedPolicySize: undefined,\n        Provider: undefined,\n        Audience: undefined,\n        SourceIdentity: undefined,\n    };\n    if (output[\"Credentials\"] !== undefined) {\n        contents.Credentials = deserializeAws_queryCredentials(output[\"Credentials\"], context);\n    }\n    if (output[\"SubjectFromWebIdentityToken\"] !== undefined) {\n        contents.SubjectFromWebIdentityToken = __expectString(output[\"SubjectFromWebIdentityToken\"]);\n    }\n    if (output[\"AssumedRoleUser\"] !== undefined) {\n        contents.AssumedRoleUser = deserializeAws_queryAssumedRoleUser(output[\"AssumedRoleUser\"], context);\n    }\n    if (output[\"PackedPolicySize\"] !== undefined) {\n        contents.PackedPolicySize = __strictParseInt32(output[\"PackedPolicySize\"]);\n    }\n    if (output[\"Provider\"] !== undefined) {\n        contents.Provider = __expectString(output[\"Provider\"]);\n    }\n    if (output[\"Audience\"] !== undefined) {\n        contents.Audience = __expectString(output[\"Audience\"]);\n    }\n    if (output[\"SourceIdentity\"] !== undefined) {\n        contents.SourceIdentity = __expectString(output[\"SourceIdentity\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryCredentials = (output, context) => {\n    const contents = {\n        AccessKeyId: undefined,\n        SecretAccessKey: undefined,\n        SessionToken: undefined,\n        Expiration: undefined,\n    };\n    if (output[\"AccessKeyId\"] !== undefined) {\n        contents.AccessKeyId = __expectString(output[\"AccessKeyId\"]);\n    }\n    if (output[\"SecretAccessKey\"] !== undefined) {\n        contents.SecretAccessKey = __expectString(output[\"SecretAccessKey\"]);\n    }\n    if (output[\"SessionToken\"] !== undefined) {\n        contents.SessionToken = __expectString(output[\"SessionToken\"]);\n    }\n    if (output[\"Expiration\"] !== undefined) {\n        contents.Expiration = __expectNonNull(__parseRfc3339DateTime(output[\"Expiration\"]));\n    }\n    return contents;\n};\nconst deserializeAws_queryDecodeAuthorizationMessageResponse = (output, context) => {\n    const contents = {\n        DecodedMessage: undefined,\n    };\n    if (output[\"DecodedMessage\"] !== undefined) {\n        contents.DecodedMessage = __expectString(output[\"DecodedMessage\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryExpiredTokenException = (output, context) => {\n    const contents = {\n        message: undefined,\n    };\n    if (output[\"message\"] !== undefined) {\n        contents.message = __expectString(output[\"message\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryFederatedUser = (output, context) => {\n    const contents = {\n        FederatedUserId: undefined,\n        Arn: undefined,\n    };\n    if (output[\"FederatedUserId\"] !== undefined) {\n        contents.FederatedUserId = __expectString(output[\"FederatedUserId\"]);\n    }\n    if (output[\"Arn\"] !== undefined) {\n        contents.Arn = __expectString(output[\"Arn\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryGetAccessKeyInfoResponse = (output, context) => {\n    const contents = {\n        Account: undefined,\n    };\n    if (output[\"Account\"] !== undefined) {\n        contents.Account = __expectString(output[\"Account\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryGetCallerIdentityResponse = (output, context) => {\n    const contents = {\n        UserId: undefined,\n        Account: undefined,\n        Arn: undefined,\n    };\n    if (output[\"UserId\"] !== undefined) {\n        contents.UserId = __expectString(output[\"UserId\"]);\n    }\n    if (output[\"Account\"] !== undefined) {\n        contents.Account = __expectString(output[\"Account\"]);\n    }\n    if (output[\"Arn\"] !== undefined) {\n        contents.Arn = __expectString(output[\"Arn\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryGetFederationTokenResponse = (output, context) => {\n    const contents = {\n        Credentials: undefined,\n        FederatedUser: undefined,\n        PackedPolicySize: undefined,\n    };\n    if (output[\"Credentials\"] !== undefined) {\n        contents.Credentials = deserializeAws_queryCredentials(output[\"Credentials\"], context);\n    }\n    if (output[\"FederatedUser\"] !== undefined) {\n        contents.FederatedUser = deserializeAws_queryFederatedUser(output[\"FederatedUser\"], context);\n    }\n    if (output[\"PackedPolicySize\"] !== undefined) {\n        contents.PackedPolicySize = __strictParseInt32(output[\"PackedPolicySize\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryGetSessionTokenResponse = (output, context) => {\n    const contents = {\n        Credentials: undefined,\n    };\n    if (output[\"Credentials\"] !== undefined) {\n        contents.Credentials = deserializeAws_queryCredentials(output[\"Credentials\"], context);\n    }\n    return contents;\n};\nconst deserializeAws_queryIDPCommunicationErrorException = (output, context) => {\n    const contents = {\n        message: undefined,\n    };\n    if (output[\"message\"] !== undefined) {\n        contents.message = __expectString(output[\"message\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryIDPRejectedClaimException = (output, context) => {\n    const contents = {\n        message: undefined,\n    };\n    if (output[\"message\"] !== undefined) {\n        contents.message = __expectString(output[\"message\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryInvalidAuthorizationMessageException = (output, context) => {\n    const contents = {\n        message: undefined,\n    };\n    if (output[\"message\"] !== undefined) {\n        contents.message = __expectString(output[\"message\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryInvalidIdentityTokenException = (output, context) => {\n    const contents = {\n        message: undefined,\n    };\n    if (output[\"message\"] !== undefined) {\n        contents.message = __expectString(output[\"message\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryMalformedPolicyDocumentException = (output, context) => {\n    const contents = {\n        message: undefined,\n    };\n    if (output[\"message\"] !== undefined) {\n        contents.message = __expectString(output[\"message\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryPackedPolicyTooLargeException = (output, context) => {\n    const contents = {\n        message: undefined,\n    };\n    if (output[\"message\"] !== undefined) {\n        contents.message = __expectString(output[\"message\"]);\n    }\n    return contents;\n};\nconst deserializeAws_queryRegionDisabledException = (output, context) => {\n    const contents = {\n        message: undefined,\n    };\n    if (output[\"message\"] !== undefined) {\n        contents.message = __expectString(output[\"message\"]);\n    }\n    return contents;\n};\nconst deserializeMetadata = (output) => ({\n    httpStatusCode: output.statusCode,\n    requestId: output.headers[\"x-amzn-requestid\"] ?? output.headers[\"x-amzn-request-id\"] ?? output.headers[\"x-amz-request-id\"],\n    extendedRequestId: output.headers[\"x-amz-id-2\"],\n    cfId: output.headers[\"x-amz-cf-id\"],\n});\nconst collectBody = (streamBody = new Uint8Array(), context) => {\n    if (streamBody instanceof Uint8Array) {\n        return Promise.resolve(streamBody);\n    }\n    return context.streamCollector(streamBody) || Promise.resolve(new Uint8Array());\n};\nconst collectBodyString = (streamBody, context) => collectBody(streamBody, context).then((body) => context.utf8Encoder(body));\nconst buildHttpRpcRequest = async (context, headers, path, resolvedHostname, body) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const contents = {\n        protocol,\n        hostname,\n        port,\n        method: \"POST\",\n        path: basePath.endsWith(\"/\") ? basePath.slice(0, -1) + path : basePath + path,\n        headers,\n    };\n    if (resolvedHostname !== undefined) {\n        contents.hostname = resolvedHostname;\n    }\n    if (body !== undefined) {\n        contents.body = body;\n    }\n    return new __HttpRequest(contents);\n};\nconst parseBody = (streamBody, context) => collectBodyString(streamBody, context).then((encoded) => {\n    if (encoded.length) {\n        const parser = new XMLParser({\n            attributeNamePrefix: \"\",\n            htmlEntities: true,\n            ignoreAttributes: false,\n            ignoreDeclaration: true,\n            parseTagValue: false,\n            trimValues: false,\n            tagValueProcessor: (_, val) => (val.trim() === \"\" && val.includes(\"\\n\") ? \"\" : undefined),\n        });\n        parser.addEntity(\"#xD\", \"\\r\");\n        parser.addEntity(\"#10\", \"\\n\");\n        const parsedObj = parser.parse(encoded);\n        const textNodeName = \"#text\";\n        const key = Object.keys(parsedObj)[0];\n        const parsedObjToReturn = parsedObj[key];\n        if (parsedObjToReturn[textNodeName]) {\n            parsedObjToReturn[key] = parsedObjToReturn[textNodeName];\n            delete parsedObjToReturn[textNodeName];\n        }\n        return __getValueFromTextNode(parsedObjToReturn);\n    }\n    return {};\n});\nconst parseErrorBody = async (errorBody, context) => {\n    const value = await parseBody(errorBody, context);\n    if (value.Error) {\n        value.Error.message = value.Error.message ?? value.Error.Message;\n    }\n    return value;\n};\nconst buildFormUrlencodedString = (formEntries) => Object.entries(formEntries)\n    .map(([key, value]) => __extendedEncodeURIComponent(key) + \"=\" + __extendedEncodeURIComponent(value))\n    .join(\"&\");\nconst loadQueryErrorCode = (output, data) => {\n    if (data.Error.Code !== undefined) {\n        return data.Error.Code;\n    }\n    if (output.statusCode == 404) {\n        return \"NotFound\";\n    }\n};\n","import { getEndpointPlugin } from \"@aws-sdk/middleware-endpoint\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { getAwsAuthPlugin } from \"@aws-sdk/middleware-signing\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\nimport { AssumeRoleRequestFilterSensitiveLog, AssumeRoleResponseFilterSensitiveLog, } from \"../models/models_0\";\nimport { deserializeAws_queryAssumeRoleCommand, serializeAws_queryAssumeRoleCommand } from \"../protocols/Aws_query\";\nexport class AssumeRoleCommand extends $Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    static getEndpointParameterInstructions() {\n        return {\n            UseGlobalEndpoint: { type: \"builtInParams\", name: \"useGlobalEndpoint\" },\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use(getEndpointPlugin(configuration, AssumeRoleCommand.getEndpointParameterInstructions()));\n        this.middlewareStack.use(getAwsAuthPlugin(configuration));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"STSClient\";\n        const commandName = \"AssumeRoleCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: AssumeRoleRequestFilterSensitiveLog,\n            outputFilterSensitiveLog: AssumeRoleResponseFilterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return serializeAws_queryAssumeRoleCommand(input, context);\n    }\n    deserialize(output, context) {\n        return deserializeAws_queryAssumeRoleCommand(output, context);\n    }\n}\n","import { getEndpointPlugin } from \"@aws-sdk/middleware-endpoint\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\nimport { AssumeRoleWithWebIdentityRequestFilterSensitiveLog, AssumeRoleWithWebIdentityResponseFilterSensitiveLog, } from \"../models/models_0\";\nimport { deserializeAws_queryAssumeRoleWithWebIdentityCommand, serializeAws_queryAssumeRoleWithWebIdentityCommand, } from \"../protocols/Aws_query\";\nexport class AssumeRoleWithWebIdentityCommand extends $Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    static getEndpointParameterInstructions() {\n        return {\n            UseGlobalEndpoint: { type: \"builtInParams\", name: \"useGlobalEndpoint\" },\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use(getEndpointPlugin(configuration, AssumeRoleWithWebIdentityCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"STSClient\";\n        const commandName = \"AssumeRoleWithWebIdentityCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: AssumeRoleWithWebIdentityRequestFilterSensitiveLog,\n            outputFilterSensitiveLog: AssumeRoleWithWebIdentityResponseFilterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return serializeAws_queryAssumeRoleWithWebIdentityCommand(input, context);\n    }\n    deserialize(output, context) {\n        return deserializeAws_queryAssumeRoleWithWebIdentityCommand(output, context);\n    }\n}\n","import { AssumeRoleCommand } from \"./commands/AssumeRoleCommand\";\nimport { AssumeRoleWithWebIdentityCommand, } from \"./commands/AssumeRoleWithWebIdentityCommand\";\nconst ASSUME_ROLE_DEFAULT_REGION = \"us-east-1\";\nconst decorateDefaultRegion = (region) => {\n    if (typeof region !== \"function\") {\n        return region === undefined ? ASSUME_ROLE_DEFAULT_REGION : region;\n    }\n    return async () => {\n        try {\n            return await region();\n        }\n        catch (e) {\n            return ASSUME_ROLE_DEFAULT_REGION;\n        }\n    };\n};\nexport const getDefaultRoleAssumer = (stsOptions, stsClientCtor) => {\n    let stsClient;\n    let closureSourceCreds;\n    return async (sourceCreds, params) => {\n        closureSourceCreds = sourceCreds;\n        if (!stsClient) {\n            const { logger, region, requestHandler } = stsOptions;\n            stsClient = new stsClientCtor({\n                logger,\n                credentialDefaultProvider: () => async () => closureSourceCreds,\n                region: decorateDefaultRegion(region || stsOptions.region),\n                ...(requestHandler ? { requestHandler } : {}),\n            });\n        }\n        const { Credentials } = await stsClient.send(new AssumeRoleCommand(params));\n        if (!Credentials || !Credentials.AccessKeyId || !Credentials.SecretAccessKey) {\n            throw new Error(`Invalid response from STS.assumeRole call with role ${params.RoleArn}`);\n        }\n        return {\n            accessKeyId: Credentials.AccessKeyId,\n            secretAccessKey: Credentials.SecretAccessKey,\n            sessionToken: Credentials.SessionToken,\n            expiration: Credentials.Expiration,\n        };\n    };\n};\nexport const getDefaultRoleAssumerWithWebIdentity = (stsOptions, stsClientCtor) => {\n    let stsClient;\n    return async (params) => {\n        if (!stsClient) {\n            const { logger, region, requestHandler } = stsOptions;\n            stsClient = new stsClientCtor({\n                logger,\n                region: decorateDefaultRegion(region || stsOptions.region),\n                ...(requestHandler ? { requestHandler } : {}),\n            });\n        }\n        const { Credentials } = await stsClient.send(new AssumeRoleWithWebIdentityCommand(params));\n        if (!Credentials || !Credentials.AccessKeyId || !Credentials.SecretAccessKey) {\n            throw new Error(`Invalid response from STS.assumeRoleWithWebIdentity call with role ${params.RoleArn}`);\n        }\n        return {\n            accessKeyId: Credentials.AccessKeyId,\n            secretAccessKey: Credentials.SecretAccessKey,\n            sessionToken: Credentials.SessionToken,\n            expiration: Credentials.Expiration,\n        };\n    };\n};\nexport const decorateDefaultCredentialProvider = (provider) => (input) => provider({\n    roleAssumer: getDefaultRoleAssumer(input, input.stsClientCtor),\n    roleAssumerWithWebIdentity: getDefaultRoleAssumerWithWebIdentity(input, input.stsClientCtor),\n    ...input,\n});\n","import { CredentialsProviderError } from \"@aws-sdk/property-provider\";\nexport const ENV_KEY = \"AWS_ACCESS_KEY_ID\";\nexport const ENV_SECRET = \"AWS_SECRET_ACCESS_KEY\";\nexport const ENV_SESSION = \"AWS_SESSION_TOKEN\";\nexport const ENV_EXPIRATION = \"AWS_CREDENTIAL_EXPIRATION\";\nexport const fromEnv = () => async () => {\n    const accessKeyId = process.env[ENV_KEY];\n    const secretAccessKey = process.env[ENV_SECRET];\n    const sessionToken = process.env[ENV_SESSION];\n    const expiry = process.env[ENV_EXPIRATION];\n    if (accessKeyId && secretAccessKey) {\n        return {\n            accessKeyId,\n            secretAccessKey,\n            ...(sessionToken && { sessionToken }),\n            ...(expiry && { expiration: new Date(expiry) }),\n        };\n    }\n    throw new CredentialsProviderError(\"Unable to find environment variable credentials.\");\n};\n","import { homedir } from \"os\";\nimport { sep } from \"path\";\nexport const getHomeDir = () => {\n    const { HOME, USERPROFILE, HOMEPATH, HOMEDRIVE = `C:${sep}` } = process.env;\n    if (HOME)\n        return HOME;\n    if (USERPROFILE)\n        return USERPROFILE;\n    if (HOMEPATH)\n        return `${HOMEDRIVE}${HOMEPATH}`;\n    return homedir();\n};\n","export const ENV_PROFILE = \"AWS_PROFILE\";\nexport const DEFAULT_PROFILE = \"default\";\nexport const getProfileName = (init) => init.profile || process.env[ENV_PROFILE] || DEFAULT_PROFILE;\n","import { createHash } from \"crypto\";\nimport { join } from \"path\";\nimport { getHomeDir } from \"./getHomeDir\";\nexport const getSSOTokenFilepath = (id) => {\n    const hasher = createHash(\"sha1\");\n    const cacheName = hasher.update(id).digest(\"hex\");\n    return join(getHomeDir(), \".aws\", \"sso\", \"cache\", `${cacheName}.json`);\n};\n","import { promises as fsPromises } from \"fs\";\nimport { getSSOTokenFilepath } from \"./getSSOTokenFilepath\";\nconst { readFile } = fsPromises;\nexport const getSSOTokenFromFile = async (id) => {\n    const ssoTokenFilepath = getSSOTokenFilepath(id);\n    const ssoTokenText = await readFile(ssoTokenFilepath, \"utf8\");\n    return JSON.parse(ssoTokenText);\n};\n","import { join } from \"path\";\nimport { getHomeDir } from \"./getHomeDir\";\nexport const ENV_CONFIG_PATH = \"AWS_CONFIG_FILE\";\nexport const getConfigFilepath = () => process.env[ENV_CONFIG_PATH] || join(getHomeDir(), \".aws\", \"config\");\n","import { join } from \"path\";\nimport { getHomeDir } from \"./getHomeDir\";\nexport const ENV_CREDENTIALS_PATH = \"AWS_SHARED_CREDENTIALS_FILE\";\nexport const getCredentialsFilepath = () => process.env[ENV_CREDENTIALS_PATH] || join(getHomeDir(), \".aws\", \"credentials\");\n","const profileKeyRegex = /^profile\\s([\"'])?([^\\1]+)\\1$/;\nexport const getProfileData = (data) => Object.entries(data)\n    .filter(([key]) => profileKeyRegex.test(key))\n    .reduce((acc, [key, value]) => ({ ...acc, [profileKeyRegex.exec(key)[2]]: value }), {\n    ...(data.default && { default: data.default }),\n});\n","const profileNameBlockList = [\"__proto__\", \"profile __proto__\"];\nexport const parseIni = (iniData) => {\n    const map = {};\n    let currentSection;\n    for (let line of iniData.split(/\\r?\\n/)) {\n        line = line.split(/(^|\\s)[;#]/)[0].trim();\n        const isSection = line[0] === \"[\" && line[line.length - 1] === \"]\";\n        if (isSection) {\n            currentSection = line.substring(1, line.length - 1);\n            if (profileNameBlockList.includes(currentSection)) {\n                throw new Error(`Found invalid profile name \"${currentSection}\"`);\n            }\n        }\n        else if (currentSection) {\n            const indexOfEqualsSign = line.indexOf(\"=\");\n            const start = 0;\n            const end = line.length - 1;\n            const isAssignment = indexOfEqualsSign !== -1 && indexOfEqualsSign !== start && indexOfEqualsSign !== end;\n            if (isAssignment) {\n                const [name, value] = [\n                    line.substring(0, indexOfEqualsSign).trim(),\n                    line.substring(indexOfEqualsSign + 1).trim(),\n                ];\n                map[currentSection] = map[currentSection] || {};\n                map[currentSection][name] = value;\n            }\n        }\n    }\n    return map;\n};\n","import { promises as fsPromises } from \"fs\";\nconst { readFile } = fsPromises;\nconst filePromisesHash = {};\nexport const slurpFile = (path) => {\n    if (!filePromisesHash[path]) {\n        filePromisesHash[path] = readFile(path, \"utf8\");\n    }\n    return filePromisesHash[path];\n};\n","import { getConfigFilepath } from \"./getConfigFilepath\";\nimport { getCredentialsFilepath } from \"./getCredentialsFilepath\";\nimport { getProfileData } from \"./getProfileData\";\nimport { parseIni } from \"./parseIni\";\nimport { slurpFile } from \"./slurpFile\";\nconst swallowError = () => ({});\nexport const loadSharedConfigFiles = async (init = {}) => {\n    const { filepath = getCredentialsFilepath(), configFilepath = getConfigFilepath() } = init;\n    const parsedFiles = await Promise.all([\n        slurpFile(configFilepath).then(parseIni).then(getProfileData).catch(swallowError),\n        slurpFile(filepath).then(parseIni).catch(swallowError),\n    ]);\n    return {\n        configFile: parsedFiles[0],\n        credentialsFile: parsedFiles[1],\n    };\n};\n","const ssoSessionKeyRegex = /^sso-session\\s([\"'])?([^\\1]+)\\1$/;\nexport const getSsoSessionData = (data) => Object.entries(data)\n    .filter(([key]) => ssoSessionKeyRegex.test(key))\n    .reduce((acc, [key, value]) => ({ ...acc, [ssoSessionKeyRegex.exec(key)[2]]: value }), {});\n","import { getConfigFilepath } from \"./getConfigFilepath\";\nimport { getSsoSessionData } from \"./getSsoSessionData\";\nimport { parseIni } from \"./parseIni\";\nimport { slurpFile } from \"./slurpFile\";\nconst swallowError = () => ({});\nexport const loadSsoSessionData = async (init = {}) => slurpFile(init.configFilepath ?? getConfigFilepath())\n    .then(parseIni)\n    .then(getSsoSessionData)\n    .catch(swallowError);\n","import { loadSharedConfigFiles } from \"./loadSharedConfigFiles\";\nexport const parseKnownFiles = async (init) => {\n    const parsedFiles = await loadSharedConfigFiles(init);\n    return {\n        ...parsedFiles.configFile,\n        ...parsedFiles.credentialsFile,\n    };\n};\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"url\");","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"buffer\");","import { ProviderError } from \"@aws-sdk/property-provider\";\nimport { Buffer } from \"buffer\";\nimport { request } from \"http\";\nexport function httpRequest(options) {\n    return new Promise((resolve, reject) => {\n        const req = request({\n            method: \"GET\",\n            ...options,\n            hostname: options.hostname?.replace(/^\\[(.+)\\]$/, \"$1\"),\n        });\n        req.on(\"error\", (err) => {\n            reject(Object.assign(new ProviderError(\"Unable to connect to instance metadata service\"), err));\n            req.destroy();\n        });\n        req.on(\"timeout\", () => {\n            reject(new ProviderError(\"TimeoutError from instance metadata service\"));\n            req.destroy();\n        });\n        req.on(\"response\", (res) => {\n            const { statusCode = 400 } = res;\n            if (statusCode < 200 || 300 <= statusCode) {\n                reject(Object.assign(new ProviderError(\"Error response received from instance metadata service\"), { statusCode }));\n                req.destroy();\n            }\n            const chunks = [];\n            res.on(\"data\", (chunk) => {\n                chunks.push(chunk);\n            });\n            res.on(\"end\", () => {\n                resolve(Buffer.concat(chunks));\n                req.destroy();\n            });\n        });\n        req.end();\n    });\n}\n","export const isImdsCredentials = (arg) => Boolean(arg) &&\n    typeof arg === \"object\" &&\n    typeof arg.AccessKeyId === \"string\" &&\n    typeof arg.SecretAccessKey === \"string\" &&\n    typeof arg.Token === \"string\" &&\n    typeof arg.Expiration === \"string\";\nexport const fromImdsCredentials = (creds) => ({\n    accessKeyId: creds.AccessKeyId,\n    secretAccessKey: creds.SecretAccessKey,\n    sessionToken: creds.Token,\n    expiration: new Date(creds.Expiration),\n});\n","export const DEFAULT_TIMEOUT = 1000;\nexport const DEFAULT_MAX_RETRIES = 0;\nexport const providerConfigFromInit = ({ maxRetries = DEFAULT_MAX_RETRIES, timeout = DEFAULT_TIMEOUT, }) => ({ maxRetries, timeout });\n","export const retry = (toRetry, maxRetries) => {\n    let promise = toRetry();\n    for (let i = 0; i < maxRetries; i++) {\n        promise = promise.catch(toRetry);\n    }\n    return promise;\n};\n","import { CredentialsProviderError } from \"@aws-sdk/property-provider\";\nimport { parse } from \"url\";\nimport { httpRequest } from \"./remoteProvider/httpRequest\";\nimport { fromImdsCredentials, isImdsCredentials } from \"./remoteProvider/ImdsCredentials\";\nimport { providerConfigFromInit } from \"./remoteProvider/RemoteProviderInit\";\nimport { retry } from \"./remoteProvider/retry\";\nexport const ENV_CMDS_FULL_URI = \"AWS_CONTAINER_CREDENTIALS_FULL_URI\";\nexport const ENV_CMDS_RELATIVE_URI = \"AWS_CONTAINER_CREDENTIALS_RELATIVE_URI\";\nexport const ENV_CMDS_AUTH_TOKEN = \"AWS_CONTAINER_AUTHORIZATION_TOKEN\";\nexport const fromContainerMetadata = (init = {}) => {\n    const { timeout, maxRetries } = providerConfigFromInit(init);\n    return () => retry(async () => {\n        const requestOptions = await getCmdsUri();\n        const credsResponse = JSON.parse(await requestFromEcsImds(timeout, requestOptions));\n        if (!isImdsCredentials(credsResponse)) {\n            throw new CredentialsProviderError(\"Invalid response received from instance metadata service.\");\n        }\n        return fromImdsCredentials(credsResponse);\n    }, maxRetries);\n};\nconst requestFromEcsImds = async (timeout, options) => {\n    if (process.env[ENV_CMDS_AUTH_TOKEN]) {\n        options.headers = {\n            ...options.headers,\n            Authorization: process.env[ENV_CMDS_AUTH_TOKEN],\n        };\n    }\n    const buffer = await httpRequest({\n        ...options,\n        timeout,\n    });\n    return buffer.toString();\n};\nconst CMDS_IP = \"169.254.170.2\";\nconst GREENGRASS_HOSTS = {\n    localhost: true,\n    \"127.0.0.1\": true,\n};\nconst GREENGRASS_PROTOCOLS = {\n    \"http:\": true,\n    \"https:\": true,\n};\nconst getCmdsUri = async () => {\n    if (process.env[ENV_CMDS_RELATIVE_URI]) {\n        return {\n            hostname: CMDS_IP,\n            path: process.env[ENV_CMDS_RELATIVE_URI],\n        };\n    }\n    if (process.env[ENV_CMDS_FULL_URI]) {\n        const parsed = parse(process.env[ENV_CMDS_FULL_URI]);\n        if (!parsed.hostname || !(parsed.hostname in GREENGRASS_HOSTS)) {\n            throw new CredentialsProviderError(`${parsed.hostname} is not a valid container metadata service hostname`, false);\n        }\n        if (!parsed.protocol || !(parsed.protocol in GREENGRASS_PROTOCOLS)) {\n            throw new CredentialsProviderError(`${parsed.protocol} is not a valid container metadata service protocol`, false);\n        }\n        return {\n            ...parsed,\n            port: parsed.port ? parseInt(parsed.port, 10) : undefined,\n        };\n    }\n    throw new CredentialsProviderError(\"The container metadata credential provider cannot be used unless\" +\n        ` the ${ENV_CMDS_RELATIVE_URI} or ${ENV_CMDS_FULL_URI} environment` +\n        \" variable is set\", false);\n};\n","import { fromStatic as convertToProvider } from \"@aws-sdk/property-provider\";\nconst isFunction = (func) => typeof func === \"function\";\nexport const fromStatic = (defaultValue) => isFunction(defaultValue) ? async () => await defaultValue() : convertToProvider(defaultValue);\n","import { chain, memoize } from \"@aws-sdk/property-provider\";\nimport { fromEnv } from \"./fromEnv\";\nimport { fromSharedConfigFiles } from \"./fromSharedConfigFiles\";\nimport { fromStatic } from \"./fromStatic\";\nexport const loadConfig = ({ environmentVariableSelector, configFileSelector, default: defaultValue }, configuration = {}) => memoize(chain(fromEnv(environmentVariableSelector), fromSharedConfigFiles(configFileSelector, configuration), fromStatic(defaultValue)));\n","import { CredentialsProviderError } from \"@aws-sdk/property-provider\";\nexport const fromEnv = (envVarSelector) => async () => {\n    try {\n        const config = envVarSelector(process.env);\n        if (config === undefined) {\n            throw new Error();\n        }\n        return config;\n    }\n    catch (e) {\n        throw new CredentialsProviderError(e.message || `Cannot load config from environment variables with getter: ${envVarSelector}`);\n    }\n};\n","import { CredentialsProviderError } from \"@aws-sdk/property-provider\";\nimport { getProfileName, loadSharedConfigFiles } from \"@aws-sdk/shared-ini-file-loader\";\nexport const fromSharedConfigFiles = (configSelector, { preferredFile = \"config\", ...init } = {}) => async () => {\n    const profile = getProfileName(init);\n    const { configFile, credentialsFile } = await loadSharedConfigFiles(init);\n    const profileFromCredentials = credentialsFile[profile] || {};\n    const profileFromConfig = configFile[profile] || {};\n    const mergedProfile = preferredFile === \"config\"\n        ? { ...profileFromCredentials, ...profileFromConfig }\n        : { ...profileFromConfig, ...profileFromCredentials };\n    try {\n        const configValue = configSelector(mergedProfile);\n        if (configValue === undefined) {\n            throw new Error();\n        }\n        return configValue;\n    }\n    catch (e) {\n        throw new CredentialsProviderError(e.message ||\n            `Cannot load config for profile ${profile} in SDK configuration files with getter: ${configSelector}`);\n    }\n};\n","export var Endpoint;\n(function (Endpoint) {\n    Endpoint[\"IPv4\"] = \"http://169.254.169.254\";\n    Endpoint[\"IPv6\"] = \"http://[fd00:ec2::254]\";\n})(Endpoint || (Endpoint = {}));\n","export const ENV_ENDPOINT_NAME = \"AWS_EC2_METADATA_SERVICE_ENDPOINT\";\nexport const CONFIG_ENDPOINT_NAME = \"ec2_metadata_service_endpoint\";\nexport const ENDPOINT_CONFIG_OPTIONS = {\n    environmentVariableSelector: (env) => env[ENV_ENDPOINT_NAME],\n    configFileSelector: (profile) => profile[CONFIG_ENDPOINT_NAME],\n    default: undefined,\n};\n","export var EndpointMode;\n(function (EndpointMode) {\n    EndpointMode[\"IPv4\"] = \"IPv4\";\n    EndpointMode[\"IPv6\"] = \"IPv6\";\n})(EndpointMode || (EndpointMode = {}));\n","import { EndpointMode } from \"./EndpointMode\";\nexport const ENV_ENDPOINT_MODE_NAME = \"AWS_EC2_METADATA_SERVICE_ENDPOINT_MODE\";\nexport const CONFIG_ENDPOINT_MODE_NAME = \"ec2_metadata_service_endpoint_mode\";\nexport const ENDPOINT_MODE_CONFIG_OPTIONS = {\n    environmentVariableSelector: (env) => env[ENV_ENDPOINT_MODE_NAME],\n    configFileSelector: (profile) => profile[CONFIG_ENDPOINT_MODE_NAME],\n    default: EndpointMode.IPv4,\n};\n","import { loadConfig } from \"@aws-sdk/node-config-provider\";\nimport { parseUrl } from \"@aws-sdk/url-parser\";\nimport { Endpoint as InstanceMetadataEndpoint } from \"../config/Endpoint\";\nimport { ENDPOINT_CONFIG_OPTIONS } from \"../config/EndpointConfigOptions\";\nimport { EndpointMode } from \"../config/EndpointMode\";\nimport { ENDPOINT_MODE_CONFIG_OPTIONS, } from \"../config/EndpointModeConfigOptions\";\nexport const getInstanceMetadataEndpoint = async () => parseUrl((await getFromEndpointConfig()) || (await getFromEndpointModeConfig()));\nconst getFromEndpointConfig = async () => loadConfig(ENDPOINT_CONFIG_OPTIONS)();\nconst getFromEndpointModeConfig = async () => {\n    const endpointMode = await loadConfig(ENDPOINT_MODE_CONFIG_OPTIONS)();\n    switch (endpointMode) {\n        case EndpointMode.IPv4:\n            return InstanceMetadataEndpoint.IPv4;\n        case EndpointMode.IPv6:\n            return InstanceMetadataEndpoint.IPv6;\n        default:\n            throw new Error(`Unsupported endpoint mode: ${endpointMode}.` + ` Select from ${Object.values(EndpointMode)}`);\n    }\n};\n","const STATIC_STABILITY_REFRESH_INTERVAL_SECONDS = 5 * 60;\nconst STATIC_STABILITY_REFRESH_INTERVAL_JITTER_WINDOW_SECONDS = 5 * 60;\nconst STATIC_STABILITY_DOC_URL = \"https://docs.aws.amazon.com/sdkref/latest/guide/feature-static-credentials.html\";\nexport const getExtendedInstanceMetadataCredentials = (credentials, logger) => {\n    const refreshInterval = STATIC_STABILITY_REFRESH_INTERVAL_SECONDS +\n        Math.floor(Math.random() * STATIC_STABILITY_REFRESH_INTERVAL_JITTER_WINDOW_SECONDS);\n    const newExpiration = new Date(Date.now() + refreshInterval * 1000);\n    logger.warn(\"Attempting credential expiration extension due to a credential service availability issue. A refresh of these \" +\n        \"credentials will be attempted after ${new Date(newExpiration)}.\\nFor more information, please visit: \" +\n        STATIC_STABILITY_DOC_URL);\n    const originalExpiration = credentials.originalExpiration ?? credentials.expiration;\n    return {\n        ...credentials,\n        ...(originalExpiration ? { originalExpiration } : {}),\n        expiration: newExpiration,\n    };\n};\n","import { CredentialsProviderError } from \"@aws-sdk/property-provider\";\nimport { httpRequest } from \"./remoteProvider/httpRequest\";\nimport { fromImdsCredentials, isImdsCredentials } from \"./remoteProvider/ImdsCredentials\";\nimport { providerConfigFromInit } from \"./remoteProvider/RemoteProviderInit\";\nimport { retry } from \"./remoteProvider/retry\";\nimport { getInstanceMetadataEndpoint } from \"./utils/getInstanceMetadataEndpoint\";\nimport { staticStabilityProvider } from \"./utils/staticStabilityProvider\";\nconst IMDS_PATH = \"/latest/meta-data/iam/security-credentials/\";\nconst IMDS_TOKEN_PATH = \"/latest/api/token\";\nexport const fromInstanceMetadata = (init = {}) => staticStabilityProvider(getInstanceImdsProvider(init), { logger: init.logger });\nconst getInstanceImdsProvider = (init) => {\n    let disableFetchToken = false;\n    const { timeout, maxRetries } = providerConfigFromInit(init);\n    const getCredentials = async (maxRetries, options) => {\n        const profile = (await retry(async () => {\n            let profile;\n            try {\n                profile = await getProfile(options);\n            }\n            catch (err) {\n                if (err.statusCode === 401) {\n                    disableFetchToken = false;\n                }\n                throw err;\n            }\n            return profile;\n        }, maxRetries)).trim();\n        return retry(async () => {\n            let creds;\n            try {\n                creds = await getCredentialsFromProfile(profile, options);\n            }\n            catch (err) {\n                if (err.statusCode === 401) {\n                    disableFetchToken = false;\n                }\n                throw err;\n            }\n            return creds;\n        }, maxRetries);\n    };\n    return async () => {\n        const endpoint = await getInstanceMetadataEndpoint();\n        if (disableFetchToken) {\n            return getCredentials(maxRetries, { ...endpoint, timeout });\n        }\n        else {\n            let token;\n            try {\n                token = (await getMetadataToken({ ...endpoint, timeout })).toString();\n            }\n            catch (error) {\n                if (error?.statusCode === 400) {\n                    throw Object.assign(error, {\n                        message: \"EC2 Metadata token request returned error\",\n                    });\n                }\n                else if (error.message === \"TimeoutError\" || [403, 404, 405].includes(error.statusCode)) {\n                    disableFetchToken = true;\n                }\n                return getCredentials(maxRetries, { ...endpoint, timeout });\n            }\n            return getCredentials(maxRetries, {\n                ...endpoint,\n                headers: {\n                    \"x-aws-ec2-metadata-token\": token,\n                },\n                timeout,\n            });\n        }\n    };\n};\nconst getMetadataToken = async (options) => httpRequest({\n    ...options,\n    path: IMDS_TOKEN_PATH,\n    method: \"PUT\",\n    headers: {\n        \"x-aws-ec2-metadata-token-ttl-seconds\": \"21600\",\n    },\n});\nconst getProfile = async (options) => (await httpRequest({ ...options, path: IMDS_PATH })).toString();\nconst getCredentialsFromProfile = async (profile, options) => {\n    const credsResponse = JSON.parse((await httpRequest({\n        ...options,\n        path: IMDS_PATH + profile,\n    })).toString());\n    if (!isImdsCredentials(credsResponse)) {\n        throw new CredentialsProviderError(\"Invalid response received from instance metadata service.\");\n    }\n    return fromImdsCredentials(credsResponse);\n};\n","import { getExtendedInstanceMetadataCredentials } from \"./getExtendedInstanceMetadataCredentials\";\nexport const staticStabilityProvider = (provider, options = {}) => {\n    const logger = options?.logger || console;\n    let pastCredentials;\n    return async () => {\n        let credentials;\n        try {\n            credentials = await provider();\n            if (credentials.expiration && credentials.expiration.getTime() < Date.now()) {\n                credentials = getExtendedInstanceMetadataCredentials(credentials, logger);\n            }\n        }\n        catch (e) {\n            if (pastCredentials) {\n                logger.warn(\"Credential renew failed: \", e);\n                credentials = getExtendedInstanceMetadataCredentials(pastCredentials, logger);\n            }\n            else {\n                throw e;\n            }\n        }\n        pastCredentials = credentials;\n        return credentials;\n    };\n};\n","import { CredentialsProviderError } from \"@aws-sdk/property-provider\";\nimport { getProfileName } from \"@aws-sdk/shared-ini-file-loader\";\nimport { resolveCredentialSource } from \"./resolveCredentialSource\";\nimport { resolveProfileData } from \"./resolveProfileData\";\nexport const isAssumeRoleProfile = (arg) => Boolean(arg) &&\n    typeof arg === \"object\" &&\n    typeof arg.role_arn === \"string\" &&\n    [\"undefined\", \"string\"].indexOf(typeof arg.role_session_name) > -1 &&\n    [\"undefined\", \"string\"].indexOf(typeof arg.external_id) > -1 &&\n    [\"undefined\", \"string\"].indexOf(typeof arg.mfa_serial) > -1 &&\n    (isAssumeRoleWithSourceProfile(arg) || isAssumeRoleWithProviderProfile(arg));\nconst isAssumeRoleWithSourceProfile = (arg) => typeof arg.source_profile === \"string\" && typeof arg.credential_source === \"undefined\";\nconst isAssumeRoleWithProviderProfile = (arg) => typeof arg.credential_source === \"string\" && typeof arg.source_profile === \"undefined\";\nexport const resolveAssumeRoleCredentials = async (profileName, profiles, options, visitedProfiles = {}) => {\n    const data = profiles[profileName];\n    if (!options.roleAssumer) {\n        throw new CredentialsProviderError(`Profile ${profileName} requires a role to be assumed, but no role assumption callback was provided.`, false);\n    }\n    const { source_profile } = data;\n    if (source_profile && source_profile in visitedProfiles) {\n        throw new CredentialsProviderError(`Detected a cycle attempting to resolve credentials for profile` +\n            ` ${getProfileName(options)}. Profiles visited: ` +\n            Object.keys(visitedProfiles).join(\", \"), false);\n    }\n    const sourceCredsProvider = source_profile\n        ? resolveProfileData(source_profile, profiles, options, {\n            ...visitedProfiles,\n            [source_profile]: true,\n        })\n        : resolveCredentialSource(data.credential_source, profileName)();\n    const params = {\n        RoleArn: data.role_arn,\n        RoleSessionName: data.role_session_name || `aws-sdk-js-${Date.now()}`,\n        ExternalId: data.external_id,\n    };\n    const { mfa_serial } = data;\n    if (mfa_serial) {\n        if (!options.mfaCodeProvider) {\n            throw new CredentialsProviderError(`Profile ${profileName} requires multi-factor authentication, but no MFA code callback was provided.`, false);\n        }\n        params.SerialNumber = mfa_serial;\n        params.TokenCode = await options.mfaCodeProvider(mfa_serial);\n    }\n    const sourceCreds = await sourceCredsProvider;\n    return options.roleAssumer(sourceCreds, params);\n};\n","import { fromEnv } from \"@aws-sdk/credential-provider-env\";\nimport { fromContainerMetadata, fromInstanceMetadata } from \"@aws-sdk/credential-provider-imds\";\nimport { CredentialsProviderError } from \"@aws-sdk/property-provider\";\nexport const resolveCredentialSource = (credentialSource, profileName) => {\n    const sourceProvidersMap = {\n        EcsContainer: fromContainerMetadata,\n        Ec2InstanceMetadata: fromInstanceMetadata,\n        Environment: fromEnv,\n    };\n    if (credentialSource in sourceProvidersMap) {\n        return sourceProvidersMap[credentialSource]();\n    }\n    else {\n        throw new CredentialsProviderError(`Unsupported credential source in profile ${profileName}. Got ${credentialSource}, ` +\n            `expected EcsContainer or Ec2InstanceMetadata or Environment.`);\n    }\n};\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"child_process\");","export const getValidatedProcessCredentials = (profileName, data) => {\n    if (data.Version !== 1) {\n        throw Error(`Profile ${profileName} credential_process did not return Version 1.`);\n    }\n    if (data.AccessKeyId === undefined || data.SecretAccessKey === undefined) {\n        throw Error(`Profile ${profileName} credential_process returned invalid credentials.`);\n    }\n    if (data.Expiration) {\n        const currentTime = new Date();\n        const expireTime = new Date(data.Expiration);\n        if (expireTime < currentTime) {\n            throw Error(`Profile ${profileName} credential_process returned expired credentials.`);\n        }\n    }\n    return {\n        accessKeyId: data.AccessKeyId,\n        secretAccessKey: data.SecretAccessKey,\n        ...(data.SessionToken && { sessionToken: data.SessionToken }),\n        ...(data.Expiration && { expiration: new Date(data.Expiration) }),\n    };\n};\n","import { CredentialsProviderError } from \"@aws-sdk/property-provider\";\nimport { exec } from \"child_process\";\nimport { promisify } from \"util\";\nimport { getValidatedProcessCredentials } from \"./getValidatedProcessCredentials\";\nexport const resolveProcessCredentials = async (profileName, profiles) => {\n    const profile = profiles[profileName];\n    if (profiles[profileName]) {\n        const credentialProcess = profile[\"credential_process\"];\n        if (credentialProcess !== undefined) {\n            const execPromise = promisify(exec);\n            try {\n                const { stdout } = await execPromise(credentialProcess);\n                let data;\n                try {\n                    data = JSON.parse(stdout.trim());\n                }\n                catch {\n                    throw Error(`Profile ${profileName} credential_process returned invalid JSON.`);\n                }\n                return getValidatedProcessCredentials(profileName, data);\n            }\n            catch (error) {\n                throw new CredentialsProviderError(error.message);\n            }\n        }\n        else {\n            throw new CredentialsProviderError(`Profile ${profileName} did not contain credential_process.`);\n        }\n    }\n    else {\n        throw new CredentialsProviderError(`Profile ${profileName} could not be found in shared credentials file.`);\n    }\n};\n","import { getProfileName, parseKnownFiles } from \"@aws-sdk/shared-ini-file-loader\";\nimport { resolveProcessCredentials } from \"./resolveProcessCredentials\";\nexport const fromProcess = (init = {}) => async () => {\n    const profiles = await parseKnownFiles(init);\n    return resolveProcessCredentials(getProfileName(init), profiles);\n};\n","export const isSsoProfile = (arg) => arg &&\n    (typeof arg.sso_start_url === \"string\" ||\n        typeof arg.sso_account_id === \"string\" ||\n        typeof arg.sso_session === \"string\" ||\n        typeof arg.sso_region === \"string\" ||\n        typeof arg.sso_role_name === \"string\");\n","import { isArrayBuffer } from \"@aws-sdk/is-array-buffer\";\nimport { Buffer } from \"buffer\";\nexport const fromArrayBuffer = (input, offset = 0, length = input.byteLength - offset) => {\n    if (!isArrayBuffer(input)) {\n        throw new TypeError(`The \"input\" argument must be ArrayBuffer. Received type ${typeof input} (${input})`);\n    }\n    return Buffer.from(input, offset, length);\n};\nexport const fromString = (input, encoding) => {\n    if (typeof input !== \"string\") {\n        throw new TypeError(`The \"input\" argument must be of type string. Received type ${typeof input} (${input})`);\n    }\n    return encoding ? Buffer.from(input, encoding) : Buffer.from(input);\n};\n","import { fromArrayBuffer, fromString } from \"@aws-sdk/util-buffer-from\";\nimport { Buffer } from \"buffer\";\nimport { createHash, createHmac } from \"crypto\";\nexport class Hash {\n    constructor(algorithmIdentifier, secret) {\n        this.hash = secret ? createHmac(algorithmIdentifier, castSourceData(secret)) : createHash(algorithmIdentifier);\n    }\n    update(toHash, encoding) {\n        this.hash.update(castSourceData(toHash, encoding));\n    }\n    digest() {\n        return Promise.resolve(this.hash.digest());\n    }\n}\nfunction castSourceData(toCast, encoding) {\n    if (Buffer.isBuffer(toCast)) {\n        return toCast;\n    }\n    if (typeof toCast === \"string\") {\n        return fromString(toCast, encoding);\n    }\n    if (ArrayBuffer.isView(toCast)) {\n        return fromArrayBuffer(toCast.buffer, toCast.byteOffset, toCast.byteLength);\n    }\n    return fromArrayBuffer(toCast);\n}\n","export const NODEJS_TIMEOUT_ERROR_CODES = [\"ECONNRESET\", \"EPIPE\", \"ETIMEDOUT\"];\n","const getTransformedHeaders = (headers) => {\n    const transformedHeaders = {};\n    for (const name of Object.keys(headers)) {\n        const headerValues = headers[name];\n        transformedHeaders[name] = Array.isArray(headerValues) ? headerValues.join(\",\") : headerValues;\n    }\n    return transformedHeaders;\n};\nexport { getTransformedHeaders };\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"stream\");","import { Readable } from \"stream\";\nexport function writeRequestBody(httpRequest, request) {\n    const expect = request.headers[\"Expect\"] || request.headers[\"expect\"];\n    if (expect === \"100-continue\") {\n        httpRequest.on(\"continue\", () => {\n            writeBody(httpRequest, request.body);\n        });\n    }\n    else {\n        writeBody(httpRequest, request.body);\n    }\n}\nfunction writeBody(httpRequest, body) {\n    if (body instanceof Readable) {\n        body.pipe(httpRequest);\n    }\n    else if (body) {\n        httpRequest.end(Buffer.from(body));\n    }\n    else {\n        httpRequest.end();\n    }\n}\n","import { HttpResponse } from \"@aws-sdk/protocol-http\";\nimport { buildQueryString } from \"@aws-sdk/querystring-builder\";\nimport { Agent as hAgent, request as hRequest } from \"http\";\nimport { Agent as hsAgent, request as hsRequest } from \"https\";\nimport { NODEJS_TIMEOUT_ERROR_CODES } from \"./constants\";\nimport { getTransformedHeaders } from \"./get-transformed-headers\";\nimport { setConnectionTimeout } from \"./set-connection-timeout\";\nimport { setSocketTimeout } from \"./set-socket-timeout\";\nimport { writeRequestBody } from \"./write-request-body\";\nexport class NodeHttpHandler {\n    constructor(options) {\n        this.metadata = { handlerProtocol: \"http/1.1\" };\n        this.configProvider = new Promise((resolve, reject) => {\n            if (typeof options === \"function\") {\n                options()\n                    .then((_options) => {\n                    resolve(this.resolveDefaultConfig(_options));\n                })\n                    .catch(reject);\n            }\n            else {\n                resolve(this.resolveDefaultConfig(options));\n            }\n        });\n    }\n    resolveDefaultConfig(options) {\n        const { connectionTimeout, socketTimeout, httpAgent, httpsAgent } = options || {};\n        const keepAlive = true;\n        const maxSockets = 50;\n        return {\n            connectionTimeout,\n            socketTimeout,\n            httpAgent: httpAgent || new hAgent({ keepAlive, maxSockets }),\n            httpsAgent: httpsAgent || new hsAgent({ keepAlive, maxSockets }),\n        };\n    }\n    destroy() {\n        this.config?.httpAgent?.destroy();\n        this.config?.httpsAgent?.destroy();\n    }\n    async handle(request, { abortSignal } = {}) {\n        if (!this.config) {\n            this.config = await this.configProvider;\n        }\n        return new Promise((resolve, reject) => {\n            if (!this.config) {\n                throw new Error(\"Node HTTP request handler config is not resolved\");\n            }\n            if (abortSignal?.aborted) {\n                const abortError = new Error(\"Request aborted\");\n                abortError.name = \"AbortError\";\n                reject(abortError);\n                return;\n            }\n            const isSSL = request.protocol === \"https:\";\n            const queryString = buildQueryString(request.query || {});\n            const nodeHttpsOptions = {\n                headers: request.headers,\n                host: request.hostname,\n                method: request.method,\n                path: queryString ? `${request.path}?${queryString}` : request.path,\n                port: request.port,\n                agent: isSSL ? this.config.httpsAgent : this.config.httpAgent,\n            };\n            const requestFunc = isSSL ? hsRequest : hRequest;\n            const req = requestFunc(nodeHttpsOptions, (res) => {\n                const httpResponse = new HttpResponse({\n                    statusCode: res.statusCode || -1,\n                    headers: getTransformedHeaders(res.headers),\n                    body: res,\n                });\n                resolve({ response: httpResponse });\n            });\n            req.on(\"error\", (err) => {\n                if (NODEJS_TIMEOUT_ERROR_CODES.includes(err.code)) {\n                    reject(Object.assign(err, { name: \"TimeoutError\" }));\n                }\n                else {\n                    reject(err);\n                }\n            });\n            setConnectionTimeout(req, reject, this.config.connectionTimeout);\n            setSocketTimeout(req, reject, this.config.socketTimeout);\n            if (abortSignal) {\n                abortSignal.onabort = () => {\n                    req.abort();\n                    const abortError = new Error(\"Request aborted\");\n                    abortError.name = \"AbortError\";\n                    reject(abortError);\n                };\n            }\n            writeRequestBody(req, request);\n        });\n    }\n}\n","import { escapeUri } from \"@aws-sdk/util-uri-escape\";\nexport function buildQueryString(query) {\n    const parts = [];\n    for (let key of Object.keys(query).sort()) {\n        const value = query[key];\n        key = escapeUri(key);\n        if (Array.isArray(value)) {\n            for (let i = 0, iLen = value.length; i < iLen; i++) {\n                parts.push(`${key}=${escapeUri(value[i])}`);\n            }\n        }\n        else {\n            let qsEntry = key;\n            if (value || typeof value === \"string\") {\n                qsEntry += `=${escapeUri(value)}`;\n            }\n            parts.push(qsEntry);\n        }\n    }\n    return parts.join(\"&\");\n}\n","export const setConnectionTimeout = (request, reject, timeoutInMs = 0) => {\n    if (!timeoutInMs) {\n        return;\n    }\n    request.on(\"socket\", (socket) => {\n        if (socket.connecting) {\n            const timeoutId = setTimeout(() => {\n                request.destroy();\n                reject(Object.assign(new Error(`Socket timed out without establishing a connection within ${timeoutInMs} ms`), {\n                    name: \"TimeoutError\",\n                }));\n            }, timeoutInMs);\n            socket.on(\"connect\", () => {\n                clearTimeout(timeoutId);\n            });\n        }\n    });\n};\n","export const setSocketTimeout = (request, reject, timeoutInMs = 0) => {\n    request.setTimeout(timeoutInMs, () => {\n        request.destroy();\n        reject(Object.assign(new Error(`Connection timed out after ${timeoutInMs} ms`), { name: \"TimeoutError\" }));\n    });\n};\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"http2\");","import { Writable } from \"stream\";\nexport class Collector extends Writable {\n    constructor() {\n        super(...arguments);\n        this.bufferedBytes = [];\n    }\n    _write(chunk, encoding, callback) {\n        this.bufferedBytes.push(chunk);\n        callback();\n    }\n}\n","import { Collector } from \"./collector\";\nexport const streamCollector = (stream) => new Promise((resolve, reject) => {\n    const collector = new Collector();\n    stream.pipe(collector);\n    stream.on(\"error\", (err) => {\n        collector.end();\n        reject(err);\n    });\n    collector.on(\"error\", reject);\n    collector.on(\"finish\", function () {\n        const bytes = new Uint8Array(Buffer.concat(this.bufferedBytes));\n        resolve(bytes);\n    });\n});\n","import { fstatSync, lstatSync } from \"fs\";\nexport const calculateBodyLength = (body) => {\n    if (!body) {\n        return 0;\n    }\n    if (typeof body === \"string\") {\n        return Buffer.from(body).length;\n    }\n    else if (typeof body.byteLength === \"number\") {\n        return body.byteLength;\n    }\n    else if (typeof body.size === \"number\") {\n        return body.size;\n    }\n    else if (typeof body.path === \"string\" || Buffer.isBuffer(body.path)) {\n        return lstatSync(body.path).size;\n    }\n    else if (typeof body.fd === \"number\") {\n        return fstatSync(body.fd).size;\n    }\n    throw new Error(`Body Length computation failed for ${body}`);\n};\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"process\");","import { loadConfig } from \"@aws-sdk/node-config-provider\";\nimport { platform, release } from \"os\";\nimport { env, versions } from \"process\";\nimport { isCrtAvailable } from \"./is-crt-available\";\nexport const UA_APP_ID_ENV_NAME = \"AWS_SDK_UA_APP_ID\";\nexport const UA_APP_ID_INI_NAME = \"sdk-ua-app-id\";\nexport const defaultUserAgent = ({ serviceId, clientVersion }) => {\n    const sections = [\n        [\"aws-sdk-js\", clientVersion],\n        [`os/${platform()}`, release()],\n        [\"lang/js\"],\n        [\"md/nodejs\", `${versions.node}`],\n    ];\n    const crtAvailable = isCrtAvailable();\n    if (crtAvailable) {\n        sections.push(crtAvailable);\n    }\n    if (serviceId) {\n        sections.push([`api/${serviceId}`, clientVersion]);\n    }\n    if (env.AWS_EXECUTION_ENV) {\n        sections.push([`exec-env/${env.AWS_EXECUTION_ENV}`]);\n    }\n    const appIdPromise = loadConfig({\n        environmentVariableSelector: (env) => env[UA_APP_ID_ENV_NAME],\n        configFileSelector: (profile) => profile[UA_APP_ID_INI_NAME],\n        default: undefined,\n    })();\n    let resolvedUserAgent = undefined;\n    return async () => {\n        if (!resolvedUserAgent) {\n            const appId = await appIdPromise;\n            resolvedUserAgent = appId ? [...sections, [`app/${appId}`]] : [...sections];\n        }\n        return resolvedUserAgent;\n    };\n};\n","import { fromArrayBuffer, fromString } from \"@aws-sdk/util-buffer-from\";\nexport const fromUtf8 = (input) => {\n    const buf = fromString(input, \"utf8\");\n    return new Uint8Array(buf.buffer, buf.byteOffset, buf.byteLength / Uint8Array.BYTES_PER_ELEMENT);\n};\nexport const toUtf8 = (input) => fromArrayBuffer(input.buffer, input.byteOffset, input.byteLength).toString(\"utf8\");\n","import { fromString } from \"@aws-sdk/util-buffer-from\";\nconst BASE64_REGEX = /^[A-Za-z0-9+/]*={0,2}$/;\nexport const fromBase64 = (input) => {\n    if ((input.length * 3) % 4 !== 0) {\n        throw new TypeError(`Incorrect padding on base64 string.`);\n    }\n    if (!BASE64_REGEX.exec(input)) {\n        throw new TypeError(`Invalid base64 string.`);\n    }\n    const buffer = fromString(input, \"base64\");\n    return new Uint8Array(buffer.buffer, buffer.byteOffset, buffer.byteLength);\n};\n","import { fromArrayBuffer } from \"@aws-sdk/util-buffer-from\";\nexport const toBase64 = (input) => fromArrayBuffer(input.buffer, input.byteOffset, input.byteLength).toString(\"base64\");\n","import partitionsInfo from \"./partitions.json\";\nconst { partitions } = partitionsInfo;\nconst DEFAULT_PARTITION = partitions.find((partition) => partition.id === \"aws\");\nexport const partition = (value) => {\n    for (const partition of partitions) {\n        const { regions, outputs } = partition;\n        for (const [region, regionData] of Object.entries(regions)) {\n            if (region === value) {\n                return {\n                    ...outputs,\n                    ...regionData,\n                };\n            }\n        }\n    }\n    for (const partition of partitions) {\n        const { regionRegex, outputs } = partition;\n        if (new RegExp(regionRegex).test(value)) {\n            return {\n                ...outputs,\n            };\n        }\n    }\n    if (!DEFAULT_PARTITION) {\n        throw new Error(\"Provided region was not found in the partition array or regex,\" +\n            \" and default partition with id 'aws' doesn't exist.\");\n    }\n    return {\n        ...DEFAULT_PARTITION.outputs,\n    };\n};\n","export const debugId = \"endpoints\";\n","export function toDebugString(input) {\n    if (typeof input !== \"object\" || input == null) {\n        return input;\n    }\n    if (\"ref\" in input) {\n        return `$${toDebugString(input.ref)}`;\n    }\n    if (\"fn\" in input) {\n        return `${input.fn}(${(input.argv || []).map(toDebugString).join(\", \")})`;\n    }\n    return JSON.stringify(input, null, 2);\n}\n","export class EndpointError extends Error {\n    constructor(message) {\n        super(message);\n        this.name = \"EndpointError\";\n    }\n}\n","const IP_V4_REGEX = new RegExp(`^(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)(?:\\\\.(?:25[0-5]|2[0-4]\\\\d|1\\\\d\\\\d|[1-9]\\\\d|\\\\d)){3}$`);\nexport const isIpAddress = (value) => IP_V4_REGEX.test(value) || (value.startsWith(\"[\") && value.endsWith(\"]\"));\n","const VALID_HOST_LABEL_REGEX = new RegExp(`^(?!.*-$)(?!-)[a-zA-Z0-9-]{1,63}$`);\nexport const isValidHostLabel = (value, allowSubDomains = false) => {\n    if (!allowSubDomains) {\n        return VALID_HOST_LABEL_REGEX.test(value);\n    }\n    const labels = value.split(\".\");\n    for (const label of labels) {\n        if (!isValidHostLabel(label)) {\n            return false;\n        }\n    }\n    return true;\n};\n","import { isIpAddress } from \"../isIpAddress\";\nimport { isValidHostLabel } from \"../isValidHostLabel\";\nexport const isVirtualHostableS3Bucket = (value, allowSubDomains = false) => {\n    if (allowSubDomains) {\n        for (const label of value.split(\".\")) {\n            if (!isVirtualHostableS3Bucket(label)) {\n                return false;\n            }\n        }\n        return true;\n    }\n    if (!isValidHostLabel(value)) {\n        return false;\n    }\n    if (value.length < 3 || value.length > 63) {\n        return false;\n    }\n    if (value !== value.toLowerCase()) {\n        return false;\n    }\n    if (isIpAddress(value)) {\n        return false;\n    }\n    return true;\n};\n","export const parseArn = (value) => {\n    const segments = value.split(\":\");\n    if (segments.length < 6)\n        return null;\n    const [arn, partition, service, region, accountId, ...resourceId] = segments;\n    if (arn !== \"arn\" || partition === \"\" || service === \"\" || resourceId[0] === \"\")\n        return null;\n    return {\n        partition,\n        service,\n        region,\n        accountId,\n        resourceId: resourceId[0].includes(\"/\") ? resourceId[0].split(\"/\") : resourceId,\n    };\n};\n","export const booleanEquals = (value1, value2) => value1 === value2;\n","import { EndpointError } from \"../types\";\nimport { getAttrPathList } from \"./getAttrPathList\";\nexport const getAttr = (value, path) => getAttrPathList(path).reduce((acc, index) => {\n    if (typeof acc !== \"object\") {\n        throw new EndpointError(`Index '${index}' in '${path}' not found in '${JSON.stringify(value)}'`);\n    }\n    else if (Array.isArray(acc)) {\n        return acc[parseInt(index)];\n    }\n    return acc[index];\n}, value);\n","import { EndpointError } from \"../types\";\nexport const getAttrPathList = (path) => {\n    const parts = path.split(\".\");\n    const pathList = [];\n    for (const part of parts) {\n        const squareBracketIndex = part.indexOf(\"[\");\n        if (squareBracketIndex !== -1) {\n            if (part.indexOf(\"]\") !== part.length - 1) {\n                throw new EndpointError(`Path: '${path}' does not end with ']'`);\n            }\n            const arrayIndex = part.slice(squareBracketIndex + 1, -1);\n            if (Number.isNaN(parseInt(arrayIndex))) {\n                throw new EndpointError(`Invalid array index: '${arrayIndex}' in path: '${path}'`);\n            }\n            if (squareBracketIndex !== 0) {\n                pathList.push(part.slice(0, squareBracketIndex));\n            }\n            pathList.push(arrayIndex);\n        }\n        else {\n            pathList.push(part);\n        }\n    }\n    return pathList;\n};\n","export const isSet = (value) => value != null;\n","export const not = (value) => !value;\n","export var EndpointURLScheme;\n(function (EndpointURLScheme) {\n    EndpointURLScheme[\"HTTP\"] = \"http\";\n    EndpointURLScheme[\"HTTPS\"] = \"https\";\n})(EndpointURLScheme || (EndpointURLScheme = {}));\n","import { EndpointURLScheme } from \"@aws-sdk/types\";\nimport { isIpAddress } from \"./isIpAddress\";\nconst DEFAULT_PORTS = {\n    [EndpointURLScheme.HTTP]: 80,\n    [EndpointURLScheme.HTTPS]: 443,\n};\nexport const parseURL = (value) => {\n    const whatwgURL = (() => {\n        try {\n            if (value instanceof URL) {\n                return value;\n            }\n            if (typeof value === \"object\" && \"hostname\" in value) {\n                const { hostname, port, protocol = \"\", path = \"\", query = {} } = value;\n                const url = new URL(`${protocol}//${hostname}${port ? `:${port}` : \"\"}${path}`);\n                url.search = Object.entries(query)\n                    .map(([k, v]) => `${k}=${v}`)\n                    .join(\"&\");\n                return url;\n            }\n            return new URL(value);\n        }\n        catch (error) {\n            return null;\n        }\n    })();\n    if (!whatwgURL) {\n        console.error(`Unable to parse ${JSON.stringify(value)} as a whatwg URL.`);\n        return null;\n    }\n    const urlString = whatwgURL.href;\n    const { host, hostname, pathname, protocol, search } = whatwgURL;\n    if (search) {\n        return null;\n    }\n    const scheme = protocol.slice(0, -1);\n    if (!Object.values(EndpointURLScheme).includes(scheme)) {\n        return null;\n    }\n    const isIp = isIpAddress(hostname);\n    const inputContainsDefaultPort = urlString.includes(`${host}:${DEFAULT_PORTS[scheme]}`) ||\n        (typeof value === \"string\" && value.includes(`${host}:${DEFAULT_PORTS[scheme]}`));\n    const authority = `${host}${inputContainsDefaultPort ? `:${DEFAULT_PORTS[scheme]}` : ``}`;\n    return {\n        scheme,\n        authority,\n        path: pathname,\n        normalizedPath: pathname.endsWith(\"/\") ? pathname : `${pathname}/`,\n        isIp,\n    };\n};\n","export const stringEquals = (value1, value2) => value1 === value2;\n","export const substring = (input, start, stop, reverse) => {\n    if (start >= stop || input.length < stop) {\n        return null;\n    }\n    if (!reverse) {\n        return input.substring(start, stop);\n    }\n    return input.substring(input.length - stop, input.length - start);\n};\n","export const uriEncode = (value) => encodeURIComponent(value).replace(/[!*'()]/g, (c) => `%${c.charCodeAt(0).toString(16).toUpperCase()}`);\n","import { getAttr } from \"../lib\";\nexport const evaluateTemplate = (template, options) => {\n    const evaluatedTemplateArr = [];\n    const templateContext = {\n        ...options.endpointParams,\n        ...options.referenceRecord,\n    };\n    let currentIndex = 0;\n    while (currentIndex < template.length) {\n        const openingBraceIndex = template.indexOf(\"{\", currentIndex);\n        if (openingBraceIndex === -1) {\n            evaluatedTemplateArr.push(template.slice(currentIndex));\n            break;\n        }\n        evaluatedTemplateArr.push(template.slice(currentIndex, openingBraceIndex));\n        const closingBraceIndex = template.indexOf(\"}\", openingBraceIndex);\n        if (closingBraceIndex === -1) {\n            evaluatedTemplateArr.push(template.slice(openingBraceIndex));\n            break;\n        }\n        if (template[openingBraceIndex + 1] === \"{\" && template[closingBraceIndex + 1] === \"}\") {\n            evaluatedTemplateArr.push(template.slice(openingBraceIndex + 1, closingBraceIndex));\n            currentIndex = closingBraceIndex + 2;\n        }\n        const parameterName = template.substring(openingBraceIndex + 1, closingBraceIndex);\n        if (parameterName.includes(\"#\")) {\n            const [refName, attrName] = parameterName.split(\"#\");\n            evaluatedTemplateArr.push(getAttr(templateContext[refName], attrName));\n        }\n        else {\n            evaluatedTemplateArr.push(templateContext[parameterName]);\n        }\n        currentIndex = closingBraceIndex + 1;\n    }\n    return evaluatedTemplateArr.join(\"\");\n};\n","import { EndpointError } from \"../types\";\nimport { callFunction } from \"./callFunction\";\nimport { evaluateTemplate } from \"./evaluateTemplate\";\nimport { getReferenceValue } from \"./getReferenceValue\";\nexport const evaluateExpression = (obj, keyName, options) => {\n    if (typeof obj === \"string\") {\n        return evaluateTemplate(obj, options);\n    }\n    else if (obj[\"fn\"]) {\n        return callFunction(obj, options);\n    }\n    else if (obj[\"ref\"]) {\n        return getReferenceValue(obj, options);\n    }\n    throw new EndpointError(`'${keyName}': ${String(obj)} is not a string, function or reference.`);\n};\n","export const getReferenceValue = ({ ref }, options) => {\n    const referenceRecord = {\n        ...options.endpointParams,\n        ...options.referenceRecord,\n    };\n    return referenceRecord[ref];\n};\n","import * as lib from \"../lib\";\nimport { evaluateExpression } from \"./evaluateExpression\";\nexport const callFunction = ({ fn, argv }, options) => {\n    const evaluatedArgs = argv.map((arg) => [\"boolean\", \"number\"].includes(typeof arg) ? arg : evaluateExpression(arg, \"arg\", options));\n    return fn.split(\".\").reduce((acc, key) => acc[key], lib)(...evaluatedArgs);\n};\n","import { debugId, toDebugString } from \"../debug\";\nimport { EndpointError } from \"../types\";\nimport { callFunction } from \"./callFunction\";\nexport const evaluateCondition = ({ assign, ...fnArgs }, options) => {\n    if (assign && assign in options.referenceRecord) {\n        throw new EndpointError(`'${assign}' is already defined in Reference Record.`);\n    }\n    const value = callFunction(fnArgs, options);\n    options.logger?.debug?.(debugId, `evaluateCondition: ${toDebugString(fnArgs)} = ${toDebugString(value)}`);\n    return {\n        result: value === \"\" ? true : !!value,\n        ...(assign != null && { toAssign: { name: assign, value } }),\n    };\n};\n","import { debugId, toDebugString } from \"../debug\";\nimport { evaluateCondition } from \"./evaluateCondition\";\nexport const evaluateConditions = (conditions = [], options) => {\n    const conditionsReferenceRecord = {};\n    for (const condition of conditions) {\n        const { result, toAssign } = evaluateCondition(condition, {\n            ...options,\n            referenceRecord: {\n                ...options.referenceRecord,\n                ...conditionsReferenceRecord,\n            },\n        });\n        if (!result) {\n            return { result };\n        }\n        if (toAssign) {\n            conditionsReferenceRecord[toAssign.name] = toAssign.value;\n            options.logger?.debug?.(debugId, `assign: ${toAssign.name} := ${toDebugString(toAssign.value)}`);\n        }\n    }\n    return { result: true, referenceRecord: conditionsReferenceRecord };\n};\n","import { EndpointError } from \"../types\";\nimport { evaluateExpression } from \"./evaluateExpression\";\nexport const getEndpointHeaders = (headers, options) => Object.entries(headers).reduce((acc, [headerKey, headerVal]) => ({\n    ...acc,\n    [headerKey]: headerVal.map((headerValEntry) => {\n        const processedExpr = evaluateExpression(headerValEntry, \"Header value entry\", options);\n        if (typeof processedExpr !== \"string\") {\n            throw new EndpointError(`Header '${headerKey}' value '${processedExpr}' is not a string`);\n        }\n        return processedExpr;\n    }),\n}), {});\n","import { EndpointError } from \"../types\";\nimport { evaluateTemplate } from \"./evaluateTemplate\";\nimport { getEndpointProperties } from \"./getEndpointProperties\";\nexport const getEndpointProperty = (property, options) => {\n    if (Array.isArray(property)) {\n        return property.map((propertyEntry) => getEndpointProperty(propertyEntry, options));\n    }\n    switch (typeof property) {\n        case \"string\":\n            return evaluateTemplate(property, options);\n        case \"object\":\n            if (property === null) {\n                throw new EndpointError(`Unexpected endpoint property: ${property}`);\n            }\n            return getEndpointProperties(property, options);\n        case \"boolean\":\n            return property;\n        default:\n            throw new EndpointError(`Unexpected endpoint property type: ${typeof property}`);\n    }\n};\n","import { getEndpointProperty } from \"./getEndpointProperty\";\nexport const getEndpointProperties = (properties, options) => Object.entries(properties).reduce((acc, [propertyKey, propertyVal]) => ({\n    ...acc,\n    [propertyKey]: getEndpointProperty(propertyVal, options),\n}), {});\n","import { EndpointError } from \"../types\";\nimport { evaluateExpression } from \"./evaluateExpression\";\nexport const getEndpointUrl = (endpointUrl, options) => {\n    const expression = evaluateExpression(endpointUrl, \"Endpoint URL\", options);\n    if (typeof expression === \"string\") {\n        try {\n            return new URL(expression);\n        }\n        catch (error) {\n            console.error(`Failed to construct URL with ${expression}`, error);\n            throw error;\n        }\n    }\n    throw new EndpointError(`Endpoint URL must be a string, got ${typeof expression}`);\n};\n","import { debugId, toDebugString } from \"../debug\";\nimport { evaluateConditions } from \"./evaluateConditions\";\nimport { getEndpointHeaders } from \"./getEndpointHeaders\";\nimport { getEndpointProperties } from \"./getEndpointProperties\";\nimport { getEndpointUrl } from \"./getEndpointUrl\";\nexport const evaluateEndpointRule = (endpointRule, options) => {\n    const { conditions, endpoint } = endpointRule;\n    const { result, referenceRecord } = evaluateConditions(conditions, options);\n    if (!result) {\n        return;\n    }\n    const endpointRuleOptions = {\n        ...options,\n        referenceRecord: { ...options.referenceRecord, ...referenceRecord },\n    };\n    const { url, properties, headers } = endpoint;\n    options.logger?.debug?.(debugId, `Resolving endpoint from template: ${toDebugString(endpoint)}`);\n    return {\n        ...(headers != undefined && {\n            headers: getEndpointHeaders(headers, endpointRuleOptions),\n        }),\n        ...(properties != undefined && {\n            properties: getEndpointProperties(properties, endpointRuleOptions),\n        }),\n        url: getEndpointUrl(url, endpointRuleOptions),\n    };\n};\n","import { EndpointError } from \"../types\";\nimport { evaluateConditions } from \"./evaluateConditions\";\nimport { evaluateExpression } from \"./evaluateExpression\";\nexport const evaluateErrorRule = (errorRule, options) => {\n    const { conditions, error } = errorRule;\n    const { result, referenceRecord } = evaluateConditions(conditions, options);\n    if (!result) {\n        return;\n    }\n    throw new EndpointError(evaluateExpression(error, \"Error\", {\n        ...options,\n        referenceRecord: { ...options.referenceRecord, ...referenceRecord },\n    }));\n};\n","import { evaluateConditions } from \"./evaluateConditions\";\nimport { evaluateRules } from \"./evaluateRules\";\nexport const evaluateTreeRule = (treeRule, options) => {\n    const { conditions, rules } = treeRule;\n    const { result, referenceRecord } = evaluateConditions(conditions, options);\n    if (!result) {\n        return;\n    }\n    return evaluateRules(rules, {\n        ...options,\n        referenceRecord: { ...options.referenceRecord, ...referenceRecord },\n    });\n};\n","import { EndpointError } from \"../types\";\nimport { evaluateEndpointRule } from \"./evaluateEndpointRule\";\nimport { evaluateErrorRule } from \"./evaluateErrorRule\";\nimport { evaluateTreeRule } from \"./evaluateTreeRule\";\nexport const evaluateRules = (rules, options) => {\n    for (const rule of rules) {\n        if (rule.type === \"endpoint\") {\n            const endpointOrUndefined = evaluateEndpointRule(rule, options);\n            if (endpointOrUndefined) {\n                return endpointOrUndefined;\n            }\n        }\n        else if (rule.type === \"error\") {\n            evaluateErrorRule(rule, options);\n        }\n        else if (rule.type === \"tree\") {\n            const endpointOrUndefined = evaluateTreeRule(rule, options);\n            if (endpointOrUndefined) {\n                return endpointOrUndefined;\n            }\n        }\n        else {\n            throw new EndpointError(`Unknown endpoint rule: ${rule}`);\n        }\n    }\n    throw new EndpointError(`Rules evaluation failed`);\n};\n","import { debugId, toDebugString } from \"./debug\";\nimport { EndpointError } from \"./types\";\nimport { evaluateRules } from \"./utils\";\nexport const resolveEndpoint = (ruleSetObject, options) => {\n    const { endpointParams, logger } = options;\n    const { parameters, rules } = ruleSetObject;\n    options.logger?.debug?.(debugId, `Initial EndpointParams: ${toDebugString(endpointParams)}`);\n    const paramsWithDefault = Object.entries(parameters)\n        .filter(([, v]) => v.default != null)\n        .map(([k, v]) => [k, v.default]);\n    if (paramsWithDefault.length > 0) {\n        for (const [paramKey, paramDefaultValue] of paramsWithDefault) {\n            endpointParams[paramKey] = endpointParams[paramKey] ?? paramDefaultValue;\n        }\n    }\n    const requiredParams = Object.entries(parameters)\n        .filter(([, v]) => v.required)\n        .map(([k]) => k);\n    for (const requiredParam of requiredParams) {\n        if (endpointParams[requiredParam] == null) {\n            throw new EndpointError(`Missing required parameter: '${requiredParam}'`);\n        }\n    }\n    const endpoint = evaluateRules(rules, { endpointParams, logger, referenceRecord: {} });\n    if (options.endpointParams?.Endpoint) {\n        try {\n            const givenEndpoint = new URL(options.endpointParams.Endpoint);\n            const { protocol, port } = givenEndpoint;\n            endpoint.url.protocol = protocol;\n            endpoint.url.port = port;\n        }\n        catch (e) {\n        }\n    }\n    options.logger?.debug?.(debugId, `Resolved endpoint: ${toDebugString(endpoint)}`);\n    return endpoint;\n};\n","const p = \"required\", q = \"fn\", r = \"argv\", s = \"ref\";\nconst a = \"PartitionResult\", b = \"tree\", c = \"error\", d = \"endpoint\", e = { [p]: false, \"type\": \"String\" }, f = { [p]: true, \"default\": false, \"type\": \"Boolean\" }, g = { [s]: \"Endpoint\" }, h = { [q]: \"booleanEquals\", [r]: [{ [s]: \"UseFIPS\" }, true] }, i = { [q]: \"booleanEquals\", [r]: [{ [s]: \"UseDualStack\" }, true] }, j = {}, k = { [q]: \"booleanEquals\", [r]: [true, { [q]: \"getAttr\", [r]: [{ [s]: a }, \"supportsFIPS\"] }] }, l = { [q]: \"booleanEquals\", [r]: [true, { [q]: \"getAttr\", [r]: [{ [s]: a }, \"supportsDualStack\"] }] }, m = [g], n = [h], o = [i];\nconst _data = { version: \"1.0\", parameters: { Region: e, UseDualStack: f, UseFIPS: f, Endpoint: e }, rules: [{ conditions: [{ [q]: \"aws.partition\", [r]: [{ [s]: \"Region\" }], assign: a }], type: b, rules: [{ conditions: [{ [q]: \"isSet\", [r]: m }, { [q]: \"parseURL\", [r]: m, assign: \"url\" }], type: b, rules: [{ conditions: n, error: \"Invalid Configuration: FIPS and custom endpoint are not supported\", type: c }, { type: b, rules: [{ conditions: o, error: \"Invalid Configuration: Dualstack and custom endpoint are not supported\", type: c }, { endpoint: { url: g, properties: j, headers: j }, type: d }] }] }, { conditions: [h, i], type: b, rules: [{ conditions: [k, l], type: b, rules: [{ endpoint: { url: \"https://portal.sso-fips.{Region}.{PartitionResult#dualStackDnsSuffix}\", properties: j, headers: j }, type: d }] }, { error: \"FIPS and DualStack are enabled, but this partition does not support one or both\", type: c }] }, { conditions: n, type: b, rules: [{ conditions: [k], type: b, rules: [{ type: b, rules: [{ endpoint: { url: \"https://portal.sso-fips.{Region}.{PartitionResult#dnsSuffix}\", properties: j, headers: j }, type: d }] }] }, { error: \"FIPS is enabled but this partition does not support FIPS\", type: c }] }, { conditions: o, type: b, rules: [{ conditions: [l], type: b, rules: [{ endpoint: { url: \"https://portal.sso.{Region}.{PartitionResult#dualStackDnsSuffix}\", properties: j, headers: j }, type: d }] }, { error: \"DualStack is enabled but this partition does not support DualStack\", type: c }] }, { endpoint: { url: \"https://portal.sso.{Region}.{PartitionResult#dnsSuffix}\", properties: j, headers: j }, type: d }] }] };\nexport const ruleSet = _data;\n","import { resolveEndpoint } from \"@aws-sdk/util-endpoints\";\nimport { ruleSet } from \"./ruleset\";\nexport const defaultEndpointResolver = (endpointParams, context = {}) => {\n    return resolveEndpoint(ruleSet, {\n        endpointParams: endpointParams,\n        logger: context.logger,\n    });\n};\n","export const AWS_EXECUTION_ENV = \"AWS_EXECUTION_ENV\";\nexport const AWS_REGION_ENV = \"AWS_REGION\";\nexport const AWS_DEFAULT_REGION_ENV = \"AWS_DEFAULT_REGION\";\nexport const ENV_IMDS_DISABLED = \"AWS_EC2_METADATA_DISABLED\";\nexport const DEFAULTS_MODE_OPTIONS = [\"in-region\", \"cross-region\", \"mobile\", \"standard\", \"legacy\"];\nexport const IMDS_REGION_PATH = \"/latest/meta-data/placement/region\";\n","const AWS_DEFAULTS_MODE_ENV = \"AWS_DEFAULTS_MODE\";\nconst AWS_DEFAULTS_MODE_CONFIG = \"defaults_mode\";\nexport const NODE_DEFAULTS_MODE_CONFIG_OPTIONS = {\n    environmentVariableSelector: (env) => {\n        return env[AWS_DEFAULTS_MODE_ENV];\n    },\n    configFileSelector: (profile) => {\n        return profile[AWS_DEFAULTS_MODE_CONFIG];\n    },\n    default: \"legacy\",\n};\n","import { NODE_REGION_CONFIG_OPTIONS } from \"@aws-sdk/config-resolver\";\nimport { getInstanceMetadataEndpoint, httpRequest } from \"@aws-sdk/credential-provider-imds\";\nimport { loadConfig } from \"@aws-sdk/node-config-provider\";\nimport { memoize } from \"@aws-sdk/property-provider\";\nimport { AWS_DEFAULT_REGION_ENV, AWS_EXECUTION_ENV, AWS_REGION_ENV, DEFAULTS_MODE_OPTIONS, ENV_IMDS_DISABLED, IMDS_REGION_PATH, } from \"./constants\";\nimport { NODE_DEFAULTS_MODE_CONFIG_OPTIONS } from \"./defaultsModeConfig\";\nexport const resolveDefaultsModeConfig = ({ region = loadConfig(NODE_REGION_CONFIG_OPTIONS), defaultsMode = loadConfig(NODE_DEFAULTS_MODE_CONFIG_OPTIONS), } = {}) => memoize(async () => {\n    const mode = typeof defaultsMode === \"function\" ? await defaultsMode() : defaultsMode;\n    switch (mode?.toLowerCase()) {\n        case \"auto\":\n            return resolveNodeDefaultsModeAuto(region);\n        case \"in-region\":\n        case \"cross-region\":\n        case \"mobile\":\n        case \"standard\":\n        case \"legacy\":\n            return Promise.resolve(mode?.toLocaleLowerCase());\n        case undefined:\n            return Promise.resolve(\"legacy\");\n        default:\n            throw new Error(`Invalid parameter for \"defaultsMode\", expect ${DEFAULTS_MODE_OPTIONS.join(\", \")}, got ${mode}`);\n    }\n});\nconst resolveNodeDefaultsModeAuto = async (clientRegion) => {\n    if (clientRegion) {\n        const resolvedRegion = typeof clientRegion === \"function\" ? await clientRegion() : clientRegion;\n        const inferredRegion = await inferPhysicalRegion();\n        if (!inferredRegion) {\n            return \"standard\";\n        }\n        if (resolvedRegion === inferredRegion) {\n            return \"in-region\";\n        }\n        else {\n            return \"cross-region\";\n        }\n    }\n    return \"standard\";\n};\nconst inferPhysicalRegion = async () => {\n    if (process.env[AWS_EXECUTION_ENV] && (process.env[AWS_REGION_ENV] || process.env[AWS_DEFAULT_REGION_ENV])) {\n        return process.env[AWS_REGION_ENV] ?? process.env[AWS_DEFAULT_REGION_ENV];\n    }\n    if (!process.env[ENV_IMDS_DISABLED]) {\n        try {\n            const endpoint = await getInstanceMetadataEndpoint();\n            return (await httpRequest({ ...endpoint, path: IMDS_REGION_PATH })).toString();\n        }\n        catch (e) {\n        }\n    }\n};\n","import packageInfo from \"../package.json\";\nimport { NODE_REGION_CONFIG_FILE_OPTIONS, NODE_REGION_CONFIG_OPTIONS, NODE_USE_DUALSTACK_ENDPOINT_CONFIG_OPTIONS, NODE_USE_FIPS_ENDPOINT_CONFIG_OPTIONS, } from \"@aws-sdk/config-resolver\";\nimport { Hash } from \"@aws-sdk/hash-node\";\nimport { NODE_MAX_ATTEMPT_CONFIG_OPTIONS, NODE_RETRY_MODE_CONFIG_OPTIONS } from \"@aws-sdk/middleware-retry\";\nimport { loadConfig as loadNodeConfig } from \"@aws-sdk/node-config-provider\";\nimport { NodeHttpHandler as RequestHandler, streamCollector } from \"@aws-sdk/node-http-handler\";\nimport { calculateBodyLength } from \"@aws-sdk/util-body-length-node\";\nimport { DEFAULT_RETRY_MODE } from \"@aws-sdk/util-retry\";\nimport { defaultUserAgent } from \"@aws-sdk/util-user-agent-node\";\nimport { fromUtf8, toUtf8 } from \"@aws-sdk/util-utf8-node\";\nimport { getRuntimeConfig as getSharedRuntimeConfig } from \"./runtimeConfig.shared\";\nimport { loadConfigsForDefaultMode } from \"@aws-sdk/smithy-client\";\nimport { resolveDefaultsModeConfig } from \"@aws-sdk/util-defaults-mode-node\";\nimport { emitWarningIfUnsupportedVersion } from \"@aws-sdk/smithy-client\";\nexport const getRuntimeConfig = (config) => {\n    emitWarningIfUnsupportedVersion(process.version);\n    const defaultsMode = resolveDefaultsModeConfig(config);\n    const defaultConfigProvider = () => defaultsMode().then(loadConfigsForDefaultMode);\n    const clientSharedValues = getSharedRuntimeConfig(config);\n    return {\n        ...clientSharedValues,\n        ...config,\n        runtime: \"node\",\n        defaultsMode,\n        bodyLengthChecker: config?.bodyLengthChecker ?? calculateBodyLength,\n        defaultUserAgentProvider: config?.defaultUserAgentProvider ??\n            defaultUserAgent({ serviceId: clientSharedValues.serviceId, clientVersion: packageInfo.version }),\n        maxAttempts: config?.maxAttempts ?? loadNodeConfig(NODE_MAX_ATTEMPT_CONFIG_OPTIONS),\n        region: config?.region ?? loadNodeConfig(NODE_REGION_CONFIG_OPTIONS, NODE_REGION_CONFIG_FILE_OPTIONS),\n        requestHandler: config?.requestHandler ?? new RequestHandler(defaultConfigProvider),\n        retryMode: config?.retryMode ??\n            loadNodeConfig({\n                ...NODE_RETRY_MODE_CONFIG_OPTIONS,\n                default: async () => (await defaultConfigProvider()).retryMode || DEFAULT_RETRY_MODE,\n            }),\n        sha256: config?.sha256 ?? Hash.bind(null, \"sha256\"),\n        streamCollector: config?.streamCollector ?? streamCollector,\n        useDualstackEndpoint: config?.useDualstackEndpoint ?? loadNodeConfig(NODE_USE_DUALSTACK_ENDPOINT_CONFIG_OPTIONS),\n        useFipsEndpoint: config?.useFipsEndpoint ?? loadNodeConfig(NODE_USE_FIPS_ENDPOINT_CONFIG_OPTIONS),\n        utf8Decoder: config?.utf8Decoder ?? fromUtf8,\n        utf8Encoder: config?.utf8Encoder ?? toUtf8,\n    };\n};\n","import { NoOpLogger } from \"@aws-sdk/smithy-client\";\nimport { parseUrl } from \"@aws-sdk/url-parser\";\nimport { fromBase64, toBase64 } from \"@aws-sdk/util-base64\";\nimport { defaultEndpointResolver } from \"./endpoint/endpointResolver\";\nexport const getRuntimeConfig = (config) => ({\n    apiVersion: \"2019-06-10\",\n    base64Decoder: config?.base64Decoder ?? fromBase64,\n    base64Encoder: config?.base64Encoder ?? toBase64,\n    disableHostPrefix: config?.disableHostPrefix ?? false,\n    endpointProvider: config?.endpointProvider ?? defaultEndpointResolver,\n    logger: config?.logger ?? new NoOpLogger(),\n    serviceId: config?.serviceId ?? \"SSO\",\n    urlParser: config?.urlParser ?? parseUrl,\n});\n","import { resolveRegionConfig } from \"@aws-sdk/config-resolver\";\nimport { getContentLengthPlugin } from \"@aws-sdk/middleware-content-length\";\nimport { resolveEndpointConfig } from \"@aws-sdk/middleware-endpoint\";\nimport { getHostHeaderPlugin, resolveHostHeaderConfig, } from \"@aws-sdk/middleware-host-header\";\nimport { getLoggerPlugin } from \"@aws-sdk/middleware-logger\";\nimport { getRecursionDetectionPlugin } from \"@aws-sdk/middleware-recursion-detection\";\nimport { getRetryPlugin, resolveRetryConfig } from \"@aws-sdk/middleware-retry\";\nimport { getUserAgentPlugin, resolveUserAgentConfig, } from \"@aws-sdk/middleware-user-agent\";\nimport { Client as __Client, } from \"@aws-sdk/smithy-client\";\nimport { resolveClientEndpointParameters, } from \"./endpoint/EndpointParameters\";\nimport { getRuntimeConfig as __getRuntimeConfig } from \"./runtimeConfig\";\nexport class SSOClient extends __Client {\n    constructor(configuration) {\n        const _config_0 = __getRuntimeConfig(configuration);\n        const _config_1 = resolveClientEndpointParameters(_config_0);\n        const _config_2 = resolveRegionConfig(_config_1);\n        const _config_3 = resolveEndpointConfig(_config_2);\n        const _config_4 = resolveRetryConfig(_config_3);\n        const _config_5 = resolveHostHeaderConfig(_config_4);\n        const _config_6 = resolveUserAgentConfig(_config_5);\n        super(_config_6);\n        this.config = _config_6;\n        this.middlewareStack.use(getRetryPlugin(this.config));\n        this.middlewareStack.use(getContentLengthPlugin(this.config));\n        this.middlewareStack.use(getHostHeaderPlugin(this.config));\n        this.middlewareStack.use(getLoggerPlugin(this.config));\n        this.middlewareStack.use(getRecursionDetectionPlugin(this.config));\n        this.middlewareStack.use(getUserAgentPlugin(this.config));\n    }\n    destroy() {\n        super.destroy();\n    }\n}\n","export const resolveClientEndpointParameters = (options) => {\n    return {\n        ...options,\n        useDualstackEndpoint: options.useDualstackEndpoint ?? false,\n        useFipsEndpoint: options.useFipsEndpoint ?? false,\n        defaultSigningName: \"awsssoportal\",\n    };\n};\n","import { ServiceException as __ServiceException, } from \"@aws-sdk/smithy-client\";\nexport class SSOServiceException extends __ServiceException {\n    constructor(options) {\n        super(options);\n        Object.setPrototypeOf(this, SSOServiceException.prototype);\n    }\n}\n","import { SENSITIVE_STRING } from \"@aws-sdk/smithy-client\";\nimport { SSOServiceException as __BaseException } from \"./SSOServiceException\";\nexport class InvalidRequestException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"InvalidRequestException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"InvalidRequestException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidRequestException.prototype);\n    }\n}\nexport class ResourceNotFoundException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"ResourceNotFoundException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"ResourceNotFoundException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, ResourceNotFoundException.prototype);\n    }\n}\nexport class TooManyRequestsException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"TooManyRequestsException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"TooManyRequestsException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, TooManyRequestsException.prototype);\n    }\n}\nexport class UnauthorizedException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"UnauthorizedException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"UnauthorizedException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, UnauthorizedException.prototype);\n    }\n}\nexport const AccountInfoFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const GetRoleCredentialsRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.accessToken && { accessToken: SENSITIVE_STRING }),\n});\nexport const RoleCredentialsFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.secretAccessKey && { secretAccessKey: SENSITIVE_STRING }),\n    ...(obj.sessionToken && { sessionToken: SENSITIVE_STRING }),\n});\nexport const GetRoleCredentialsResponseFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.roleCredentials && { roleCredentials: RoleCredentialsFilterSensitiveLog(obj.roleCredentials) }),\n});\nexport const ListAccountRolesRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.accessToken && { accessToken: SENSITIVE_STRING }),\n});\nexport const RoleInfoFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const ListAccountRolesResponseFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const ListAccountsRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.accessToken && { accessToken: SENSITIVE_STRING }),\n});\nexport const ListAccountsResponseFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const LogoutRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n    ...(obj.accessToken && { accessToken: SENSITIVE_STRING }),\n});\n","import { HttpRequest as __HttpRequest } from \"@aws-sdk/protocol-http\";\nimport { decorateServiceException as __decorateServiceException, expectLong as __expectLong, expectNonNull as __expectNonNull, expectObject as __expectObject, expectString as __expectString, map as __map, throwDefaultError, } from \"@aws-sdk/smithy-client\";\nimport { InvalidRequestException, ResourceNotFoundException, TooManyRequestsException, UnauthorizedException, } from \"../models/models_0\";\nimport { SSOServiceException as __BaseException } from \"../models/SSOServiceException\";\nexport const serializeAws_restJson1GetRoleCredentialsCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = map({}, isSerializableHeaderValue, {\n        \"x-amz-sso_bearer_token\": input.accessToken,\n    });\n    const resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/federation/credentials\";\n    const query = map({\n        role_name: [, __expectNonNull(input.roleName, `roleName`)],\n        account_id: [, __expectNonNull(input.accountId, `accountId`)],\n    });\n    let body;\n    return new __HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexport const serializeAws_restJson1ListAccountRolesCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = map({}, isSerializableHeaderValue, {\n        \"x-amz-sso_bearer_token\": input.accessToken,\n    });\n    const resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/assignment/roles\";\n    const query = map({\n        next_token: [, input.nextToken],\n        max_result: [() => input.maxResults !== void 0, () => input.maxResults.toString()],\n        account_id: [, __expectNonNull(input.accountId, `accountId`)],\n    });\n    let body;\n    return new __HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexport const serializeAws_restJson1ListAccountsCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = map({}, isSerializableHeaderValue, {\n        \"x-amz-sso_bearer_token\": input.accessToken,\n    });\n    const resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/assignment/accounts\";\n    const query = map({\n        next_token: [, input.nextToken],\n        max_result: [() => input.maxResults !== void 0, () => input.maxResults.toString()],\n    });\n    let body;\n    return new __HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"GET\",\n        headers,\n        path: resolvedPath,\n        query,\n        body,\n    });\n};\nexport const serializeAws_restJson1LogoutCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = map({}, isSerializableHeaderValue, {\n        \"x-amz-sso_bearer_token\": input.accessToken,\n    });\n    const resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/logout\";\n    let body;\n    return new __HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"POST\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexport const deserializeAws_restJson1GetRoleCredentialsCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return deserializeAws_restJson1GetRoleCredentialsCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n    if (data.roleCredentials != null) {\n        contents.roleCredentials = deserializeAws_restJson1RoleCredentials(data.roleCredentials, context);\n    }\n    return contents;\n};\nconst deserializeAws_restJson1GetRoleCredentialsCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InvalidRequestException\":\n        case \"com.amazonaws.sso#InvalidRequestException\":\n            throw await deserializeAws_restJson1InvalidRequestExceptionResponse(parsedOutput, context);\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.sso#ResourceNotFoundException\":\n            throw await deserializeAws_restJson1ResourceNotFoundExceptionResponse(parsedOutput, context);\n        case \"TooManyRequestsException\":\n        case \"com.amazonaws.sso#TooManyRequestsException\":\n            throw await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context);\n        case \"UnauthorizedException\":\n        case \"com.amazonaws.sso#UnauthorizedException\":\n            throw await deserializeAws_restJson1UnauthorizedExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            throwDefaultError({\n                output,\n                parsedBody,\n                exceptionCtor: __BaseException,\n                errorCode,\n            });\n    }\n};\nexport const deserializeAws_restJson1ListAccountRolesCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return deserializeAws_restJson1ListAccountRolesCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n    if (data.nextToken != null) {\n        contents.nextToken = __expectString(data.nextToken);\n    }\n    if (data.roleList != null) {\n        contents.roleList = deserializeAws_restJson1RoleListType(data.roleList, context);\n    }\n    return contents;\n};\nconst deserializeAws_restJson1ListAccountRolesCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InvalidRequestException\":\n        case \"com.amazonaws.sso#InvalidRequestException\":\n            throw await deserializeAws_restJson1InvalidRequestExceptionResponse(parsedOutput, context);\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.sso#ResourceNotFoundException\":\n            throw await deserializeAws_restJson1ResourceNotFoundExceptionResponse(parsedOutput, context);\n        case \"TooManyRequestsException\":\n        case \"com.amazonaws.sso#TooManyRequestsException\":\n            throw await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context);\n        case \"UnauthorizedException\":\n        case \"com.amazonaws.sso#UnauthorizedException\":\n            throw await deserializeAws_restJson1UnauthorizedExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            throwDefaultError({\n                output,\n                parsedBody,\n                exceptionCtor: __BaseException,\n                errorCode,\n            });\n    }\n};\nexport const deserializeAws_restJson1ListAccountsCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return deserializeAws_restJson1ListAccountsCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n    if (data.accountList != null) {\n        contents.accountList = deserializeAws_restJson1AccountListType(data.accountList, context);\n    }\n    if (data.nextToken != null) {\n        contents.nextToken = __expectString(data.nextToken);\n    }\n    return contents;\n};\nconst deserializeAws_restJson1ListAccountsCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InvalidRequestException\":\n        case \"com.amazonaws.sso#InvalidRequestException\":\n            throw await deserializeAws_restJson1InvalidRequestExceptionResponse(parsedOutput, context);\n        case \"ResourceNotFoundException\":\n        case \"com.amazonaws.sso#ResourceNotFoundException\":\n            throw await deserializeAws_restJson1ResourceNotFoundExceptionResponse(parsedOutput, context);\n        case \"TooManyRequestsException\":\n        case \"com.amazonaws.sso#TooManyRequestsException\":\n            throw await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context);\n        case \"UnauthorizedException\":\n        case \"com.amazonaws.sso#UnauthorizedException\":\n            throw await deserializeAws_restJson1UnauthorizedExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            throwDefaultError({\n                output,\n                parsedBody,\n                exceptionCtor: __BaseException,\n                errorCode,\n            });\n    }\n};\nexport const deserializeAws_restJson1LogoutCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return deserializeAws_restJson1LogoutCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    await collectBody(output.body, context);\n    return contents;\n};\nconst deserializeAws_restJson1LogoutCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InvalidRequestException\":\n        case \"com.amazonaws.sso#InvalidRequestException\":\n            throw await deserializeAws_restJson1InvalidRequestExceptionResponse(parsedOutput, context);\n        case \"TooManyRequestsException\":\n        case \"com.amazonaws.sso#TooManyRequestsException\":\n            throw await deserializeAws_restJson1TooManyRequestsExceptionResponse(parsedOutput, context);\n        case \"UnauthorizedException\":\n        case \"com.amazonaws.sso#UnauthorizedException\":\n            throw await deserializeAws_restJson1UnauthorizedExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            throwDefaultError({\n                output,\n                parsedBody,\n                exceptionCtor: __BaseException,\n                errorCode,\n            });\n    }\n};\nconst map = __map;\nconst deserializeAws_restJson1InvalidRequestExceptionResponse = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body;\n    if (data.message != null) {\n        contents.message = __expectString(data.message);\n    }\n    const exception = new InvalidRequestException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return __decorateServiceException(exception, parsedOutput.body);\n};\nconst deserializeAws_restJson1ResourceNotFoundExceptionResponse = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body;\n    if (data.message != null) {\n        contents.message = __expectString(data.message);\n    }\n    const exception = new ResourceNotFoundException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return __decorateServiceException(exception, parsedOutput.body);\n};\nconst deserializeAws_restJson1TooManyRequestsExceptionResponse = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body;\n    if (data.message != null) {\n        contents.message = __expectString(data.message);\n    }\n    const exception = new TooManyRequestsException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return __decorateServiceException(exception, parsedOutput.body);\n};\nconst deserializeAws_restJson1UnauthorizedExceptionResponse = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body;\n    if (data.message != null) {\n        contents.message = __expectString(data.message);\n    }\n    const exception = new UnauthorizedException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return __decorateServiceException(exception, parsedOutput.body);\n};\nconst deserializeAws_restJson1AccountInfo = (output, context) => {\n    return {\n        accountId: __expectString(output.accountId),\n        accountName: __expectString(output.accountName),\n        emailAddress: __expectString(output.emailAddress),\n    };\n};\nconst deserializeAws_restJson1AccountListType = (output, context) => {\n    const retVal = (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_restJson1AccountInfo(entry, context);\n    });\n    return retVal;\n};\nconst deserializeAws_restJson1RoleCredentials = (output, context) => {\n    return {\n        accessKeyId: __expectString(output.accessKeyId),\n        expiration: __expectLong(output.expiration),\n        secretAccessKey: __expectString(output.secretAccessKey),\n        sessionToken: __expectString(output.sessionToken),\n    };\n};\nconst deserializeAws_restJson1RoleInfo = (output, context) => {\n    return {\n        accountId: __expectString(output.accountId),\n        roleName: __expectString(output.roleName),\n    };\n};\nconst deserializeAws_restJson1RoleListType = (output, context) => {\n    const retVal = (output || [])\n        .filter((e) => e != null)\n        .map((entry) => {\n        if (entry === null) {\n            return null;\n        }\n        return deserializeAws_restJson1RoleInfo(entry, context);\n    });\n    return retVal;\n};\nconst deserializeMetadata = (output) => ({\n    httpStatusCode: output.statusCode,\n    requestId: output.headers[\"x-amzn-requestid\"] ?? output.headers[\"x-amzn-request-id\"] ?? output.headers[\"x-amz-request-id\"],\n    extendedRequestId: output.headers[\"x-amz-id-2\"],\n    cfId: output.headers[\"x-amz-cf-id\"],\n});\nconst collectBody = (streamBody = new Uint8Array(), context) => {\n    if (streamBody instanceof Uint8Array) {\n        return Promise.resolve(streamBody);\n    }\n    return context.streamCollector(streamBody) || Promise.resolve(new Uint8Array());\n};\nconst collectBodyString = (streamBody, context) => collectBody(streamBody, context).then((body) => context.utf8Encoder(body));\nconst isSerializableHeaderValue = (value) => value !== undefined &&\n    value !== null &&\n    value !== \"\" &&\n    (!Object.getOwnPropertyNames(value).includes(\"length\") || value.length != 0) &&\n    (!Object.getOwnPropertyNames(value).includes(\"size\") || value.size != 0);\nconst parseBody = (streamBody, context) => collectBodyString(streamBody, context).then((encoded) => {\n    if (encoded.length) {\n        return JSON.parse(encoded);\n    }\n    return {};\n});\nconst parseErrorBody = async (errorBody, context) => {\n    const value = await parseBody(errorBody, context);\n    value.message = value.message ?? value.Message;\n    return value;\n};\nconst loadRestJsonErrorCode = (output, data) => {\n    const findKey = (object, key) => Object.keys(object).find((k) => k.toLowerCase() === key.toLowerCase());\n    const sanitizeErrorCode = (rawValue) => {\n        let cleanValue = rawValue;\n        if (typeof cleanValue === \"number\") {\n            cleanValue = cleanValue.toString();\n        }\n        if (cleanValue.indexOf(\",\") >= 0) {\n            cleanValue = cleanValue.split(\",\")[0];\n        }\n        if (cleanValue.indexOf(\":\") >= 0) {\n            cleanValue = cleanValue.split(\":\")[0];\n        }\n        if (cleanValue.indexOf(\"#\") >= 0) {\n            cleanValue = cleanValue.split(\"#\")[1];\n        }\n        return cleanValue;\n    };\n    const headerKey = findKey(output.headers, \"x-amzn-errortype\");\n    if (headerKey !== undefined) {\n        return sanitizeErrorCode(output.headers[headerKey]);\n    }\n    if (data.code !== undefined) {\n        return sanitizeErrorCode(data.code);\n    }\n    if (data[\"__type\"] !== undefined) {\n        return sanitizeErrorCode(data[\"__type\"]);\n    }\n};\n","import { getEndpointPlugin } from \"@aws-sdk/middleware-endpoint\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\nimport { GetRoleCredentialsRequestFilterSensitiveLog, GetRoleCredentialsResponseFilterSensitiveLog, } from \"../models/models_0\";\nimport { deserializeAws_restJson1GetRoleCredentialsCommand, serializeAws_restJson1GetRoleCredentialsCommand, } from \"../protocols/Aws_restJson1\";\nexport class GetRoleCredentialsCommand extends $Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    static getEndpointParameterInstructions() {\n        return {\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use(getEndpointPlugin(configuration, GetRoleCredentialsCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"SSOClient\";\n        const commandName = \"GetRoleCredentialsCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: GetRoleCredentialsRequestFilterSensitiveLog,\n            outputFilterSensitiveLog: GetRoleCredentialsResponseFilterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return serializeAws_restJson1GetRoleCredentialsCommand(input, context);\n    }\n    deserialize(output, context) {\n        return deserializeAws_restJson1GetRoleCredentialsCommand(output, context);\n    }\n}\n","export const EXPIRE_WINDOW_MS = 5 * 60 * 1000;\nexport const REFRESH_MESSAGE = `To refresh this SSO session run 'aws sso login' with the corresponding profile.`;\n","import { ServiceException as __ServiceException, } from \"@aws-sdk/smithy-client\";\nexport class SSOOIDCServiceException extends __ServiceException {\n    constructor(options) {\n        super(options);\n        Object.setPrototypeOf(this, SSOOIDCServiceException.prototype);\n    }\n}\n","import { SSOOIDCServiceException as __BaseException } from \"./SSOOIDCServiceException\";\nexport class AccessDeniedException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"AccessDeniedException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"AccessDeniedException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, AccessDeniedException.prototype);\n        this.error = opts.error;\n        this.error_description = opts.error_description;\n    }\n}\nexport class AuthorizationPendingException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"AuthorizationPendingException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"AuthorizationPendingException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, AuthorizationPendingException.prototype);\n        this.error = opts.error;\n        this.error_description = opts.error_description;\n    }\n}\nexport class ExpiredTokenException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"ExpiredTokenException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"ExpiredTokenException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, ExpiredTokenException.prototype);\n        this.error = opts.error;\n        this.error_description = opts.error_description;\n    }\n}\nexport class InternalServerException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"InternalServerException\",\n            $fault: \"server\",\n            ...opts,\n        });\n        this.name = \"InternalServerException\";\n        this.$fault = \"server\";\n        Object.setPrototypeOf(this, InternalServerException.prototype);\n        this.error = opts.error;\n        this.error_description = opts.error_description;\n    }\n}\nexport class InvalidClientException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"InvalidClientException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"InvalidClientException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidClientException.prototype);\n        this.error = opts.error;\n        this.error_description = opts.error_description;\n    }\n}\nexport class InvalidGrantException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"InvalidGrantException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"InvalidGrantException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidGrantException.prototype);\n        this.error = opts.error;\n        this.error_description = opts.error_description;\n    }\n}\nexport class InvalidRequestException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"InvalidRequestException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"InvalidRequestException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidRequestException.prototype);\n        this.error = opts.error;\n        this.error_description = opts.error_description;\n    }\n}\nexport class InvalidScopeException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"InvalidScopeException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"InvalidScopeException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidScopeException.prototype);\n        this.error = opts.error;\n        this.error_description = opts.error_description;\n    }\n}\nexport class SlowDownException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"SlowDownException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"SlowDownException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, SlowDownException.prototype);\n        this.error = opts.error;\n        this.error_description = opts.error_description;\n    }\n}\nexport class UnauthorizedClientException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"UnauthorizedClientException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"UnauthorizedClientException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, UnauthorizedClientException.prototype);\n        this.error = opts.error;\n        this.error_description = opts.error_description;\n    }\n}\nexport class UnsupportedGrantTypeException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"UnsupportedGrantTypeException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"UnsupportedGrantTypeException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, UnsupportedGrantTypeException.prototype);\n        this.error = opts.error;\n        this.error_description = opts.error_description;\n    }\n}\nexport class InvalidClientMetadataException extends __BaseException {\n    constructor(opts) {\n        super({\n            name: \"InvalidClientMetadataException\",\n            $fault: \"client\",\n            ...opts,\n        });\n        this.name = \"InvalidClientMetadataException\";\n        this.$fault = \"client\";\n        Object.setPrototypeOf(this, InvalidClientMetadataException.prototype);\n        this.error = opts.error;\n        this.error_description = opts.error_description;\n    }\n}\nexport const CreateTokenRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const CreateTokenResponseFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const RegisterClientRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const RegisterClientResponseFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const StartDeviceAuthorizationRequestFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\nexport const StartDeviceAuthorizationResponseFilterSensitiveLog = (obj) => ({\n    ...obj,\n});\n","import { HttpRequest as __HttpRequest } from \"@aws-sdk/protocol-http\";\nimport { decorateServiceException as __decorateServiceException, expectInt32 as __expectInt32, expectLong as __expectLong, expectNonNull as __expectNonNull, expectObject as __expectObject, expectString as __expectString, map as __map, throwDefaultError, } from \"@aws-sdk/smithy-client\";\nimport { AccessDeniedException, AuthorizationPendingException, ExpiredTokenException, InternalServerException, InvalidClientException, InvalidClientMetadataException, InvalidGrantException, InvalidRequestException, InvalidScopeException, SlowDownException, UnauthorizedClientException, UnsupportedGrantTypeException, } from \"../models/models_0\";\nimport { SSOOIDCServiceException as __BaseException } from \"../models/SSOOIDCServiceException\";\nexport const serializeAws_restJson1CreateTokenCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {\n        \"content-type\": \"application/json\",\n    };\n    const resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/token\";\n    let body;\n    body = JSON.stringify({\n        ...(input.clientId != null && { clientId: input.clientId }),\n        ...(input.clientSecret != null && { clientSecret: input.clientSecret }),\n        ...(input.code != null && { code: input.code }),\n        ...(input.deviceCode != null && { deviceCode: input.deviceCode }),\n        ...(input.grantType != null && { grantType: input.grantType }),\n        ...(input.redirectUri != null && { redirectUri: input.redirectUri }),\n        ...(input.refreshToken != null && { refreshToken: input.refreshToken }),\n        ...(input.scope != null && { scope: serializeAws_restJson1Scopes(input.scope, context) }),\n    });\n    return new __HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"POST\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexport const serializeAws_restJson1RegisterClientCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {\n        \"content-type\": \"application/json\",\n    };\n    const resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/client/register\";\n    let body;\n    body = JSON.stringify({\n        ...(input.clientName != null && { clientName: input.clientName }),\n        ...(input.clientType != null && { clientType: input.clientType }),\n        ...(input.scopes != null && { scopes: serializeAws_restJson1Scopes(input.scopes, context) }),\n    });\n    return new __HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"POST\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexport const serializeAws_restJson1StartDeviceAuthorizationCommand = async (input, context) => {\n    const { hostname, protocol = \"https\", port, path: basePath } = await context.endpoint();\n    const headers = {\n        \"content-type\": \"application/json\",\n    };\n    const resolvedPath = `${basePath?.endsWith(\"/\") ? basePath.slice(0, -1) : basePath || \"\"}` + \"/device_authorization\";\n    let body;\n    body = JSON.stringify({\n        ...(input.clientId != null && { clientId: input.clientId }),\n        ...(input.clientSecret != null && { clientSecret: input.clientSecret }),\n        ...(input.startUrl != null && { startUrl: input.startUrl }),\n    });\n    return new __HttpRequest({\n        protocol,\n        hostname,\n        port,\n        method: \"POST\",\n        headers,\n        path: resolvedPath,\n        body,\n    });\n};\nexport const deserializeAws_restJson1CreateTokenCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return deserializeAws_restJson1CreateTokenCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n    if (data.accessToken != null) {\n        contents.accessToken = __expectString(data.accessToken);\n    }\n    if (data.expiresIn != null) {\n        contents.expiresIn = __expectInt32(data.expiresIn);\n    }\n    if (data.idToken != null) {\n        contents.idToken = __expectString(data.idToken);\n    }\n    if (data.refreshToken != null) {\n        contents.refreshToken = __expectString(data.refreshToken);\n    }\n    if (data.tokenType != null) {\n        contents.tokenType = __expectString(data.tokenType);\n    }\n    return contents;\n};\nconst deserializeAws_restJson1CreateTokenCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"AccessDeniedException\":\n        case \"com.amazonaws.ssooidc#AccessDeniedException\":\n            throw await deserializeAws_restJson1AccessDeniedExceptionResponse(parsedOutput, context);\n        case \"AuthorizationPendingException\":\n        case \"com.amazonaws.ssooidc#AuthorizationPendingException\":\n            throw await deserializeAws_restJson1AuthorizationPendingExceptionResponse(parsedOutput, context);\n        case \"ExpiredTokenException\":\n        case \"com.amazonaws.ssooidc#ExpiredTokenException\":\n            throw await deserializeAws_restJson1ExpiredTokenExceptionResponse(parsedOutput, context);\n        case \"InternalServerException\":\n        case \"com.amazonaws.ssooidc#InternalServerException\":\n            throw await deserializeAws_restJson1InternalServerExceptionResponse(parsedOutput, context);\n        case \"InvalidClientException\":\n        case \"com.amazonaws.ssooidc#InvalidClientException\":\n            throw await deserializeAws_restJson1InvalidClientExceptionResponse(parsedOutput, context);\n        case \"InvalidGrantException\":\n        case \"com.amazonaws.ssooidc#InvalidGrantException\":\n            throw await deserializeAws_restJson1InvalidGrantExceptionResponse(parsedOutput, context);\n        case \"InvalidRequestException\":\n        case \"com.amazonaws.ssooidc#InvalidRequestException\":\n            throw await deserializeAws_restJson1InvalidRequestExceptionResponse(parsedOutput, context);\n        case \"InvalidScopeException\":\n        case \"com.amazonaws.ssooidc#InvalidScopeException\":\n            throw await deserializeAws_restJson1InvalidScopeExceptionResponse(parsedOutput, context);\n        case \"SlowDownException\":\n        case \"com.amazonaws.ssooidc#SlowDownException\":\n            throw await deserializeAws_restJson1SlowDownExceptionResponse(parsedOutput, context);\n        case \"UnauthorizedClientException\":\n        case \"com.amazonaws.ssooidc#UnauthorizedClientException\":\n            throw await deserializeAws_restJson1UnauthorizedClientExceptionResponse(parsedOutput, context);\n        case \"UnsupportedGrantTypeException\":\n        case \"com.amazonaws.ssooidc#UnsupportedGrantTypeException\":\n            throw await deserializeAws_restJson1UnsupportedGrantTypeExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            throwDefaultError({\n                output,\n                parsedBody,\n                exceptionCtor: __BaseException,\n                errorCode,\n            });\n    }\n};\nexport const deserializeAws_restJson1RegisterClientCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return deserializeAws_restJson1RegisterClientCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n    if (data.authorizationEndpoint != null) {\n        contents.authorizationEndpoint = __expectString(data.authorizationEndpoint);\n    }\n    if (data.clientId != null) {\n        contents.clientId = __expectString(data.clientId);\n    }\n    if (data.clientIdIssuedAt != null) {\n        contents.clientIdIssuedAt = __expectLong(data.clientIdIssuedAt);\n    }\n    if (data.clientSecret != null) {\n        contents.clientSecret = __expectString(data.clientSecret);\n    }\n    if (data.clientSecretExpiresAt != null) {\n        contents.clientSecretExpiresAt = __expectLong(data.clientSecretExpiresAt);\n    }\n    if (data.tokenEndpoint != null) {\n        contents.tokenEndpoint = __expectString(data.tokenEndpoint);\n    }\n    return contents;\n};\nconst deserializeAws_restJson1RegisterClientCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalServerException\":\n        case \"com.amazonaws.ssooidc#InternalServerException\":\n            throw await deserializeAws_restJson1InternalServerExceptionResponse(parsedOutput, context);\n        case \"InvalidClientMetadataException\":\n        case \"com.amazonaws.ssooidc#InvalidClientMetadataException\":\n            throw await deserializeAws_restJson1InvalidClientMetadataExceptionResponse(parsedOutput, context);\n        case \"InvalidRequestException\":\n        case \"com.amazonaws.ssooidc#InvalidRequestException\":\n            throw await deserializeAws_restJson1InvalidRequestExceptionResponse(parsedOutput, context);\n        case \"InvalidScopeException\":\n        case \"com.amazonaws.ssooidc#InvalidScopeException\":\n            throw await deserializeAws_restJson1InvalidScopeExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            throwDefaultError({\n                output,\n                parsedBody,\n                exceptionCtor: __BaseException,\n                errorCode,\n            });\n    }\n};\nexport const deserializeAws_restJson1StartDeviceAuthorizationCommand = async (output, context) => {\n    if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return deserializeAws_restJson1StartDeviceAuthorizationCommandError(output, context);\n    }\n    const contents = map({\n        $metadata: deserializeMetadata(output),\n    });\n    const data = __expectNonNull(__expectObject(await parseBody(output.body, context)), \"body\");\n    if (data.deviceCode != null) {\n        contents.deviceCode = __expectString(data.deviceCode);\n    }\n    if (data.expiresIn != null) {\n        contents.expiresIn = __expectInt32(data.expiresIn);\n    }\n    if (data.interval != null) {\n        contents.interval = __expectInt32(data.interval);\n    }\n    if (data.userCode != null) {\n        contents.userCode = __expectString(data.userCode);\n    }\n    if (data.verificationUri != null) {\n        contents.verificationUri = __expectString(data.verificationUri);\n    }\n    if (data.verificationUriComplete != null) {\n        contents.verificationUriComplete = __expectString(data.verificationUriComplete);\n    }\n    return contents;\n};\nconst deserializeAws_restJson1StartDeviceAuthorizationCommandError = async (output, context) => {\n    const parsedOutput = {\n        ...output,\n        body: await parseErrorBody(output.body, context),\n    };\n    const errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n    switch (errorCode) {\n        case \"InternalServerException\":\n        case \"com.amazonaws.ssooidc#InternalServerException\":\n            throw await deserializeAws_restJson1InternalServerExceptionResponse(parsedOutput, context);\n        case \"InvalidClientException\":\n        case \"com.amazonaws.ssooidc#InvalidClientException\":\n            throw await deserializeAws_restJson1InvalidClientExceptionResponse(parsedOutput, context);\n        case \"InvalidRequestException\":\n        case \"com.amazonaws.ssooidc#InvalidRequestException\":\n            throw await deserializeAws_restJson1InvalidRequestExceptionResponse(parsedOutput, context);\n        case \"SlowDownException\":\n        case \"com.amazonaws.ssooidc#SlowDownException\":\n            throw await deserializeAws_restJson1SlowDownExceptionResponse(parsedOutput, context);\n        case \"UnauthorizedClientException\":\n        case \"com.amazonaws.ssooidc#UnauthorizedClientException\":\n            throw await deserializeAws_restJson1UnauthorizedClientExceptionResponse(parsedOutput, context);\n        default:\n            const parsedBody = parsedOutput.body;\n            throwDefaultError({\n                output,\n                parsedBody,\n                exceptionCtor: __BaseException,\n                errorCode,\n            });\n    }\n};\nconst map = __map;\nconst deserializeAws_restJson1AccessDeniedExceptionResponse = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body;\n    if (data.error != null) {\n        contents.error = __expectString(data.error);\n    }\n    if (data.error_description != null) {\n        contents.error_description = __expectString(data.error_description);\n    }\n    const exception = new AccessDeniedException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return __decorateServiceException(exception, parsedOutput.body);\n};\nconst deserializeAws_restJson1AuthorizationPendingExceptionResponse = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body;\n    if (data.error != null) {\n        contents.error = __expectString(data.error);\n    }\n    if (data.error_description != null) {\n        contents.error_description = __expectString(data.error_description);\n    }\n    const exception = new AuthorizationPendingException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return __decorateServiceException(exception, parsedOutput.body);\n};\nconst deserializeAws_restJson1ExpiredTokenExceptionResponse = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body;\n    if (data.error != null) {\n        contents.error = __expectString(data.error);\n    }\n    if (data.error_description != null) {\n        contents.error_description = __expectString(data.error_description);\n    }\n    const exception = new ExpiredTokenException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return __decorateServiceException(exception, parsedOutput.body);\n};\nconst deserializeAws_restJson1InternalServerExceptionResponse = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body;\n    if (data.error != null) {\n        contents.error = __expectString(data.error);\n    }\n    if (data.error_description != null) {\n        contents.error_description = __expectString(data.error_description);\n    }\n    const exception = new InternalServerException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return __decorateServiceException(exception, parsedOutput.body);\n};\nconst deserializeAws_restJson1InvalidClientExceptionResponse = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body;\n    if (data.error != null) {\n        contents.error = __expectString(data.error);\n    }\n    if (data.error_description != null) {\n        contents.error_description = __expectString(data.error_description);\n    }\n    const exception = new InvalidClientException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return __decorateServiceException(exception, parsedOutput.body);\n};\nconst deserializeAws_restJson1InvalidClientMetadataExceptionResponse = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body;\n    if (data.error != null) {\n        contents.error = __expectString(data.error);\n    }\n    if (data.error_description != null) {\n        contents.error_description = __expectString(data.error_description);\n    }\n    const exception = new InvalidClientMetadataException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return __decorateServiceException(exception, parsedOutput.body);\n};\nconst deserializeAws_restJson1InvalidGrantExceptionResponse = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body;\n    if (data.error != null) {\n        contents.error = __expectString(data.error);\n    }\n    if (data.error_description != null) {\n        contents.error_description = __expectString(data.error_description);\n    }\n    const exception = new InvalidGrantException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return __decorateServiceException(exception, parsedOutput.body);\n};\nconst deserializeAws_restJson1InvalidRequestExceptionResponse = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body;\n    if (data.error != null) {\n        contents.error = __expectString(data.error);\n    }\n    if (data.error_description != null) {\n        contents.error_description = __expectString(data.error_description);\n    }\n    const exception = new InvalidRequestException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return __decorateServiceException(exception, parsedOutput.body);\n};\nconst deserializeAws_restJson1InvalidScopeExceptionResponse = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body;\n    if (data.error != null) {\n        contents.error = __expectString(data.error);\n    }\n    if (data.error_description != null) {\n        contents.error_description = __expectString(data.error_description);\n    }\n    const exception = new InvalidScopeException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return __decorateServiceException(exception, parsedOutput.body);\n};\nconst deserializeAws_restJson1SlowDownExceptionResponse = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body;\n    if (data.error != null) {\n        contents.error = __expectString(data.error);\n    }\n    if (data.error_description != null) {\n        contents.error_description = __expectString(data.error_description);\n    }\n    const exception = new SlowDownException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return __decorateServiceException(exception, parsedOutput.body);\n};\nconst deserializeAws_restJson1UnauthorizedClientExceptionResponse = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body;\n    if (data.error != null) {\n        contents.error = __expectString(data.error);\n    }\n    if (data.error_description != null) {\n        contents.error_description = __expectString(data.error_description);\n    }\n    const exception = new UnauthorizedClientException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return __decorateServiceException(exception, parsedOutput.body);\n};\nconst deserializeAws_restJson1UnsupportedGrantTypeExceptionResponse = async (parsedOutput, context) => {\n    const contents = map({});\n    const data = parsedOutput.body;\n    if (data.error != null) {\n        contents.error = __expectString(data.error);\n    }\n    if (data.error_description != null) {\n        contents.error_description = __expectString(data.error_description);\n    }\n    const exception = new UnsupportedGrantTypeException({\n        $metadata: deserializeMetadata(parsedOutput),\n        ...contents,\n    });\n    return __decorateServiceException(exception, parsedOutput.body);\n};\nconst serializeAws_restJson1Scopes = (input, context) => {\n    return input\n        .filter((e) => e != null)\n        .map((entry) => {\n        return entry;\n    });\n};\nconst deserializeMetadata = (output) => ({\n    httpStatusCode: output.statusCode,\n    requestId: output.headers[\"x-amzn-requestid\"] ?? output.headers[\"x-amzn-request-id\"] ?? output.headers[\"x-amz-request-id\"],\n    extendedRequestId: output.headers[\"x-amz-id-2\"],\n    cfId: output.headers[\"x-amz-cf-id\"],\n});\nconst collectBody = (streamBody = new Uint8Array(), context) => {\n    if (streamBody instanceof Uint8Array) {\n        return Promise.resolve(streamBody);\n    }\n    return context.streamCollector(streamBody) || Promise.resolve(new Uint8Array());\n};\nconst collectBodyString = (streamBody, context) => collectBody(streamBody, context).then((body) => context.utf8Encoder(body));\nconst isSerializableHeaderValue = (value) => value !== undefined &&\n    value !== null &&\n    value !== \"\" &&\n    (!Object.getOwnPropertyNames(value).includes(\"length\") || value.length != 0) &&\n    (!Object.getOwnPropertyNames(value).includes(\"size\") || value.size != 0);\nconst parseBody = (streamBody, context) => collectBodyString(streamBody, context).then((encoded) => {\n    if (encoded.length) {\n        return JSON.parse(encoded);\n    }\n    return {};\n});\nconst parseErrorBody = async (errorBody, context) => {\n    const value = await parseBody(errorBody, context);\n    value.message = value.message ?? value.Message;\n    return value;\n};\nconst loadRestJsonErrorCode = (output, data) => {\n    const findKey = (object, key) => Object.keys(object).find((k) => k.toLowerCase() === key.toLowerCase());\n    const sanitizeErrorCode = (rawValue) => {\n        let cleanValue = rawValue;\n        if (typeof cleanValue === \"number\") {\n            cleanValue = cleanValue.toString();\n        }\n        if (cleanValue.indexOf(\",\") >= 0) {\n            cleanValue = cleanValue.split(\",\")[0];\n        }\n        if (cleanValue.indexOf(\":\") >= 0) {\n            cleanValue = cleanValue.split(\":\")[0];\n        }\n        if (cleanValue.indexOf(\"#\") >= 0) {\n            cleanValue = cleanValue.split(\"#\")[1];\n        }\n        return cleanValue;\n    };\n    const headerKey = findKey(output.headers, \"x-amzn-errortype\");\n    if (headerKey !== undefined) {\n        return sanitizeErrorCode(output.headers[headerKey]);\n    }\n    if (data.code !== undefined) {\n        return sanitizeErrorCode(data.code);\n    }\n    if (data[\"__type\"] !== undefined) {\n        return sanitizeErrorCode(data[\"__type\"]);\n    }\n};\n","import { getEndpointPlugin } from \"@aws-sdk/middleware-endpoint\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\nimport { CreateTokenRequestFilterSensitiveLog, CreateTokenResponseFilterSensitiveLog, } from \"../models/models_0\";\nimport { deserializeAws_restJson1CreateTokenCommand, serializeAws_restJson1CreateTokenCommand, } from \"../protocols/Aws_restJson1\";\nexport class CreateTokenCommand extends $Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    static getEndpointParameterInstructions() {\n        return {\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use(getEndpointPlugin(configuration, CreateTokenCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"SSOOIDCClient\";\n        const commandName = \"CreateTokenCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: CreateTokenRequestFilterSensitiveLog,\n            outputFilterSensitiveLog: CreateTokenResponseFilterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return serializeAws_restJson1CreateTokenCommand(input, context);\n    }\n    deserialize(output, context) {\n        return deserializeAws_restJson1CreateTokenCommand(output, context);\n    }\n}\n","export const resolveClientEndpointParameters = (options) => {\n    return {\n        ...options,\n        useDualstackEndpoint: options.useDualstackEndpoint ?? false,\n        useFipsEndpoint: options.useFipsEndpoint ?? false,\n        defaultSigningName: \"awsssooidc\",\n    };\n};\n","const p = \"required\", q = \"fn\", r = \"argv\", s = \"ref\";\nconst a = \"PartitionResult\", b = \"tree\", c = \"error\", d = \"endpoint\", e = { [p]: false, \"type\": \"String\" }, f = { [p]: true, \"default\": false, \"type\": \"Boolean\" }, g = { [s]: \"Endpoint\" }, h = { [q]: \"booleanEquals\", [r]: [{ [s]: \"UseFIPS\" }, true] }, i = { [q]: \"booleanEquals\", [r]: [{ [s]: \"UseDualStack\" }, true] }, j = {}, k = { [q]: \"booleanEquals\", [r]: [true, { [q]: \"getAttr\", [r]: [{ [s]: a }, \"supportsFIPS\"] }] }, l = { [q]: \"booleanEquals\", [r]: [true, { [q]: \"getAttr\", [r]: [{ [s]: a }, \"supportsDualStack\"] }] }, m = [g], n = [h], o = [i];\nconst _data = { version: \"1.0\", parameters: { Region: e, UseDualStack: f, UseFIPS: f, Endpoint: e }, rules: [{ conditions: [{ [q]: \"aws.partition\", [r]: [{ [s]: \"Region\" }], assign: a }], type: b, rules: [{ conditions: [{ [q]: \"isSet\", [r]: m }, { [q]: \"parseURL\", [r]: m, assign: \"url\" }], type: b, rules: [{ conditions: n, error: \"Invalid Configuration: FIPS and custom endpoint are not supported\", type: c }, { type: b, rules: [{ conditions: o, error: \"Invalid Configuration: Dualstack and custom endpoint are not supported\", type: c }, { endpoint: { url: g, properties: j, headers: j }, type: d }] }] }, { conditions: [h, i], type: b, rules: [{ conditions: [k, l], type: b, rules: [{ endpoint: { url: \"https://oidc-fips.{Region}.{PartitionResult#dualStackDnsSuffix}\", properties: j, headers: j }, type: d }] }, { error: \"FIPS and DualStack are enabled, but this partition does not support one or both\", type: c }] }, { conditions: n, type: b, rules: [{ conditions: [k], type: b, rules: [{ type: b, rules: [{ endpoint: { url: \"https://oidc-fips.{Region}.{PartitionResult#dnsSuffix}\", properties: j, headers: j }, type: d }] }] }, { error: \"FIPS is enabled but this partition does not support FIPS\", type: c }] }, { conditions: o, type: b, rules: [{ conditions: [l], type: b, rules: [{ endpoint: { url: \"https://oidc.{Region}.{PartitionResult#dualStackDnsSuffix}\", properties: j, headers: j }, type: d }] }, { error: \"DualStack is enabled but this partition does not support DualStack\", type: c }] }, { endpoint: { url: \"https://oidc.{Region}.{PartitionResult#dnsSuffix}\", properties: j, headers: j }, type: d }] }] };\nexport const ruleSet = _data;\n","import { resolveEndpoint } from \"@aws-sdk/util-endpoints\";\nimport { ruleSet } from \"./ruleset\";\nexport const defaultEndpointResolver = (endpointParams, context = {}) => {\n    return resolveEndpoint(ruleSet, {\n        endpointParams: endpointParams,\n        logger: context.logger,\n    });\n};\n","import packageInfo from \"../package.json\";\nimport { NODE_REGION_CONFIG_FILE_OPTIONS, NODE_REGION_CONFIG_OPTIONS, NODE_USE_DUALSTACK_ENDPOINT_CONFIG_OPTIONS, NODE_USE_FIPS_ENDPOINT_CONFIG_OPTIONS, } from \"@aws-sdk/config-resolver\";\nimport { Hash } from \"@aws-sdk/hash-node\";\nimport { NODE_MAX_ATTEMPT_CONFIG_OPTIONS, NODE_RETRY_MODE_CONFIG_OPTIONS } from \"@aws-sdk/middleware-retry\";\nimport { loadConfig as loadNodeConfig } from \"@aws-sdk/node-config-provider\";\nimport { NodeHttpHandler as RequestHandler, streamCollector } from \"@aws-sdk/node-http-handler\";\nimport { calculateBodyLength } from \"@aws-sdk/util-body-length-node\";\nimport { DEFAULT_RETRY_MODE } from \"@aws-sdk/util-retry\";\nimport { defaultUserAgent } from \"@aws-sdk/util-user-agent-node\";\nimport { fromUtf8, toUtf8 } from \"@aws-sdk/util-utf8-node\";\nimport { getRuntimeConfig as getSharedRuntimeConfig } from \"./runtimeConfig.shared\";\nimport { loadConfigsForDefaultMode } from \"@aws-sdk/smithy-client\";\nimport { resolveDefaultsModeConfig } from \"@aws-sdk/util-defaults-mode-node\";\nimport { emitWarningIfUnsupportedVersion } from \"@aws-sdk/smithy-client\";\nexport const getRuntimeConfig = (config) => {\n    emitWarningIfUnsupportedVersion(process.version);\n    const defaultsMode = resolveDefaultsModeConfig(config);\n    const defaultConfigProvider = () => defaultsMode().then(loadConfigsForDefaultMode);\n    const clientSharedValues = getSharedRuntimeConfig(config);\n    return {\n        ...clientSharedValues,\n        ...config,\n        runtime: \"node\",\n        defaultsMode,\n        bodyLengthChecker: config?.bodyLengthChecker ?? calculateBodyLength,\n        defaultUserAgentProvider: config?.defaultUserAgentProvider ??\n            defaultUserAgent({ serviceId: clientSharedValues.serviceId, clientVersion: packageInfo.version }),\n        maxAttempts: config?.maxAttempts ?? loadNodeConfig(NODE_MAX_ATTEMPT_CONFIG_OPTIONS),\n        region: config?.region ?? loadNodeConfig(NODE_REGION_CONFIG_OPTIONS, NODE_REGION_CONFIG_FILE_OPTIONS),\n        requestHandler: config?.requestHandler ?? new RequestHandler(defaultConfigProvider),\n        retryMode: config?.retryMode ??\n            loadNodeConfig({\n                ...NODE_RETRY_MODE_CONFIG_OPTIONS,\n                default: async () => (await defaultConfigProvider()).retryMode || DEFAULT_RETRY_MODE,\n            }),\n        sha256: config?.sha256 ?? Hash.bind(null, \"sha256\"),\n        streamCollector: config?.streamCollector ?? streamCollector,\n        useDualstackEndpoint: config?.useDualstackEndpoint ?? loadNodeConfig(NODE_USE_DUALSTACK_ENDPOINT_CONFIG_OPTIONS),\n        useFipsEndpoint: config?.useFipsEndpoint ?? loadNodeConfig(NODE_USE_FIPS_ENDPOINT_CONFIG_OPTIONS),\n        utf8Decoder: config?.utf8Decoder ?? fromUtf8,\n        utf8Encoder: config?.utf8Encoder ?? toUtf8,\n    };\n};\n","import { NoOpLogger } from \"@aws-sdk/smithy-client\";\nimport { parseUrl } from \"@aws-sdk/url-parser\";\nimport { fromBase64, toBase64 } from \"@aws-sdk/util-base64\";\nimport { defaultEndpointResolver } from \"./endpoint/endpointResolver\";\nexport const getRuntimeConfig = (config) => ({\n    apiVersion: \"2019-06-10\",\n    base64Decoder: config?.base64Decoder ?? fromBase64,\n    base64Encoder: config?.base64Encoder ?? toBase64,\n    disableHostPrefix: config?.disableHostPrefix ?? false,\n    endpointProvider: config?.endpointProvider ?? defaultEndpointResolver,\n    logger: config?.logger ?? new NoOpLogger(),\n    serviceId: config?.serviceId ?? \"SSO OIDC\",\n    urlParser: config?.urlParser ?? parseUrl,\n});\n","import { resolveRegionConfig } from \"@aws-sdk/config-resolver\";\nimport { getContentLengthPlugin } from \"@aws-sdk/middleware-content-length\";\nimport { resolveEndpointConfig } from \"@aws-sdk/middleware-endpoint\";\nimport { getHostHeaderPlugin, resolveHostHeaderConfig, } from \"@aws-sdk/middleware-host-header\";\nimport { getLoggerPlugin } from \"@aws-sdk/middleware-logger\";\nimport { getRecursionDetectionPlugin } from \"@aws-sdk/middleware-recursion-detection\";\nimport { getRetryPlugin, resolveRetryConfig } from \"@aws-sdk/middleware-retry\";\nimport { getUserAgentPlugin, resolveUserAgentConfig, } from \"@aws-sdk/middleware-user-agent\";\nimport { Client as __Client, } from \"@aws-sdk/smithy-client\";\nimport { resolveClientEndpointParameters, } from \"./endpoint/EndpointParameters\";\nimport { getRuntimeConfig as __getRuntimeConfig } from \"./runtimeConfig\";\nexport class SSOOIDCClient extends __Client {\n    constructor(configuration) {\n        const _config_0 = __getRuntimeConfig(configuration);\n        const _config_1 = resolveClientEndpointParameters(_config_0);\n        const _config_2 = resolveRegionConfig(_config_1);\n        const _config_3 = resolveEndpointConfig(_config_2);\n        const _config_4 = resolveRetryConfig(_config_3);\n        const _config_5 = resolveHostHeaderConfig(_config_4);\n        const _config_6 = resolveUserAgentConfig(_config_5);\n        super(_config_6);\n        this.config = _config_6;\n        this.middlewareStack.use(getRetryPlugin(this.config));\n        this.middlewareStack.use(getContentLengthPlugin(this.config));\n        this.middlewareStack.use(getHostHeaderPlugin(this.config));\n        this.middlewareStack.use(getLoggerPlugin(this.config));\n        this.middlewareStack.use(getRecursionDetectionPlugin(this.config));\n        this.middlewareStack.use(getUserAgentPlugin(this.config));\n    }\n    destroy() {\n        super.destroy();\n    }\n}\n","import { SSOOIDCClient } from \"@aws-sdk/client-sso-oidc\";\nconst ssoOidcClientsHash = {};\nexport const getSsoOidcClient = (ssoRegion) => {\n    if (ssoOidcClientsHash[ssoRegion]) {\n        return ssoOidcClientsHash[ssoRegion];\n    }\n    const ssoOidcClient = new SSOOIDCClient({ region: ssoRegion });\n    ssoOidcClientsHash[ssoRegion] = ssoOidcClient;\n    return ssoOidcClient;\n};\n","import { CreateTokenCommand } from \"@aws-sdk/client-sso-oidc\";\nimport { getSsoOidcClient } from \"./getSsoOidcClient\";\nexport const getNewSsoOidcToken = (ssoToken, ssoRegion) => {\n    const ssoOidcClient = getSsoOidcClient(ssoRegion);\n    return ssoOidcClient.send(new CreateTokenCommand({\n        clientId: ssoToken.clientId,\n        clientSecret: ssoToken.clientSecret,\n        refreshToken: ssoToken.refreshToken,\n        grantType: \"refresh_token\",\n    }));\n};\n","import { TokenProviderError } from \"@aws-sdk/property-provider\";\nimport { REFRESH_MESSAGE } from \"./constants\";\nexport const validateTokenExpiry = (token) => {\n    if (token.expiration && token.expiration.getTime() < Date.now()) {\n        throw new TokenProviderError(`Token is expired. ${REFRESH_MESSAGE}`, false);\n    }\n};\n","import { TokenProviderError } from \"@aws-sdk/property-provider\";\nimport { REFRESH_MESSAGE } from \"./constants\";\nexport const validateTokenKey = (key, value, forRefresh = false) => {\n    if (typeof value === \"undefined\") {\n        throw new TokenProviderError(`Value not present for '${key}' in SSO Token${forRefresh ? \". Cannot refresh\" : \"\"}. ${REFRESH_MESSAGE}`, false);\n    }\n};\n","import { getSSOTokenFilepath } from \"@aws-sdk/shared-ini-file-loader\";\nimport { promises as fsPromises } from \"fs\";\nconst { writeFile } = fsPromises;\nexport const writeSSOTokenToFile = (id, ssoToken) => {\n    const tokenFilepath = getSSOTokenFilepath(id);\n    const tokenString = JSON.stringify(ssoToken, null, 2);\n    return writeFile(tokenFilepath, tokenString);\n};\n","import { TokenProviderError } from \"@aws-sdk/property-provider\";\nimport { getProfileName, getSSOTokenFromFile, loadSsoSessionData, parseKnownFiles, } from \"@aws-sdk/shared-ini-file-loader\";\nimport { EXPIRE_WINDOW_MS, REFRESH_MESSAGE } from \"./constants\";\nimport { getNewSsoOidcToken } from \"./getNewSsoOidcToken\";\nimport { validateTokenExpiry } from \"./validateTokenExpiry\";\nimport { validateTokenKey } from \"./validateTokenKey\";\nimport { writeSSOTokenToFile } from \"./writeSSOTokenToFile\";\nconst lastRefreshAttemptTime = new Date(0);\nexport const fromSso = (init = {}) => async () => {\n    const profiles = await parseKnownFiles(init);\n    const profileName = getProfileName(init);\n    const profile = profiles[profileName];\n    if (!profile) {\n        throw new TokenProviderError(`Profile '${profileName}' could not be found in shared credentials file.`, false);\n    }\n    else if (!profile[\"sso_session\"]) {\n        throw new TokenProviderError(`Profile '${profileName}' is missing required property 'sso_session'.`);\n    }\n    const ssoSessionName = profile[\"sso_session\"];\n    const ssoSessions = await loadSsoSessionData(init);\n    const ssoSession = ssoSessions[ssoSessionName];\n    if (!ssoSession) {\n        throw new TokenProviderError(`Sso session '${ssoSessionName}' could not be found in shared credentials file.`, false);\n    }\n    for (const ssoSessionRequiredKey of [\"sso_start_url\", \"sso_region\"]) {\n        if (!ssoSession[ssoSessionRequiredKey]) {\n            throw new TokenProviderError(`Sso session '${ssoSessionName}' is missing required property '${ssoSessionRequiredKey}'.`, false);\n        }\n    }\n    const ssoStartUrl = ssoSession[\"sso_start_url\"];\n    const ssoRegion = ssoSession[\"sso_region\"];\n    let ssoToken;\n    try {\n        ssoToken = await getSSOTokenFromFile(ssoSessionName);\n    }\n    catch (e) {\n        throw new TokenProviderError(`The SSO session token associated with profile=${profileName} was not found or is invalid. ${REFRESH_MESSAGE}`, false);\n    }\n    validateTokenKey(\"accessToken\", ssoToken.accessToken);\n    validateTokenKey(\"expiresAt\", ssoToken.expiresAt);\n    const { accessToken, expiresAt } = ssoToken;\n    const existingToken = { token: accessToken, expiration: new Date(expiresAt) };\n    if (existingToken.expiration.getTime() - Date.now() > EXPIRE_WINDOW_MS) {\n        return existingToken;\n    }\n    if (Date.now() - lastRefreshAttemptTime.getTime() < 30 * 1000) {\n        validateTokenExpiry(existingToken);\n        return existingToken;\n    }\n    validateTokenKey(\"clientId\", ssoToken.clientId, true);\n    validateTokenKey(\"clientSecret\", ssoToken.clientSecret, true);\n    validateTokenKey(\"refreshToken\", ssoToken.refreshToken, true);\n    try {\n        lastRefreshAttemptTime.setTime(Date.now());\n        const newSsoOidcToken = await getNewSsoOidcToken(ssoToken, ssoRegion);\n        validateTokenKey(\"accessToken\", newSsoOidcToken.accessToken);\n        validateTokenKey(\"expiresIn\", newSsoOidcToken.expiresIn);\n        const newTokenExpiration = new Date(Date.now() + newSsoOidcToken.expiresIn * 1000);\n        try {\n            await writeSSOTokenToFile(ssoSessionName, {\n                ...ssoToken,\n                accessToken: newSsoOidcToken.accessToken,\n                expiresAt: newTokenExpiration.toISOString(),\n                refreshToken: newSsoOidcToken.refreshToken,\n            });\n        }\n        catch (error) {\n        }\n        return {\n            token: newSsoOidcToken.accessToken,\n            expiration: newTokenExpiration,\n        };\n    }\n    catch (error) {\n        validateTokenExpiry(existingToken);\n        return existingToken;\n    }\n};\n","import { GetRoleCredentialsCommand, SSOClient } from \"@aws-sdk/client-sso\";\nimport { CredentialsProviderError } from \"@aws-sdk/property-provider\";\nimport { getSSOTokenFromFile } from \"@aws-sdk/shared-ini-file-loader\";\nimport { fromSso as getSsoTokenProvider } from \"@aws-sdk/token-providers\";\nconst EXPIRE_WINDOW_MS = 15 * 60 * 1000;\nconst SHOULD_FAIL_CREDENTIAL_CHAIN = false;\nexport const resolveSSOCredentials = async ({ ssoStartUrl, ssoSession, ssoAccountId, ssoRegion, ssoRoleName, ssoClient, profile, }) => {\n    let token;\n    const refreshMessage = `To refresh this SSO session run aws sso login with the corresponding profile.`;\n    if (ssoSession) {\n        try {\n            const _token = await getSsoTokenProvider({ profile })();\n            token = {\n                accessToken: _token.token,\n                expiresAt: new Date(_token.expiration).toISOString(),\n            };\n        }\n        catch (e) {\n            throw new CredentialsProviderError(e.message, SHOULD_FAIL_CREDENTIAL_CHAIN);\n        }\n    }\n    else {\n        try {\n            token = await getSSOTokenFromFile(ssoStartUrl);\n        }\n        catch (e) {\n            throw new CredentialsProviderError(`The SSO session associated with this profile is invalid. ${refreshMessage}`, SHOULD_FAIL_CREDENTIAL_CHAIN);\n        }\n    }\n    if (new Date(token.expiresAt).getTime() - Date.now() <= EXPIRE_WINDOW_MS) {\n        throw new CredentialsProviderError(`The SSO session associated with this profile has expired. ${refreshMessage}`, SHOULD_FAIL_CREDENTIAL_CHAIN);\n    }\n    const { accessToken } = token;\n    const sso = ssoClient || new SSOClient({ region: ssoRegion });\n    let ssoResp;\n    try {\n        ssoResp = await sso.send(new GetRoleCredentialsCommand({\n            accountId: ssoAccountId,\n            roleName: ssoRoleName,\n            accessToken,\n        }));\n    }\n    catch (e) {\n        throw CredentialsProviderError.from(e, SHOULD_FAIL_CREDENTIAL_CHAIN);\n    }\n    const { roleCredentials: { accessKeyId, secretAccessKey, sessionToken, expiration } = {} } = ssoResp;\n    if (!accessKeyId || !secretAccessKey || !sessionToken || !expiration) {\n        throw new CredentialsProviderError(\"SSO returns an invalid temporary credential.\", SHOULD_FAIL_CREDENTIAL_CHAIN);\n    }\n    return { accessKeyId, secretAccessKey, sessionToken, expiration: new Date(expiration) };\n};\n","import { CredentialsProviderError } from \"@aws-sdk/property-provider\";\nexport const validateSsoProfile = (profile) => {\n    const { sso_start_url, sso_account_id, sso_region, sso_role_name } = profile;\n    if (!sso_start_url || !sso_account_id || !sso_region || !sso_role_name) {\n        throw new CredentialsProviderError(`Profile is configured with invalid SSO credentials. Required parameters \"sso_account_id\", ` +\n            `\"sso_region\", \"sso_role_name\", \"sso_start_url\". Got ${Object.keys(profile).join(\", \")}\\nReference: https://docs.aws.amazon.com/cli/latest/userguide/cli-configure-sso.html`, false);\n    }\n    return profile;\n};\n","import { CredentialsProviderError } from \"@aws-sdk/property-provider\";\nimport { getProfileName, loadSsoSessionData, parseKnownFiles, } from \"@aws-sdk/shared-ini-file-loader\";\nimport { isSsoProfile } from \"./isSsoProfile\";\nimport { resolveSSOCredentials } from \"./resolveSSOCredentials\";\nimport { validateSsoProfile } from \"./validateSsoProfile\";\nexport const fromSSO = (init = {}) => async () => {\n    const { ssoStartUrl, ssoAccountId, ssoRegion, ssoRoleName, ssoClient, ssoSession } = init;\n    const profileName = getProfileName(init);\n    if (!ssoStartUrl && !ssoAccountId && !ssoRegion && !ssoRoleName && !ssoSession) {\n        const profiles = await parseKnownFiles(init);\n        const profile = profiles[profileName];\n        if (!profile) {\n            throw new CredentialsProviderError(`Profile ${profileName} was not found.`);\n        }\n        if (!isSsoProfile(profile)) {\n            throw new CredentialsProviderError(`Profile ${profileName} is not configured with SSO credentials.`);\n        }\n        if (profile?.sso_session) {\n            const ssoSessions = await loadSsoSessionData(init);\n            const session = ssoSessions[profile.sso_session];\n            const conflictMsg = ` configurations in profile ${profileName} and sso-session ${profile.sso_session}`;\n            if (ssoRegion && ssoRegion !== session.sso_region) {\n                throw new CredentialsProviderError(`Conflicting SSO region` + conflictMsg, false);\n            }\n            if (ssoStartUrl && ssoStartUrl !== session.sso_start_url) {\n                throw new CredentialsProviderError(`Conflicting SSO start_url` + conflictMsg, false);\n            }\n            profile.sso_region = session.sso_region;\n            profile.sso_start_url = session.sso_start_url;\n        }\n        const { sso_start_url, sso_account_id, sso_region, sso_role_name, sso_session } = validateSsoProfile(profile);\n        return resolveSSOCredentials({\n            ssoStartUrl: sso_start_url,\n            ssoSession: sso_session,\n            ssoAccountId: sso_account_id,\n            ssoRegion: sso_region,\n            ssoRoleName: sso_role_name,\n            ssoClient: ssoClient,\n            profile: profileName,\n        });\n    }\n    else if (!ssoStartUrl || !ssoAccountId || !ssoRegion || !ssoRoleName) {\n        throw new CredentialsProviderError(\"Incomplete configuration. The fromSSO() argument hash must include \" +\n            '\"ssoStartUrl\", \"ssoAccountId\", \"ssoRegion\", \"ssoRoleName\"');\n    }\n    else {\n        return resolveSSOCredentials({\n            ssoStartUrl,\n            ssoSession,\n            ssoAccountId,\n            ssoRegion,\n            ssoRoleName,\n            ssoClient,\n            profile: profileName,\n        });\n    }\n};\n","export const isStaticCredsProfile = (arg) => Boolean(arg) &&\n    typeof arg === \"object\" &&\n    typeof arg.aws_access_key_id === \"string\" &&\n    typeof arg.aws_secret_access_key === \"string\" &&\n    [\"undefined\", \"string\"].indexOf(typeof arg.aws_session_token) > -1;\nexport const resolveStaticCredentials = (profile) => Promise.resolve({\n    accessKeyId: profile.aws_access_key_id,\n    secretAccessKey: profile.aws_secret_access_key,\n    sessionToken: profile.aws_session_token,\n});\n","import { CredentialsProviderError } from \"@aws-sdk/property-provider\";\nimport { readFileSync } from \"fs\";\nimport { fromWebToken } from \"./fromWebToken\";\nconst ENV_TOKEN_FILE = \"AWS_WEB_IDENTITY_TOKEN_FILE\";\nconst ENV_ROLE_ARN = \"AWS_ROLE_ARN\";\nconst ENV_ROLE_SESSION_NAME = \"AWS_ROLE_SESSION_NAME\";\nexport const fromTokenFile = (init = {}) => async () => {\n    return resolveTokenFile(init);\n};\nconst resolveTokenFile = (init) => {\n    const webIdentityTokenFile = init?.webIdentityTokenFile ?? process.env[ENV_TOKEN_FILE];\n    const roleArn = init?.roleArn ?? process.env[ENV_ROLE_ARN];\n    const roleSessionName = init?.roleSessionName ?? process.env[ENV_ROLE_SESSION_NAME];\n    if (!webIdentityTokenFile || !roleArn) {\n        throw new CredentialsProviderError(\"Web identity configuration not specified\");\n    }\n    return fromWebToken({\n        ...init,\n        webIdentityToken: readFileSync(webIdentityTokenFile, { encoding: \"ascii\" }),\n        roleArn,\n        roleSessionName,\n    })();\n};\n","import { CredentialsProviderError } from \"@aws-sdk/property-provider\";\nexport const fromWebToken = (init) => () => {\n    const { roleArn, roleSessionName, webIdentityToken, providerId, policyArns, policy, durationSeconds, roleAssumerWithWebIdentity, } = init;\n    if (!roleAssumerWithWebIdentity) {\n        throw new CredentialsProviderError(`Role Arn '${roleArn}' needs to be assumed with web identity,` +\n            ` but no role assumption callback was provided.`, false);\n    }\n    return roleAssumerWithWebIdentity({\n        RoleArn: roleArn,\n        RoleSessionName: roleSessionName ?? `aws-sdk-js-session-${Date.now()}`,\n        WebIdentityToken: webIdentityToken,\n        ProviderId: providerId,\n        PolicyArns: policyArns,\n        Policy: policy,\n        DurationSeconds: durationSeconds,\n    });\n};\n","import { CredentialsProviderError } from \"@aws-sdk/property-provider\";\nimport { isAssumeRoleProfile, resolveAssumeRoleCredentials } from \"./resolveAssumeRoleCredentials\";\nimport { isProcessProfile, resolveProcessCredentials } from \"./resolveProcessCredentials\";\nimport { isSsoProfile, resolveSsoCredentials } from \"./resolveSsoCredentials\";\nimport { isStaticCredsProfile, resolveStaticCredentials } from \"./resolveStaticCredentials\";\nimport { isWebIdentityProfile, resolveWebIdentityCredentials } from \"./resolveWebIdentityCredentials\";\nexport const resolveProfileData = async (profileName, profiles, options, visitedProfiles = {}) => {\n    const data = profiles[profileName];\n    if (Object.keys(visitedProfiles).length > 0 && isStaticCredsProfile(data)) {\n        return resolveStaticCredentials(data);\n    }\n    if (isAssumeRoleProfile(data)) {\n        return resolveAssumeRoleCredentials(profileName, profiles, options, visitedProfiles);\n    }\n    if (isStaticCredsProfile(data)) {\n        return resolveStaticCredentials(data);\n    }\n    if (isWebIdentityProfile(data)) {\n        return resolveWebIdentityCredentials(data, options);\n    }\n    if (isProcessProfile(data)) {\n        return resolveProcessCredentials(options, profileName);\n    }\n    if (isSsoProfile(data)) {\n        return resolveSsoCredentials(data);\n    }\n    throw new CredentialsProviderError(`Profile ${profileName} could not be found or parsed in shared credentials file.`);\n};\n","import { fromTokenFile } from \"@aws-sdk/credential-provider-web-identity\";\nexport const isWebIdentityProfile = (arg) => Boolean(arg) &&\n    typeof arg === \"object\" &&\n    typeof arg.web_identity_token_file === \"string\" &&\n    typeof arg.role_arn === \"string\" &&\n    [\"undefined\", \"string\"].indexOf(typeof arg.role_session_name) > -1;\nexport const resolveWebIdentityCredentials = async (profile, options) => fromTokenFile({\n    webIdentityTokenFile: profile.web_identity_token_file,\n    roleArn: profile.role_arn,\n    roleSessionName: profile.role_session_name,\n    roleAssumerWithWebIdentity: options.roleAssumerWithWebIdentity,\n})();\n","import { fromProcess } from \"@aws-sdk/credential-provider-process\";\nexport const isProcessProfile = (arg) => Boolean(arg) &&\n    typeof arg === \"object\" &&\n    typeof arg.credential_process === \"string\";\nexport const resolveProcessCredentials = async (options, profile) => fromProcess({\n    ...options,\n    profile,\n})();\n","import { fromSSO, validateSsoProfile } from \"@aws-sdk/credential-provider-sso\";\nexport { isSsoProfile } from \"@aws-sdk/credential-provider-sso\";\nexport const resolveSsoCredentials = (data) => {\n    const { sso_start_url, sso_account_id, sso_session, sso_region, sso_role_name } = validateSsoProfile(data);\n    return fromSSO({\n        ssoStartUrl: sso_start_url,\n        ssoAccountId: sso_account_id,\n        ssoSession: sso_session,\n        ssoRegion: sso_region,\n        ssoRoleName: sso_role_name,\n    })();\n};\n","import { fromEnv } from \"@aws-sdk/credential-provider-env\";\nimport { fromIni } from \"@aws-sdk/credential-provider-ini\";\nimport { fromProcess } from \"@aws-sdk/credential-provider-process\";\nimport { fromSSO } from \"@aws-sdk/credential-provider-sso\";\nimport { fromTokenFile } from \"@aws-sdk/credential-provider-web-identity\";\nimport { chain, CredentialsProviderError, memoize } from \"@aws-sdk/property-provider\";\nimport { ENV_PROFILE } from \"@aws-sdk/shared-ini-file-loader\";\nimport { remoteProvider } from \"./remoteProvider\";\nexport const defaultProvider = (init = {}) => memoize(chain(...(init.profile || process.env[ENV_PROFILE] ? [] : [fromEnv()]), fromSSO(init), fromIni(init), fromProcess(init), fromTokenFile(init), remoteProvider(init), async () => {\n    throw new CredentialsProviderError(\"Could not load credentials from any providers\", false);\n}), (credentials) => credentials.expiration !== undefined && credentials.expiration.getTime() - Date.now() < 300000, (credentials) => credentials.expiration !== undefined);\n","import { getProfileName, parseKnownFiles } from \"@aws-sdk/shared-ini-file-loader\";\nimport { resolveProfileData } from \"./resolveProfileData\";\nexport const fromIni = (init = {}) => async () => {\n    const profiles = await parseKnownFiles(init);\n    return resolveProfileData(getProfileName(init), profiles, init);\n};\n","import { ENV_CMDS_FULL_URI, ENV_CMDS_RELATIVE_URI, fromContainerMetadata, fromInstanceMetadata, } from \"@aws-sdk/credential-provider-imds\";\nimport { CredentialsProviderError } from \"@aws-sdk/property-provider\";\nexport const ENV_IMDS_DISABLED = \"AWS_EC2_METADATA_DISABLED\";\nexport const remoteProvider = (init) => {\n    if (process.env[ENV_CMDS_RELATIVE_URI] || process.env[ENV_CMDS_FULL_URI]) {\n        return fromContainerMetadata(init);\n    }\n    if (process.env[ENV_IMDS_DISABLED]) {\n        return async () => {\n            throw new CredentialsProviderError(\"EC2 Instance Metadata Service access disabled\");\n        };\n    }\n    return fromInstanceMetadata(init);\n};\n","const H = \"required\", I = \"fn\", J = \"argv\", K = \"ref\", L = \"properties\", M = \"headers\";\nconst a = false, b = true, c = \"PartitionResult\", d = \"tree\", e = \"booleanEquals\", f = \"stringEquals\", g = \"https://sts.amazonaws.com\", h = \"sigv4\", i = \"sts\", j = \"us-east-1\", k = \"endpoint\", l = \"https://sts.{Region}.{PartitionResult#dnsSuffix}\", m = \"error\", n = \"getAttr\", o = { [H]: false, \"type\": \"String\" }, p = { [H]: true, \"default\": false, \"type\": \"Boolean\" }, q = { [K]: \"Region\" }, r = { [K]: \"UseFIPS\" }, s = { [K]: \"UseDualStack\" }, t = { [I]: \"isSet\", [J]: [{ [K]: \"Endpoint\" }] }, u = { [K]: \"Endpoint\" }, v = { \"url\": g, [L]: { \"authSchemes\": [{ \"name\": h, \"signingName\": i, \"signingRegion\": j }] }, [M]: {} }, w = {}, x = { [I]: e, [J]: [r, true] }, y = { [I]: e, [J]: [s, true] }, z = { [I]: e, [J]: [true, { [I]: n, [J]: [{ [K]: c }, \"supportsFIPS\"] }] }, A = { [K]: c }, B = { [I]: e, [J]: [true, { [I]: n, [J]: [A, \"supportsDualStack\"] }] }, C = { \"url\": l, [L]: {}, [M]: {} }, D = [u], E = [{ [I]: f, [J]: [q, \"aws-global\"] }], F = [x], G = [y];\nconst _data = { version: \"1.0\", parameters: { Region: o, UseDualStack: p, UseFIPS: p, Endpoint: o, UseGlobalEndpoint: p }, rules: [{ conditions: [{ [I]: \"aws.partition\", [J]: [q], assign: c }], type: d, rules: [{ conditions: [{ [I]: e, [J]: [{ [K]: \"UseGlobalEndpoint\" }, b] }, { [I]: e, [J]: [r, a] }, { [I]: e, [J]: [s, a] }, { [I]: \"not\", [J]: [t] }], type: d, rules: [{ conditions: [{ [I]: f, [J]: [q, \"ap-northeast-1\"] }], endpoint: v, type: k }, { conditions: [{ [I]: f, [J]: [q, \"ap-south-1\"] }], endpoint: v, type: k }, { conditions: [{ [I]: f, [J]: [q, \"ap-southeast-1\"] }], endpoint: v, type: k }, { conditions: [{ [I]: f, [J]: [q, \"ap-southeast-2\"] }], endpoint: v, type: k }, { conditions: E, endpoint: v, type: k }, { conditions: [{ [I]: f, [J]: [q, \"ca-central-1\"] }], endpoint: v, type: k }, { conditions: [{ [I]: f, [J]: [q, \"eu-central-1\"] }], endpoint: v, type: k }, { conditions: [{ [I]: f, [J]: [q, \"eu-north-1\"] }], endpoint: v, type: k }, { conditions: [{ [I]: f, [J]: [q, \"eu-west-1\"] }], endpoint: v, type: k }, { conditions: [{ [I]: f, [J]: [q, \"eu-west-2\"] }], endpoint: v, type: k }, { conditions: [{ [I]: f, [J]: [q, \"eu-west-3\"] }], endpoint: v, type: k }, { conditions: [{ [I]: f, [J]: [q, \"sa-east-1\"] }], endpoint: v, type: k }, { conditions: [{ [I]: f, [J]: [q, j] }], endpoint: v, type: k }, { conditions: [{ [I]: f, [J]: [q, \"us-east-2\"] }], endpoint: v, type: k }, { conditions: [{ [I]: f, [J]: [q, \"us-west-1\"] }], endpoint: v, type: k }, { conditions: [{ [I]: f, [J]: [q, \"us-west-2\"] }], endpoint: v, type: k }, { endpoint: { url: l, [L]: { authSchemes: [{ name: h, signingName: i, signingRegion: \"{Region}\" }] }, [M]: w }, type: k }] }, { conditions: [t, { [I]: \"parseURL\", [J]: D, assign: \"url\" }], type: d, rules: [{ conditions: F, error: \"Invalid Configuration: FIPS and custom endpoint are not supported\", type: m }, { type: d, rules: [{ conditions: G, error: \"Invalid Configuration: Dualstack and custom endpoint are not supported\", type: m }, { endpoint: { url: u, [L]: w, [M]: w }, type: k }] }] }, { conditions: [x, y], type: d, rules: [{ conditions: [z, B], type: d, rules: [{ endpoint: { url: \"https://sts-fips.{Region}.{PartitionResult#dualStackDnsSuffix}\", [L]: w, [M]: w }, type: k }] }, { error: \"FIPS and DualStack are enabled, but this partition does not support one or both\", type: m }] }, { conditions: F, type: d, rules: [{ conditions: [z], type: d, rules: [{ type: d, rules: [{ conditions: [{ [I]: f, [J]: [\"aws-us-gov\", { [I]: n, [J]: [A, \"name\"] }] }], endpoint: C, type: k }, { endpoint: { url: \"https://sts-fips.{Region}.{PartitionResult#dnsSuffix}\", [L]: w, [M]: w }, type: k }] }] }, { error: \"FIPS is enabled but this partition does not support FIPS\", type: m }] }, { conditions: G, type: d, rules: [{ conditions: [B], type: d, rules: [{ endpoint: { url: \"https://sts.{Region}.{PartitionResult#dualStackDnsSuffix}\", [L]: w, [M]: w }, type: k }] }, { error: \"DualStack is enabled but this partition does not support DualStack\", type: m }] }, { type: d, rules: [{ conditions: E, endpoint: { url: g, [L]: { authSchemes: [{ name: h, signingRegion: j, signingName: i }] }, [M]: w }, type: k }, { endpoint: C, type: k }] }] }] };\nexport const ruleSet = _data;\n","import { resolveEndpoint } from \"@aws-sdk/util-endpoints\";\nimport { ruleSet } from \"./ruleset\";\nexport const defaultEndpointResolver = (endpointParams, context = {}) => {\n    return resolveEndpoint(ruleSet, {\n        endpointParams: endpointParams,\n        logger: context.logger,\n    });\n};\n","import packageInfo from \"../package.json\";\nimport { decorateDefaultCredentialProvider } from \"./defaultStsRoleAssumers\";\nimport { NODE_REGION_CONFIG_FILE_OPTIONS, NODE_REGION_CONFIG_OPTIONS, NODE_USE_DUALSTACK_ENDPOINT_CONFIG_OPTIONS, NODE_USE_FIPS_ENDPOINT_CONFIG_OPTIONS, } from \"@aws-sdk/config-resolver\";\nimport { defaultProvider as credentialDefaultProvider } from \"@aws-sdk/credential-provider-node\";\nimport { Hash } from \"@aws-sdk/hash-node\";\nimport { NODE_MAX_ATTEMPT_CONFIG_OPTIONS, NODE_RETRY_MODE_CONFIG_OPTIONS } from \"@aws-sdk/middleware-retry\";\nimport { loadConfig as loadNodeConfig } from \"@aws-sdk/node-config-provider\";\nimport { NodeHttpHandler as RequestHandler, streamCollector } from \"@aws-sdk/node-http-handler\";\nimport { calculateBodyLength } from \"@aws-sdk/util-body-length-node\";\nimport { DEFAULT_RETRY_MODE } from \"@aws-sdk/util-retry\";\nimport { defaultUserAgent } from \"@aws-sdk/util-user-agent-node\";\nimport { fromUtf8, toUtf8 } from \"@aws-sdk/util-utf8-node\";\nimport { getRuntimeConfig as getSharedRuntimeConfig } from \"./runtimeConfig.shared\";\nimport { loadConfigsForDefaultMode } from \"@aws-sdk/smithy-client\";\nimport { resolveDefaultsModeConfig } from \"@aws-sdk/util-defaults-mode-node\";\nimport { emitWarningIfUnsupportedVersion } from \"@aws-sdk/smithy-client\";\nexport const getRuntimeConfig = (config) => {\n    emitWarningIfUnsupportedVersion(process.version);\n    const defaultsMode = resolveDefaultsModeConfig(config);\n    const defaultConfigProvider = () => defaultsMode().then(loadConfigsForDefaultMode);\n    const clientSharedValues = getSharedRuntimeConfig(config);\n    return {\n        ...clientSharedValues,\n        ...config,\n        runtime: \"node\",\n        defaultsMode,\n        bodyLengthChecker: config?.bodyLengthChecker ?? calculateBodyLength,\n        credentialDefaultProvider: config?.credentialDefaultProvider ?? decorateDefaultCredentialProvider(credentialDefaultProvider),\n        defaultUserAgentProvider: config?.defaultUserAgentProvider ??\n            defaultUserAgent({ serviceId: clientSharedValues.serviceId, clientVersion: packageInfo.version }),\n        maxAttempts: config?.maxAttempts ?? loadNodeConfig(NODE_MAX_ATTEMPT_CONFIG_OPTIONS),\n        region: config?.region ?? loadNodeConfig(NODE_REGION_CONFIG_OPTIONS, NODE_REGION_CONFIG_FILE_OPTIONS),\n        requestHandler: config?.requestHandler ?? new RequestHandler(defaultConfigProvider),\n        retryMode: config?.retryMode ??\n            loadNodeConfig({\n                ...NODE_RETRY_MODE_CONFIG_OPTIONS,\n                default: async () => (await defaultConfigProvider()).retryMode || DEFAULT_RETRY_MODE,\n            }),\n        sha256: config?.sha256 ?? Hash.bind(null, \"sha256\"),\n        streamCollector: config?.streamCollector ?? streamCollector,\n        useDualstackEndpoint: config?.useDualstackEndpoint ?? loadNodeConfig(NODE_USE_DUALSTACK_ENDPOINT_CONFIG_OPTIONS),\n        useFipsEndpoint: config?.useFipsEndpoint ?? loadNodeConfig(NODE_USE_FIPS_ENDPOINT_CONFIG_OPTIONS),\n        utf8Decoder: config?.utf8Decoder ?? fromUtf8,\n        utf8Encoder: config?.utf8Encoder ?? toUtf8,\n    };\n};\n","import { NoOpLogger } from \"@aws-sdk/smithy-client\";\nimport { parseUrl } from \"@aws-sdk/url-parser\";\nimport { fromBase64, toBase64 } from \"@aws-sdk/util-base64\";\nimport { defaultEndpointResolver } from \"./endpoint/endpointResolver\";\nexport const getRuntimeConfig = (config) => ({\n    apiVersion: \"2011-06-15\",\n    base64Decoder: config?.base64Decoder ?? fromBase64,\n    base64Encoder: config?.base64Encoder ?? toBase64,\n    disableHostPrefix: config?.disableHostPrefix ?? false,\n    endpointProvider: config?.endpointProvider ?? defaultEndpointResolver,\n    logger: config?.logger ?? new NoOpLogger(),\n    serviceId: config?.serviceId ?? \"STS\",\n    urlParser: config?.urlParser ?? parseUrl,\n});\n","import { resolveRegionConfig } from \"@aws-sdk/config-resolver\";\nimport { getContentLengthPlugin } from \"@aws-sdk/middleware-content-length\";\nimport { resolveEndpointConfig } from \"@aws-sdk/middleware-endpoint\";\nimport { getHostHeaderPlugin, resolveHostHeaderConfig, } from \"@aws-sdk/middleware-host-header\";\nimport { getLoggerPlugin } from \"@aws-sdk/middleware-logger\";\nimport { getRecursionDetectionPlugin } from \"@aws-sdk/middleware-recursion-detection\";\nimport { getRetryPlugin, resolveRetryConfig } from \"@aws-sdk/middleware-retry\";\nimport { resolveStsAuthConfig } from \"@aws-sdk/middleware-sdk-sts\";\nimport { getUserAgentPlugin, resolveUserAgentConfig, } from \"@aws-sdk/middleware-user-agent\";\nimport { Client as __Client, } from \"@aws-sdk/smithy-client\";\nimport { resolveClientEndpointParameters, } from \"./endpoint/EndpointParameters\";\nimport { getRuntimeConfig as __getRuntimeConfig } from \"./runtimeConfig\";\nexport class STSClient extends __Client {\n    constructor(configuration) {\n        const _config_0 = __getRuntimeConfig(configuration);\n        const _config_1 = resolveClientEndpointParameters(_config_0);\n        const _config_2 = resolveRegionConfig(_config_1);\n        const _config_3 = resolveEndpointConfig(_config_2);\n        const _config_4 = resolveRetryConfig(_config_3);\n        const _config_5 = resolveHostHeaderConfig(_config_4);\n        const _config_6 = resolveStsAuthConfig(_config_5, { stsClientCtor: STSClient });\n        const _config_7 = resolveUserAgentConfig(_config_6);\n        super(_config_7);\n        this.config = _config_7;\n        this.middlewareStack.use(getRetryPlugin(this.config));\n        this.middlewareStack.use(getContentLengthPlugin(this.config));\n        this.middlewareStack.use(getHostHeaderPlugin(this.config));\n        this.middlewareStack.use(getLoggerPlugin(this.config));\n        this.middlewareStack.use(getRecursionDetectionPlugin(this.config));\n        this.middlewareStack.use(getUserAgentPlugin(this.config));\n    }\n    destroy() {\n        super.destroy();\n    }\n}\n","export const resolveClientEndpointParameters = (options) => {\n    return {\n        ...options,\n        useDualstackEndpoint: options.useDualstackEndpoint ?? false,\n        useFipsEndpoint: options.useFipsEndpoint ?? false,\n        useGlobalEndpoint: options.useGlobalEndpoint ?? false,\n        defaultSigningName: \"sts\",\n    };\n};\n","import { resolveAwsAuthConfig } from \"@aws-sdk/middleware-signing\";\nexport const resolveStsAuthConfig = (input, { stsClientCtor }) => resolveAwsAuthConfig({\n    ...input,\n    stsClientCtor,\n});\n","import { getDefaultRoleAssumer as StsGetDefaultRoleAssumer, getDefaultRoleAssumerWithWebIdentity as StsGetDefaultRoleAssumerWithWebIdentity, } from \"./defaultStsRoleAssumers\";\nimport { STSClient } from \"./STSClient\";\nconst getCustomizableStsClientCtor = (baseCtor, customizations) => {\n    if (!customizations)\n        return baseCtor;\n    else\n        return class CustomizableSTSClient extends baseCtor {\n            constructor(config) {\n                super(config);\n                for (const customization of customizations) {\n                    this.middlewareStack.use(customization);\n                }\n            }\n        };\n};\nexport const getDefaultRoleAssumer = (stsOptions = {}, stsPlugins) => StsGetDefaultRoleAssumer(stsOptions, getCustomizableStsClientCtor(STSClient, stsPlugins));\nexport const getDefaultRoleAssumerWithWebIdentity = (stsOptions = {}, stsPlugins) => StsGetDefaultRoleAssumerWithWebIdentity(stsOptions, getCustomizableStsClientCtor(STSClient, stsPlugins));\nexport const decorateDefaultCredentialProvider = (provider) => (input) => provider({\n    roleAssumer: getDefaultRoleAssumer(input),\n    roleAssumerWithWebIdentity: getDefaultRoleAssumerWithWebIdentity(input),\n    ...input,\n});\n","const v = \"fn\", w = \"argv\", x = \"ref\";\nconst a = true, b = false, c = \"String\", d = \"PartitionResult\", e = \"tree\", f = \"error\", g = \"endpoint\", h = \"getAttr\", i = \"stringEquals\", j = { \"required\": true, \"default\": false, \"type\": \"Boolean\" }, k = { [x]: \"Region\" }, l = { [x]: \"Endpoint\" }, m = { [v]: \"booleanEquals\", [w]: [{ [x]: \"UseFIPS\" }, true] }, n = { [v]: \"booleanEquals\", [w]: [{ [x]: \"UseDualStack\" }, true] }, o = {}, p = { [v]: \"booleanEquals\", [w]: [true, { [v]: h, [w]: [{ [x]: d }, \"supportsFIPS\"] }] }, q = { [x]: d }, r = { [v]: \"booleanEquals\", [w]: [true, { [v]: h, [w]: [q, \"supportsDualStack\"] }] }, s = { \"url\": \"https://dynamodb.{Region}.{PartitionResult#dnsSuffix}\", \"properties\": {}, \"headers\": {} }, t = [m], u = [n];\nconst _data = { version: \"1.0\", parameters: { Region: { required: a, type: c }, UseDualStack: j, UseFIPS: j, Endpoint: { required: b, type: c } }, rules: [{ conditions: [{ [v]: \"aws.partition\", [w]: [k], assign: d }], type: e, rules: [{ conditions: [{ [v]: \"isSet\", [w]: [l] }], type: e, rules: [{ conditions: t, error: \"Invalid Configuration: FIPS and custom endpoint are not supported\", type: f }, { type: e, rules: [{ conditions: u, error: \"Invalid Configuration: Dualstack and custom endpoint are not supported\", type: f }, { endpoint: { url: l, properties: o, headers: o }, type: g }] }] }, { conditions: [m, n], type: e, rules: [{ conditions: [p, r], type: e, rules: [{ endpoint: { url: \"https://dynamodb-fips.{Region}.{PartitionResult#dualStackDnsSuffix}\", properties: o, headers: o }, type: g }] }, { error: \"FIPS and DualStack are enabled, but this partition does not support one or both\", type: f }] }, { conditions: t, type: e, rules: [{ conditions: [p], type: e, rules: [{ type: e, rules: [{ conditions: [{ [v]: i, [w]: [\"aws-us-gov\", { [v]: h, [w]: [q, \"name\"] }] }], endpoint: s, type: g }, { endpoint: { url: \"https://dynamodb-fips.{Region}.{PartitionResult#dnsSuffix}\", properties: o, headers: o }, type: g }] }] }, { error: \"FIPS is enabled but this partition does not support FIPS\", type: f }] }, { conditions: u, type: e, rules: [{ conditions: [r], type: e, rules: [{ endpoint: { url: \"https://dynamodb.{Region}.{PartitionResult#dualStackDnsSuffix}\", properties: o, headers: o }, type: g }] }, { error: \"DualStack is enabled but this partition does not support DualStack\", type: f }] }, { type: e, rules: [{ conditions: [{ [v]: i, [w]: [k, \"local\"] }], endpoint: { url: \"http://localhost:8000\", properties: { authSchemes: [{ name: \"sigv4\", signingRegion: \"us-east-1\", signingName: \"dynamodb\" }] }, headers: o }, type: g }, { endpoint: s, type: g }] }] }] };\nexport const ruleSet = _data;\n","import { resolveEndpoint } from \"@aws-sdk/util-endpoints\";\nimport { ruleSet } from \"./ruleset\";\nexport const defaultEndpointResolver = (endpointParams, context = {}) => {\n    return resolveEndpoint(ruleSet, {\n        endpointParams: endpointParams,\n        logger: context.logger,\n    });\n};\n","import packageInfo from \"../package.json\";\nimport { decorateDefaultCredentialProvider } from \"@aws-sdk/client-sts\";\nimport { NODE_REGION_CONFIG_FILE_OPTIONS, NODE_REGION_CONFIG_OPTIONS, NODE_USE_DUALSTACK_ENDPOINT_CONFIG_OPTIONS, NODE_USE_FIPS_ENDPOINT_CONFIG_OPTIONS, } from \"@aws-sdk/config-resolver\";\nimport { defaultProvider as credentialDefaultProvider } from \"@aws-sdk/credential-provider-node\";\nimport { Hash } from \"@aws-sdk/hash-node\";\nimport { NODE_ENDPOINT_DISCOVERY_CONFIG_OPTIONS } from \"@aws-sdk/middleware-endpoint-discovery\";\nimport { NODE_MAX_ATTEMPT_CONFIG_OPTIONS, NODE_RETRY_MODE_CONFIG_OPTIONS } from \"@aws-sdk/middleware-retry\";\nimport { loadConfig as loadNodeConfig } from \"@aws-sdk/node-config-provider\";\nimport { NodeHttpHandler as RequestHandler, streamCollector } from \"@aws-sdk/node-http-handler\";\nimport { calculateBodyLength } from \"@aws-sdk/util-body-length-node\";\nimport { DEFAULT_RETRY_MODE } from \"@aws-sdk/util-retry\";\nimport { defaultUserAgent } from \"@aws-sdk/util-user-agent-node\";\nimport { fromUtf8, toUtf8 } from \"@aws-sdk/util-utf8-node\";\nimport { getRuntimeConfig as getSharedRuntimeConfig } from \"./runtimeConfig.shared\";\nimport { loadConfigsForDefaultMode } from \"@aws-sdk/smithy-client\";\nimport { resolveDefaultsModeConfig } from \"@aws-sdk/util-defaults-mode-node\";\nimport { emitWarningIfUnsupportedVersion } from \"@aws-sdk/smithy-client\";\nexport const getRuntimeConfig = (config) => {\n    emitWarningIfUnsupportedVersion(process.version);\n    const defaultsMode = resolveDefaultsModeConfig(config);\n    const defaultConfigProvider = () => defaultsMode().then(loadConfigsForDefaultMode);\n    const clientSharedValues = getSharedRuntimeConfig(config);\n    return {\n        ...clientSharedValues,\n        ...config,\n        runtime: \"node\",\n        defaultsMode,\n        bodyLengthChecker: config?.bodyLengthChecker ?? calculateBodyLength,\n        credentialDefaultProvider: config?.credentialDefaultProvider ?? decorateDefaultCredentialProvider(credentialDefaultProvider),\n        defaultUserAgentProvider: config?.defaultUserAgentProvider ??\n            defaultUserAgent({ serviceId: clientSharedValues.serviceId, clientVersion: packageInfo.version }),\n        endpointDiscoveryEnabledProvider: config?.endpointDiscoveryEnabledProvider ?? loadNodeConfig(NODE_ENDPOINT_DISCOVERY_CONFIG_OPTIONS),\n        maxAttempts: config?.maxAttempts ?? loadNodeConfig(NODE_MAX_ATTEMPT_CONFIG_OPTIONS),\n        region: config?.region ?? loadNodeConfig(NODE_REGION_CONFIG_OPTIONS, NODE_REGION_CONFIG_FILE_OPTIONS),\n        requestHandler: config?.requestHandler ?? new RequestHandler(defaultConfigProvider),\n        retryMode: config?.retryMode ??\n            loadNodeConfig({\n                ...NODE_RETRY_MODE_CONFIG_OPTIONS,\n                default: async () => (await defaultConfigProvider()).retryMode || DEFAULT_RETRY_MODE,\n            }),\n        sha256: config?.sha256 ?? Hash.bind(null, \"sha256\"),\n        streamCollector: config?.streamCollector ?? streamCollector,\n        useDualstackEndpoint: config?.useDualstackEndpoint ?? loadNodeConfig(NODE_USE_DUALSTACK_ENDPOINT_CONFIG_OPTIONS),\n        useFipsEndpoint: config?.useFipsEndpoint ?? loadNodeConfig(NODE_USE_FIPS_ENDPOINT_CONFIG_OPTIONS),\n        utf8Decoder: config?.utf8Decoder ?? fromUtf8,\n        utf8Encoder: config?.utf8Encoder ?? toUtf8,\n    };\n};\n","import { NoOpLogger } from \"@aws-sdk/smithy-client\";\nimport { parseUrl } from \"@aws-sdk/url-parser\";\nimport { fromBase64, toBase64 } from \"@aws-sdk/util-base64\";\nimport { defaultEndpointResolver } from \"./endpoint/endpointResolver\";\nexport const getRuntimeConfig = (config) => ({\n    apiVersion: \"2012-08-10\",\n    base64Decoder: config?.base64Decoder ?? fromBase64,\n    base64Encoder: config?.base64Encoder ?? toBase64,\n    disableHostPrefix: config?.disableHostPrefix ?? false,\n    endpointProvider: config?.endpointProvider ?? defaultEndpointResolver,\n    logger: config?.logger ?? new NoOpLogger(),\n    serviceId: config?.serviceId ?? \"DynamoDB\",\n    urlParser: config?.urlParser ?? parseUrl,\n});\n","import { resolveRegionConfig } from \"@aws-sdk/config-resolver\";\nimport { getContentLengthPlugin } from \"@aws-sdk/middleware-content-length\";\nimport { resolveEndpointConfig } from \"@aws-sdk/middleware-endpoint\";\nimport { resolveEndpointDiscoveryConfig, } from \"@aws-sdk/middleware-endpoint-discovery\";\nimport { getHostHeaderPlugin, resolveHostHeaderConfig, } from \"@aws-sdk/middleware-host-header\";\nimport { getLoggerPlugin } from \"@aws-sdk/middleware-logger\";\nimport { getRecursionDetectionPlugin } from \"@aws-sdk/middleware-recursion-detection\";\nimport { getRetryPlugin, resolveRetryConfig } from \"@aws-sdk/middleware-retry\";\nimport { getAwsAuthPlugin, resolveAwsAuthConfig, } from \"@aws-sdk/middleware-signing\";\nimport { getUserAgentPlugin, resolveUserAgentConfig, } from \"@aws-sdk/middleware-user-agent\";\nimport { Client as __Client, } from \"@aws-sdk/smithy-client\";\nimport { DescribeEndpointsCommand, } from \"./commands/DescribeEndpointsCommand\";\nimport { resolveClientEndpointParameters, } from \"./endpoint/EndpointParameters\";\nimport { getRuntimeConfig as __getRuntimeConfig } from \"./runtimeConfig\";\nexport class DynamoDBClient extends __Client {\n    constructor(configuration) {\n        const _config_0 = __getRuntimeConfig(configuration);\n        const _config_1 = resolveClientEndpointParameters(_config_0);\n        const _config_2 = resolveRegionConfig(_config_1);\n        const _config_3 = resolveEndpointConfig(_config_2);\n        const _config_4 = resolveRetryConfig(_config_3);\n        const _config_5 = resolveHostHeaderConfig(_config_4);\n        const _config_6 = resolveAwsAuthConfig(_config_5);\n        const _config_7 = resolveUserAgentConfig(_config_6);\n        const _config_8 = resolveEndpointDiscoveryConfig(_config_7, {\n            endpointDiscoveryCommandCtor: DescribeEndpointsCommand,\n        });\n        super(_config_8);\n        this.config = _config_8;\n        this.middlewareStack.use(getRetryPlugin(this.config));\n        this.middlewareStack.use(getContentLengthPlugin(this.config));\n        this.middlewareStack.use(getHostHeaderPlugin(this.config));\n        this.middlewareStack.use(getLoggerPlugin(this.config));\n        this.middlewareStack.use(getRecursionDetectionPlugin(this.config));\n        this.middlewareStack.use(getAwsAuthPlugin(this.config));\n        this.middlewareStack.use(getUserAgentPlugin(this.config));\n    }\n    destroy() {\n        super.destroy();\n    }\n}\n","import { EndpointCache } from \"@aws-sdk/endpoint-cache\";\nexport const resolveEndpointDiscoveryConfig = (input, { endpointDiscoveryCommandCtor }) => ({\n    ...input,\n    endpointDiscoveryCommandCtor,\n    endpointCache: new EndpointCache(input.endpointCacheSize ?? 1000),\n    endpointDiscoveryEnabled: input.endpointDiscoveryEnabled !== undefined\n        ? () => Promise.resolve(input.endpointDiscoveryEnabled)\n        : input.endpointDiscoveryEnabledProvider,\n    isClientEndpointDiscoveryEnabled: input.endpointDiscoveryEnabled !== undefined,\n});\n","import { getEndpointPlugin } from \"@aws-sdk/middleware-endpoint\";\nimport { getSerdePlugin } from \"@aws-sdk/middleware-serde\";\nimport { Command as $Command } from \"@aws-sdk/smithy-client\";\nimport { UpdateItemInputFilterSensitiveLog, UpdateItemOutputFilterSensitiveLog, } from \"../models/models_0\";\nimport { deserializeAws_json1_0UpdateItemCommand, serializeAws_json1_0UpdateItemCommand, } from \"../protocols/Aws_json1_0\";\nexport class UpdateItemCommand extends $Command {\n    constructor(input) {\n        super();\n        this.input = input;\n    }\n    static getEndpointParameterInstructions() {\n        return {\n            UseFIPS: { type: \"builtInParams\", name: \"useFipsEndpoint\" },\n            Endpoint: { type: \"builtInParams\", name: \"endpoint\" },\n            Region: { type: \"builtInParams\", name: \"region\" },\n            UseDualStack: { type: \"builtInParams\", name: \"useDualstackEndpoint\" },\n        };\n    }\n    resolveMiddleware(clientStack, configuration, options) {\n        this.middlewareStack.use(getSerdePlugin(configuration, this.serialize, this.deserialize));\n        this.middlewareStack.use(getEndpointPlugin(configuration, UpdateItemCommand.getEndpointParameterInstructions()));\n        const stack = clientStack.concat(this.middlewareStack);\n        const { logger } = configuration;\n        const clientName = \"DynamoDBClient\";\n        const commandName = \"UpdateItemCommand\";\n        const handlerExecutionContext = {\n            logger,\n            clientName,\n            commandName,\n            inputFilterSensitiveLog: UpdateItemInputFilterSensitiveLog,\n            outputFilterSensitiveLog: UpdateItemOutputFilterSensitiveLog,\n        };\n        const { requestHandler } = configuration;\n        return stack.resolve((request) => requestHandler.handle(request.request, options || {}), handlerExecutionContext);\n    }\n    serialize(input, context) {\n        return serializeAws_json1_0UpdateItemCommand(input, context);\n    }\n    deserialize(output, context) {\n        return deserializeAws_json1_0UpdateItemCommand(output, context);\n    }\n}\n","import {\n  ECSClient,\n  paginateListServices,\n  DescribeServicesCommand,\n  DescribeTaskDefinitionCommand,\n  RegisterTaskDefinitionCommand,\n  TaskDefinitionField,\n  UpdateServiceCommand\n} from '@aws-sdk/client-ecs'\n\nimport {\n  SSMClient,\n  paginateGetParametersByPath,\n  ListTagsForResourceCommand\n} from '@aws-sdk/client-ssm'\n\nimport {\n  DynamoDBClient,\n  UpdateItemCommand\n} from '@aws-sdk/client-dynamodb'\n\nimport {\n  EventBridgeClient,\n  ListRulesCommand,\n  ListTargetsByRuleCommand,\n  PutTargetsCommand\n} from '@aws-sdk/client-eventbridge'\n\nconst tagReducer = (previousValue, currentValue) => {\n  previousValue[currentValue.Key] = currentValue.Value\n  return previousValue\n}\n\nconst chunk = (arr, size) => arr.reduce((acc, _, i) => (i % size) ? acc : [...acc, arr.slice(i, i + size)], [])\nconst RETRY_CONFIG = {maxAttempts: 5, retryMode: 'standard'}\n\nexport async function ecsListServices (regexp, cluster) {\n  const client = new ECSClient({...RETRY_CONFIG})\n  const serviceArns = []\n  for await (const page of paginateListServices({ client, pageSize: 50 }, { cluster })) {\n    serviceArns.push(...page.serviceArns)\n  }\n  return serviceArns.filter(arn => regexp.test(arn))\n}\n\nexport async function ecsServiceTaskDefinitions (serviceArns, cluster) {\n  const client = new ECSClient({...RETRY_CONFIG})\n  const services = []\n  for (const arns of chunk(serviceArns, 10)) {\n    const result = await client.send(new DescribeServicesCommand({ cluster, services: arns }))\n    services.push(...result.services)\n  }\n  return await services.reduce(async (acc, key) => {\n    try {\n      const taskDef = await ecsDescribeTaskDefinition(key.taskDefinition)\n      return { ...await acc, [key.serviceArn]: taskDef.taskDefinition }\n    } catch (error) {\n      return { ...await acc, [key.serviceArn]: { error } }\n    }\n  }, {})\n}\n\nexport async function ecsDescribeTaskDefinition (taskDefinition) {\n  const client = new ECSClient({...RETRY_CONFIG})\n  return client.send(new DescribeTaskDefinitionCommand({ taskDefinition, include: [TaskDefinitionField.TAGS] }))\n}\n\nexport async function ecsRegisterTaskDefinition (taskDefinition) {\n  const client = new ECSClient({...RETRY_CONFIG})\n  const response = await client.send(new RegisterTaskDefinitionCommand(taskDefinition))\n  return response.taskDefinition.taskDefinitionArn\n}\n\nexport async function ecsUpdateService (service, cluster, taskDefinition) {\n  const client = new ECSClient({...RETRY_CONFIG})\n  const response = await client.send(new UpdateServiceCommand({ service, cluster, taskDefinition }))\n  return response.service\n}\n\nexport async function ssmParameters (prefix, decrypt = true) {\n  const client = new SSMClient({ region: 'us-east-1', ...RETRY_CONFIG })\n  const params = []\n  for await (const page of paginateGetParametersByPath({ client, pageSize: 10 }, {\n    Path: prefix,\n    WithDecryption: decrypt\n  })) {\n    params.push(...page.Parameters)\n  }\n  return await Promise.all(params.map(async (param) => {\n    const tags = (await client.send(new ListTagsForResourceCommand({\n      ResourceType: 'Parameter',\n      ResourceId: param.Name\n    }))).TagList\n    return {\n      name: param.Name,\n      value: param.Value,\n      tags: tags.reduce(tagReducer, {})\n    }\n  }))\n}\n\nexport async function ecsBuildNumber (projectName) {\n  const client = new DynamoDBClient({...RETRY_CONFIG})\n  return (await client.send(new UpdateItemCommand({\n    TableName: 'ECSBuildNumbers',\n    Key: { ProjectName: { 'S': projectName } },\n    ExpressionAttributeNames: { '#buildNumber': 'BuildNumber' },\n    ExpressionAttributeValues: { ':num': { 'N': '1' }, ':base': { 'N': '10000' } },\n    UpdateExpression: 'SET #buildNumber = if_not_exists(#buildNumber, :base) + :num',\n    ReturnValues: 'UPDATED_NEW'\n  }))).Attributes.BuildNumber.N\n}\n\nexport async function eventBridgeListRules (prefix) {\n  const client = new EventBridgeClient({...RETRY_CONFIG})\n  const rules = []\n  let NextToken = undefined\n\n  do {\n    const command = new ListRulesCommand({ NamePrefix: prefix, Limit: 10, NextToken })\n    const response = await client.send(command)\n    rules.push(...response.Rules)\n    NextToken = response.NextToken\n  } while (NextToken)\n  return rules\n}\n\nexport async function eventBridgeListTargets (ruleName) {\n  const client = new EventBridgeClient({...RETRY_CONFIG})\n  const targets = []\n  let NextToken = undefined\n\n  do {\n    const command = new ListTargetsByRuleCommand({ Rule: ruleName, Limit: 10, NextToken })\n    const response = await client.send(command)\n    targets.push(...response.Targets)\n    NextToken = response.NextToken\n  } while (NextToken)\n  return targets\n}\n\nexport async function eventBridgeUpdateTarget(ruleName, target) {\n  const client = new EventBridgeClient({...RETRY_CONFIG})\n  const command = new PutTargetsCommand({Rule: ruleName, Targets: [target]})\n  return await client.send(command)\n}\n","import * as core from '@actions/core'\nimport { ecsBuildNumber } from './aws'\n\nasync function run () {\n  try {\n    const projectName = core.getInput('project-name', { required: false }) || process.env.PROJECT_NAME\n    const buildNumber = parseInt(await ecsBuildNumber(projectName))\n\n    core.setOutput('build-number', buildNumber)\n    core.exportVariable('BUILD_NUMBER', buildNumber)\n  } catch (error) {\n    core.setFailed(error.message)\n  }\n}\n\nrun()\n"],"names":["__createBinding","this","Object","create","o","m","k","k2","undefined","defineProperty","enumerable","get","__setModuleDefault","v","value","__importStar","mod","__esModule","result","hasOwnProperty","call","exports","issue","issueCommand","os","utils_1","command","properties","message","cmd","Command","process","stdout","write","toString","EOL","name","constructor","cmdStr","keys","length","first","key","val","s","toCommandValue","replace","escapeData","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","step","next","e","rejected","done","then","apply","getIDToken","getState","saveState","group","endGroup","startGroup","info","notice","warning","error","debug","isDebug","setFailed","setCommandEcho","setOutput","getBooleanInput","getMultilineInput","getInput","addPath","setSecret","exportVariable","ExitCode","command_1","file_command_1","path","oidc_utils_1","options","env","toUpperCase","required","Error","trimWhitespace","trim","toCommandProperties","convertedVal","issueFileCommand","prepareKeyValueMessage","secret","inputPath","delimiter","inputs","split","filter","x","map","input","includes","TypeError","enabled","exitCode","Failure","fn","aud","OidcClient","summary_1","summary","summary_2","markdownSummary","path_utils_1","toPosixPath","toWin32Path","toPlatformPath","fs","uuid_1","filePath","existsSync","appendFileSync","encoding","v4","convertedValue","http_client_1","auth_1","core_1","static","allowRetry","maxRetry","requestOptions","allowRetries","maxRetries","HttpClient","BearerCredentialHandler","getRequestToken","token","runtimeUrl","id_token_url","_a","httpclient","createHttpClient","res","getJson","catch","statusCode","id_token","audience","getIDTokenUrl","encodeURIComponent","getCall","pth","sep","SUMMARY_DOCS_URL","SUMMARY_ENV_VAR","os_1","fs_1","access","appendFile","writeFile","promises","_summary","_buffer","_filePath","pathFromEnv","constants","R_OK","W_OK","wrap","tag","content","attrs","htmlAttrs","entries","join","overwrite","writeFunc","emptyBuffer","clear","stringify","isEmptyBuffer","addRaw","text","addEOL","addCodeBlock","code","lang","assign","element","addList","items","ordered","listItems","item","addTable","rows","tableBody","row","cells","cell","header","data","colspan","rowspan","addDetails","label","addImage","src","alt","width","height","addHeading","level","allowedTag","addSeparator","addBreak","addQuote","cite","addLink","href","String","JSON","annotationProperties","title","file","line","startLine","endLine","col","startColumn","endColumn","PersonalAccessTokenCredentialHandler","BasicCredentialHandler","username","password","prepareRequest","headers","Buffer","from","canHandleAuthentication","handleAuthentication","isHttps","HttpClientResponse","HttpClientError","getProxyUrl","MediaTypes","Headers","HttpCodes","http","https","pm","tunnel","serverUrl","proxyUrl","URL","HttpRedirectCodes","MovedPermanently","ResourceMoved","SeeOther","TemporaryRedirect","PermanentRedirect","HttpResponseRetryCodes","BadGateway","ServiceUnavailable","GatewayTimeout","RetryableHttpVerbs","super","setPrototypeOf","prototype","readBody","output","alloc","on","chunk","concat","requestUrl","protocol","userAgent","handlers","_ignoreSslError","_allowRedirects","_allowRedirectDowngrade","_maxRedirects","_allowRetries","_maxRetries","_keepAlive","_disposed","ignoreSslError","_socketTimeout","socketTimeout","allowRedirects","allowRedirectDowngrade","maxRedirects","Math","max","keepAlive","additionalHeaders","request","del","post","patch","put","head","sendStream","verb","stream","Accept","_getExistingOrDefaultHeader","ApplicationJson","_processResponse","postJson","obj","ContentType","putJson","patchJson","parsedUrl","_prepareRequest","maxTries","response","numTries","requestRaw","Unauthorized","authenticationHandler","handler","redirectsRemaining","redirectUrl","parsedRedirectUrl","hostname","toLowerCase","_performExponentialBackoff","dispose","_agent","destroy","requestRawWithCallback","err","onResult","byteLength","callbackCalled","handleResult","req","httpModule","msg","socket","sock","setTimeout","end","pipe","getAgent","_getAgent","method","usingSsl","defaultPort","host","port","parseInt","pathname","search","_mergeHeaders","agent","lowercaseKeys","_default","clientHeader","useProxy","_proxyAgent","maxSockets","globalAgent","agentOptions","proxy","proxyAuth","tunnelAgent","overHttps","httpsOverHttps","httpsOverHttp","httpOverHttps","httpOverHttp","Agent","rejectUnauthorized","retryNumber","min","ms","pow","contents","NotFound","deserializeDates","parse","a","Date","isNaN","valueOf","reduce","c","checkBypass","reqUrl","noProxy","reqPort","Number","upperReqHosts","push","upperNoProxyItem","some","proxyVar","isCrtAvailable","module","require","validator","XMLParser","XMLBuilder","XMLValidator","nameStartChar","nameRegexp","regexName","RegExp","isExist","isEmptyObject","merge","target","arrayMode","len","i","getValue","isName","string","match","exec","getAllMatches","regex","matches","allmatches","startIndex","lastIndex","index","util","defaultOptions","allowBooleanAttributes","unpairedTags","isWhiteSpace","char","readPI","xmlData","start","tagname","substr","getErrorObject","getLineNumberForPosition","readCommentAndCDATA","angleBracketsCount","validate","tags","tagFound","reachedRoot","tagStartPos","closingTag","tagName","substring","readAttributeStr","attrStr","attrStrStart","isValid","validateAttributeString","tagClosed","otg","pop","openPos","indexOf","afterAmp","validateAmpersand","t","startChar","validAttrStrRegxp","attrNames","getPositionFromMatch","attrName","validateAttrName","re","validateNumberAmpersand","count","lineNumber","lines","buildFromOrderedJs","attributeNamePrefix","attributesGroupName","textNodeName","ignoreAttributes","cdataPropName","format","indentBy","suppressEmptyNode","suppressUnpairedNode","suppressBooleanAttributes","tagValueProcessor","attributeValueProcessor","preserveOrder","commentPropName","entities","processEntities","stopNodes","transformTagName","Builder","isAttribute","attrPrefixLen","processTextOrObjNode","indentate","tagEndChar","newLine","buildTextNode","buildEmptyTextNode","buildObjNode","buildEmptyObjNode","buildTextValNode","buildObjectNode","replaceEntitiesValue","buildAttrPairStr","object","j2x","tagEndExp","piClosingChar","textValue","entity","repeat","startsWith","build","jObj","Array","isArray","arrayNodeName","attr","newval","arrLen","j","Ks","L","arrToStr","arr","jPath","xmlStr","indentation","tagObj","propName","newJPath","tagText","isStopNode","attStr","attr_to_str","tempInd","piTextNodeName","tagStart","tagValue","attrMap","attrVal","lastIndexOf","jArray","entityRegex","parseEntityExp","exp","regx","hasBody","comment","removeNSPrefix","parseTagValue","parseAttributeValue","trimValues","numberParseOptions","hex","leadingZeros","alwaysCreateTextNode","htmlEntities","ignoreDeclaration","ignorePiTags","buildOptions","xmlNode","readDocType","toNumber","addExternalEntities","externalEntities","entKeys","ent","lastEntities","parseTextData","dontTrim","hasAttributes","isLeafNode","escapeEntities","parseValue","resolveNameSpace","prefix","charAt","attrsRegx","buildAttributesMap","oldVal","aName","newVal","attrCollection","parseXml","xmlObj","currentNode","textData","closeIndex","findClosingIndex","colonIndex","saveTextToParentTag","tagsNodeStack","tagData","readTagExp","childNode","add","tagExp","attrExpPresent","addChild","endIndex","docTypeEntities","lastTag","isItStopNode","tagContent","readStopNodeData","child","entityName","ampEntity","currentTagName","allNodesExp","stopNodePath","stopNodeExp","str","errMsg","closingIndex","closingChar","attrBoundary","ch","tagExpWithClosingIndex","separatorIndex","openTagCount","shouldParse","OrderedObjParser","prettify","validationOption","orderedObjParser","orderedResult","addEntity","compress","compressedObj","property","newJpath","isLeaf","isLeafTag","assignAttributes","jpath","atrrName","propCount","node","Iterator","forEach","typed","iterables","LRUCache","Keys","Values","capacity","arguments","PointerArray","getPointerArray","forward","backward","K","V","size","tail","splayOnTop","pointer","oldHead","previous","set","setpop","oldValue","oldKey","evicted","has","peek","callback","scope","l","values","Symbol","iterator","inspect","Map","for","iterable","guessLength","cache","isArrayLike","isTypedArray","toArray","array","toArrayWithIndices","IndexArray","indices","MAX_8BIT_INTEGER","MAX_16BIT_INTEGER","MAX_32BIT_INTEGER","MAX_SIGNED_8BIT_INTEGER","MAX_SIGNED_16BIT_INTEGER","MAX_SIGNED_32BIT_INTEGER","maxIndex","Uint8Array","Uint16Array","Uint32Array","Float64Array","getSignedPointerArray","Int8Array","Int16Array","Int32Array","getNumberType","sign","TYPE_PRIORITY","Float32Array","getMinimalRepresentation","getter","p","maxType","maxPriority","ArrayBuffer","isView","ARRAY_BUFFER_SUPPORT","SYMBOL_SUPPORT","forEachWithNullKeys","Set","writable","_next","of","args","empty","is","hexRegex","numRegex","window","parseFloat","consider","decimalPoint","eNotation","trimmedStr","skipLike","test","numTrimmedByZeros","numStr","trimZeros","num","tls","events","TunnelingAgent","self","proxyOptions","defaultMaxSockets","requests","sockets","localAddress","toOptions","pending","splice","onSocket","removeSocket","createSecureSocket","cb","createSocket","hostHeader","getHeader","tlsOptions","mergeOptions","servername","secureSocket","connect","overrides","keyLen","inherits","EventEmitter","addRequest","onFree","emit","onCloseOrRemove","removeListener","placeholder","connectOptions","connectReq","onConnect","removeAllListeners","useChunkedEncodingByDefault","once","upgrade","nextTick","cause","stack","pos","shift","NODE_DEBUG","slice","unshift","console","_nodeId","_clockseq","_lastMSecs","_lastNSecs","buf","offset","b","clockseq","seedBytes","random","rng","msecs","now","nsecs","dt","tl","tmh","n","uuid","version","hashfunc","generateUUID","namespace","unescape","bytes","charCodeAt","stringToBytes","DNS","v35","update","digest","rnds8Pool","poolPtr","byteToHex","rnds","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","id","loaded","__webpack_modules__","d","definition","hmd","children","prop","r","toStringTag","SelectorType","booleanSelector","type","NODE_USE_DUALSTACK_ENDPOINT_CONFIG_OPTIONS","environmentVariableSelector","ENV","configFileSelector","profile","CONFIG","default","NODE_USE_FIPS_ENDPOINT_CONFIG_OPTIONS","NODE_REGION_CONFIG_OPTIONS","NODE_REGION_CONFIG_FILE_OPTIONS","preferredFile","isFipsRegion","region","endsWith","getRealRegion","resolveRegionConfig","useFipsEndpoint","async","providedRegion","query","body","clone","cloned","carry","paramName","param","CONTENT_LENGTH_HEADER","contentLengthMiddlewareOptions","override","getContentLengthPlugin","applyToStack","clientStack","bodyLengthChecker","deserializerMiddlewareOption","serializerMiddlewareOption","getSerdePlugin","config","serializer","deserializer","commandStack","context","deserializerMiddleware","endpoint","endpointV2","url","urlParser","serializerMiddleware","DOMAIN_PATTERN","IP_ADDRESS_PATTERN","DOTS_PATTERN","isDnsCompatibleBucketName","bucketName","isArnBucketName","arn","partition","service","account","typeOrId","isArn","isValidArn","Boolean","createConfigValueProvider","configKey","canonicalEndpointParamKey","configProvider","configValue","resolveParams","commandInput","instructionsSupplier","clientConfig","endpointParams","instructions","getEndpointParameterInstructions","instruction","serviceId","bucket","Bucket","ForcePathStyle","Endpoint","DisableMultiRegionAccessPoints","disableMultiRegionAccessPoints","DisableMRAP","resolveParamsForS3","endpointMiddleware","endpointProvider","getEndpointFromInstructions","authSchemes","authScheme","signingRegion","signingName","endpointMiddlewareOptions","relation","toMiddleware","getEndpointPlugin","addRelativeTo","promisified","parseUrl","querystring","pair","decodeURIComponent","parseQueryString","resolveEndpointConfig","customEndpointProvider","toEndpointV1","isCustomEndpoint","useDualstackEndpoint","ENV_ENDPOINT_DISCOVERY","CONFIG_ENDPOINT_DISCOVERY","isFalsy","NODE_ENDPOINT_DISCOVERY_CONFIG_OPTIONS","envKey","EndpointCache","getEndpoint","endpointsWithExpiry","endpoints","Address","floor","Expires","delete","CachePeriodInMinutes","hostHeaderMiddlewareOptions","priority","getHostHeaderPlugin","handlerProtocol","requestHandler","metadata","hostHeaderMiddleware","loggerMiddlewareOptions","getLoggerPlugin","clientName","commandName","logger","inputFilterSensitiveLog","outputFilterSensitiveLog","dynamoDbDocumentClientOptions","overrideInputFilterSensitiveLog","overrideOutputFilterSensitiveLog","$metadata","outputWithoutMetadata","TRACE_ID_HEADER_NAME","addRecursionDetectionMiddlewareOptions","getRecursionDetectionPlugin","runtime","functionName","traceId","nonEmptyString","recursionDetectionMiddleware","RETRY_MODES","DEFAULT_RETRY_MODE","THROTTLING_ERROR_CODES","TRANSIENT_ERROR_CODES","TRANSIENT_ERROR_STATUS_CODES","NODEJS_TIMEOUT_ERROR_CODES","httpStatusCode","$retryable","throttling","isTransientError","currentCapacity","lastMaxRate","measuredTxRate","requestCount","lastTimestamp","timeWindow","beta","minCapacity","minFillRate","scaleConstant","smooth","currentTimeInSeconds","getCurrentTimeInSeconds","lastThrottleTime","lastTxRateBucket","fillRate","maxCapacity","acquireTokenBucket","amount","refillTokenBucket","delay","timestamp","fillAmount","updateClientSendingRate","calculatedRate","updateMeasuredRate","rateToUse","calculateTimeWindow","cubicThrottle","enableTokenBucket","cubicSuccess","newRate","updateTokenBucketRate","getPrecise","timeBucket","currentRate","toFixed","getDefaultRetryToken","initialRetryTokens","initialRetryDelay","initialRetryCount","MAX_CAPACITY","retryCost","timeoutRetryCost","retryBackoffStrategy","delayBase","computeNextBackoffDelay","attempts","setDelayBase","getDefaultRetryBackoffStrategy","lastRetryCost","availableCapacity","retryDelay","retryCount","getCapacityAmount","errorType","hasRetryTokens","getRetryCount","getRetryDelay","getLastRetryCost","getRetryTokenCount","errorInfo","capacityAmount","delayFromErrorType","retryAfterHint","delayFromRetryAfterHint","getTime","releaseRetryTokens","releaseAmount","maxAttemptsProvider","mode","retryToken","retryTokenScope","tokenToRenew","maxAttempts","getMaxAttempts","shouldRetry","recordSuccess","warn","isRetryableError","AdaptiveRetryStrategy","rateLimiter","standardRetryStrategy","getSendToken","acquireInitialRetryToken","refreshRetryTokenForRetry","NODE_MAX_ATTEMPT_CONFIG_OPTIONS","maxAttempt","resolveRetryConfig","retryStrategy","retryMode","NODE_RETRY_MODE_CONFIG_OPTIONS","resp","isRetryStrategyV2","getRetyErrorInto","getRetryErrorType","getRetryAfterHint","$response","isServerError","retryMiddlewareOptions","getRetryPlugin","retry","lastError","totalRetryDelay","retryErrorInfo","refreshError","retryMiddleware","retryAfterHeaderName","find","retryAfter","retryAfterSeconds","ProviderError","tryNextLink","CredentialsProviderError","TokenProviderError","chain","providers","promise","provider","memoize","isExpired","requiresRefresh","resolved","hasResult","isConstant","coalesceProvider","forceRefresh","SHORT_TO_HEX","HEX_TO_SHORT","encodedByte","toHex","out","AMZ_DATE_QUERY_PARAM","SIGNATURE_QUERY_PARAM","TOKEN_QUERY_PARAM","AUTH_HEADER","AMZ_DATE_HEADER","GENERATED_HEADERS","SIGNATURE_HEADER","SHA256_HEADER","TOKEN_HEADER","ALWAYS_UNSIGNABLE_HEADERS","authorization","connection","expect","pragma","referer","te","trailer","PROXY_HEADER_PATTERN","SEC_HEADER_PATTERN","ALGORITHM_IDENTIFIER","EVENT_ALGORITHM_IDENTIFIER","KEY_TYPE_IDENTIFIER","signingKeyCache","cacheQueue","createScope","shortDate","hmac","ctor","hash","getCanonicalHeaders","unsignableHeaders","signableHeaders","canonical","headerName","sort","canonicalHeaderName","escapeUri","uri","hexEncode","isArrayBuffer","arg","getPayloadHash","hashConstructor","hashCtor","cloneRequest","rest","toDate","time","applyChecksum","credentials","sha256","uriEscapePath","regionProvider","credentialProvider","originalRequest","signingDate","expiresIn","unhoistableHeaders","signingService","validateResolvedCredentials","longDate","formatDate","lname","moveHeadersToQuery","sessionToken","accessKeyId","canonicalHeaders","getCanonicalHeaderList","getSignature","getSigningKey","createCanonicalRequest","toSign","signString","payload","signEvent","signRequest","priorSignature","hashedPayload","hashedHeaders","stringToSign","requestToSign","payloadHash","soughtHeader","hasHeader","signature","sortedHeaders","getCanonicalPath","serialized","encoded","getCanonicalQuery","credentialScope","canonicalRequest","normalizedPathSegments","pathSegment","normalizedPath","keyPromise","createStringToSign","sha256Constructor","cacheKey","secretAccessKey","signable","toISOString","resolveAwsAuthConfig","normalizedCreds","normalizeCredentialProvider","credentialDefaultProvider","signingEscapePath","systemClockOffset","signer","regionInfoProvider","regionInfo","params","signerConstructor","defaultSigningName","expiration","getSkewCorrectedDate","getUpdatedSystemClockOffset","clockTime","currentSystemClockOffset","clockTimeInMs","abs","isClockSkewed","getDateHeader","date","awsAuthMiddlewareOptions","getAwsAuthPlugin","multiRegionOverride","signingRegionSet","serverTime","ServerTime","dateHeader","awsAuthMiddleware","resolveUserAgentConfig","customUserAgent","USER_AGENT","X_AMZ_USER_AGENT","UA_ESCAPE_REGEX","escapeUserAgent","prefixSeparatorIndex","uaName","getUserAgentMiddlewareOptions","getUserAgentPlugin","defaultUserAgent","defaultUserAgentProvider","sdkUserAgentValue","normalUAValue","section","NoOpLogger","trace","constructStack","absoluteEntries","relativeEntries","entriesNameSet","cloneTo","toStack","entry","middleware","expandRelativeMiddlewareList","expandedMiddlewareList","before","after","reverse","getMiddlewareList","normalizedAbsoluteEntries","normalizedRelativeEntries","normalizedEntriesNameMap","normalizedEntry","mainChain","stepWeights","priorityWeights","wholeList","expendedMiddlewareList","toOverrideIndex","findIndex","toOverride","use","plugin","remove","toRemove","isRemoved","filterCb","removeByName","removeByReference","removeByTag","identify","mw","initialize","serialize","finalizeRequest","deserialize","high","normal","low","Client","middlewareStack","send","optionsOrCb","resolveMiddleware","expectBoolean","stackTraceWarning","lower","expectNumber","parsed","MAX_FLOAT","ceil","expectFloat32","expected","Infinity","expectLong","isInteger","expectInt32","expectSizedInt","expectShort","expectByte","castInt","expectNonNull","location","expectObject","receivedType","expectString","expectUnion","asObject","setKeys","NUMBER_REGEX","parseNumber","limitedParseDouble","parseFloatString","NaN","strictParseInt32","MONTHS","RFC3339","parseRfc3339DateTime","_","yearStr","monthStr","dayStr","hours","minutes","seconds","fractionalMilliseconds","year","stripLeadingZeroes","month","parseDateValue","day","buildDate","adjustedMonth","validateDayOfMonth","UTC","parseMilliseconds","DAYS_IN_MONTH","maxDays","isLeapYear","upper","dateVal","strictParseByte","strictParseFloat32","idx","ServiceException","$fault","decorateServiceException","exception","additions","Message","parsedBody","exceptionCtor","errorCode","deserializeMetadata","Code","requestId","extendedRequestId","cfId","loadConfigsForDefaultMode","connectionTimeout","warningEmitted","emitWarningIfUnsupportedVersion","extendedEncodeURIComponent","getValueFromTextNode","StringWrapper","Class","getPrototypeOf","Constructor","Function","bind","instance","configurable","arg0","arg1","arg2","mapWithFilter","_value","defaultFilterPassed","customFilterPassed","_instructions","DynamoDBServiceException","AttributeAction","ScalarAttributeType","BackupStatus","BackupType","BillingMode","KeyType","ProjectionType","SSEType","SSEStatus","StreamViewType","TimeToLiveStatus","BackupTypeFilter","ReturnConsumedCapacity","BatchStatementErrorCodeEnum","ReturnItemCollectionMetrics","ComparisonOperator","ConditionalOperator","ReturnValuesOnConditionCheckFailure","ContinuousBackupsStatus","PointInTimeRecoveryStatus","ContributorInsightsAction","ContributorInsightsStatus","GlobalTableStatus","ReplicaStatus","TableClass","IndexStatus","TableStatus","ReturnValue","ExportFormat","ExportStatus","S3SseAlgorithm","ImportStatus","InputCompressionType","InputFormat","DestinationStatus","Select","AttributeValue","InternalServerError","opts","RequestLimitExceeded","InvalidEndpointException","ProvisionedThroughputExceededException","ResourceNotFoundException","ItemCollectionSizeLimitExceededException","ConditionalCheckFailedException","TransactionConflictException","visit","visitor","S","N","B","SS","NS","BS","M","NULL","BOOL","$unknown","DescribeEndpointsRequestFilterSensitiveLog","DescribeEndpointsResponseFilterSensitiveLog","AttributeValueFilterSensitiveLog","acc","ItemCollectionMetricsFilterSensitiveLog","ItemCollectionKey","ExpectedAttributeValueFilterSensitiveLog","Value","AttributeValueList","UpdateItemOutputFilterSensitiveLog","Attributes","ItemCollectionMetrics","UpdateItemInputFilterSensitiveLog","Key","AttributeUpdates","AttributeValueUpdateFilterSensitiveLog","Expected","ExpressionAttributeValues","deserializeAws_json1_0DescribeEndpointsCommandError","parsedOutput","parseErrorBody","loadRestJsonErrorCode","deserializeAws_json1_0UpdateItemCommandError","deserializeAws_json1_0ConditionalCheckFailedExceptionResponse","deserializeAws_json1_0InternalServerErrorResponse","deserializeAws_json1_0InvalidEndpointExceptionResponse","deserializeAws_json1_0ItemCollectionSizeLimitExceededExceptionResponse","deserializeAws_json1_0ProvisionedThroughputExceededExceptionResponse","deserializeAws_json1_0RequestLimitExceededResponse","deserializeAws_json1_0ResourceNotFoundExceptionResponse","deserializeAws_json1_0TransactionConflictExceptionResponse","deserialized","deserializeAws_json1_0ConditionalCheckFailedException","deserializeAws_json1_0InternalServerError","deserializeAws_json1_0InvalidEndpointException","deserializeAws_json1_0ItemCollectionSizeLimitExceededException","deserializeAws_json1_0ProvisionedThroughputExceededException","deserializeAws_json1_0RequestLimitExceeded","deserializeAws_json1_0ResourceNotFoundException","deserializeAws_json1_0TransactionConflictException","serializeAws_json1_0AttributeUpdates","serializeAws_json1_0AttributeValueUpdate","serializeAws_json1_0AttributeValue","base64Encoder","serializeAws_json1_0BinarySetAttributeValue","serializeAws_json1_0ListAttributeValue","serializeAws_json1_0MapAttributeValue","serializeAws_json1_0NumberSetAttributeValue","serializeAws_json1_0StringSetAttributeValue","serializeAws_json1_0AttributeValueList","Action","serializeAws_json1_0DescribeEndpointsRequest","serializeAws_json1_0ExpectedAttributeMap","serializeAws_json1_0ExpectedAttributeValue","Exists","serializeAws_json1_0ExpressionAttributeNameMap","serializeAws_json1_0ExpressionAttributeValueMap","serializeAws_json1_0Key","serializeAws_json1_0UpdateItemInput","ConditionExpression","ExpressionAttributeNames","ReturnValues","TableName","UpdateExpression","deserializeAws_json1_0AttributeMap","deserializeAws_json1_0AttributeValue","base64Decoder","deserializeAws_json1_0BinarySetAttributeValue","deserializeAws_json1_0ListAttributeValue","deserializeAws_json1_0MapAttributeValue","deserializeAws_json1_0NumberSetAttributeValue","deserializeAws_json1_0StringSetAttributeValue","retVal","deserializeAws_json1_0Capacity","CapacityUnits","ReadCapacityUnits","WriteCapacityUnits","deserializeAws_json1_0ConsumedCapacity","GlobalSecondaryIndexes","deserializeAws_json1_0SecondaryIndexesCapacityMap","LocalSecondaryIndexes","Table","deserializeAws_json1_0DescribeEndpointsResponse","Endpoints","deserializeAws_json1_0Endpoints","deserializeAws_json1_0Endpoint","deserializeAws_json1_0ItemCollectionKeyAttributeMap","deserializeAws_json1_0ItemCollectionMetrics","SizeEstimateRangeGB","deserializeAws_json1_0ItemCollectionSizeEstimateRange","deserializeAws_json1_0UpdateItemOutput","ConsumedCapacity","collectBody","streamBody","streamCollector","buildHttpRpcRequest","resolvedHostname","basePath","parseBody","utf8Encoder","collectBodyString","errorBody","sanitizeErrorCode","rawValue","cleanValue","headerKey","DescribeEndpointsCommand","UseFIPS","Region","UseDualStack","configuration","handlerExecutionContext","handle","serializeAws_json1_0DescribeEndpointsCommand","deserializeAws_json1_0DescribeEndpointsCommand","STSServiceException","ExpiredTokenException","MalformedPolicyDocumentException","PackedPolicyTooLargeException","RegionDisabledException","IDPRejectedClaimException","InvalidIdentityTokenException","IDPCommunicationErrorException","AssumeRoleRequestFilterSensitiveLog","AssumeRoleResponseFilterSensitiveLog","AssumeRoleWithWebIdentityRequestFilterSensitiveLog","AssumeRoleWithWebIdentityResponseFilterSensitiveLog","deserializeAws_queryAssumeRoleCommandError","loadQueryErrorCode","deserializeAws_queryExpiredTokenExceptionResponse","deserializeAws_queryMalformedPolicyDocumentExceptionResponse","deserializeAws_queryPackedPolicyTooLargeExceptionResponse","deserializeAws_queryRegionDisabledExceptionResponse","deserializeAws_queryAssumeRoleWithWebIdentityCommandError","deserializeAws_queryIDPCommunicationErrorExceptionResponse","deserializeAws_queryIDPRejectedClaimExceptionResponse","deserializeAws_queryInvalidIdentityTokenExceptionResponse","deserializeAws_queryExpiredTokenException","deserializeAws_queryIDPCommunicationErrorException","deserializeAws_queryIDPRejectedClaimException","deserializeAws_queryInvalidIdentityTokenException","deserializeAws_queryMalformedPolicyDocumentException","deserializeAws_queryPackedPolicyTooLargeException","deserializeAws_queryRegionDisabledException","serializeAws_queryAssumeRoleRequest","RoleArn","RoleSessionName","PolicyArns","memberEntries","serializeAws_querypolicyDescriptorListType","Policy","DurationSeconds","Tags","serializeAws_querytagListType","TransitiveTagKeys","serializeAws_querytagKeyListType","ExternalId","SerialNumber","TokenCode","SourceIdentity","serializeAws_queryAssumeRoleWithWebIdentityRequest","WebIdentityToken","ProviderId","counter","serializeAws_queryPolicyDescriptorType","serializeAws_queryTag","deserializeAws_queryAssumedRoleUser","AssumedRoleId","Arn","deserializeAws_queryAssumeRoleResponse","Credentials","AssumedRoleUser","PackedPolicySize","deserializeAws_queryCredentials","deserializeAws_queryAssumeRoleWithWebIdentityResponse","SubjectFromWebIdentityToken","Provider","Audience","AccessKeyId","SecretAccessKey","SessionToken","Expiration","parser","parsedObj","parsedObjToReturn","buildFormUrlencodedString","formEntries","AssumeRoleCommand","UseGlobalEndpoint","Version","serializeAws_queryAssumeRoleCommand","AssumeRoleResult","deserializeAws_queryAssumeRoleCommand","AssumeRoleWithWebIdentityCommand","serializeAws_queryAssumeRoleWithWebIdentityCommand","AssumeRoleWithWebIdentityResult","deserializeAws_queryAssumeRoleWithWebIdentityCommand","ASSUME_ROLE_DEFAULT_REGION","decorateDefaultRegion","getDefaultRoleAssumer","stsOptions","stsClientCtor","stsClient","closureSourceCreds","sourceCreds","getDefaultRoleAssumerWithWebIdentity","fromEnv","expiry","getHomeDir","HOME","USERPROFILE","HOMEPATH","HOMEDRIVE","homedir","getProfileName","init","getSSOTokenFilepath","cacheName","createHash","readFile","getSSOTokenFromFile","ssoTokenFilepath","ssoTokenText","getConfigFilepath","getCredentialsFilepath","profileKeyRegex","getProfileData","profileNameBlockList","parseIni","iniData","currentSection","indexOfEqualsSign","filePromisesHash","slurpFile","swallowError","loadSharedConfigFiles","filepath","configFilepath","parsedFiles","all","configFile","credentialsFile","ssoSessionKeyRegex","getSsoSessionData","loadSsoSessionData","parseKnownFiles","httpRequest","chunks","isImdsCredentials","Token","fromImdsCredentials","creds","providerConfigFromInit","timeout","toRetry","ENV_CMDS_FULL_URI","ENV_CMDS_RELATIVE_URI","ENV_CMDS_AUTH_TOKEN","fromContainerMetadata","getCmdsUri","credsResponse","requestFromEcsImds","Authorization","GREENGRASS_HOSTS","localhost","GREENGRASS_PROTOCOLS","defaultValue","isFunction","staticValue","loadConfig","envVarSelector","configSelector","profileFromCredentials","profileFromConfig","mergedProfile","fromSharedConfigFiles","ENDPOINT_CONFIG_OPTIONS","EndpointMode","ENDPOINT_MODE_CONFIG_OPTIONS","IPv4","getInstanceMetadataEndpoint","getFromEndpointConfig","getFromEndpointModeConfig","endpointMode","IPv6","getExtendedInstanceMetadataCredentials","refreshInterval","newExpiration","originalExpiration","IMDS_PATH","fromInstanceMetadata","pastCredentials","staticStabilityProvider","getInstanceImdsProvider","disableFetchToken","getCredentials","getProfile","getCredentialsFromProfile","getMetadataToken","isAssumeRoleWithSourceProfile","source_profile","credential_source","isAssumeRoleWithProviderProfile","resolveAssumeRoleCredentials","profileName","profiles","visitedProfiles","roleAssumer","sourceCredsProvider","resolveProfileData","credentialSource","sourceProvidersMap","EcsContainer","Ec2InstanceMetadata","Environment","resolveCredentialSource","role_arn","role_session_name","external_id","mfa_serial","mfaCodeProvider","resolveProcessCredentials","credentialProcess","execPromise","promisify","currentTime","getValidatedProcessCredentials","fromProcess","isSsoProfile","sso_start_url","sso_account_id","sso_session","sso_region","sso_role_name","fromArrayBuffer","fromString","Hash","algorithmIdentifier","createHmac","castSourceData","toHash","toCast","buffer","byteOffset","transformedHeaders","headerValues","writeBody","Readable","NodeHttpHandler","_options","resolveDefaultConfig","httpAgent","httpsAgent","abortSignal","aborted","abortError","isSSL","queryString","parts","iLen","qsEntry","nodeHttpsOptions","httpResponse","timeoutInMs","connecting","timeoutId","clearTimeout","setConnectionTimeout","setSocketTimeout","onabort","abort","Collector","Writable","bufferedBytes","_write","collector","calculateBodyLength","isBuffer","lstatSync","fd","fstatSync","clientVersion","sections","platform","release","versions","crtAvailable","appIdPromise","resolvedUserAgent","appId","fromUtf8","BYTES_PER_ELEMENT","toUtf8","BASE64_REGEX","fromBase64","toBase64","partitions","DEFAULT_PARTITION","regions","outputs","regionData","regionRegex","debugId","toDebugString","ref","argv","EndpointError","IP_V4_REGEX","isIpAddress","VALID_HOST_LABEL_REGEX","isValidHostLabel","allowSubDomains","labels","isVirtualHostableS3Bucket","parseArn","segments","accountId","resourceId","booleanEquals","value1","value2","getAttr","pathList","part","squareBracketIndex","arrayIndex","getAttrPathList","isSet","not","EndpointURLScheme","DEFAULT_PORTS","HTTP","HTTPS","parseURL","whatwgURL","urlString","scheme","isIp","authority","stringEquals","stop","uriEncode","evaluateTemplate","template","evaluatedTemplateArr","templateContext","referenceRecord","currentIndex","openingBraceIndex","closingBraceIndex","parameterName","refName","evaluateExpression","keyName","callFunction","getReferenceValue","evaluatedArgs","evaluateCondition","fnArgs","toAssign","evaluateConditions","conditions","conditionsReferenceRecord","condition","getEndpointHeaders","headerVal","headerValEntry","processedExpr","getEndpointProperty","propertyEntry","getEndpointProperties","propertyKey","propertyVal","getEndpointUrl","endpointUrl","expression","evaluateEndpointRule","endpointRule","endpointRuleOptions","evaluateErrorRule","errorRule","evaluateTreeRule","treeRule","rules","evaluateRules","rule","endpointOrUndefined","resolveEndpoint","ruleSetObject","parameters","paramsWithDefault","paramKey","paramDefaultValue","requiredParams","requiredParam","givenEndpoint","q","f","g","h","ruleSet","defaultEndpointResolver","DEFAULTS_MODE_OPTIONS","NODE_DEFAULTS_MODE_CONFIG_OPTIONS","resolveDefaultsModeConfig","defaultsMode","resolveNodeDefaultsModeAuto","toLocaleLowerCase","clientRegion","resolvedRegion","inferredRegion","inferPhysicalRegion","defaultConfigProvider","clientSharedValues","apiVersion","disableHostPrefix","utf8Decoder","SSOClient","_config_0","_config_1","_config_2","_config_3","_config_6","SSOServiceException","InvalidRequestException","TooManyRequestsException","UnauthorizedException","GetRoleCredentialsRequestFilterSensitiveLog","accessToken","RoleCredentialsFilterSensitiveLog","GetRoleCredentialsResponseFilterSensitiveLog","roleCredentials","deserializeAws_restJson1GetRoleCredentialsCommandError","deserializeAws_restJson1InvalidRequestExceptionResponse","deserializeAws_restJson1ResourceNotFoundExceptionResponse","deserializeAws_restJson1TooManyRequestsExceptionResponse","deserializeAws_restJson1UnauthorizedExceptionResponse","deserializeAws_restJson1RoleCredentials","isSerializableHeaderValue","getOwnPropertyNames","GetRoleCredentialsCommand","resolvedPath","role_name","roleName","account_id","serializeAws_restJson1GetRoleCredentialsCommand","deserializeAws_restJson1GetRoleCredentialsCommand","REFRESH_MESSAGE","SSOOIDCServiceException","AccessDeniedException","error_description","AuthorizationPendingException","InternalServerException","InvalidClientException","InvalidGrantException","InvalidScopeException","SlowDownException","UnauthorizedClientException","UnsupportedGrantTypeException","CreateTokenRequestFilterSensitiveLog","CreateTokenResponseFilterSensitiveLog","deserializeAws_restJson1CreateTokenCommandError","deserializeAws_restJson1AccessDeniedExceptionResponse","deserializeAws_restJson1AuthorizationPendingExceptionResponse","deserializeAws_restJson1ExpiredTokenExceptionResponse","deserializeAws_restJson1InternalServerExceptionResponse","deserializeAws_restJson1InvalidClientExceptionResponse","deserializeAws_restJson1InvalidGrantExceptionResponse","deserializeAws_restJson1InvalidScopeExceptionResponse","deserializeAws_restJson1SlowDownExceptionResponse","deserializeAws_restJson1UnauthorizedClientExceptionResponse","deserializeAws_restJson1UnsupportedGrantTypeExceptionResponse","serializeAws_restJson1Scopes","CreateTokenCommand","clientId","clientSecret","deviceCode","grantType","redirectUri","refreshToken","serializeAws_restJson1CreateTokenCommand","idToken","tokenType","deserializeAws_restJson1CreateTokenCommand","SSOOIDCClient","ssoOidcClientsHash","getNewSsoOidcToken","ssoToken","ssoRegion","ssoOidcClient","getSsoOidcClient","validateTokenExpiry","validateTokenKey","forRefresh","lastRefreshAttemptTime","fromSso","ssoSessionName","ssoSession","ssoSessionRequiredKey","expiresAt","existingToken","setTime","newSsoOidcToken","newTokenExpiration","tokenFilepath","tokenString","writeSSOTokenToFile","SHOULD_FAIL_CREDENTIAL_CHAIN","resolveSSOCredentials","ssoStartUrl","ssoAccountId","ssoRoleName","ssoClient","refreshMessage","_token","sso","ssoResp","validateSsoProfile","fromSSO","session","conflictMsg","isStaticCredsProfile","aws_access_key_id","aws_secret_access_key","aws_session_token","resolveStaticCredentials","fromTokenFile","resolveTokenFile","webIdentityTokenFile","roleArn","roleSessionName","webIdentityToken","providerId","policyArns","policy","durationSeconds","roleAssumerWithWebIdentity","fromWebToken","readFileSync","web_identity_token_file","isWebIdentityProfile","resolveWebIdentityCredentials","credential_process","isProcessProfile","resolveSsoCredentials","defaultProvider","fromIni","remoteProvider","H","I","J","u","w","y","z","A","C","E","F","G","STSClient","useGlobalEndpoint","_config_7","resolveStsAuthConfig","getCustomizableStsClientCtor","baseCtor","customizations","customization","stsPlugins","endpointDiscoveryEnabledProvider","DynamoDBClient","_config_4","_config_8","endpointDiscoveryCommandCtor","endpointCache","endpointCacheSize","endpointDiscoveryEnabled","isClientEndpointDiscoveryEnabled","resolveEndpointDiscoveryConfig","UpdateItemCommand","serializeAws_json1_0UpdateItemCommand","deserializeAws_json1_0UpdateItemCommand","RETRY_CONFIG","projectName","core","PROJECT_NAME","buildNumber","client","ProjectName","BuildNumber","ecsBuildNumber","run"],"sourceRoot":""}